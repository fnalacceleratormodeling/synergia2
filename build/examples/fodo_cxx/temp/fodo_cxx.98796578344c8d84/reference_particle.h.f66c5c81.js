var data = {lines:[
{"lineNum":"    1","line":"#ifndef REFERENCE_PARTICLE_H_"},
{"lineNum":"    2","line":"#define REFERENCE_PARTICLE_H_"},
{"lineNum":"    3","line":""},
{"lineNum":"    4","line":"//#include \"synergia/utils/multi_array_typedefs.h\""},
{"lineNum":"    5","line":"//#include \"synergia/utils/multi_array_serialization.h\""},
{"lineNum":"    6","line":"#include \"synergia/foundation/four_momentum.h\""},
{"lineNum":"    7","line":"#include <cereal/types/array.hpp>"},
{"lineNum":"    8","line":""},
{"lineNum":"    9","line":"/// Reference_particle stores the four momentum of the reference frame"},
{"lineNum":"   10","line":"/// with respect to  the lab frame (defined to be along the axis of the"},
{"lineNum":"   11","line":"/// accelerator) as well as the six-dimensional state vector of the the"},
{"lineNum":"   12","line":"/// reference particle in the reference frame. Reference particle"},
{"lineNum":"   13","line":"/// also keeps track of the total path length of the reference particle"},
{"lineNum":"   14","line":"/// trajectory."},
{"lineNum":"   15","line":"class Reference_particle"},
{"lineNum":"   16","line":"{"},
{"lineNum":"   17","line":"private:"},
{"lineNum":"   18","line":"    int charge;"},
{"lineNum":"   19","line":"    Four_momentum four_momentum;"},
{"lineNum":"   20","line":"    std::array<double, 6> state;"},
{"lineNum":"   21","line":"    int repetition;"},
{"lineNum":"   22","line":"    double s;"},
{"lineNum":"   23","line":"    double s_n;"},
{"lineNum":"   24","line":"public:"},
{"lineNum":"   25","line":"    /// Default constructor for internal use only"},
{"lineNum":"   26","line":"    Reference_particle();"},
{"lineNum":"   27","line":""},
{"lineNum":"   28","line":"    /// Construct a Reference_particle with a given mass and total energy."},
{"lineNum":"   29","line":"    /// @param mass in GeV/c^2"},
{"lineNum":"   30","line":"    /// @param charge in units of e"},
{"lineNum":"   31","line":"    /// @param total_energy in GeV in the lab frame"},
{"lineNum":"   32","line":"    Reference_particle(int charge, double mass, double total_energy);"},
{"lineNum":"   33","line":""},
{"lineNum":"   34","line":"    /// Construct a Reference_particle with a given four momentum."},
{"lineNum":"   35","line":"    /// @param charge in units of e"},
{"lineNum":"   36","line":"    /// @param four_momentum in the lab frame"},
{"lineNum":"   37","line":"    Reference_particle(int charge, Four_momentum const& four_momentum);"},
{"lineNum":"   38","line":""},
{"lineNum":"   39","line":"    /// Construct a Reference_particle with a given four momentum and state"},
{"lineNum":"   40","line":"    /// in the reference frame."},
{"lineNum":"   41","line":"    /// @param charge in units of e"},
{"lineNum":"   42","line":"    /// @param four_momentum in the lab frame"},
{"lineNum":"   43","line":"    /// @param state is a six-dimensional state vector"},
{"lineNum":"   44","line":"    Reference_particle(int charge, Four_momentum const& four_momentum,"},
{"lineNum":"   45","line":"            std::array<double, 6> const& state);"},
{"lineNum":"   46","line":""},
{"lineNum":"   47","line":"    /// Construct a Reference_particle from the Lsexpr representation"},
{"lineNum":"   48","line":"    /// @param lsexpr representation"},
{"lineNum":"   49","line":"    Reference_particle(Lsexpr const& lsexpr);"},
{"lineNum":"   50","line":""},
{"lineNum":"   51","line":"    /// Extract an Lsexpr representation of the Reference_particle"},
{"lineNum":"   52","line":"    Lsexpr"},
{"lineNum":"   53","line":"    as_lsexpr() const;"},
{"lineNum":"   54","line":""},
{"lineNum":"   55","line":"    /// MadX beam command"},
{"lineNum":"   56","line":"    std::string"},
{"lineNum":"   57","line":"    as_madx() const;"},
{"lineNum":"   58","line":""},
{"lineNum":"   59","line":"    /// Set the four momentum."},
{"lineNum":"   60","line":"    /// @param four_momentum in the lab frame"},
{"lineNum":"   61","line":"    void"},
{"lineNum":"   62","line":"    set_four_momentum(Four_momentum const& four_momentum);"},
{"lineNum":"   63","line":""},
{"lineNum":"   64","line":"    /// Set the state vector in the reference frame."},
{"lineNum":"   65","line":"    /// @param state is a six-dimensional state vector"},
{"lineNum":"   66","line":"    void"},
{"lineNum":"   67","line":"    set_state(std::array<double, 6> const& state);"},
{"lineNum":"   68","line":""},
{"lineNum":"   69","line":"    /// Set the state vector in the reference frame."},
{"lineNum":"   70","line":"    /// @param x"},
{"lineNum":"   71","line":"    /// @param xp"},
{"lineNum":"   72","line":"    /// @param y"},
{"lineNum":"   73","line":"    /// @param yp"},
{"lineNum":"   74","line":"    /// @param cdt"},
{"lineNum":"   75","line":"    /// @param dpop"},
{"lineNum":"   76","line":"    void"},
{"lineNum":"   77","line":"    set_state(double x, double xp, double y, double yp, double cdt, double dpop);"},
{"lineNum":"   78","line":""},
{"lineNum":"   79","line":"    void"},
{"lineNum":"   80","line":"    set_state_x(double x);"},
{"lineNum":"   81","line":""},
{"lineNum":"   82","line":"    void"},
{"lineNum":"   83","line":"    set_state_xp(double xp);"},
{"lineNum":"   84","line":""},
{"lineNum":"   85","line":"    void"},
{"lineNum":"   86","line":"    set_state_y(double y);"},
{"lineNum":"   87","line":""},
{"lineNum":"   88","line":"    void"},
{"lineNum":"   89","line":"    set_state_yp(double yp);"},
{"lineNum":"   90","line":""},
{"lineNum":"   91","line":"    void"},
{"lineNum":"   92","line":"    set_state_cdt(double cdt);"},
{"lineNum":"   93","line":""},
{"lineNum":"   94","line":"    void"},
{"lineNum":"   95","line":"    set_state_dpop(double dpop);"},
{"lineNum":"   96","line":""},
{"lineNum":"   97","line":"    /// Set the total energy."},
{"lineNum":"   98","line":"    /// @param total_energy in GeV in the lab frame"},
{"lineNum":"   99","line":"    void"},
{"lineNum":"  100","line":"    set_total_energy(double total_energy);"},
{"lineNum":"  101","line":""},
{"lineNum":"  102","line":"    /// Increment the trajectory length."},
{"lineNum":"  103","line":"    /// @param length in m"},
{"lineNum":"  104","line":"    void"},
{"lineNum":"  105","line":"    increment_trajectory(double length);"},
{"lineNum":"  106","line":""},
{"lineNum":"  107","line":"    /// Start a new repetition"},
{"lineNum":"  108","line":"    void"},
{"lineNum":"  109","line":"    start_repetition();"},
{"lineNum":"  110","line":""},
{"lineNum":"  111","line":"    /// Manually set trajectory parameters"},
{"lineNum":"  112","line":"    /// @param repetition starting at 0"},
{"lineNum":"  113","line":"    /// @param repetition_length in m"},
{"lineNum":"  114","line":"    /// @param s in m"},
{"lineNum":"  115","line":"    void"},
{"lineNum":"  116","line":"    set_trajectory(int repetition, double repetition_length, double s);"},
{"lineNum":"  117","line":""},
{"lineNum":"  118","line":"    /// Return the Reference_particle charge in units of e"},
{"lineNum":"  119","line":"    int"},
{"lineNum":"  120","line":"    get_charge() const;"},
{"lineNum":"  121","line":""},
{"lineNum":"  122","line":"    /// Return the Reference_particle mass in units of GeV/c"},
{"lineNum":"  123","line":"    double"},
{"lineNum":"  124","line":"    get_mass() const;"},
{"lineNum":"  125","line":""},
{"lineNum":"  126","line":"    /// Get the four momentum in the lab frame."},
{"lineNum":"  127","line":"    Four_momentum const &"},
{"lineNum":"  128","line":"    get_four_momentum() const;"},
{"lineNum":"  129","line":""},
{"lineNum":"  130","line":"    /// Get the six-dimensional state vector in the reference frame."},
{"lineNum":"  131","line":"    std::array<double, 6> const&"},
{"lineNum":"  132","line":"    get_state() const;"},
{"lineNum":"  133","line":""},
{"lineNum":"  134","line":"    /// Get the relativistic beta in the lab frame."},
{"lineNum":"  135","line":"    double"},
{"lineNum":"  136","line":"    get_beta() const;"},
{"lineNum":"  137","line":""},
{"lineNum":"  138","line":"    /// Get the relativistic gamma in the lab frame."},
{"lineNum":"  139","line":"    double"},
{"lineNum":"  140","line":"    get_gamma() const;"},
{"lineNum":"  141","line":""},
{"lineNum":"  142","line":"    /// Get the momentum in GeV/c in the lab frame."},
{"lineNum":"  143","line":"    double"},
{"lineNum":"  144","line":"    get_momentum() const;"},
{"lineNum":"  145","line":""},
{"lineNum":"  146","line":"    /// Get the total energy in GeV in the lab frame."},
{"lineNum":"  147","line":"    double"},
{"lineNum":"  148","line":"    get_total_energy() const;"},
{"lineNum":"  149","line":""},
{"lineNum":"  150","line":"    /// Get the total path length in m of the reference"},
{"lineNum":"  151","line":"    /// particle trajectory"},
{"lineNum":"  152","line":"    double"},
{"lineNum":"  153","line":"    get_s() const;"},
{"lineNum":"  154","line":""},
{"lineNum":"  155","line":"    /// Get the distance traveled in m since the beginning"},
{"lineNum":"  156","line":"    /// of the current repetition."},
{"lineNum":"  157","line":"    double"},
{"lineNum":"  158","line":"    get_s_n() const;"},
{"lineNum":"  159","line":""},
{"lineNum":"  160","line":"    /// Get the number of repetition."},
{"lineNum":"  161","line":"    int"},
{"lineNum":"  162","line":"    get_repetition() const;"},
{"lineNum":"  163","line":""},
{"lineNum":"  164","line":"    /// Get the repetition length in m."},
{"lineNum":"  165","line":"    double"},
{"lineNum":"  166","line":"    get_repetition_length() const;"},
{"lineNum":"  167","line":""},
{"lineNum":"  168","line":"    /// Check equality to the given tolerance"},
{"lineNum":"  169","line":"    /// @param reference_particle another Reference_particle"},
{"lineNum":"  170","line":"    /// @param tolerance fractional accuracy"},
{"lineNum":"  171","line":"    bool"},
{"lineNum":"  172","line":"    equal(Reference_particle const& reference_particle, double tolerance) const;"},
{"lineNum":"  173","line":""},
{"lineNum":"  174","line":"    /// Serialization support"},
{"lineNum":"  175","line":"    template<class Archive>"},
{"lineNum":"  176","line":"    void serialize(Archive & ar)"},
{"lineNum":"  177","line":"    {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  178","line":"        ar(CEREAL_NVP(charge));"},
{"lineNum":"  179","line":"        ar(CEREAL_NVP(four_momentum));","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  180","line":"        ar(CEREAL_NVP(state));","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  181","line":"        ar(CEREAL_NVP(repetition));"},
{"lineNum":"  182","line":"        ar(CEREAL_NVP(s));"},
{"lineNum":"  183","line":"        ar(CEREAL_NVP(s_n));"},
{"lineNum":"  184","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  185","line":"};"},
{"lineNum":"  186","line":""},
{"lineNum":"  187","line":"#endif /* REFERENCE_PARTICLE_H_ */"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 4, "covered" : 0,};
var merged_data = [];
