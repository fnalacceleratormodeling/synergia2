var data = {lines:[
{"lineNum":"    1","line":"// -*- C++ -*-"},
{"lineNum":"    2","line":"//===----------------------------------------------------------------------===//"},
{"lineNum":"    3","line":"//"},
{"lineNum":"    4","line":"// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions."},
{"lineNum":"    5","line":"// See https://llvm.org/LICENSE.txt for license information."},
{"lineNum":"    6","line":"// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception"},
{"lineNum":"    7","line":"//"},
{"lineNum":"    8","line":"//===----------------------------------------------------------------------===//"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"#ifndef _LIBCPP___ITERATOR_ISTREAMBUF_ITERATOR_H"},
{"lineNum":"   11","line":"#define _LIBCPP___ITERATOR_ISTREAMBUF_ITERATOR_H"},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"#include <__config>"},
{"lineNum":"   14","line":"#include <__iterator/iterator.h>"},
{"lineNum":"   15","line":"#include <__iterator/iterator_traits.h>"},
{"lineNum":"   16","line":"#include <iosfwd> // for forward declaration of basic_streambuf"},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)"},
{"lineNum":"   19","line":"#pragma GCC system_header"},
{"lineNum":"   20","line":"#endif"},
{"lineNum":"   21","line":""},
{"lineNum":"   22","line":"_LIBCPP_PUSH_MACROS"},
{"lineNum":"   23","line":"#include <__undef_macros>"},
{"lineNum":"   24","line":""},
{"lineNum":"   25","line":"_LIBCPP_BEGIN_NAMESPACE_STD"},
{"lineNum":"   26","line":""},
{"lineNum":"   27","line":"_LIBCPP_SUPPRESS_DEPRECATED_PUSH"},
{"lineNum":"   28","line":"template<class _CharT, class _Traits>"},
{"lineNum":"   29","line":"class _LIBCPP_TEMPLATE_VIS istreambuf_iterator"},
{"lineNum":"   30","line":"#if _LIBCPP_STD_VER <= 14 || !defined(_LIBCPP_ABI_NO_ITERATOR_BASES)"},
{"lineNum":"   31","line":"    : public iterator<input_iterator_tag, _CharT,"},
{"lineNum":"   32","line":"                      typename _Traits::off_type, _CharT*,"},
{"lineNum":"   33","line":"                      _CharT>"},
{"lineNum":"   34","line":"#endif"},
{"lineNum":"   35","line":"{"},
{"lineNum":"   36","line":"_LIBCPP_SUPPRESS_DEPRECATED_POP"},
{"lineNum":"   37","line":"public:"},
{"lineNum":"   38","line":"    typedef input_iterator_tag              iterator_category;"},
{"lineNum":"   39","line":"    typedef _CharT                          value_type;"},
{"lineNum":"   40","line":"    typedef typename _Traits::off_type      difference_type;"},
{"lineNum":"   41","line":"    typedef _CharT*                         pointer;"},
{"lineNum":"   42","line":"    typedef _CharT                          reference;"},
{"lineNum":"   43","line":"    typedef _CharT                          char_type;"},
{"lineNum":"   44","line":"    typedef _Traits                         traits_type;"},
{"lineNum":"   45","line":"    typedef typename _Traits::int_type      int_type;"},
{"lineNum":"   46","line":"    typedef basic_streambuf<_CharT,_Traits> streambuf_type;"},
{"lineNum":"   47","line":"    typedef basic_istream<_CharT,_Traits>   istream_type;"},
{"lineNum":"   48","line":"private:"},
{"lineNum":"   49","line":"    mutable streambuf_type* __sbuf_;"},
{"lineNum":"   50","line":""},
{"lineNum":"   51","line":"    class __proxy"},
{"lineNum":"   52","line":"    {"},
{"lineNum":"   53","line":"        char_type __keep_;"},
{"lineNum":"   54","line":"        streambuf_type* __sbuf_;"},
{"lineNum":"   55","line":"        _LIBCPP_INLINE_VISIBILITY __proxy(char_type __c, streambuf_type* __s)"},
{"lineNum":"   56","line":"            : __keep_(__c), __sbuf_(__s) {}"},
{"lineNum":"   57","line":"        friend class istreambuf_iterator;"},
{"lineNum":"   58","line":"    public:"},
{"lineNum":"   59","line":"        _LIBCPP_INLINE_VISIBILITY char_type operator*() const {return __keep_;}"},
{"lineNum":"   60","line":"    };"},
{"lineNum":"   61","line":""},
{"lineNum":"   62","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"   63","line":"    bool __test_for_eof() const"},
{"lineNum":"   64","line":"    {"},
{"lineNum":"   65","line":"        if (__sbuf_ && traits_type::eq_int_type(__sbuf_->sgetc(), traits_type::eof()))","class":"lineNoCov","hits":"0","possible_hits":"16",},
{"lineNum":"   66","line":"            __sbuf_ = nullptr;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   67","line":"        return __sbuf_ == nullptr;","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   68","line":"    }"},
{"lineNum":"   69","line":"public:"},
{"lineNum":"   70","line":"    _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR istreambuf_iterator() _NOEXCEPT : __sbuf_(nullptr) {}"},
{"lineNum":"   71","line":"    _LIBCPP_INLINE_VISIBILITY istreambuf_iterator(istream_type& __s) _NOEXCEPT"},
{"lineNum":"   72","line":"        : __sbuf_(__s.rdbuf()) {}","class":"lineNoCov","hits":"0","possible_hits":"5",},
{"lineNum":"   73","line":"    _LIBCPP_INLINE_VISIBILITY istreambuf_iterator(streambuf_type* __s) _NOEXCEPT"},
{"lineNum":"   74","line":"        : __sbuf_(__s) {}"},
{"lineNum":"   75","line":"    _LIBCPP_INLINE_VISIBILITY istreambuf_iterator(const __proxy& __p) _NOEXCEPT"},
{"lineNum":"   76","line":"        : __sbuf_(__p.__sbuf_) {}"},
{"lineNum":"   77","line":""},
{"lineNum":"   78","line":"    _LIBCPP_INLINE_VISIBILITY char_type  operator*() const"},
{"lineNum":"   79","line":"        {return static_cast<char_type>(__sbuf_->sgetc());}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   80","line":"    _LIBCPP_INLINE_VISIBILITY istreambuf_iterator& operator++()"},
{"lineNum":"   81","line":"        {"},
{"lineNum":"   82","line":"            __sbuf_->sbumpc();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   83","line":"            return *this;"},
{"lineNum":"   84","line":"        }"},
{"lineNum":"   85","line":"    _LIBCPP_INLINE_VISIBILITY __proxy              operator++(int)"},
{"lineNum":"   86","line":"        {"},
{"lineNum":"   87","line":"            return __proxy(__sbuf_->sbumpc(), __sbuf_);"},
{"lineNum":"   88","line":"        }"},
{"lineNum":"   89","line":""},
{"lineNum":"   90","line":"    _LIBCPP_INLINE_VISIBILITY bool equal(const istreambuf_iterator& __b) const"},
{"lineNum":"   91","line":"        {return __test_for_eof() == __b.__test_for_eof();}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   92","line":"};"},
{"lineNum":"   93","line":""},
{"lineNum":"   94","line":"template <class _CharT, class _Traits>"},
{"lineNum":"   95","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"   96","line":"bool operator==(const istreambuf_iterator<_CharT,_Traits>& __a,"},
{"lineNum":"   97","line":"                const istreambuf_iterator<_CharT,_Traits>& __b)"},
{"lineNum":"   98","line":"                {return __a.equal(__b);}"},
{"lineNum":"   99","line":""},
{"lineNum":"  100","line":"template <class _CharT, class _Traits>"},
{"lineNum":"  101","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  102","line":"bool operator!=(const istreambuf_iterator<_CharT,_Traits>& __a,"},
{"lineNum":"  103","line":"                const istreambuf_iterator<_CharT,_Traits>& __b)"},
{"lineNum":"  104","line":"                {return !__a.equal(__b);}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  105","line":""},
{"lineNum":"  106","line":"_LIBCPP_END_NAMESPACE_STD"},
{"lineNum":"  107","line":""},
{"lineNum":"  108","line":"_LIBCPP_POP_MACROS"},
{"lineNum":"  109","line":""},
{"lineNum":"  110","line":"#endif // _LIBCPP___ITERATOR_ISTREAMBUF_ITERATOR_H"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 8, "covered" : 0,};
var merged_data = [];
