var data = {lines:[
{"lineNum":"    1","line":"/* Copyright (C) 2012-2019 Free Software Foundation, Inc."},
{"lineNum":"    2","line":""},
{"lineNum":"    3","line":"   This file is part of GCC."},
{"lineNum":"    4","line":""},
{"lineNum":"    5","line":"   GCC is free software; you can redistribute it and/or modify"},
{"lineNum":"    6","line":"   it under the terms of the GNU General Public License as published by"},
{"lineNum":"    7","line":"   the Free Software Foundation; either version 3, or (at your option)"},
{"lineNum":"    8","line":"   any later version."},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"   GCC is distributed in the hope that it will be useful,"},
{"lineNum":"   11","line":"   but WITHOUT ANY WARRANTY; without even the implied warranty of"},
{"lineNum":"   12","line":"   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the"},
{"lineNum":"   13","line":"   GNU General Public License for more details."},
{"lineNum":"   14","line":""},
{"lineNum":"   15","line":"   Under Section 7 of GPL version 3, you are granted additional"},
{"lineNum":"   16","line":"   permissions described in the GCC Runtime Library Exception, version"},
{"lineNum":"   17","line":"   3.1, as published by the Free Software Foundation."},
{"lineNum":"   18","line":""},
{"lineNum":"   19","line":"   You should have received a copy of the GNU General Public License and"},
{"lineNum":"   20","line":"   a copy of the GCC Runtime Library Exception along with this program;"},
{"lineNum":"   21","line":"   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see"},
{"lineNum":"   22","line":"   <http://www.gnu.org/licenses/>.  */"},
{"lineNum":"   23","line":""},
{"lineNum":"   24","line":"#ifndef _IMMINTRIN_H_INCLUDED"},
{"lineNum":"   25","line":"# error \"Never use <rtmintrin.h> directly; include <immintrin.h> instead.\""},
{"lineNum":"   26","line":"#endif"},
{"lineNum":"   27","line":""},
{"lineNum":"   28","line":"#ifndef _RTMINTRIN_H_INCLUDED"},
{"lineNum":"   29","line":"#define _RTMINTRIN_H_INCLUDED"},
{"lineNum":"   30","line":""},
{"lineNum":"   31","line":"#ifndef __RTM__"},
{"lineNum":"   32","line":"#pragma GCC push_options"},
{"lineNum":"   33","line":"#pragma GCC target(\"rtm\")"},
{"lineNum":"   34","line":"#define __DISABLE_RTM__"},
{"lineNum":"   35","line":"#endif /* __RTM__ */"},
{"lineNum":"   36","line":""},
{"lineNum":"   37","line":"#define _XBEGIN_STARTED\t\t(~0u)"},
{"lineNum":"   38","line":"#define _XABORT_EXPLICIT\t(1 << 0)"},
{"lineNum":"   39","line":"#define _XABORT_RETRY\t\t(1 << 1)"},
{"lineNum":"   40","line":"#define _XABORT_CONFLICT\t(1 << 2)"},
{"lineNum":"   41","line":"#define _XABORT_CAPACITY\t(1 << 3)"},
{"lineNum":"   42","line":"#define _XABORT_DEBUG\t\t(1 << 4)"},
{"lineNum":"   43","line":"#define _XABORT_NESTED\t\t(1 << 5)"},
{"lineNum":"   44","line":"#define _XABORT_CODE(x)\t\t(((x) >> 24) & 0xFF)"},
{"lineNum":"   45","line":""},
{"lineNum":"   46","line":"/* Start an RTM code region.  Return _XBEGIN_STARTED on success and the"},
{"lineNum":"   47","line":"   abort condition otherwise.  */"},
{"lineNum":"   48","line":"extern __inline unsigned int"},
{"lineNum":"   49","line":"__attribute__((__gnu_inline__, __always_inline__, __artificial__))"},
{"lineNum":"   50","line":"_xbegin (void)","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   51","line":"{"},
{"lineNum":"   52","line":"  return __builtin_ia32_xbegin ();","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   53","line":"}"},
{"lineNum":"   54","line":""},
{"lineNum":"   55","line":"/* Specify the end of an RTM code region.  If it corresponds to the"},
{"lineNum":"   56","line":"   outermost transaction, then attempts the transaction commit.  If the"},
{"lineNum":"   57","line":"   commit fails, then control is transferred to the outermost transaction"},
{"lineNum":"   58","line":"   fallback handler.  */"},
{"lineNum":"   59","line":"extern __inline void"},
{"lineNum":"   60","line":"__attribute__((__gnu_inline__, __always_inline__, __artificial__))"},
{"lineNum":"   61","line":"_xend (void)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   62","line":"{"},
{"lineNum":"   63","line":"  __builtin_ia32_xend ();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   64","line":"}"},
{"lineNum":"   65","line":""},
{"lineNum":"   66","line":"/* Force an RTM abort condition. The control is transferred to the"},
{"lineNum":"   67","line":"   outermost transaction fallback handler with the abort condition IMM.  */"},
{"lineNum":"   68","line":"#ifdef __OPTIMIZE__"},
{"lineNum":"   69","line":"extern __inline void"},
{"lineNum":"   70","line":"__attribute__((__gnu_inline__, __always_inline__, __artificial__))"},
{"lineNum":"   71","line":"_xabort (const unsigned int __imm)","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   72","line":"{"},
{"lineNum":"   73","line":"  __builtin_ia32_xabort (__imm);","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   74","line":"}"},
{"lineNum":"   75","line":"#else"},
{"lineNum":"   76","line":"#define _xabort(N)  __builtin_ia32_xabort (N)"},
{"lineNum":"   77","line":"#endif /* __OPTIMIZE__ */"},
{"lineNum":"   78","line":""},
{"lineNum":"   79","line":"#ifdef __DISABLE_RTM__"},
{"lineNum":"   80","line":"#undef __DISABLE_RTM__"},
{"lineNum":"   81","line":"#pragma GCC pop_options"},
{"lineNum":"   82","line":"#endif /* __DISABLE_RTM__ */"},
{"lineNum":"   83","line":""},
{"lineNum":"   84","line":"#endif /* _RTMINTRIN_H_INCLUDED */"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:41", "instrumented" : 6, "covered" : 0,};
var merged_data = [];
