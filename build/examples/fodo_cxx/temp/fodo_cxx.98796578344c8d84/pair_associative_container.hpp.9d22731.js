var data = {lines:[
{"lineNum":"    1","line":"/*! \\file pair_associative_container.hpp"},
{"lineNum":"    2","line":"    \\brief Support for the PairAssociativeContainer refinement of the"},
{"lineNum":"    3","line":"    AssociativeContainer concept."},
{"lineNum":"    4","line":"    \\ingroup TypeConcepts */"},
{"lineNum":"    5","line":"/*"},
{"lineNum":"    6","line":"  Copyright (c) 2014, Randolph Voorhies, Shane Grant"},
{"lineNum":"    7","line":"  All rights reserved."},
{"lineNum":"    8","line":""},
{"lineNum":"    9","line":"  Redistribution and use in source and binary forms, with or without"},
{"lineNum":"   10","line":"  modification, are permitted provided that the following conditions are met:"},
{"lineNum":"   11","line":"      * Redistributions of source code must retain the above copyright"},
{"lineNum":"   12","line":"        notice, this list of conditions and the following disclaimer."},
{"lineNum":"   13","line":"      * Redistributions in binary form must reproduce the above copyright"},
{"lineNum":"   14","line":"        notice, this list of conditions and the following disclaimer in the"},
{"lineNum":"   15","line":"        documentation and/or other materials provided with the distribution."},
{"lineNum":"   16","line":"      * Neither the name of cereal nor the"},
{"lineNum":"   17","line":"        names of its contributors may be used to endorse or promote products"},
{"lineNum":"   18","line":"        derived from this software without specific prior written permission."},
{"lineNum":"   19","line":""},
{"lineNum":"   20","line":"  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND"},
{"lineNum":"   21","line":"  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED"},
{"lineNum":"   22","line":"  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE"},
{"lineNum":"   23","line":"  DISCLAIMED. IN NO EVENT SHALL RANDOLPH VOORHIES OR SHANE GRANT BE LIABLE FOR ANY"},
{"lineNum":"   24","line":"  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES"},
{"lineNum":"   25","line":"  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;"},
{"lineNum":"   26","line":"  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"},
{"lineNum":"   27","line":"  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT"},
{"lineNum":"   28","line":"  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS"},
{"lineNum":"   29","line":"  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."},
{"lineNum":"   30","line":"*/"},
{"lineNum":"   31","line":"#ifndef CEREAL_CONCEPTS_PAIR_ASSOCIATIVE_CONTAINER_HPP_"},
{"lineNum":"   32","line":"#define CEREAL_CONCEPTS_PAIR_ASSOCIATIVE_CONTAINER_HPP_"},
{"lineNum":"   33","line":""},
{"lineNum":"   34","line":"#include \"cereal/cereal.hpp\""},
{"lineNum":"   35","line":""},
{"lineNum":"   36","line":"namespace cereal"},
{"lineNum":"   37","line":"{"},
{"lineNum":"   38","line":"  //! Saving for std-like pair associative containers"},
{"lineNum":"   39","line":"  template <class Archive, template <typename...> class Map, typename... Args, typename = typename Map<Args...>::mapped_type> inline"},
{"lineNum":"   40","line":"  void CEREAL_SAVE_FUNCTION_NAME( Archive & ar, Map<Args...> const & map )"},
{"lineNum":"   41","line":"  {"},
{"lineNum":"   42","line":"    ar( make_size_tag( static_cast<size_type>(map.size()) ) );"},
{"lineNum":"   43","line":""},
{"lineNum":"   44","line":"    for( const auto & i : map )","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"   45","line":"      ar( make_map_item(i.first, i.second) );","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   46","line":"  }"},
{"lineNum":"   47","line":""},
{"lineNum":"   48","line":"  //! Loading for std-like pair associative containers"},
{"lineNum":"   49","line":"  template <class Archive, template <typename...> class Map, typename... Args, typename = typename Map<Args...>::mapped_type> inline"},
{"lineNum":"   50","line":"  void CEREAL_LOAD_FUNCTION_NAME( Archive & ar, Map<Args...> & map )"},
{"lineNum":"   51","line":"  {","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   52","line":"    size_type size;"},
{"lineNum":"   53","line":"    ar( make_size_tag( size ) );"},
{"lineNum":"   54","line":""},
{"lineNum":"   55","line":"    map.clear();"},
{"lineNum":"   56","line":""},
{"lineNum":"   57","line":"    auto hint = map.begin();"},
{"lineNum":"   58","line":"    for( size_t i = 0; i < size; ++i )","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   59","line":"    {"},
{"lineNum":"   60","line":"      typename Map<Args...>::key_type key;"},
{"lineNum":"   61","line":"      typename Map<Args...>::mapped_type value;"},
{"lineNum":"   62","line":""},
{"lineNum":"   63","line":"      ar( make_map_item(key, value) );"},
{"lineNum":"   64","line":"      #ifdef CEREAL_OLDER_GCC"},
{"lineNum":"   65","line":"      hint = map.insert( hint, std::make_pair(std::move(key), std::move(value)) );"},
{"lineNum":"   66","line":"      #else // NOT CEREAL_OLDER_GCC"},
{"lineNum":"   67","line":"      hint = map.emplace_hint( hint, std::move( key ), std::move( value ) );"},
{"lineNum":"   68","line":"      #endif // NOT CEREAL_OLDER_GCC"},
{"lineNum":"   69","line":"    }"},
{"lineNum":"   70","line":"  }","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   71","line":"} // namespace cereal"},
{"lineNum":"   72","line":""},
{"lineNum":"   73","line":"#endif // CEREAL_CONCEPTS_PAIR_ASSOCIATIVE_CONTAINER_HPP_"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 5, "covered" : 0,};
var merged_data = [];
