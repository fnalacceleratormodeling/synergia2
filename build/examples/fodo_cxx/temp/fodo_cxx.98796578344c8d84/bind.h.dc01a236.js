var data = {lines:[
{"lineNum":"    1","line":"// -*- C++ -*-"},
{"lineNum":"    2","line":"//===----------------------------------------------------------------------===//"},
{"lineNum":"    3","line":"//"},
{"lineNum":"    4","line":"// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions."},
{"lineNum":"    5","line":"// See https://llvm.org/LICENSE.txt for license information."},
{"lineNum":"    6","line":"// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception"},
{"lineNum":"    7","line":"//"},
{"lineNum":"    8","line":"//===----------------------------------------------------------------------===//"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"#ifndef _LIBCPP___FUNCTIONAL_BIND_H"},
{"lineNum":"   11","line":"#define _LIBCPP___FUNCTIONAL_BIND_H"},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"#include <__config>"},
{"lineNum":"   14","line":"#include <__functional/weak_result_type.h>"},
{"lineNum":"   15","line":"#include <__functional/invoke.h>"},
{"lineNum":"   16","line":"#include <cstddef>"},
{"lineNum":"   17","line":"#include <tuple>"},
{"lineNum":"   18","line":"#include <type_traits>"},
{"lineNum":"   19","line":""},
{"lineNum":"   20","line":"#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)"},
{"lineNum":"   21","line":"#pragma GCC system_header"},
{"lineNum":"   22","line":"#endif"},
{"lineNum":"   23","line":""},
{"lineNum":"   24","line":"_LIBCPP_BEGIN_NAMESPACE_STD"},
{"lineNum":"   25","line":""},
{"lineNum":"   26","line":"template<class _Tp> struct __is_bind_expression : public false_type {};"},
{"lineNum":"   27","line":"template<class _Tp> struct _LIBCPP_TEMPLATE_VIS is_bind_expression"},
{"lineNum":"   28","line":"    : public __is_bind_expression<typename remove_cv<_Tp>::type> {};"},
{"lineNum":"   29","line":""},
{"lineNum":"   30","line":"#if _LIBCPP_STD_VER > 14"},
{"lineNum":"   31","line":"template <class _Tp>"},
{"lineNum":"   32","line":"_LIBCPP_INLINE_VAR constexpr size_t is_bind_expression_v = is_bind_expression<_Tp>::value;"},
{"lineNum":"   33","line":"#endif"},
{"lineNum":"   34","line":""},
{"lineNum":"   35","line":"template<class _Tp> struct __is_placeholder : public integral_constant<int, 0> {};"},
{"lineNum":"   36","line":"template<class _Tp> struct _LIBCPP_TEMPLATE_VIS is_placeholder"},
{"lineNum":"   37","line":"    : public __is_placeholder<typename remove_cv<_Tp>::type> {};"},
{"lineNum":"   38","line":""},
{"lineNum":"   39","line":"#if _LIBCPP_STD_VER > 14"},
{"lineNum":"   40","line":"template <class _Tp>"},
{"lineNum":"   41","line":"_LIBCPP_INLINE_VAR constexpr size_t is_placeholder_v = is_placeholder<_Tp>::value;"},
{"lineNum":"   42","line":"#endif"},
{"lineNum":"   43","line":""},
{"lineNum":"   44","line":"namespace placeholders"},
{"lineNum":"   45","line":"{"},
{"lineNum":"   46","line":""},
{"lineNum":"   47","line":"template <int _Np> struct __ph {};"},
{"lineNum":"   48","line":""},
{"lineNum":"   49","line":"#if defined(_LIBCPP_CXX03_LANG) || defined(_LIBCPP_BUILDING_LIBRARY)"},
{"lineNum":"   50","line":"_LIBCPP_FUNC_VIS extern const __ph<1>   _1;"},
{"lineNum":"   51","line":"_LIBCPP_FUNC_VIS extern const __ph<2>   _2;"},
{"lineNum":"   52","line":"_LIBCPP_FUNC_VIS extern const __ph<3>   _3;"},
{"lineNum":"   53","line":"_LIBCPP_FUNC_VIS extern const __ph<4>   _4;"},
{"lineNum":"   54","line":"_LIBCPP_FUNC_VIS extern const __ph<5>   _5;"},
{"lineNum":"   55","line":"_LIBCPP_FUNC_VIS extern const __ph<6>   _6;"},
{"lineNum":"   56","line":"_LIBCPP_FUNC_VIS extern const __ph<7>   _7;"},
{"lineNum":"   57","line":"_LIBCPP_FUNC_VIS extern const __ph<8>   _8;"},
{"lineNum":"   58","line":"_LIBCPP_FUNC_VIS extern const __ph<9>   _9;"},
{"lineNum":"   59","line":"_LIBCPP_FUNC_VIS extern const __ph<10> _10;"},
{"lineNum":"   60","line":"#else"},
{"lineNum":"   61","line":"/* _LIBCPP_INLINE_VAR */ constexpr __ph<1>   _1{};"},
{"lineNum":"   62","line":"/* _LIBCPP_INLINE_VAR */ constexpr __ph<2>   _2{};"},
{"lineNum":"   63","line":"/* _LIBCPP_INLINE_VAR */ constexpr __ph<3>   _3{};"},
{"lineNum":"   64","line":"/* _LIBCPP_INLINE_VAR */ constexpr __ph<4>   _4{};"},
{"lineNum":"   65","line":"/* _LIBCPP_INLINE_VAR */ constexpr __ph<5>   _5{};"},
{"lineNum":"   66","line":"/* _LIBCPP_INLINE_VAR */ constexpr __ph<6>   _6{};"},
{"lineNum":"   67","line":"/* _LIBCPP_INLINE_VAR */ constexpr __ph<7>   _7{};"},
{"lineNum":"   68","line":"/* _LIBCPP_INLINE_VAR */ constexpr __ph<8>   _8{};"},
{"lineNum":"   69","line":"/* _LIBCPP_INLINE_VAR */ constexpr __ph<9>   _9{};"},
{"lineNum":"   70","line":"/* _LIBCPP_INLINE_VAR */ constexpr __ph<10> _10{};"},
{"lineNum":"   71","line":"#endif // defined(_LIBCPP_CXX03_LANG) || defined(_LIBCPP_BUILDING_LIBRARY)"},
{"lineNum":"   72","line":""},
{"lineNum":"   73","line":"}  // placeholders"},
{"lineNum":"   74","line":""},
{"lineNum":"   75","line":"template<int _Np>"},
{"lineNum":"   76","line":"struct __is_placeholder<placeholders::__ph<_Np> >"},
{"lineNum":"   77","line":"    : public integral_constant<int, _Np> {};"},
{"lineNum":"   78","line":""},
{"lineNum":"   79","line":""},
{"lineNum":"   80","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":"   81","line":""},
{"lineNum":"   82","line":"template <class _Tp, class _Uj>"},
{"lineNum":"   83","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"   84","line":"_Tp&"},
{"lineNum":"   85","line":"__mu(reference_wrapper<_Tp> __t, _Uj&)"},
{"lineNum":"   86","line":"{"},
{"lineNum":"   87","line":"    return __t.get();"},
{"lineNum":"   88","line":"}"},
{"lineNum":"   89","line":""},
{"lineNum":"   90","line":"template <class _Ti, class ..._Uj, size_t ..._Indx>"},
{"lineNum":"   91","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"   92","line":"typename __invoke_of<_Ti&, _Uj...>::type"},
{"lineNum":"   93","line":"__mu_expand(_Ti& __ti, tuple<_Uj...>& __uj, __tuple_indices<_Indx...>)"},
{"lineNum":"   94","line":"{"},
{"lineNum":"   95","line":"    return __ti(_VSTD::forward<_Uj>(_VSTD::get<_Indx>(__uj))...);"},
{"lineNum":"   96","line":"}"},
{"lineNum":"   97","line":""},
{"lineNum":"   98","line":"template <class _Ti, class ..._Uj>"},
{"lineNum":"   99","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  100","line":"typename _EnableIf"},
{"lineNum":"  101","line":"<"},
{"lineNum":"  102","line":"    is_bind_expression<_Ti>::value,"},
{"lineNum":"  103","line":"    __invoke_of<_Ti&, _Uj...>"},
{"lineNum":"  104","line":">::type"},
{"lineNum":"  105","line":"__mu(_Ti& __ti, tuple<_Uj...>& __uj)"},
{"lineNum":"  106","line":"{"},
{"lineNum":"  107","line":"    typedef typename __make_tuple_indices<sizeof...(_Uj)>::type __indices;"},
{"lineNum":"  108","line":"    return _VSTD::__mu_expand(__ti, __uj, __indices());"},
{"lineNum":"  109","line":"}"},
{"lineNum":"  110","line":""},
{"lineNum":"  111","line":"template <bool IsPh, class _Ti, class _Uj>"},
{"lineNum":"  112","line":"struct __mu_return2 {};"},
{"lineNum":"  113","line":""},
{"lineNum":"  114","line":"template <class _Ti, class _Uj>"},
{"lineNum":"  115","line":"struct __mu_return2<true, _Ti, _Uj>"},
{"lineNum":"  116","line":"{"},
{"lineNum":"  117","line":"    typedef typename tuple_element<is_placeholder<_Ti>::value - 1, _Uj>::type type;"},
{"lineNum":"  118","line":"};"},
{"lineNum":"  119","line":""},
{"lineNum":"  120","line":"template <class _Ti, class _Uj>"},
{"lineNum":"  121","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  122","line":"typename enable_if"},
{"lineNum":"  123","line":"<"},
{"lineNum":"  124","line":"    0 < is_placeholder<_Ti>::value,"},
{"lineNum":"  125","line":"    typename __mu_return2<0 < is_placeholder<_Ti>::value, _Ti, _Uj>::type"},
{"lineNum":"  126","line":">::type"},
{"lineNum":"  127","line":"__mu(_Ti&, _Uj& __uj)"},
{"lineNum":"  128","line":"{"},
{"lineNum":"  129","line":"    const size_t _Indx = is_placeholder<_Ti>::value - 1;"},
{"lineNum":"  130","line":"    return _VSTD::forward<typename tuple_element<_Indx, _Uj>::type>(_VSTD::get<_Indx>(__uj));"},
{"lineNum":"  131","line":"}"},
{"lineNum":"  132","line":""},
{"lineNum":"  133","line":"template <class _Ti, class _Uj>"},
{"lineNum":"  134","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  135","line":"typename enable_if"},
{"lineNum":"  136","line":"<"},
{"lineNum":"  137","line":"    !is_bind_expression<_Ti>::value &&"},
{"lineNum":"  138","line":"    is_placeholder<_Ti>::value == 0 &&"},
{"lineNum":"  139","line":"    !__is_reference_wrapper<_Ti>::value,"},
{"lineNum":"  140","line":"    _Ti&"},
{"lineNum":"  141","line":">::type"},
{"lineNum":"  142","line":"__mu(_Ti& __ti, _Uj&)"},
{"lineNum":"  143","line":"{"},
{"lineNum":"  144","line":"    return __ti;"},
{"lineNum":"  145","line":"}"},
{"lineNum":"  146","line":""},
{"lineNum":"  147","line":"template <class _Ti, bool IsReferenceWrapper, bool IsBindEx, bool IsPh,"},
{"lineNum":"  148","line":"          class _TupleUj>"},
{"lineNum":"  149","line":"struct __mu_return_impl;"},
{"lineNum":"  150","line":""},
{"lineNum":"  151","line":"template <bool _Invokable, class _Ti, class ..._Uj>"},
{"lineNum":"  152","line":"struct __mu_return_invokable  // false"},
{"lineNum":"  153","line":"{"},
{"lineNum":"  154","line":"    typedef __nat type;"},
{"lineNum":"  155","line":"};"},
{"lineNum":"  156","line":""},
{"lineNum":"  157","line":"template <class _Ti, class ..._Uj>"},
{"lineNum":"  158","line":"struct __mu_return_invokable<true, _Ti, _Uj...>"},
{"lineNum":"  159","line":"{"},
{"lineNum":"  160","line":"    typedef typename __invoke_of<_Ti&, _Uj...>::type type;"},
{"lineNum":"  161","line":"};"},
{"lineNum":"  162","line":""},
{"lineNum":"  163","line":"template <class _Ti, class ..._Uj>"},
{"lineNum":"  164","line":"struct __mu_return_impl<_Ti, false, true, false, tuple<_Uj...> >"},
{"lineNum":"  165","line":"    : public __mu_return_invokable<__invokable<_Ti&, _Uj...>::value, _Ti, _Uj...>"},
{"lineNum":"  166","line":"{"},
{"lineNum":"  167","line":"};"},
{"lineNum":"  168","line":""},
{"lineNum":"  169","line":"template <class _Ti, class _TupleUj>"},
{"lineNum":"  170","line":"struct __mu_return_impl<_Ti, false, false, true, _TupleUj>"},
{"lineNum":"  171","line":"{"},
{"lineNum":"  172","line":"    typedef typename tuple_element<is_placeholder<_Ti>::value - 1,"},
{"lineNum":"  173","line":"                                   _TupleUj>::type&& type;"},
{"lineNum":"  174","line":"};"},
{"lineNum":"  175","line":""},
{"lineNum":"  176","line":"template <class _Ti, class _TupleUj>"},
{"lineNum":"  177","line":"struct __mu_return_impl<_Ti, true, false, false, _TupleUj>"},
{"lineNum":"  178","line":"{"},
{"lineNum":"  179","line":"    typedef typename _Ti::type& type;"},
{"lineNum":"  180","line":"};"},
{"lineNum":"  181","line":""},
{"lineNum":"  182","line":"template <class _Ti, class _TupleUj>"},
{"lineNum":"  183","line":"struct __mu_return_impl<_Ti, false, false, false, _TupleUj>"},
{"lineNum":"  184","line":"{"},
{"lineNum":"  185","line":"    typedef _Ti& type;"},
{"lineNum":"  186","line":"};"},
{"lineNum":"  187","line":""},
{"lineNum":"  188","line":"template <class _Ti, class _TupleUj>"},
{"lineNum":"  189","line":"struct __mu_return"},
{"lineNum":"  190","line":"    : public __mu_return_impl<_Ti,"},
{"lineNum":"  191","line":"                              __is_reference_wrapper<_Ti>::value,"},
{"lineNum":"  192","line":"                              is_bind_expression<_Ti>::value,"},
{"lineNum":"  193","line":"                              0 < is_placeholder<_Ti>::value &&"},
{"lineNum":"  194","line":"                              is_placeholder<_Ti>::value <= tuple_size<_TupleUj>::value,"},
{"lineNum":"  195","line":"                              _TupleUj>"},
{"lineNum":"  196","line":"{"},
{"lineNum":"  197","line":"};"},
{"lineNum":"  198","line":""},
{"lineNum":"  199","line":"template <class _Fp, class _BoundArgs, class _TupleUj>"},
{"lineNum":"  200","line":"struct __is_valid_bind_return"},
{"lineNum":"  201","line":"{"},
{"lineNum":"  202","line":"    static const bool value = false;"},
{"lineNum":"  203","line":"};"},
{"lineNum":"  204","line":""},
{"lineNum":"  205","line":"template <class _Fp, class ..._BoundArgs, class _TupleUj>"},
{"lineNum":"  206","line":"struct __is_valid_bind_return<_Fp, tuple<_BoundArgs...>, _TupleUj>"},
{"lineNum":"  207","line":"{"},
{"lineNum":"  208","line":"    static const bool value = __invokable<_Fp,"},
{"lineNum":"  209","line":"                    typename __mu_return<_BoundArgs, _TupleUj>::type...>::value;"},
{"lineNum":"  210","line":"};"},
{"lineNum":"  211","line":""},
{"lineNum":"  212","line":"template <class _Fp, class ..._BoundArgs, class _TupleUj>"},
{"lineNum":"  213","line":"struct __is_valid_bind_return<_Fp, const tuple<_BoundArgs...>, _TupleUj>"},
{"lineNum":"  214","line":"{"},
{"lineNum":"  215","line":"    static const bool value = __invokable<_Fp,"},
{"lineNum":"  216","line":"                    typename __mu_return<const _BoundArgs, _TupleUj>::type...>::value;"},
{"lineNum":"  217","line":"};"},
{"lineNum":"  218","line":""},
{"lineNum":"  219","line":"template <class _Fp, class _BoundArgs, class _TupleUj,"},
{"lineNum":"  220","line":"          bool = __is_valid_bind_return<_Fp, _BoundArgs, _TupleUj>::value>"},
{"lineNum":"  221","line":"struct __bind_return;"},
{"lineNum":"  222","line":""},
{"lineNum":"  223","line":"template <class _Fp, class ..._BoundArgs, class _TupleUj>"},
{"lineNum":"  224","line":"struct __bind_return<_Fp, tuple<_BoundArgs...>, _TupleUj, true>"},
{"lineNum":"  225","line":"{"},
{"lineNum":"  226","line":"    typedef typename __invoke_of"},
{"lineNum":"  227","line":"    <"},
{"lineNum":"  228","line":"        _Fp&,"},
{"lineNum":"  229","line":"        typename __mu_return"},
{"lineNum":"  230","line":"        <"},
{"lineNum":"  231","line":"            _BoundArgs,"},
{"lineNum":"  232","line":"            _TupleUj"},
{"lineNum":"  233","line":"        >::type..."},
{"lineNum":"  234","line":"    >::type type;"},
{"lineNum":"  235","line":"};"},
{"lineNum":"  236","line":""},
{"lineNum":"  237","line":"template <class _Fp, class ..._BoundArgs, class _TupleUj>"},
{"lineNum":"  238","line":"struct __bind_return<_Fp, const tuple<_BoundArgs...>, _TupleUj, true>"},
{"lineNum":"  239","line":"{"},
{"lineNum":"  240","line":"    typedef typename __invoke_of"},
{"lineNum":"  241","line":"    <"},
{"lineNum":"  242","line":"        _Fp&,"},
{"lineNum":"  243","line":"        typename __mu_return"},
{"lineNum":"  244","line":"        <"},
{"lineNum":"  245","line":"            const _BoundArgs,"},
{"lineNum":"  246","line":"            _TupleUj"},
{"lineNum":"  247","line":"        >::type..."},
{"lineNum":"  248","line":"    >::type type;"},
{"lineNum":"  249","line":"};"},
{"lineNum":"  250","line":""},
{"lineNum":"  251","line":"template <class _Fp, class _BoundArgs, size_t ..._Indx, class _Args>"},
{"lineNum":"  252","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  253","line":"typename __bind_return<_Fp, _BoundArgs, _Args>::type"},
{"lineNum":"  254","line":"__apply_functor(_Fp& __f, _BoundArgs& __bound_args, __tuple_indices<_Indx...>,"},
{"lineNum":"  255","line":"                _Args&& __args)"},
{"lineNum":"  256","line":"{"},
{"lineNum":"  257","line":"    return _VSTD::__invoke(__f, _VSTD::__mu(_VSTD::get<_Indx>(__bound_args), __args)...);"},
{"lineNum":"  258","line":"}"},
{"lineNum":"  259","line":""},
{"lineNum":"  260","line":"template<class _Fp, class ..._BoundArgs>"},
{"lineNum":"  261","line":"class __bind","class":"lineNoCov","hits":"0","possible_hits":"8",},
{"lineNum":"  262","line":"#if _LIBCPP_STD_VER <= 17 || !defined(_LIBCPP_ABI_NO_BINDER_BASES)"},
{"lineNum":"  263","line":"    : public __weak_result_type<typename decay<_Fp>::type>"},
{"lineNum":"  264","line":"#endif"},
{"lineNum":"  265","line":"{"},
{"lineNum":"  266","line":"protected:"},
{"lineNum":"  267","line":"    typedef typename decay<_Fp>::type _Fd;"},
{"lineNum":"  268","line":"    typedef tuple<typename decay<_BoundArgs>::type...> _Td;"},
{"lineNum":"  269","line":"private:"},
{"lineNum":"  270","line":"    _Fd __f_;"},
{"lineNum":"  271","line":"    _Td __bound_args_;"},
{"lineNum":"  272","line":""},
{"lineNum":"  273","line":"    typedef typename __make_tuple_indices<sizeof...(_BoundArgs)>::type __indices;"},
{"lineNum":"  274","line":"public:"},
{"lineNum":"  275","line":"    template <class _Gp, class ..._BA,"},
{"lineNum":"  276","line":"              class = typename enable_if"},
{"lineNum":"  277","line":"                               <"},
{"lineNum":"  278","line":"                                  is_constructible<_Fd, _Gp>::value &&"},
{"lineNum":"  279","line":"                                  !is_same<typename remove_reference<_Gp>::type,"},
{"lineNum":"  280","line":"                                           __bind>::value"},
{"lineNum":"  281","line":"                               >::type>"},
{"lineNum":"  282","line":"      _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17"},
{"lineNum":"  283","line":"      explicit __bind(_Gp&& __f, _BA&& ...__bound_args)"},
{"lineNum":"  284","line":"        : __f_(_VSTD::forward<_Gp>(__f)),"},
{"lineNum":"  285","line":"          __bound_args_(_VSTD::forward<_BA>(__bound_args)...) {}"},
{"lineNum":"  286","line":""},
{"lineNum":"  287","line":"    template <class ..._Args>"},
{"lineNum":"  288","line":"        _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17"},
{"lineNum":"  289","line":"        typename __bind_return<_Fd, _Td, tuple<_Args&&...> >::type"},
{"lineNum":"  290","line":"        operator()(_Args&& ...__args)"},
{"lineNum":"  291","line":"        {"},
{"lineNum":"  292","line":"            return _VSTD::__apply_functor(__f_, __bound_args_, __indices(),"},
{"lineNum":"  293","line":"                                  tuple<_Args&&...>(_VSTD::forward<_Args>(__args)...));"},
{"lineNum":"  294","line":"        }"},
{"lineNum":"  295","line":""},
{"lineNum":"  296","line":"    template <class ..._Args>"},
{"lineNum":"  297","line":"        _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17"},
{"lineNum":"  298","line":"        typename __bind_return<const _Fd, const _Td, tuple<_Args&&...> >::type"},
{"lineNum":"  299","line":"        operator()(_Args&& ...__args) const"},
{"lineNum":"  300","line":"        {"},
{"lineNum":"  301","line":"            return _VSTD::__apply_functor(__f_, __bound_args_, __indices(),"},
{"lineNum":"  302","line":"                                   tuple<_Args&&...>(_VSTD::forward<_Args>(__args)...));"},
{"lineNum":"  303","line":"        }"},
{"lineNum":"  304","line":"};"},
{"lineNum":"  305","line":""},
{"lineNum":"  306","line":"template<class _Fp, class ..._BoundArgs>"},
{"lineNum":"  307","line":"struct __is_bind_expression<__bind<_Fp, _BoundArgs...> > : public true_type {};"},
{"lineNum":"  308","line":""},
{"lineNum":"  309","line":"template<class _Rp, class _Fp, class ..._BoundArgs>"},
{"lineNum":"  310","line":"class __bind_r"},
{"lineNum":"  311","line":"    : public __bind<_Fp, _BoundArgs...>"},
{"lineNum":"  312","line":"{"},
{"lineNum":"  313","line":"    typedef __bind<_Fp, _BoundArgs...> base;"},
{"lineNum":"  314","line":"    typedef typename base::_Fd _Fd;"},
{"lineNum":"  315","line":"    typedef typename base::_Td _Td;"},
{"lineNum":"  316","line":"public:"},
{"lineNum":"  317","line":"    typedef _Rp result_type;"},
{"lineNum":"  318","line":""},
{"lineNum":"  319","line":""},
{"lineNum":"  320","line":"    template <class _Gp, class ..._BA,"},
{"lineNum":"  321","line":"              class = typename enable_if"},
{"lineNum":"  322","line":"                               <"},
{"lineNum":"  323","line":"                                  is_constructible<_Fd, _Gp>::value &&"},
{"lineNum":"  324","line":"                                  !is_same<typename remove_reference<_Gp>::type,"},
{"lineNum":"  325","line":"                                           __bind_r>::value"},
{"lineNum":"  326","line":"                               >::type>"},
{"lineNum":"  327","line":"      _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17"},
{"lineNum":"  328","line":"      explicit __bind_r(_Gp&& __f, _BA&& ...__bound_args)"},
{"lineNum":"  329","line":"        : base(_VSTD::forward<_Gp>(__f),"},
{"lineNum":"  330","line":"               _VSTD::forward<_BA>(__bound_args)...) {}"},
{"lineNum":"  331","line":""},
{"lineNum":"  332","line":"    template <class ..._Args>"},
{"lineNum":"  333","line":"        _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17"},
{"lineNum":"  334","line":"        typename enable_if"},
{"lineNum":"  335","line":"        <"},
{"lineNum":"  336","line":"            is_convertible<typename __bind_return<_Fd, _Td, tuple<_Args&&...> >::type,"},
{"lineNum":"  337","line":"                           result_type>::value || is_void<_Rp>::value,"},
{"lineNum":"  338","line":"            result_type"},
{"lineNum":"  339","line":"        >::type"},
{"lineNum":"  340","line":"        operator()(_Args&& ...__args)"},
{"lineNum":"  341","line":"        {"},
{"lineNum":"  342","line":"            typedef __invoke_void_return_wrapper<_Rp> _Invoker;"},
{"lineNum":"  343","line":"            return _Invoker::__call(static_cast<base&>(*this), _VSTD::forward<_Args>(__args)...);"},
{"lineNum":"  344","line":"        }"},
{"lineNum":"  345","line":""},
{"lineNum":"  346","line":"    template <class ..._Args>"},
{"lineNum":"  347","line":"        _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17"},
{"lineNum":"  348","line":"        typename enable_if"},
{"lineNum":"  349","line":"        <"},
{"lineNum":"  350","line":"            is_convertible<typename __bind_return<const _Fd, const _Td, tuple<_Args&&...> >::type,"},
{"lineNum":"  351","line":"                           result_type>::value || is_void<_Rp>::value,"},
{"lineNum":"  352","line":"            result_type"},
{"lineNum":"  353","line":"        >::type"},
{"lineNum":"  354","line":"        operator()(_Args&& ...__args) const"},
{"lineNum":"  355","line":"        {"},
{"lineNum":"  356","line":"            typedef __invoke_void_return_wrapper<_Rp> _Invoker;"},
{"lineNum":"  357","line":"            return _Invoker::__call(static_cast<base const&>(*this), _VSTD::forward<_Args>(__args)...);"},
{"lineNum":"  358","line":"        }"},
{"lineNum":"  359","line":"};"},
{"lineNum":"  360","line":""},
{"lineNum":"  361","line":"template<class _Rp, class _Fp, class ..._BoundArgs>"},
{"lineNum":"  362","line":"struct __is_bind_expression<__bind_r<_Rp, _Fp, _BoundArgs...> > : public true_type {};"},
{"lineNum":"  363","line":""},
{"lineNum":"  364","line":"template<class _Fp, class ..._BoundArgs>"},
{"lineNum":"  365","line":"inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17"},
{"lineNum":"  366","line":"__bind<_Fp, _BoundArgs...>"},
{"lineNum":"  367","line":"bind(_Fp&& __f, _BoundArgs&&... __bound_args)"},
{"lineNum":"  368","line":"{"},
{"lineNum":"  369","line":"    typedef __bind<_Fp, _BoundArgs...> type;"},
{"lineNum":"  370","line":"    return type(_VSTD::forward<_Fp>(__f), _VSTD::forward<_BoundArgs>(__bound_args)...);"},
{"lineNum":"  371","line":"}"},
{"lineNum":"  372","line":""},
{"lineNum":"  373","line":"template<class _Rp, class _Fp, class ..._BoundArgs>"},
{"lineNum":"  374","line":"inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17"},
{"lineNum":"  375","line":"__bind_r<_Rp, _Fp, _BoundArgs...>"},
{"lineNum":"  376","line":"bind(_Fp&& __f, _BoundArgs&&... __bound_args)"},
{"lineNum":"  377","line":"{"},
{"lineNum":"  378","line":"    typedef __bind_r<_Rp, _Fp, _BoundArgs...> type;"},
{"lineNum":"  379","line":"    return type(_VSTD::forward<_Fp>(__f), _VSTD::forward<_BoundArgs>(__bound_args)...);"},
{"lineNum":"  380","line":"}"},
{"lineNum":"  381","line":""},
{"lineNum":"  382","line":"#endif // _LIBCPP_CXX03_LANG"},
{"lineNum":"  383","line":""},
{"lineNum":"  384","line":"_LIBCPP_END_NAMESPACE_STD"},
{"lineNum":"  385","line":""},
{"lineNum":"  386","line":"#endif // _LIBCPP___FUNCTIONAL_BIND_H"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 1, "covered" : 0,};
var merged_data = [];
