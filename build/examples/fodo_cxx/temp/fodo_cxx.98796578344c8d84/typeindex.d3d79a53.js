var data = {lines:[
{"lineNum":"    1","line":"// -*- C++ -*-"},
{"lineNum":"    2","line":"//===-------------------------- typeindex ---------------------------------===//"},
{"lineNum":"    3","line":"//"},
{"lineNum":"    4","line":"// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions."},
{"lineNum":"    5","line":"// See https://llvm.org/LICENSE.txt for license information."},
{"lineNum":"    6","line":"// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception"},
{"lineNum":"    7","line":"//"},
{"lineNum":"    8","line":"//===----------------------------------------------------------------------===//"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"#ifndef _LIBCPP_TYPEINDEX"},
{"lineNum":"   11","line":"#define _LIBCPP_TYPEINDEX"},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"/*"},
{"lineNum":"   14","line":""},
{"lineNum":"   15","line":"    typeindex synopsis"},
{"lineNum":"   16","line":""},
{"lineNum":"   17","line":"namespace std"},
{"lineNum":"   18","line":"{"},
{"lineNum":"   19","line":""},
{"lineNum":"   20","line":"class type_index"},
{"lineNum":"   21","line":"{"},
{"lineNum":"   22","line":"public:"},
{"lineNum":"   23","line":"    type_index(const type_info& rhs) noexcept;"},
{"lineNum":"   24","line":""},
{"lineNum":"   25","line":"    bool operator==(const type_index& rhs) const noexcept;"},
{"lineNum":"   26","line":"    bool operator!=(const type_index& rhs) const noexcept;"},
{"lineNum":"   27","line":"    bool operator< (const type_index& rhs) const noexcept;"},
{"lineNum":"   28","line":"    bool operator<=(const type_index& rhs) const noexcept;"},
{"lineNum":"   29","line":"    bool operator> (const type_index& rhs) const noexcept;"},
{"lineNum":"   30","line":"    bool operator>=(const type_index& rhs) const noexcept;"},
{"lineNum":"   31","line":""},
{"lineNum":"   32","line":"    size_t hash_code() const noexcept;"},
{"lineNum":"   33","line":"    const char* name() const noexcept;"},
{"lineNum":"   34","line":"};"},
{"lineNum":"   35","line":""},
{"lineNum":"   36","line":"template <>"},
{"lineNum":"   37","line":"struct hash<type_index>"},
{"lineNum":"   38","line":"    : public unary_function<type_index, size_t>"},
{"lineNum":"   39","line":"{"},
{"lineNum":"   40","line":"    size_t operator()(type_index index) const noexcept;"},
{"lineNum":"   41","line":"};"},
{"lineNum":"   42","line":""},
{"lineNum":"   43","line":"}  // std"},
{"lineNum":"   44","line":""},
{"lineNum":"   45","line":"*/"},
{"lineNum":"   46","line":""},
{"lineNum":"   47","line":"#include <__config>"},
{"lineNum":"   48","line":"#include <__functional/unary_function.h>"},
{"lineNum":"   49","line":"#include <__functional_base>"},
{"lineNum":"   50","line":"#include <compare>"},
{"lineNum":"   51","line":"#include <typeinfo>"},
{"lineNum":"   52","line":""},
{"lineNum":"   53","line":"#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)"},
{"lineNum":"   54","line":"#pragma GCC system_header"},
{"lineNum":"   55","line":"#endif"},
{"lineNum":"   56","line":""},
{"lineNum":"   57","line":"_LIBCPP_BEGIN_NAMESPACE_STD"},
{"lineNum":"   58","line":""},
{"lineNum":"   59","line":"class _LIBCPP_TEMPLATE_VIS type_index"},
{"lineNum":"   60","line":"{"},
{"lineNum":"   61","line":"    const type_info* __t_;"},
{"lineNum":"   62","line":"public:"},
{"lineNum":"   63","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"   64","line":"    type_index(const type_info& __y) _NOEXCEPT : __t_(&__y) {}","class":"linePartCov","hits":"38","order":"14","possible_hits":"299",},
{"lineNum":"   65","line":""},
{"lineNum":"   66","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"   67","line":"    bool operator==(const type_index& __y) const _NOEXCEPT"},
{"lineNum":"   68","line":"        {return *__t_ == *__y.__t_;}","class":"linePartCov","hits":"31","order":"308","possible_hits":"479",},
{"lineNum":"   69","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"   70","line":"    bool operator!=(const type_index& __y) const _NOEXCEPT"},
{"lineNum":"   71","line":"        {return *__t_ != *__y.__t_;}"},
{"lineNum":"   72","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"   73","line":"    bool operator< (const type_index& __y) const _NOEXCEPT"},
{"lineNum":"   74","line":"        {return  __t_->before(*__y.__t_);}","class":"linePartCov","hits":"12","order":"346","possible_hits":"215",},
{"lineNum":"   75","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"   76","line":"    bool operator<=(const type_index& __y) const _NOEXCEPT"},
{"lineNum":"   77","line":"        {return !__y.__t_->before(*__t_);}"},
{"lineNum":"   78","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"   79","line":"    bool operator> (const type_index& __y) const _NOEXCEPT"},
{"lineNum":"   80","line":"        {return  __y.__t_->before(*__t_);}"},
{"lineNum":"   81","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"   82","line":"    bool operator>=(const type_index& __y) const _NOEXCEPT"},
{"lineNum":"   83","line":"        {return !__t_->before(*__y.__t_);}"},
{"lineNum":"   84","line":""},
{"lineNum":"   85","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"   86","line":"    size_t hash_code() const _NOEXCEPT {return __t_->hash_code();}"},
{"lineNum":"   87","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"   88","line":"    const char* name() const _NOEXCEPT {return __t_->name();}"},
{"lineNum":"   89","line":"};"},
{"lineNum":"   90","line":""},
{"lineNum":"   91","line":"template <class _Tp> struct _LIBCPP_TEMPLATE_VIS hash;"},
{"lineNum":"   92","line":""},
{"lineNum":"   93","line":"template <>"},
{"lineNum":"   94","line":"struct _LIBCPP_TEMPLATE_VIS hash<type_index>"},
{"lineNum":"   95","line":"    : public unary_function<type_index, size_t>"},
{"lineNum":"   96","line":"{"},
{"lineNum":"   97","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"   98","line":"    size_t operator()(type_index __index) const _NOEXCEPT"},
{"lineNum":"   99","line":"        {return __index.hash_code();}"},
{"lineNum":"  100","line":"};"},
{"lineNum":"  101","line":""},
{"lineNum":"  102","line":"_LIBCPP_END_NAMESPACE_STD"},
{"lineNum":"  103","line":""},
{"lineNum":"  104","line":"#endif // _LIBCPP_TYPEINDEX"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 3, "covered" : 3,};
var merged_data = [];
