var data = {lines:[
{"lineNum":"    1","line":"/*"},
{"lineNum":"    2","line":"//@HEADER"},
{"lineNum":"    3","line":"// ************************************************************************"},
{"lineNum":"    4","line":"//"},
{"lineNum":"    5","line":"//                        Kokkos v. 3.0"},
{"lineNum":"    6","line":"//       Copyright (2020) National Technology & Engineering"},
{"lineNum":"    7","line":"//               Solutions of Sandia, LLC (NTESS)."},
{"lineNum":"    8","line":"//"},
{"lineNum":"    9","line":"// Under the terms of Contract DE-NA0003525 with NTESS,"},
{"lineNum":"   10","line":"// the U.S. Government retains certain rights in this software."},
{"lineNum":"   11","line":"//"},
{"lineNum":"   12","line":"// Redistribution and use in source and binary forms, with or without"},
{"lineNum":"   13","line":"// modification, are permitted provided that the following conditions are"},
{"lineNum":"   14","line":"// met:"},
{"lineNum":"   15","line":"//"},
{"lineNum":"   16","line":"// 1. Redistributions of source code must retain the above copyright"},
{"lineNum":"   17","line":"// notice, this list of conditions and the following disclaimer."},
{"lineNum":"   18","line":"//"},
{"lineNum":"   19","line":"// 2. Redistributions in binary form must reproduce the above copyright"},
{"lineNum":"   20","line":"// notice, this list of conditions and the following disclaimer in the"},
{"lineNum":"   21","line":"// documentation and/or other materials provided with the distribution."},
{"lineNum":"   22","line":"//"},
{"lineNum":"   23","line":"// 3. Neither the name of the Corporation nor the names of the"},
{"lineNum":"   24","line":"// contributors may be used to endorse or promote products derived from"},
{"lineNum":"   25","line":"// this software without specific prior written permission."},
{"lineNum":"   26","line":"//"},
{"lineNum":"   27","line":"// THIS SOFTWARE IS PROVIDED BY NTESS \"AS IS\" AND ANY"},
{"lineNum":"   28","line":"// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE"},
{"lineNum":"   29","line":"// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR"},
{"lineNum":"   30","line":"// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL NTESS OR THE"},
{"lineNum":"   31","line":"// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,"},
{"lineNum":"   32","line":"// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,"},
{"lineNum":"   33","line":"// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR"},
{"lineNum":"   34","line":"// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF"},
{"lineNum":"   35","line":"// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING"},
{"lineNum":"   36","line":"// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS"},
{"lineNum":"   37","line":"// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."},
{"lineNum":"   38","line":"//"},
{"lineNum":"   39","line":"// Questions? Contact Christian R. Trott (crtrott@sandia.gov)"},
{"lineNum":"   40","line":"//"},
{"lineNum":"   41","line":"// ************************************************************************"},
{"lineNum":"   42","line":"//@HEADER"},
{"lineNum":"   43","line":"*/"},
{"lineNum":"   44","line":""},
{"lineNum":"   45","line":"#include <Kokkos_Macros.hpp>"},
{"lineNum":"   46","line":"#if defined(KOKKOS_ACTIVE_EXECUTION_MEMORY_SPACE_HOST)"},
{"lineNum":"   47","line":""},
{"lineNum":"   48","line":"#include <Kokkos_Atomic.hpp>"},
{"lineNum":"   49","line":"#include <impl/Kokkos_Spinwait.hpp>"},
{"lineNum":"   50","line":"#include <impl/Kokkos_BitOps.hpp>"},
{"lineNum":"   51","line":""},
{"lineNum":"   52","line":"#include <thread>"},
{"lineNum":"   53","line":"#if defined(_WIN32)"},
{"lineNum":"   54","line":"#include <process.h>"},
{"lineNum":"   55","line":"#include <winsock2.h>"},
{"lineNum":"   56","line":"#include <windows.h>"},
{"lineNum":"   57","line":"#endif"},
{"lineNum":"   58","line":""},
{"lineNum":"   59","line":"/*--------------------------------------------------------------------------*/"},
{"lineNum":"   60","line":""},
{"lineNum":"   61","line":"namespace Kokkos {"},
{"lineNum":"   62","line":"namespace Impl {"},
{"lineNum":"   63","line":""},
{"lineNum":"   64","line":"void host_thread_yield(const uint32_t i, const WaitMode mode) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   65","line":"  static constexpr uint32_t sleep_limit = 1 << 13;"},
{"lineNum":"   66","line":"  static constexpr uint32_t yield_limit = 1 << 12;"},
{"lineNum":"   67","line":""},
{"lineNum":"   68","line":"  const int c = Kokkos::log2(i);"},
{"lineNum":"   69","line":""},
{"lineNum":"   70","line":"  if (WaitMode::ROOT != mode) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   71","line":"    if (sleep_limit < i) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   72","line":"      // Attempt to put the thread to sleep for \'c\' microseconds"},
{"lineNum":"   73","line":"      std::this_thread::yield();"},
{"lineNum":"   74","line":"      std::this_thread::sleep_for(std::chrono::microseconds(c));"},
{"lineNum":"   75","line":"    }"},
{"lineNum":"   76","line":""},
{"lineNum":"   77","line":"    else if (mode == WaitMode::PASSIVE || yield_limit < i) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   78","line":"      // Attempt to yield thread resources to runtime"},
{"lineNum":"   79","line":"      std::this_thread::yield();"},
{"lineNum":"   80","line":"    }"},
{"lineNum":"   81","line":"#if defined(KOKKOS_ENABLE_ASM)"},
{"lineNum":"   82","line":""},
{"lineNum":"   83","line":"    else if ((1u << 4) < i) {"},
{"lineNum":"   84","line":""},
{"lineNum":"   85","line":"      // Insert a few no-ops to quiet the thread:"},
{"lineNum":"   86","line":""},
{"lineNum":"   87","line":"      for (int k = 0; k < c; ++k) {"},
{"lineNum":"   88","line":"#if defined(__amd64) || defined(__amd64__) || defined(__x86_64) || \\"},
{"lineNum":"   89","line":"    defined(__x86_64__)"},
{"lineNum":"   90","line":"#if !defined(_WIN32) /* IS NOT Microsoft Windows */"},
{"lineNum":"   91","line":"        asm volatile(\"nop\\n\");"},
{"lineNum":"   92","line":"#else"},
{"lineNum":"   93","line":"        __asm__ __volatile__(\"nop\\n\");"},
{"lineNum":"   94","line":"#endif"},
{"lineNum":"   95","line":"#elif defined(__PPC64__)"},
{"lineNum":"   96","line":"        asm volatile(\"nop\\n\");"},
{"lineNum":"   97","line":"#endif"},
{"lineNum":"   98","line":"      }"},
{"lineNum":"   99","line":"    }"},
{"lineNum":"  100","line":"#endif /* defined( KOKKOS_ENABLE_ASM ) */"},
{"lineNum":"  101","line":"  }"},
{"lineNum":"  102","line":"#if defined(KOKKOS_ENABLE_ASM)"},
{"lineNum":"  103","line":"  else if ((1u << 3) < i) {"},
{"lineNum":"  104","line":"    // no-ops for root thread"},
{"lineNum":"  105","line":"    for (int k = 0; k < c; ++k) {"},
{"lineNum":"  106","line":"#if defined(__amd64) || defined(__amd64__) || defined(__x86_64) || \\"},
{"lineNum":"  107","line":"    defined(__x86_64__)"},
{"lineNum":"  108","line":"#if !defined(_WIN32) /* IS NOT Microsoft Windows */"},
{"lineNum":"  109","line":"      asm volatile(\"nop\\n\");"},
{"lineNum":"  110","line":"#else"},
{"lineNum":"  111","line":"      __asm__ __volatile__(\"nop\\n\");"},
{"lineNum":"  112","line":"#endif"},
{"lineNum":"  113","line":"#elif defined(__PPC64__)"},
{"lineNum":"  114","line":"      asm volatile(\"nop\\n\");"},
{"lineNum":"  115","line":"#endif"},
{"lineNum":"  116","line":"    }"},
{"lineNum":"  117","line":"  }"},
{"lineNum":"  118","line":""},
{"lineNum":"  119","line":"  {"},
{"lineNum":"  120","line":"    // Insert memory pause"},
{"lineNum":"  121","line":"#if defined(__amd64) || defined(__amd64__) || defined(__x86_64) || \\"},
{"lineNum":"  122","line":"    defined(__x86_64__)"},
{"lineNum":"  123","line":"#if !defined(_WIN32) /* IS NOT Microsoft Windows */"},
{"lineNum":"  124","line":"    asm volatile(\"pause\\n\" ::: \"memory\");"},
{"lineNum":"  125","line":"#else"},
{"lineNum":"  126","line":"    __asm__ __volatile__(\"pause\\n\" ::: \"memory\");"},
{"lineNum":"  127","line":"#endif"},
{"lineNum":"  128","line":"#elif defined(__PPC64__)"},
{"lineNum":"  129","line":"    asm volatile(\"or 27, 27, 27\" ::: \"memory\");"},
{"lineNum":"  130","line":"#endif"},
{"lineNum":"  131","line":"  }"},
{"lineNum":"  132","line":""},
{"lineNum":"  133","line":"#endif /* defined( KOKKOS_ENABLE_ASM ) */"},
{"lineNum":"  134","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  135","line":""},
{"lineNum":"  136","line":"}  // namespace Impl"},
{"lineNum":"  137","line":"}  // namespace Kokkos"},
{"lineNum":"  138","line":""},
{"lineNum":"  139","line":"#else"},
{"lineNum":"  140","line":"void KOKKOS_CORE_SRC_IMPL_SPINWAIT_PREVENT_LINK_ERROR() {}"},
{"lineNum":"  141","line":"#endif"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:41", "instrumented" : 5, "covered" : 0,};
var merged_data = [];
