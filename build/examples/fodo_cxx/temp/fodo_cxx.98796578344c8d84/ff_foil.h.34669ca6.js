var data = {lines:[
{"lineNum":"    1","line":"#ifndef FF_FOIL_H"},
{"lineNum":"    2","line":"#define FF_FOIL_H"},
{"lineNum":"    3","line":""},
{"lineNum":"    4","line":"#include <Kokkos_Random.hpp>"},
{"lineNum":"    5","line":""},
{"lineNum":"    6","line":"#include \"synergia/libFF/ff_algorithm.h\""},
{"lineNum":"    7","line":"#include \"synergia/utils/simple_timer.h\""},
{"lineNum":"    8","line":""},
{"lineNum":"    9","line":"namespace foil_impl"},
{"lineNum":"   10","line":"{"},
{"lineNum":"   11","line":"    KOKKOS_INLINE_FUNCTION"},
{"lineNum":"   12","line":"    double get_a()"},
{"lineNum":"   13","line":"    {"},
{"lineNum":"   14","line":"        return 12.01;"},
{"lineNum":"   15","line":"    }"},
{"lineNum":"   16","line":""},
{"lineNum":"   17","line":"    KOKKOS_INLINE_FUNCTION"},
{"lineNum":"   18","line":"    double get_z()"},
{"lineNum":"   19","line":"    {"},
{"lineNum":"   20","line":"        return 6.0;"},
{"lineNum":"   21","line":"    }"},
{"lineNum":"   22","line":""},
{"lineNum":"   23","line":"    KOKKOS_INLINE_FUNCTION"},
{"lineNum":"   24","line":"    double get_rho()"},
{"lineNum":"   25","line":"    {"},
{"lineNum":"   26","line":"        //return 3.52e3;"},
{"lineNum":"   27","line":"        return 2.27e3;"},
{"lineNum":"   28","line":"    }"},
{"lineNum":"   29","line":""},
{"lineNum":"   30","line":"    KOKKOS_INLINE_FUNCTION"},
{"lineNum":"   31","line":"    double get_elastic_crosssection(double E)"},
{"lineNum":"   32","line":"    {"},
{"lineNum":"   33","line":"        const double energy[59] = {.0005, .001, .0015, 0.002, .0025, .003, 0.0035, .004, .0045, 0.005, .0055, .006, 0.0065, .007, .0075, 0.008, .009, .01, 0.011, .012, .013, 0.014, .015, .0175, 0.02, .0225, .025, .030, 0.035, .040, .045, .050, .0510, .055, .060, .070, .080, .090, .100, .110, .120, .140, .160, .180, .200, .225, .250, .275, .300, .325, .350, .375, .400, .500, .700, 1.000, 1.500, 2.000, 2.500};"},
{"lineNum":"   34","line":""},
{"lineNum":"   35","line":"        const double z6_elastic[59] = {0., 0., 0., 0., 0., 0.321, 0.335, 0.349, 0.363, 0.377, 0.386, 0.395, 0.404, 0.413, 0.423,0.434, 0.456, 0.479, 0.509, 0.539, 0.569, 0.598, 0.628, 0.685, 0.743, 0.783, 0.822, 0.878, 0.915, 0.938, 0.813, 0.688, 0.678, 0.641, 0.594, 0.515, 0.448, 0.392, 0.345, 0.305, 0.272, 0.214, 0.167, 0.138, 0.117, 0.098, 0.085, 0.077, .072, 0.068, 0.067, 0.066, 0.067, 0.077, 0.09, 0.102, 0.108, 0.114, 0.113};"},
{"lineNum":"   36","line":""},
{"lineNum":"   37","line":"        double energytracker = 0.0;"},
{"lineNum":"   38","line":"        int ilow = 57;"},
{"lineNum":"   39","line":"        for(int i=0; i<58; i++)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   40","line":"        {"},
{"lineNum":"   41","line":"            if(E <= energy[i+1])","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   42","line":"            {"},
{"lineNum":"   43","line":"                ilow = i;"},
{"lineNum":"   44","line":"                break;"},
{"lineNum":"   45","line":"            }"},
{"lineNum":"   46","line":"        }"},
{"lineNum":"   47","line":""},
{"lineNum":"   48","line":"        const double* ec = z6_elastic;"},
{"lineNum":"   49","line":""},
{"lineNum":"   50","line":"        double efrac = (E - energy[ilow]) / (energy[ilow + 1] - energy[ilow]);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   51","line":"        double cross_section = ec[ilow] + efrac*(ec[ilow + 1] - ec[ilow]);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   52","line":"        return cross_section;"},
{"lineNum":"   53","line":"    }"},
{"lineNum":"   54","line":""},
{"lineNum":"   55","line":"    KOKKOS_INLINE_FUNCTION"},
{"lineNum":"   56","line":"    double get_inelastic_crosssection(double E)"},
{"lineNum":"   57","line":"    {"},
{"lineNum":"   58","line":"        const double energy[59] = {.0005, .001, .0015, 0.002, .0025, .003, 0.0035, .004, .0045, 0.005, .0055, .006, 0.0065, .007, .0075, 0.008, .009, .01, 0.011, .012, .013, 0.014, .015, .0175, 0.02, .0225, .025, .030, 0.035, .040, .045, .050, .0510, .055, .060, .070, .080, .090, .100, .110, .120, .140, .160, .180, .200, .225, .250, .275, .300, .325, .350, .375, .400, .500, .700, 1.000, 1.500, 2.000, 2.500};"},
{"lineNum":"   59","line":""},
{"lineNum":"   60","line":"        const double z6_inelastic[59] = {0., 0., 0., 0., 0., 0., 0., 0., 0., 0.013, 0.078, 0.131, 0.175, 0.212, 0.244, 0.271, 0.314, 0.346, 0.370, 0.389, 0.403, 0.413, 0.421, 0.432, 0.434, 0.432, 0.427, 0.412, 0.394, 0.376, 0.359, 0.344, 0.288, 0.281, 0.272, 0.257, 0.245, 0.235, 0.228, 0.223, 0.220, 0.223, 0.213, 0.212, 0.212, 0.212, 0.213, 0.214, 0.216, 0.217, 0.219, 0.221, 0.223, 0.229, 0.246, 0.261, 0.261, 0.257, 0.255};"},
{"lineNum":"   61","line":""},
{"lineNum":"   62","line":"\t\tdouble energytracker = 0.0;"},
{"lineNum":"   63","line":"\t\tint ilow = 57;"},
{"lineNum":"   64","line":"\t\tfor(int i=0; i<58; i++)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   65","line":"        {"},
{"lineNum":"   66","line":"            if(E <= energy[i+1])","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   67","line":"            {"},
{"lineNum":"   68","line":"                ilow = i;"},
{"lineNum":"   69","line":"                break;"},
{"lineNum":"   70","line":"            }"},
{"lineNum":"   71","line":"        }"},
{"lineNum":"   72","line":""},
{"lineNum":"   73","line":"        const double* ic = z6_inelastic;"},
{"lineNum":"   74","line":""},
{"lineNum":"   75","line":"\t\tdouble efrac = (E - energy[ilow]) / (energy[ilow + 1] - energy[ilow]);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   76","line":"\t\tdouble cross_section = ic[ilow] + efrac*(ic[ilow + 1] - ic[ilow]);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   77","line":"\t\treturn cross_section;"},
{"lineNum":"   78","line":"    }"},
{"lineNum":"   79","line":""},
{"lineNum":"   80","line":""},
{"lineNum":"   81","line":"    KOKKOS_INLINE_FUNCTION"},
{"lineNum":"   82","line":"    double get_direction(double xp, double yp, double dpop)"},
{"lineNum":"   83","line":"    {"},
{"lineNum":"   84","line":"        double xpfac = xp / (1.0+dpop);","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   85","line":"        double ypfac = yp / (1.0+dpop);","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   86","line":""},
{"lineNum":"   87","line":"        return sqrt(1.0 + xpfac*xpfac + ypfac*ypfac);","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   88","line":"    }"},
{"lineNum":"   89","line":""},
{"lineNum":"   90","line":"    KOKKOS_INLINE_FUNCTION"},
{"lineNum":"   91","line":"    double get_beta(double dpop, double pref, double m)"},
{"lineNum":"   92","line":"    {"},
{"lineNum":"   93","line":"        double p = (dpop + 1.0) * pref;","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   94","line":"        double E2 = p*p + m*m;","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   95","line":"        double beta = sqrt((E2 - m*m)/E2);","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   96","line":"        return beta;"},
{"lineNum":"   97","line":"    }"},
{"lineNum":"   98","line":""},
{"lineNum":"   99","line":"    KOKKOS_INLINE_FUNCTION"},
{"lineNum":"  100","line":"    double get_p(double dpop, double pref)"},
{"lineNum":"  101","line":"    {"},
{"lineNum":"  102","line":"        return (dpop+1.0)*pref;"},
{"lineNum":"  103","line":"    }"},
{"lineNum":"  104","line":""},
{"lineNum":"  105","line":"    KOKKOS_INLINE_FUNCTION"},
{"lineNum":"  106","line":"    double ion_energy_loss(double beta, double z, double a)"},
{"lineNum":"  107","line":"    {"},
{"lineNum":"  108","line":"        double dE, gamma, T_max, m_e=.511, M=938.27, I, arg;"},
{"lineNum":"  109","line":""},
{"lineNum":"  110","line":"        I = z*10.;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  111","line":"        gamma = 1/sqrt(1-beta*beta);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  112","line":"        T_max = 1e6 * (2*m_e*beta*beta*gamma*gamma) /","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  113","line":"                      (1 + 2*gamma*m_e/M + pow(m_e/M, 2.0));","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  114","line":"        arg = 2*(m_e*1e6)*beta*beta*gamma*gamma*T_max/(I*I);","class":"lineNoCov","hits":"0","possible_hits":"8",},
{"lineNum":"  115","line":"        dE = 0.307075*z/a/(beta*beta)*(log(arg)/2.0 - beta*beta);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  116","line":""},
{"lineNum":"  117","line":"        //Unit conversion from MeV/(g/cm^2) to GeV/(kg/m^2)"},
{"lineNum":"  118","line":"        dE /= 10000;"},
{"lineNum":"  119","line":""},
{"lineNum":"  120","line":"        return dE;"},
{"lineNum":"  121","line":"    }"},
{"lineNum":"  122","line":""},
{"lineNum":"  123","line":"    KOKKOS_INLINE_FUNCTION"},
{"lineNum":"  124","line":"    void mcs_jackson("},
{"lineNum":"  125","line":"            Kokkos::Random_XorShift64_Pool<>::generator_type& rand_gen,"},
{"lineNum":"  126","line":"            double& x, double& px, double& y, double& py, double dpop, double beta,"},
{"lineNum":"  127","line":"            double stepsize, double z, double a, double rho)"},
{"lineNum":"  128","line":"    {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  129","line":"        const double elementary_charge_CGS = 4.8032068e-10;"},
{"lineNum":"  130","line":""},
{"lineNum":"  131","line":"        //Convert to mm and mrad for this routine.\tAnd density to g/cm3"},
{"lineNum":"  132","line":"        x *= 1000.0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  133","line":"        y *= 1000.0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  134","line":"        px *= 1000.0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  135","line":"        py *= 1000.0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  136","line":"        stepsize *= 1000.0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  137","line":"        rho /= 1000.0;"},
{"lineNum":"  138","line":""},
{"lineNum":"  139","line":"        double pfac = dpop + 1.0;"},
{"lineNum":"  140","line":""},
{"lineNum":"  141","line":"        double pi = mconstants::pi;"},
{"lineNum":"  142","line":"        double cvel = pconstants::c * 100.0;"},
{"lineNum":"  143","line":"        double eesu = elementary_charge_CGS;"},
{"lineNum":"  144","line":"        double hbar = 1.05443e-27;"},
{"lineNum":"  145","line":"        double AMU = 1.65979e-24;"},
{"lineNum":"  146","line":"        double aBohr = 5.29172e-09;"},
{"lineNum":"  147","line":"        double AP = 1.007593;"},
{"lineNum":"  148","line":"        double gamma = 1.0 / sqrt(1.0 - beta * beta);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  149","line":""},
{"lineNum":"  150","line":"        double aMax = 1.4 * aBohr / pow(z, 0.333333);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  151","line":"        double aMin = 1.4e-13 * pow(a, 0.333333);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  152","line":""},
{"lineNum":"  153","line":"        double N = rho / (a * AMU);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  154","line":""},
{"lineNum":"  155","line":"        double T = stepsize / 10.0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  156","line":""},
{"lineNum":"  157","line":"        double pmom = gamma * beta * cvel * AP * AMU;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  158","line":""},
{"lineNum":"  159","line":"        double thMin = hbar / (pmom * aMax);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  160","line":"        double thMax = hbar / (pmom * aMin);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  161","line":""},
{"lineNum":"  162","line":"        double thMin2i = 1.0 / (thMin * thMin);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  163","line":"        double thMax2i = 1.0 / (thMax * thMax);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  164","line":"        double th2iDiff = thMin2i - thMax2i;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  165","line":""},
{"lineNum":"  166","line":"        double th2s = 2.0 * log(thMax / thMin) / th2iDiff;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  167","line":"        double coeff = 2.0 * z * eesu * eesu / (pmom * beta * cvel);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  168","line":""},
{"lineNum":"  169","line":"        double sigTot = pi * coeff * coeff * th2iDiff;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  170","line":"        double nColl = N * T * sigTot;"},
{"lineNum":"  171","line":""},
{"lineNum":"  172","line":"        double th2Tot = nColl * th2s;"},
{"lineNum":"  173","line":""},
{"lineNum":"  174","line":"        //double probrp = Random::ran1(idum);"},
{"lineNum":"  175","line":"        //double probxy = 2.0 * pi * Random::ran1(idum);"},
{"lineNum":"  176","line":"        double probrp = rand_gen.drand();"},
{"lineNum":"  177","line":"        double probxy = 2.0 * pi * rand_gen.drand();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  178","line":""},
{"lineNum":"  179","line":"        double angle = sqrt(-th2Tot * log(probrp));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  180","line":"        double anglexMCS = angle * cos(probxy);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  181","line":"        double angleyMCS = angle * sin(probxy);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  182","line":""},
{"lineNum":"  183","line":"        double xpfac = px / (1000.* pfac);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  184","line":"        double ypfac = py / (1000.* pfac);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  185","line":""},
{"lineNum":"  186","line":"        double anglex = atan(xpfac) + anglexMCS;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  187","line":"        double angley = atan(ypfac) + angleyMCS;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  188","line":""},
{"lineNum":"  189","line":"        double tanglex = tan(anglex);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  190","line":"        double tangley = tan(angley);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  191","line":""},
{"lineNum":"  192","line":"        px = tanglex * (1000.* pfac);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  193","line":"        py = tangley * (1000.* pfac);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  194","line":""},
{"lineNum":"  195","line":"        double directionfac = sqrt(1.0 + xpfac * xpfac + ypfac * ypfac);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  196","line":"        double zstep = stepsize / directionfac;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  197","line":"        x += zstep * (xpfac + tanglex) / 2.0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  198","line":"        y += zstep * (ypfac + tangley) / 2.0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  199","line":""},
{"lineNum":"  200","line":"        //Convert back to m and rad."},
{"lineNum":"  201","line":"        x /= 1000.0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  202","line":"        y /= 1000.0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  203","line":"        px /= 1000.0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  204","line":"        py /= 1000.0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  205","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  206","line":""},
{"lineNum":"  207","line":"    // returns true if the particle is lost"},
{"lineNum":"  208","line":"    KOKKOS_INLINE_FUNCTION"},
{"lineNum":"  209","line":"    bool take_step("},
{"lineNum":"  210","line":"            Kokkos::Random_XorShift64_Pool<>::generator_type& rand_gen,"},
{"lineNum":"  211","line":"            double& x, double& xp, double& y, double& yp, double& dpop,"},
{"lineNum":"  212","line":"            double pref, double m, double z, double a, double density, double stepsize )"},
{"lineNum":"  213","line":"    {"},
{"lineNum":"  214","line":"        double beta = get_beta(dpop, pref, m);"},
{"lineNum":"  215","line":"        double pfac = dpop + 1.0;"},
{"lineNum":"  216","line":"        double p = pfac * pref;"},
{"lineNum":"  217","line":"        double E = sqrt(p*p + m*m);"},
{"lineNum":"  218","line":""},
{"lineNum":"  219","line":"        mcs_jackson(rand_gen, x, xp, y, yp, dpop, beta,","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  220","line":"                stepsize, z, a, density);"},
{"lineNum":"  221","line":""},
{"lineNum":"  222","line":"        double dE = ion_energy_loss(beta, z, a);"},
{"lineNum":"  223","line":""},
{"lineNum":"  224","line":"        // factors for units m->cm and MeV->GeV"},
{"lineNum":"  225","line":"        dE = -dE * density * stepsize;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  226","line":""},
{"lineNum":"  227","line":"        // dp/pref"},
{"lineNum":"  228","line":"        dpop = sqrt((E+dE) * (E+dE) - m*m) / pref - 1.0;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  229","line":""},
{"lineNum":"  230","line":"        // lost or not"},
{"lineNum":"  231","line":"        return (E+dE) < 0.02 ? true : false;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  232","line":"    }"},
{"lineNum":"  233","line":""},
{"lineNum":"  234","line":""},
{"lineNum":"  235","line":"    KOKKOS_INLINE_FUNCTION"},
{"lineNum":"  236","line":"    double ruth_scatt_jackson("},
{"lineNum":"  237","line":"            Kokkos::Random_XorShift64_Pool<>::generator_type& rand_gen,"},
{"lineNum":"  238","line":"            double stepsize, double z, double a, double rho, double beta, bool trackit,"},
{"lineNum":"  239","line":"            double pfac, double& thetax, double& thetay)"},
{"lineNum":"  240","line":"    {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  241","line":"        const double elementary_charge_CGS = 4.8032068e-10;"},
{"lineNum":"  242","line":""},
{"lineNum":"  243","line":"        stepsize *= 1000.0; //Convert to mm","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  244","line":"        rho /= 1000.0;\t\t//Convert to g/cm3","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  245","line":""},
{"lineNum":"  246","line":"        double theta[2];"},
{"lineNum":"  247","line":"        theta[0] = 0.0;"},
{"lineNum":"  248","line":"        theta[1] = 0.0;"},
{"lineNum":"  249","line":""},
{"lineNum":"  250","line":"        double pi = mconstants::pi;"},
{"lineNum":"  251","line":"        double cvel = pconstants::c * 100.0;"},
{"lineNum":"  252","line":"        double eesu = elementary_charge_CGS;"},
{"lineNum":"  253","line":"        double hbar = 1.05443e-27;"},
{"lineNum":"  254","line":"        double AMU = 1.65979e-24;"},
{"lineNum":"  255","line":"        double aBohr = 5.29172e-09;"},
{"lineNum":"  256","line":"        double AP = 1.007593;"},
{"lineNum":"  257","line":"        double gamma = 1.0 / sqrt(1.0 - beta * beta);","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  258","line":""},
{"lineNum":"  259","line":"        double aMax = 1.4 * aBohr / pow(z, 0.333333);","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  260","line":"        double aMin = 1.4e-13 * pow(a, 0.333333);","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  261","line":""},
{"lineNum":"  262","line":"        double N = rho / (a * AMU);","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  263","line":"        double T = stepsize / 10.0;","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  264","line":""},
{"lineNum":"  265","line":"        double pmom = gamma * beta * cvel * AP * AMU;","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  266","line":""},
{"lineNum":"  267","line":"        double thMin = hbar / (pmom * aMax);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  268","line":"        double thMax = hbar / (pmom * aMin);","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  269","line":""},
{"lineNum":"  270","line":"        double thMin2i = 1.0 / (thMin * thMin);","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  271","line":"        double thMax2i = 1.0 / (thMax * thMax);"},
{"lineNum":"  272","line":"        double th2iDiff = thMin2i - thMax2i;"},
{"lineNum":"  273","line":""},
{"lineNum":"  274","line":"        double th2s = 2.0 * log(thMax / thMin) / th2iDiff;","class":"lineNoCov","hits":"0","possible_hits":"7",},
{"lineNum":"  275","line":"        double coeff = 2.0 * z * eesu * eesu / (pmom * beta * cvel);","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  276","line":""},
{"lineNum":"  277","line":"        double sigTot = pi * coeff * coeff * th2iDiff;","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  278","line":""},
{"lineNum":"  279","line":"        double nColl = N * T * sigTot;","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  280","line":""},
{"lineNum":"  281","line":"        double th2Tot = nColl * th2s;","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  282","line":""},
{"lineNum":"  283","line":"        if(thMin < (2.0 * sqrt(th2Tot))) thMin = 2.0 * sqrt(th2Tot);","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  284","line":""},
{"lineNum":"  285","line":"        thMin2i = 1.0 / (thMin * thMin);","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  286","line":"        th2iDiff = thMin2i - thMax2i;","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  287","line":"        double rcross = 1.e+24 * pi * coeff * coeff * th2iDiff;","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  288","line":""},
{"lineNum":"  289","line":"        if(rcross < 0.0) rcross = 0.0;","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  290","line":""},
{"lineNum":"  291","line":"        thMin *= 1.4;"},
{"lineNum":"  292","line":"        thMin2i = 1.0 / (thMin * thMin);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  293","line":"        th2iDiff = thMin2i - thMax2i;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  294","line":""},
{"lineNum":"  295","line":"        if(trackit)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  296","line":"        {"},
{"lineNum":"  297","line":"            double thx = 0.0;"},
{"lineNum":"  298","line":"            double thy = 0.0;"},
{"lineNum":"  299","line":""},
{"lineNum":"  300","line":"            if(thMin < thMax)"},
{"lineNum":"  301","line":"            {"},
{"lineNum":"  302","line":"                //double probrp = Random::ran1(idum);"},
{"lineNum":"  303","line":"                //double probxy = 2.0 * pi * Random::ran1(idum);"},
{"lineNum":"  304","line":"                double probrp = rand_gen.drand();"},
{"lineNum":"  305","line":"                double probxy = 2.0 * pi * rand_gen.drand();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  306","line":""},
{"lineNum":"  307","line":"                double denom2 = probrp * th2iDiff + thMax2i;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  308","line":"                double th = sqrt(1.0 / denom2);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  309","line":""},
{"lineNum":"  310","line":"                thx = th * cos(probxy);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  311","line":"                thy = th * sin(probxy);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  312","line":"            }"},
{"lineNum":"  313","line":"            theta[0] = thx;"},
{"lineNum":"  314","line":"            theta[1] = thy;"},
{"lineNum":"  315","line":"        }"},
{"lineNum":"  316","line":""},
{"lineNum":"  317","line":"        return rcross;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  318","line":"    }"},
{"lineNum":"  319","line":""},
{"lineNum":"  320","line":"    KOKKOS_INLINE_FUNCTION"},
{"lineNum":"  321","line":"    void momentum_kick("},
{"lineNum":"  322","line":"            Kokkos::Random_XorShift64_Pool<>::generator_type& rand_gen,"},
{"lineNum":"  323","line":"            double t, double p, double& dpx, double& dpy)"},
{"lineNum":"  324","line":"    {"},
{"lineNum":"  325","line":"        double va, vb, va2, vb2, r2=10., theta;"},
{"lineNum":"  326","line":"        //long idum = -(unsigned)time(0);"},
{"lineNum":"  327","line":"        theta = acos(1 - t/(2*p*p));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  328","line":"        double dp[2] = {0.0, 0.0};"},
{"lineNum":"  329","line":""},
{"lineNum":"  330","line":"        while(r2 > 1.)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  331","line":"        {"},
{"lineNum":"  332","line":"            //va=2.*Random::ran1(idum)-1;"},
{"lineNum":"  333","line":"            //vb=Random::ran1(idum)-1;"},
{"lineNum":"  334","line":"            va = 2.0*rand_gen.drand()-1;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  335","line":"            vb = rand_gen.drand()-1;"},
{"lineNum":"  336","line":""},
{"lineNum":"  337","line":"            va2 = va*va;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  338","line":"            vb2 = vb*vb;"},
{"lineNum":"  339","line":"            r2 = va2+vb2;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  340","line":"        }"},
{"lineNum":"  341","line":""},
{"lineNum":"  342","line":"        dp[0] = theta * (2.*va*vb)/r2;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  343","line":"        dp[1] = theta * (va2 - vb2)/r2;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  344","line":"        dpx = dp[0];"},
{"lineNum":"  345","line":"        dpy = dp[1];"},
{"lineNum":"  346","line":"    }"},
{"lineNum":"  347","line":""},
{"lineNum":"  348","line":"    KOKKOS_INLINE_FUNCTION"},
{"lineNum":"  349","line":"    double bessj0(double x)"},
{"lineNum":"  350","line":"    {"},
{"lineNum":"  351","line":"        const double"},
{"lineNum":"  352","line":"        P1=1.0, P2=-0.1098628627E-2, P3=0.2734510407E-4, P4=-0.2073370639E-5, P5= 0.2093887211E-6,"},
{"lineNum":"  353","line":"        Q1=-0.1562499995E-1, Q2= 0.1430488765E-3, Q3=-0.6911147651E-5, Q4= 0.7621095161E-6, Q5=-0.9349451520E-7,"},
{"lineNum":"  354","line":"        R1= 57568490574.0, R2=-13362590354.0, R3=651619640.7, R4=-11214424.18, R5= 77392.33017, R6=-184.9052456,"},
{"lineNum":"  355","line":"        S1= 57568490411.0, S2=1029532985.0, S3=9494680.718, S4= 59272.64853, S5=267.8532712, S6=1.0;"},
{"lineNum":"  356","line":""},
{"lineNum":"  357","line":"        double AX,FR,FS,Z,FP,FQ,XX,Y, TMP;"},
{"lineNum":"  358","line":""},
{"lineNum":"  359","line":"        if (x==0.0) return 1.0;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  360","line":""},
{"lineNum":"  361","line":"        AX = fabs(x);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  362","line":"        if (AX < 8.0) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  363","line":"            Y = x*x;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  364","line":"            FR = R1+Y*(R2+Y*(R3+Y*(R4+Y*(R5+Y*R6))));","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  365","line":"            FS = S1+Y*(S2+Y*(S3+Y*(S4+Y*(S5+Y*S6))));"},
{"lineNum":"  366","line":"            TMP = FR/FS;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  367","line":"        }"},
{"lineNum":"  368","line":"        else {"},
{"lineNum":"  369","line":"            Z = 8./AX;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  370","line":"            Y = Z*Z;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  371","line":"            XX = AX-0.785398164;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  372","line":"            FP = P1+Y*(P2+Y*(P3+Y*(P4+Y*P5)));","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  373","line":"            FQ = Q1+Y*(Q2+Y*(Q3+Y*(Q4+Y*Q5)));"},
{"lineNum":"  374","line":"            TMP = sqrt(0.636619772/AX)*(FP*cos(XX)-Z*FQ*sin(XX));","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  375","line":"        }"},
{"lineNum":"  376","line":""},
{"lineNum":"  377","line":"        return TMP;"},
{"lineNum":"  378","line":"    }"},
{"lineNum":"  379","line":""},
{"lineNum":"  380","line":""},
{"lineNum":"  381","line":"    KOKKOS_INLINE_FUNCTION"},
{"lineNum":"  382","line":"\tdouble BSign(double X, double Y) {"},
{"lineNum":"  383","line":"\t\tif (Y<0.0) return (-fabs(X));"},
{"lineNum":"  384","line":"\t\telse return (fabs(X));"},
{"lineNum":"  385","line":"\t}"},
{"lineNum":"  386","line":""},
{"lineNum":"  387","line":"    KOKKOS_INLINE_FUNCTION"},
{"lineNum":"  388","line":"    double bessj1(double X)"},
{"lineNum":"  389","line":"    {"},
{"lineNum":"  390","line":"        const double"},
{"lineNum":"  391","line":"            P1=1.0, P2=0.183105E-2, P3=-0.3516396496E-4, P4=0.2457520174E-5,"},
{"lineNum":"  392","line":"            P5=-0.240337019E-6,  P6=0.636619772,"},
{"lineNum":"  393","line":"            Q1= 0.04687499995, Q2=-0.2002690873E-3, Q3=0.8449199096E-5,"},
{"lineNum":"  394","line":"            Q4=-0.88228987E-6, Q5= 0.105787412E-6,"},
{"lineNum":"  395","line":"            R1= 72362614232.0, R2=-7895059235.0, R3=242396853.1,"},
{"lineNum":"  396","line":"            R4=-2972611.439,   R5=15704.48260,  R6=-30.16036606,"},
{"lineNum":"  397","line":"            S1=144725228442.0, S2=2300535178.0, S3=18583304.74,"},
{"lineNum":"  398","line":"            S4=99447.43394,    S5=376.9991397,  S6=1.0;"},
{"lineNum":"  399","line":""},
{"lineNum":"  400","line":"          double AX,FR,FS,Y,Z,FP,FQ,XX, TMP;"},
{"lineNum":"  401","line":""},
{"lineNum":"  402","line":"            AX = fabs(X);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  403","line":"            if (AX < 8.0) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  404","line":"                Y = X*X;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  405","line":"                FR = R1+Y*(R2+Y*(R3+Y*(R4+Y*(R5+Y*R6))));","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  406","line":"                FS = S1+Y*(S2+Y*(S3+Y*(S4+Y*(S5+Y*S6))));"},
{"lineNum":"  407","line":"                TMP = X*(FR/FS);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  408","line":"            }"},
{"lineNum":"  409","line":"            else {"},
{"lineNum":"  410","line":"                Z = 8.0/AX;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  411","line":"                Y = Z*Z;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  412","line":"                XX = AX-2.35619491;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  413","line":"                FP = P1+Y*(P2+Y*(P3+Y*(P4+Y*P5)));","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  414","line":"                FQ = Q1+Y*(Q2+Y*(Q3+Y*(Q4+Y*Q5)));"},
{"lineNum":"  415","line":"                TMP = sqrt(P6/AX)*(cos(XX)*FP-Z*sin(XX)*FQ)*BSign(S6,X);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  416","line":"            }"},
{"lineNum":"  417","line":"          return TMP;"},
{"lineNum":"  418","line":""},
{"lineNum":"  419","line":"    }"},
{"lineNum":"  420","line":""},
{"lineNum":"  421","line":"    KOKKOS_INLINE_FUNCTION"},
{"lineNum":"  422","line":"    double elastic_t("},
{"lineNum":"  423","line":"            Kokkos::Random_XorShift64_Pool<>::generator_type& rand_gen,"},
{"lineNum":"  424","line":"            double p, double a)"},
{"lineNum":"  425","line":"    {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  426","line":"        double c = pconstants::c;"},
{"lineNum":"  427","line":"        double PI = mconstants::pi;"},
{"lineNum":"  428","line":""},
{"lineNum":"  429","line":"        int found=0;"},
{"lineNum":"  430","line":"        double R, lamda, E, u, sig, cnorm, theta;"},
{"lineNum":"  431","line":"        double random, f_x, x=0., angle_cm=0.;"},
{"lineNum":"  432","line":"        double M_nuc, E_cm, p_cm, m=.938, h=4.135e-15/1e9;"},
{"lineNum":"  433","line":"        double t=0.;"},
{"lineNum":"  434","line":""},
{"lineNum":"  435","line":"        M_nuc = a*.931494;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  436","line":"        E=sqrt(p*p + m*m);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  437","line":"        E_cm = sqrt(m*m + M_nuc*M_nuc + 2*E*M_nuc);             //See PDG.","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  438","line":"        p_cm = p*M_nuc/E_cm;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  439","line":"        lamda = h*c/p_cm;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  440","line":"        R = 1.4e-15 * pow(a, 1./3.) + lamda;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  441","line":"        u = 2*R/lamda*sin(PI/2);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  442","line":"        theta = 0.0001;"},
{"lineNum":"  443","line":""},
{"lineNum":"  444","line":"        cnorm = 1./2.*(sqrt(PI)-sqrt(PI)*pow(bessj0(u),2)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  445","line":"                       -sqrt(PI)*pow(bessj1(u),2))/(sqrt(PI));","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  446","line":""},
{"lineNum":"  447","line":"        //random = Random::ran1(idum);"},
{"lineNum":"  448","line":"        random = rand_gen.drand();"},
{"lineNum":"  449","line":""},
{"lineNum":"  450","line":"        while(theta<=PI)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  451","line":"        {"},
{"lineNum":"  452","line":"            x = 2.*R*sin(theta/2.)/lamda;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  453","line":"            f_x=1./2./cnorm*(sqrt(PI)-sqrt(PI)*pow(bessj0(x),2)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  454","line":"                             -sqrt(PI)*pow(bessj1(x),2))/(sqrt(PI)) - random;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  455","line":"            if( (f_x > -.01) && (f_x < .01) )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  456","line":"            {"},
{"lineNum":"  457","line":"                angle_cm = theta;"},
{"lineNum":"  458","line":"                theta = PI+1.;"},
{"lineNum":"  459","line":"                found=1;"},
{"lineNum":"  460","line":"            }"},
{"lineNum":"  461","line":"            theta+=1.768e-3;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  462","line":"        }"},
{"lineNum":"  463","line":""},
{"lineNum":"  464","line":"        //if(found==0) cout<<\"Warning, never found elastic t.\\n\";"},
{"lineNum":"  465","line":"        t=2.*p_cm*p_cm*(1. - cos(angle_cm));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  466","line":"        return t;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  467","line":"    }"},
{"lineNum":"  468","line":""},
{"lineNum":"  469","line":""},
{"lineNum":"  470","line":"    template<class BP>"},
{"lineNum":"  471","line":"    struct PropFoilFullScatter","class":"lineNoCov","hits":"0","possible_hits":"5",},
{"lineNum":"  472","line":"    {"},
{"lineNum":"  473","line":"\t    const double nAvogadro = 6.022045e23;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  474","line":""},
{"lineNum":"  475","line":"        Kokkos::Random_XorShift64_Pool<> rand_pool;"},
{"lineNum":"  476","line":""},
{"lineNum":"  477","line":"        typename BP::parts_t parts;"},
{"lineNum":"  478","line":"        typename BP::masks_t masks;"},
{"lineNum":"  479","line":""},
{"lineNum":"  480","line":"        int ma_;"},
{"lineNum":"  481","line":""},
{"lineNum":"  482","line":"        double xmin;"},
{"lineNum":"  483","line":"        double xmax;"},
{"lineNum":"  484","line":"        double ymin;"},
{"lineNum":"  485","line":"        double ymax;"},
{"lineNum":"  486","line":""},
{"lineNum":"  487","line":"        double pref;"},
{"lineNum":"  488","line":"        double m;"},
{"lineNum":"  489","line":""},
{"lineNum":"  490","line":"        double z;"},
{"lineNum":"  491","line":"        double a;"},
{"lineNum":"  492","line":"        double density;"},
{"lineNum":"  493","line":"        double b_pN;"},
{"lineNum":"  494","line":""},
{"lineNum":"  495","line":"        double length;"},
{"lineNum":"  496","line":"        double dlength;"},
{"lineNum":"  497","line":""},
{"lineNum":"  498","line":"        //karray1d_dev stat;"},
{"lineNum":"  499","line":""},
{"lineNum":"  500","line":"        KOKKOS_INLINE_FUNCTION"},
{"lineNum":"  501","line":"        PropFoilFullScatter(int seed,"},
{"lineNum":"  502","line":"                typename BP::parts_t parts,"},
{"lineNum":"  503","line":"                typename BP::masks_t masks,"},
{"lineNum":"  504","line":"                double xmin, double xmax,"},
{"lineNum":"  505","line":"                double ymin, double ymax,"},
{"lineNum":"  506","line":"                double thick,"},
{"lineNum":"  507","line":"                double pref,"},
{"lineNum":"  508","line":"                double m)"},
{"lineNum":"  509","line":"        : rand_pool(seed)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  510","line":"        , parts(parts)"},
{"lineNum":"  511","line":"        , masks(masks)"},
{"lineNum":"  512","line":"        , ma_(0)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  513","line":"        , xmin(xmin)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  514","line":"        , xmax(xmax)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  515","line":"        , ymin(ymin)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  516","line":"        , ymax(ymax)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  517","line":"        , pref(pref)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  518","line":"        , m(m)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  519","line":"        , z(get_z(/*ma_*/))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  520","line":"        , a(get_a(/*ma_*/))"},
{"lineNum":"  521","line":"        , density(get_rho(/*ma_*/))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  522","line":"        , b_pN(14.5 * pow(a, 2.0/3.0))"},
{"lineNum":"  523","line":"        , length(thick / (1.0e5 * density))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  524","line":"        , dlength(length * 1.0e-4)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  525","line":"        //, stat(\"stat\", 3)"},
{"lineNum":"  526","line":"        {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  527","line":"        }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  528","line":""},
{"lineNum":"  529","line":"        KOKKOS_INLINE_FUNCTION"},
{"lineNum":"  530","line":"        bool check_foil_flag(double x, double y) const"},
{"lineNum":"  531","line":"        {"},
{"lineNum":"  532","line":"            return x>=xmin && x<=xmax && y>=ymin && y<=ymax;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  533","line":"        }"},
{"lineNum":"  534","line":""},
{"lineNum":"  535","line":"        KOKKOS_INLINE_FUNCTION"},
{"lineNum":"  536","line":"        void operator()(const int i) const"},
{"lineNum":"  537","line":"        {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  538","line":"            if (masks(i) == 0) return;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  539","line":""},
{"lineNum":"  540","line":"            auto x    = parts(i,0);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  541","line":"            auto xp   = parts(i,1);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  542","line":"            auto y    = parts(i,2);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  543","line":"            auto yp   = parts(i,3);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  544","line":"            auto dpop = parts(i,5);"},
{"lineNum":"  545","line":""},
{"lineNum":"  546","line":"            int step = 0;"},
{"lineNum":"  547","line":"            double zrl = length;"},
{"lineNum":"  548","line":"            bool foil_flag = check_foil_flag(x, y);"},
{"lineNum":"  549","line":""},
{"lineNum":"  550","line":"            if (!foil_flag)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  551","line":"            {"},
{"lineNum":"  552","line":"                // TODO: drift();"},
{"lineNum":"  553","line":"                return;"},
{"lineNum":"  554","line":"            }"},
{"lineNum":"  555","line":""},
{"lineNum":"  556","line":"#if 0"},
{"lineNum":"  557","line":"            std::cout << \"hit foil\\n\";"},
{"lineNum":"  558","line":"            std::cout << \"zrl = \" << zrl << \"\\n\";"},
{"lineNum":"  559","line":"#endif"},
{"lineNum":"  560","line":""},
{"lineNum":"  561","line":"            // random number"},
{"lineNum":"  562","line":"            Kokkos::Random_XorShift64_Pool<>::generator_type"},
{"lineNum":"  563","line":"                rand_gen = rand_pool.get_state();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  564","line":""},
{"lineNum":"  565","line":"            while(zrl>0)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  566","line":"            {"},
{"lineNum":"  567","line":"                //nHits++;"},
{"lineNum":"  568","line":"                double directionfac = get_direction(xp, yp, dpop);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  569","line":"                double rl = zrl * directionfac;"},
{"lineNum":"  570","line":""},
{"lineNum":"  571","line":"                double beta = get_beta(dpop, pref, m);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  572","line":""},
{"lineNum":"  573","line":"                double pfac = 1.0 + dpop;"},
{"lineNum":"  574","line":"                double p = (dpop+1.0)*pref;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  575","line":"                double E = sqrt(p*p + m*m);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  576","line":""},
{"lineNum":"  577","line":"                double ecross = get_elastic_crosssection(E);"},
{"lineNum":"  578","line":"                double icross = get_inelastic_crosssection(E);"},
{"lineNum":"  579","line":""},
{"lineNum":"  580","line":"                double meanfreepath = 0.0;"},
{"lineNum":"  581","line":"                double stepsize = 0.0;"},
{"lineNum":"  582","line":""},
{"lineNum":"  583","line":"                if(step == 0)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  584","line":"                {"},
{"lineNum":"  585","line":"                    //If first step, do an iteration with ecross and icross to"},
{"lineNum":"  586","line":"                    //get first stepsize and first rcross"},
{"lineNum":"  587","line":"                    step++;"},
{"lineNum":"  588","line":"                    double totcross = icross + ecross;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  589","line":"                    meanfreepath = a / ((nAvogadro * 1e3) * density * (totcross * 1.0e-28));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  590","line":"                    //stepsize = -meanfreepath * log(Random::ran1(idum));"},
{"lineNum":"  591","line":"                    stepsize = -meanfreepath * log(rand_gen.drand());","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  592","line":""},
{"lineNum":"  593","line":"#if 0"},
{"lineNum":"  594","line":"                    std::cout << \"step 0\\n\";"},
{"lineNum":"  595","line":"                    std::cout << \"  meanfreepath = \" << meanfreepath"},
{"lineNum":"  596","line":"                        << \", stepsize = \" << stepsize << \"\\n\";"},
{"lineNum":"  597","line":"#endif"},
{"lineNum":"  598","line":"                }"},
{"lineNum":"  599","line":""},
{"lineNum":"  600","line":"                double thetax = 0.0;"},
{"lineNum":"  601","line":"                double thetay = 0.0;"},
{"lineNum":"  602","line":""},
{"lineNum":"  603","line":"                double rcross = ruth_scatt_jackson("},
{"lineNum":"  604","line":"                        rand_gen, stepsize, z, a, density,","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  605","line":"                        beta, false, pfac, thetax, thetay);"},
{"lineNum":"  606","line":""},
{"lineNum":"  607","line":"                double totcross = ecross + icross + rcross;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  608","line":""},
{"lineNum":"  609","line":"#if 0"},
{"lineNum":"  610","line":"                std::cout << \"E = \" << E"},
{"lineNum":"  611","line":"                    << \", ecross = \" << ecross"},
{"lineNum":"  612","line":"                    << \", icross = \" << icross"},
{"lineNum":"  613","line":"                    << \", rcross = \" << rcross"},
{"lineNum":"  614","line":"                    << \", rl = \" << rl"},
{"lineNum":"  615","line":"                    << \"\\n\";"},
{"lineNum":"  616","line":"#endif"},
{"lineNum":"  617","line":""},
{"lineNum":"  618","line":"                meanfreepath = a / ((nAvogadro * 1e3) * density  * (totcross * 1.0e-28));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  619","line":"                //stepsize = -meanfreepath * log(Random::ran1(idum));"},
{"lineNum":"  620","line":"                stepsize = -meanfreepath * log(rand_gen.drand());","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  621","line":""},
{"lineNum":"  622","line":"#if 0"},
{"lineNum":"  623","line":"                std::cout << \"  meanfreepath = \" << meanfreepath"},
{"lineNum":"  624","line":"                    << \", stepsize = \" << stepsize << \"\\n\";"},
{"lineNum":"  625","line":"#endif"},
{"lineNum":"  626","line":""},
{"lineNum":"  627","line":""},
{"lineNum":"  628","line":"                if(stepsize > rl)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  629","line":"                {"},
{"lineNum":"  630","line":"                    //Take the step but no nuclear scattering event"},
{"lineNum":"  631","line":"                    stepsize = rl + dlength;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  632","line":""},
{"lineNum":"  633","line":"                    if (take_step(rand_gen, x, xp, y, yp, dpop,","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  634","line":"                                pref, m, z, a, density, stepsize))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  635","line":"                    {"},
{"lineNum":"  636","line":"                        foil_flag = false;"},
{"lineNum":"  637","line":"                        zrl = -1.0;"},
{"lineNum":"  638","line":""},
{"lineNum":"  639","line":"                        // 0xff is marked locally when a particle is"},
{"lineNum":"  640","line":"                        // lost during the foil scattering"},
{"lineNum":"  641","line":"                        masks(i) = 0xff;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  642","line":"                    }"},
{"lineNum":"  643","line":"                    else"},
{"lineNum":"  644","line":"                    {"},
{"lineNum":"  645","line":"                        double directionfac = get_direction(xp, yp, dpop);"},
{"lineNum":"  646","line":"                        zrl -= stepsize / directionfac;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  647","line":"                        rl = zrl * directionfac;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  648","line":"                        foil_flag = check_foil_flag(x, y);"},
{"lineNum":"  649","line":"                    }"},
{"lineNum":"  650","line":"                }"},
{"lineNum":"  651","line":""},
{"lineNum":"  652","line":"                if(stepsize <= rl)","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  653","line":"                {"},
{"lineNum":"  654","line":"                    //Kokkos::atomic_increment(&stat(0));"},
{"lineNum":"  655","line":""},
{"lineNum":"  656","line":"                    //Take the step and allow nuclear scatter"},
{"lineNum":"  657","line":"                    if (take_step(rand_gen, x, xp, y, yp, dpop,","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  658","line":"                                pref, m, z, a, density, stepsize))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  659","line":"                    {"},
{"lineNum":"  660","line":"                        foil_flag = false;"},
{"lineNum":"  661","line":"                        zrl = -1.0;"},
{"lineNum":"  662","line":"                        masks(i) = 0xff;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  663","line":"                    }"},
{"lineNum":"  664","line":"                    else"},
{"lineNum":"  665","line":"                    {"},
{"lineNum":"  666","line":"                        double directionfac = get_direction(xp, yp, dpop);"},
{"lineNum":"  667","line":"                        zrl -= stepsize / directionfac;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  668","line":"                        rl = zrl * directionfac;"},
{"lineNum":"  669","line":"                        foil_flag = check_foil_flag(x, y);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  670","line":"                    }"},
{"lineNum":"  671","line":""},
{"lineNum":"  672","line":"                    //If it still exists after MCS and energy loss, nuclear scatter"},
{"lineNum":"  673","line":"                    if(foil_flag==1 && zrl > 0)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  674","line":"                    {"},
{"lineNum":"  675","line":"                        beta = get_beta(dpop, pref, m);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  676","line":""},
{"lineNum":"  677","line":"                        pfac = 1.0 + dpop;"},
{"lineNum":"  678","line":""},
{"lineNum":"  679","line":"                        p = (dpop+1.0)*pref;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  680","line":"                        E = sqrt(p*p + m*m);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  681","line":""},
{"lineNum":"  682","line":"                        ecross = get_elastic_crosssection(E);"},
{"lineNum":"  683","line":"                        icross = get_inelastic_crosssection(E);"},
{"lineNum":"  684","line":""},
{"lineNum":"  685","line":"                        double thx;"},
{"lineNum":"  686","line":"                        double thy;"},
{"lineNum":"  687","line":""},
{"lineNum":"  688","line":"                        rcross = ruth_scatt_jackson("},
{"lineNum":"  689","line":"                                rand_gen, stepsize, z, a, density,","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  690","line":"                                beta, false, pfac, thx, thy);"},
{"lineNum":"  691","line":""},
{"lineNum":"  692","line":"                        totcross = ecross + icross + rcross;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  693","line":""},
{"lineNum":"  694","line":"                        double e_frac = ecross/totcross;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  695","line":"                        double i_frac = icross/totcross;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  696","line":"                        double r_frac = rcross/totcross;"},
{"lineNum":"  697","line":""},
{"lineNum":"  698","line":"#if 0"},
{"lineNum":"  699","line":"                        std::cout << \"efrac = \" << e_frac"},
{"lineNum":"  700","line":"                            << \", ifrac = \" << e_frac"},
{"lineNum":"  701","line":"                            << \", rfrac = \" << r_frac"},
{"lineNum":"  702","line":"                            << \"\\n\";"},
{"lineNum":"  703","line":"#endif"},
{"lineNum":"  704","line":""},
{"lineNum":"  705","line":"                        //choice = Random::ran1(idum);"},
{"lineNum":"  706","line":"                        double choice = rand_gen.drand();"},
{"lineNum":"  707","line":""},
{"lineNum":"  708","line":"                        // Nuclear Elastic Scattering"},
{"lineNum":"  709","line":"                        if((choice >= 0.) && (choice <= e_frac))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  710","line":"                        {"},
{"lineNum":"  711","line":"                            //Kokkos::atomic_increment(&stat(1));"},
{"lineNum":"  712","line":"                            //std::cout << \"elastic\\n\";"},
{"lineNum":"  713","line":""},
{"lineNum":"  714","line":"                            double t = 0.0;"},
{"lineNum":"  715","line":""},
{"lineNum":"  716","line":"                            if (E <= 0.4)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  717","line":"                            {"},
{"lineNum":"  718","line":"                                t = elastic_t(rand_gen, p, a);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  719","line":"                            }"},
{"lineNum":"  720","line":"                            else"},
{"lineNum":"  721","line":"                            {"},
{"lineNum":"  722","line":"                                //t=-log(Random::ran1(idum))/b_pN;"},
{"lineNum":"  723","line":"                                t = -log(rand_gen.drand())/b_pN;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  724","line":"                            }"},
{"lineNum":"  725","line":""},
{"lineNum":"  726","line":"                            double dp_x;"},
{"lineNum":"  727","line":"                            double dp_y;"},
{"lineNum":"  728","line":""},
{"lineNum":"  729","line":"                            momentum_kick(rand_gen, t, p, dp_x, dp_y);"},
{"lineNum":"  730","line":""},
{"lineNum":"  731","line":"                            parts(i, 1) += dp_x * pfac;","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  732","line":"                            parts(i, 3) += dp_y * pfac;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  733","line":"                        }"},
{"lineNum":"  734","line":""},
{"lineNum":"  735","line":"                        // Rutherford Coulomb scattering"},
{"lineNum":"  736","line":"                        if((choice > e_frac) && (choice <= (1 - i_frac)))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  737","line":"                        {"},
{"lineNum":"  738","line":"                            //Kokkos::atomic_increment(&stat(2));"},
{"lineNum":"  739","line":"                            //std::cout << \"coulomb\\n\";"},
{"lineNum":"  740","line":""},
{"lineNum":"  741","line":"                            rcross = ruth_scatt_jackson(","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  742","line":"                                    rand_gen, stepsize, z, a, density,","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  743","line":"                                    beta, true, pfac, thx, thy);"},
{"lineNum":"  744","line":""},
{"lineNum":"  745","line":"                            double xpfac = xp / pfac;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  746","line":"                            double ypfac = yp / pfac;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  747","line":""},
{"lineNum":"  748","line":"                            double anglex = atan(xpfac) + thx;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  749","line":"                            double angley = atan(ypfac) + thy;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  750","line":""},
{"lineNum":"  751","line":"                            parts(i, 1) = tan(anglex) * pfac;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  752","line":"                            parts(i, 3) = tan(angley) * pfac;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  753","line":"                        }"},
{"lineNum":"  754","line":""},
{"lineNum":"  755","line":"                        // Nuclear Inelastic absorption"},
{"lineNum":"  756","line":"                        if( (choice > (1.-i_frac)) && (choice <= 1.))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  757","line":"                        {"},
{"lineNum":"  758","line":"                            //Kokkos::atomic_increment(&stat(3));"},
{"lineNum":"  759","line":"                            //std::cout << \"absorb\\n\";"},
{"lineNum":"  760","line":""},
{"lineNum":"  761","line":"                            foil_flag = false;"},
{"lineNum":"  762","line":"                            zrl = -1.0;"},
{"lineNum":"  763","line":"                            masks(i) = 0xff;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  764","line":"                        }"},
{"lineNum":"  765","line":"                    }"},
{"lineNum":"  766","line":"                }"},
{"lineNum":"  767","line":""},
{"lineNum":"  768","line":"            } // end of while(zrl>0)"},
{"lineNum":"  769","line":""},
{"lineNum":"  770","line":"            rand_pool.free_state(rand_gen);"},
{"lineNum":"  771","line":""},
{"lineNum":"  772","line":"        } // end of operator()","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  773","line":""},
{"lineNum":"  774","line":"    };"},
{"lineNum":"  775","line":""},
{"lineNum":"  776","line":""},
{"lineNum":"  777","line":"    template<class BP>"},
{"lineNum":"  778","line":"    struct PropFoilSimpleScatter","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  779","line":"    {"},
{"lineNum":"  780","line":"        Kokkos::Random_XorShift64_Pool<> rand_pool;"},
{"lineNum":"  781","line":""},
{"lineNum":"  782","line":"        typename BP::parts_t parts;"},
{"lineNum":"  783","line":"        typename BP::masks_t masks;"},
{"lineNum":"  784","line":""},
{"lineNum":"  785","line":"        const int ma_;"},
{"lineNum":"  786","line":""},
{"lineNum":"  787","line":"        double xmin;"},
{"lineNum":"  788","line":"        double xmax;"},
{"lineNum":"  789","line":"        double ymin;"},
{"lineNum":"  790","line":"        double ymax;"},
{"lineNum":"  791","line":""},
{"lineNum":"  792","line":"        double length;"},
{"lineNum":"  793","line":"        double theta_scat_min;"},
{"lineNum":"  794","line":"        double lscatter;"},
{"lineNum":"  795","line":""},
{"lineNum":"  796","line":"        //karray1d_dev stat;"},
{"lineNum":"  797","line":""},
{"lineNum":"  798","line":"        KOKKOS_INLINE_FUNCTION"},
{"lineNum":"  799","line":"        PropFoilSimpleScatter(int seed,"},
{"lineNum":"  800","line":"                typename BP::parts_t parts,"},
{"lineNum":"  801","line":"                typename BP::masks_t masks,"},
{"lineNum":"  802","line":"                double xmin, double xmax,"},
{"lineNum":"  803","line":"                double ymin, double ymax,"},
{"lineNum":"  804","line":"                double thick,"},
{"lineNum":"  805","line":"                double theta_scat_min,"},
{"lineNum":"  806","line":"                double lscatter)"},
{"lineNum":"  807","line":"        : rand_pool(seed)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  808","line":"        , parts(parts)"},
{"lineNum":"  809","line":"        , masks(masks)"},
{"lineNum":"  810","line":"        , ma_(0)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  811","line":"        , xmin(xmin)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  812","line":"        , xmax(xmax)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  813","line":"        , ymin(ymin)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  814","line":"        , ymax(ymax)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  815","line":"        , length(thick / (1.0e3 * get_rho(/*ma_*/)))","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  816","line":"        , theta_scat_min(theta_scat_min)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  817","line":"        , lscatter(lscatter)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  818","line":"        //, stat(\"stat\", 101)"},
{"lineNum":"  819","line":"        {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  820","line":"        }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  821","line":""},
{"lineNum":"  822","line":"        KOKKOS_INLINE_FUNCTION"},
{"lineNum":"  823","line":"        bool check_foil_flag(double x, double y) const"},
{"lineNum":"  824","line":"        {"},
{"lineNum":"  825","line":"            return x>=xmin && x<=xmax && y>=ymin && y<=ymax;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  826","line":"        }"},
{"lineNum":"  827","line":""},
{"lineNum":"  828","line":"        KOKKOS_INLINE_FUNCTION"},
{"lineNum":"  829","line":"        void operator()(const int i) const"},
{"lineNum":"  830","line":"        {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  831","line":"            if (masks(i) == 0) return;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  832","line":""},
{"lineNum":"  833","line":"            auto x = parts(i,0);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  834","line":"            auto y = parts(i,2);"},
{"lineNum":"  835","line":""},
{"lineNum":"  836","line":"            bool foil_flag = check_foil_flag(x, y);"},
{"lineNum":"  837","line":""},
{"lineNum":"  838","line":"            if (!foil_flag)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  839","line":"                return;"},
{"lineNum":"  840","line":""},
{"lineNum":"  841","line":"            //If in the foil, tally the hit and start tracking"},
{"lineNum":"  842","line":"            double zrl = length;  // distance remaining in foil in cm//","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  843","line":"            double thetaX = 0.;"},
{"lineNum":"  844","line":"            double thetaY = 0.;"},
{"lineNum":"  845","line":""},
{"lineNum":"  846","line":"            // random number"},
{"lineNum":"  847","line":"            Kokkos::Random_XorShift64_Pool<>::generator_type"},
{"lineNum":"  848","line":"                rand_gen = rand_pool.get_state();"},
{"lineNum":"  849","line":""},
{"lineNum":"  850","line":"            // Generate interaction points until particle exits foil"},
{"lineNum":"  851","line":"            while (zrl >= 0.0)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  852","line":"            {"},
{"lineNum":"  853","line":"                //random1 = Random::ran1(idum);"},
{"lineNum":"  854","line":"                double random1 = rand_gen.drand();"},
{"lineNum":"  855","line":""},
{"lineNum":"  856","line":"                zrl += lscatter * log(random1);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  857","line":"                if(zrl < 0.0) break; // exit foil","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  858","line":""},
{"lineNum":"  859","line":"                // Generate random angles"},
{"lineNum":"  860","line":"                //random1 = Random::ran1(idum);"},
{"lineNum":"  861","line":"                random1 = rand_gen.drand();"},
{"lineNum":"  862","line":"                double phi = 2*mconstants::pi * random1;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  863","line":""},
{"lineNum":"  864","line":"                //random1 = Random::ran1(idum);"},
{"lineNum":"  865","line":"                random1 = rand_gen.drand();"},
{"lineNum":"  866","line":"                double theta = theta_scat_min * sqrt(random1 / (1. - random1));","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  867","line":""},
{"lineNum":"  868","line":"                thetaX += theta * cos(phi);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  869","line":"                thetaY += theta * sin(phi);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  870","line":""},
{"lineNum":"  871","line":"#if 0"},
{"lineNum":"  872","line":"                //std::cout << theta*theta << \"\\n\";"},
{"lineNum":"  873","line":"                Kokkos::atomic_add(&stat(100), theta*theta);"},
{"lineNum":"  874","line":""},
{"lineNum":"  875","line":"                int bin = (int)(theta/0.1e-5);"},
{"lineNum":"  876","line":"                if (bin<100) Kokkos::atomic_increment(&stat(bin));"},
{"lineNum":"  877","line":"#endif"},
{"lineNum":"  878","line":"            }"},
{"lineNum":"  879","line":""},
{"lineNum":"  880","line":"            parts(i,1) += thetaX;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  881","line":"            parts(i,3) += thetaY;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  882","line":""},
{"lineNum":"  883","line":"            rand_pool.free_state(rand_gen);"},
{"lineNum":"  884","line":"        }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  885","line":"    };"},
{"lineNum":"  886","line":""},
{"lineNum":"  887","line":"    struct Foil_aperture"},
{"lineNum":"  888","line":"    {"},
{"lineNum":"  889","line":"        constexpr static const char *type = \"foil\";"},
{"lineNum":"  890","line":""},
{"lineNum":"  891","line":"        Foil_aperture()"},
{"lineNum":"  892","line":"        { }"},
{"lineNum":"  893","line":""},
{"lineNum":"  894","line":"        KOKKOS_INLINE_FUNCTION"},
{"lineNum":"  895","line":"        bool discard(ConstParticles const& parts,"},
{"lineNum":"  896","line":"                ConstParticleMasks const& masks, int p) const"},
{"lineNum":"  897","line":"        { return masks(p) == 0xff; }","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  898","line":"    };"},
{"lineNum":"  899","line":""},
{"lineNum":"  900","line":""},
{"lineNum":"  901","line":"}"},
{"lineNum":"  902","line":""},
{"lineNum":"  903","line":""},
{"lineNum":"  904","line":"namespace FF_foil"},
{"lineNum":"  905","line":"{"},
{"lineNum":"  906","line":"    template<class BunchT>"},
{"lineNum":"  907","line":"    inline void apply("},
{"lineNum":"  908","line":"            Lattice_element_slice const& slice, BunchT & bunch,"},
{"lineNum":"  909","line":"            typename std::enable_if<std::is_floating_point<typename BunchT::part_t>::value>::type* = 0)"},
{"lineNum":"  910","line":"    {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  911","line":"        using namespace foil_impl;"},
{"lineNum":"  912","line":""},
{"lineNum":"  913","line":"        scoped_simple_timer timer(\"libFF_foil\");"},
{"lineNum":"  914","line":""},
{"lineNum":"  915","line":"        //const double  length = slice.get_right() - slice.get_left();"},
{"lineNum":"  916","line":"        const double    mass = bunch.get_mass();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  917","line":""},
{"lineNum":"  918","line":"        // element"},
{"lineNum":"  919","line":"        auto const& ele = slice.get_lattice_element();"},
{"lineNum":"  920","line":""},
{"lineNum":"  921","line":"        const double xmin = ele.get_double_attribute(\"xmin\", 0.0);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  922","line":"        const double xmax = ele.get_double_attribute(\"xmax\", 0.0);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  923","line":"        const double ymin = ele.get_double_attribute(\"ymin\", 0.0);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  924","line":"        const double ymax = ele.get_double_attribute(\"ymax\", 0.0);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  925","line":""},
{"lineNum":"  926","line":"        const double thick = ele.get_double_attribute(\"thick\", 0.0);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  927","line":""},
{"lineNum":"  928","line":"        // use simple scatter or full scatter"},
{"lineNum":"  929","line":"        bool is_simple = false;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  930","line":"        const double simple = ele.get_double_attribute(\"simple\", 0);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  931","line":"        if (simple != 0) is_simple = true;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  932","line":""},
{"lineNum":"  933","line":"        // random seed"},
{"lineNum":"  934","line":"        const int seed = 123;"},
{"lineNum":"  935","line":""},
{"lineNum":"  936","line":"        // ref"},
{"lineNum":"  937","line":"        Reference_particle const& ref_b = bunch.get_reference_particle();"},
{"lineNum":"  938","line":"        const double pref = ref_b.get_momentum() * (1.0 + ref_b.get_state()[Bunch::dpop]);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  939","line":""},
{"lineNum":"  940","line":"        // propagate the bunch particles"},
{"lineNum":"  941","line":"        auto apply = [&](ParticleGroup pg) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  942","line":"            auto bp = bunch.get_bunch_particles(pg);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  943","line":"            if (!bp.num_valid()) return;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  944","line":""},
{"lineNum":"  945","line":"            using exec = typename BunchT::exec_space;"},
{"lineNum":"  946","line":"            auto range = Kokkos::RangePolicy<exec>(0, bp.size());","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  947","line":""},
{"lineNum":"  948","line":"            if (is_simple)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  949","line":"            {"},
{"lineNum":"  950","line":"                double BohrRadius=0.52917706e-8;  // hydrogenic Bohr radius in cm"},
{"lineNum":"  951","line":"                double hBar = 1.0545887e-27;      // Planck\'s constant in erg-sec"},
{"lineNum":"  952","line":"                double echarge = 4.803242e-10;    // in esu or statcoulombs"},
{"lineNum":"  953","line":"                double nAvogadro = 6.022045e23;"},
{"lineNum":"  954","line":"                double deg2Rad = 1.74532925e-2;"},
{"lineNum":"  955","line":"                double rhofoil = 2.265;"},
{"lineNum":"  956","line":"                double muScatter = 1.35;"},
{"lineNum":"  957","line":""},
{"lineNum":"  958","line":"                double length = thick / (1.0e3 * get_rho(/*ma_*/));","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  959","line":""},
{"lineNum":"  960","line":"                // Momentum in g*cm/sec"},
{"lineNum":"  961","line":"                double pInj0 = 1.6726e-22 * mass / pconstants::proton_mass *","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  962","line":"                    ref_b.get_beta() * ref_b.get_gamma() * pconstants::c;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  963","line":""},
{"lineNum":"  964","line":"                // Thomas-Fermi atom radius (cm):"},
{"lineNum":"  965","line":"                double TFRadius = muScatter *  BohrRadius *"},
{"lineNum":"  966","line":"                    pow(get_z(/*ma_*/), -0.33333);"},
{"lineNum":"  967","line":""},
{"lineNum":"  968","line":"                // Minimum scattering angle:"},
{"lineNum":"  969","line":"                double thetaScatMin =  hBar / (pInj0 * TFRadius);"},
{"lineNum":"  970","line":""},
{"lineNum":"  971","line":"                // Theta max as per Jackson (13.102)"},
{"lineNum":"  972","line":"                double thetaScatMax = 274.e5 * pconstants::electron_mass *"},
{"lineNum":"  973","line":"                    pconstants::c / (pInj0 * pow(get_a(/*ma_*/), 0.33333));"},
{"lineNum":"  974","line":""},
{"lineNum":"  975","line":"                double pv = 1.e2 * pInj0 * ref_b.get_beta() * pconstants::c;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  976","line":"                double term = get_z(/*ma_*/) * echarge * echarge / pv;"},
{"lineNum":"  977","line":"                double sigmacoul = 4*mconstants::pi * term * term /"},
{"lineNum":"  978","line":"                    (thetaScatMin * thetaScatMin);"},
{"lineNum":"  979","line":""},
{"lineNum":"  980","line":"                // Scattering area per area"},
{"lineNum":"  981","line":"                double nscatters = nAvogadro * (get_rho(/*ma_*/)/1000.0) /"},
{"lineNum":"  982","line":"                    get_a(/*ma_*/) * length * sigmacoul;"},
{"lineNum":"  983","line":""},
{"lineNum":"  984","line":"                // Mean free path"},
{"lineNum":"  985","line":"                double lscatter = length/nscatters;"},
{"lineNum":"  986","line":""},
{"lineNum":"  987","line":"                PropFoilSimpleScatter<typename BunchT::bp_t> psc(","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  988","line":"                        seed,"},
{"lineNum":"  989","line":"                        bp.parts, bp.masks,"},
{"lineNum":"  990","line":"                        xmin, xmax, ymin, ymax, thick, // geometry","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  991","line":"                        lscatter, thetaScatMin"},
{"lineNum":"  992","line":"                        );"},
{"lineNum":"  993","line":""},
{"lineNum":"  994","line":"                Kokkos::parallel_for(range, psc);"},
{"lineNum":"  995","line":"            }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  996","line":"            else"},
{"lineNum":"  997","line":"            {"},
{"lineNum":"  998","line":"                PropFoilFullScatter<typename BunchT::bp_t> pfc(","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  999","line":"                        seed,"},
{"lineNum":" 1000","line":"                        bp.parts, bp.masks,"},
{"lineNum":" 1001","line":"                        xmin, xmax, ymin, ymax, thick, // geometry","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 1002","line":"                        pref, mass","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 1003","line":"                        );"},
{"lineNum":" 1004","line":""},
{"lineNum":" 1005","line":"                Kokkos::parallel_for(range, pfc);"},
{"lineNum":" 1006","line":"            }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 1007","line":"        };","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 1008","line":""},
{"lineNum":" 1009","line":"        // apply"},
{"lineNum":" 1010","line":"        apply(ParticleGroup::regular);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1011","line":"        apply(ParticleGroup::spectator);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1012","line":""},
{"lineNum":" 1013","line":"        // advance the ref_part"},
{"lineNum":" 1014","line":"        //bunch.get_reference_particle().increment_trajectory(length);"},
{"lineNum":" 1015","line":""},
{"lineNum":" 1016","line":"        if (!is_simple)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1017","line":"        {"},
{"lineNum":" 1018","line":"            // aperture to fiter out all particles with mask value 0xff"},
{"lineNum":" 1019","line":"            // seems only happen in the full scatter"},
{"lineNum":" 1020","line":"            Foil_aperture ap;"},
{"lineNum":" 1021","line":"            int ndiscarded = bunch.apply_aperture(ap);"},
{"lineNum":" 1022","line":"            double charge = ndiscarded * bunch.get_real_num()","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1023","line":"                / bunch.get_total_num();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1024","line":"            slice.get_lattice_element().deposit_charge(charge);"},
{"lineNum":" 1025","line":"        }"},
{"lineNum":" 1026","line":""},
{"lineNum":" 1027","line":"        // fencing"},
{"lineNum":" 1028","line":"        Kokkos::fence();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1029","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1030","line":""},
{"lineNum":" 1031","line":"    // do nothing for trigons"},
{"lineNum":" 1032","line":"    template<class BunchT>"},
{"lineNum":" 1033","line":"    inline void apply("},
{"lineNum":" 1034","line":"            Lattice_element_slice const& slice, BunchT & bunch,"},
{"lineNum":" 1035","line":"            typename std::enable_if<is_trigon<typename BunchT::part_t>::value>::type* = 0)"},
{"lineNum":" 1036","line":"    {"},
{"lineNum":" 1037","line":"    }"},
{"lineNum":" 1038","line":""},
{"lineNum":" 1039","line":"}"},
{"lineNum":" 1040","line":""},
{"lineNum":" 1041","line":"#endif // FF_FOIL_H"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 283, "covered" : 0,};
var merged_data = [];
