var data = {lines:[
{"lineNum":"    1","line":"#include \"independent_stepper_elements.h\""},
{"lineNum":"    2","line":""},
{"lineNum":"    3","line":"std::vector<Step>"},
{"lineNum":"    4","line":"Independent_stepper_elements::apply_impl(Lattice const & lattice) const"},
{"lineNum":"    5","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"    6","line":"    if (steps_per_element < 1)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"    7","line":"    {"},
{"lineNum":"    8","line":"        throw std::runtime_error(","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"    9","line":"                \"Split_operator_stepper_elements: steps_per_element must be >= 1\");"},
{"lineNum":"   10","line":"    }"},
{"lineNum":"   11","line":""},
{"lineNum":"   12","line":"    std::vector<Step> steps;"},
{"lineNum":"   13","line":""},
{"lineNum":"   14","line":"    for (auto const & ele : lattice.get_elements())","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   15","line":"    {"},
{"lineNum":"   16","line":"        double length = ele.get_length();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"        //zero-length element"},
{"lineNum":"   19","line":"        if (length == 0.0)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   20","line":"        {"},
{"lineNum":"   21","line":"            steps.emplace_back(0.0);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   22","line":"            steps.back()"},
{"lineNum":"   23","line":"                .append_independent(\"step\", 1.0)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   24","line":"                .append_slice(ele);"},
{"lineNum":"   25","line":"        }"},
{"lineNum":"   26","line":"        else"},
{"lineNum":"   27","line":"        {"},
{"lineNum":"   28","line":"            double step_length = length / steps_per_element;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   29","line":""},
{"lineNum":"   30","line":"            for (int i = 0; i < steps_per_element; ++i)","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   31","line":"            {"},
{"lineNum":"   32","line":"                double left = i * step_length;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   33","line":"                double right = (i + 1) * step_length;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   34","line":""},
{"lineNum":"   35","line":"                steps.emplace_back(step_length);"},
{"lineNum":"   36","line":""},
{"lineNum":"   37","line":"                steps.back()"},
{"lineNum":"   38","line":"                    .append_independent(\"step\", 1.0)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   39","line":"                    .append_slice(ele, left, right);"},
{"lineNum":"   40","line":"            }"},
{"lineNum":"   41","line":"        }"},
{"lineNum":"   42","line":"    }"},
{"lineNum":"   43","line":""},
{"lineNum":"   44","line":"    return steps;"},
{"lineNum":"   45","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   46","line":""},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 14, "covered" : 0,};
var merged_data = [];
