var data = {lines:[
{"lineNum":"    1","line":"/*============================================================================="},
{"lineNum":"    2","line":"    Copyright (c) 2001-2011 Joel de Guzman"},
{"lineNum":"    3","line":""},
{"lineNum":"    4","line":"    Distributed under the Boost Software License, Version 1.0. (See accompanying"},
{"lineNum":"    5","line":"    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)"},
{"lineNum":"    6","line":"==============================================================================*/"},
{"lineNum":"    7","line":"#if !defined(FUSION_AT_IMPL_07172005_0726)"},
{"lineNum":"    8","line":"#define FUSION_AT_IMPL_07172005_0726"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"#include <boost/fusion/support/config.hpp>"},
{"lineNum":"   11","line":"#include <boost/fusion/support/detail/access.hpp>"},
{"lineNum":"   12","line":"#include <boost/type_traits/is_const.hpp>"},
{"lineNum":"   13","line":"#include <boost/type_traits/add_const.hpp>"},
{"lineNum":"   14","line":"#include <boost/mpl/if.hpp>"},
{"lineNum":"   15","line":"#include <boost/mpl/bool.hpp>"},
{"lineNum":"   16","line":""},
{"lineNum":"   17","line":"namespace boost { namespace fusion"},
{"lineNum":"   18","line":"{"},
{"lineNum":"   19","line":"    namespace detail"},
{"lineNum":"   20","line":"    {"},
{"lineNum":"   21","line":"        template <typename Cons>"},
{"lineNum":"   22","line":"        struct cons_deref"},
{"lineNum":"   23","line":"        {"},
{"lineNum":"   24","line":"            typedef typename Cons::car_type type;"},
{"lineNum":"   25","line":"        };"},
{"lineNum":"   26","line":""},
{"lineNum":"   27","line":"        template <typename Cons, int I>"},
{"lineNum":"   28","line":"        struct cons_advance"},
{"lineNum":"   29","line":"        {"},
{"lineNum":"   30","line":"            typedef typename"},
{"lineNum":"   31","line":"                cons_advance<Cons, I-1>::type::cdr_type"},
{"lineNum":"   32","line":"            type;"},
{"lineNum":"   33","line":"        };"},
{"lineNum":"   34","line":""},
{"lineNum":"   35","line":"        template <typename Cons>"},
{"lineNum":"   36","line":"        struct cons_advance<Cons, 0>"},
{"lineNum":"   37","line":"        {"},
{"lineNum":"   38","line":"            typedef Cons type;"},
{"lineNum":"   39","line":"        };"},
{"lineNum":"   40","line":""},
{"lineNum":"   41","line":"        template <typename Cons>"},
{"lineNum":"   42","line":"        struct cons_advance<Cons, 1>"},
{"lineNum":"   43","line":"        {"},
{"lineNum":"   44","line":"            typedef typename Cons::cdr_type type;"},
{"lineNum":"   45","line":"        };"},
{"lineNum":"   46","line":""},
{"lineNum":"   47","line":"        template <typename Cons>"},
{"lineNum":"   48","line":"        struct cons_advance<Cons, 2>"},
{"lineNum":"   49","line":"        {"},
{"lineNum":"   50","line":"#if BOOST_WORKAROUND(BOOST_MSVC, > 1400) // VC8 and above"},
{"lineNum":"   51","line":"            typedef typename Cons::cdr_type::cdr_type type;"},
{"lineNum":"   52","line":"#else"},
{"lineNum":"   53","line":"            typedef typename Cons::cdr_type _a;"},
{"lineNum":"   54","line":"            typedef typename _a::cdr_type type;"},
{"lineNum":"   55","line":"#endif"},
{"lineNum":"   56","line":"        };"},
{"lineNum":"   57","line":""},
{"lineNum":"   58","line":"        template <typename Cons>"},
{"lineNum":"   59","line":"        struct cons_advance<Cons, 3>"},
{"lineNum":"   60","line":"        {"},
{"lineNum":"   61","line":"#if BOOST_WORKAROUND(BOOST_MSVC, > 1400) // VC8 and above"},
{"lineNum":"   62","line":"            typedef typename Cons::cdr_type::cdr_type::cdr_type type;"},
{"lineNum":"   63","line":"#else"},
{"lineNum":"   64","line":"            typedef typename Cons::cdr_type _a;"},
{"lineNum":"   65","line":"            typedef typename _a::cdr_type _b;"},
{"lineNum":"   66","line":"            typedef typename _b::cdr_type type;"},
{"lineNum":"   67","line":"#endif"},
{"lineNum":"   68","line":"        };"},
{"lineNum":"   69","line":""},
{"lineNum":"   70","line":"        template <typename Cons>"},
{"lineNum":"   71","line":"        struct cons_advance<Cons, 4>"},
{"lineNum":"   72","line":"        {"},
{"lineNum":"   73","line":"#if BOOST_WORKAROUND(BOOST_MSVC, > 1400) // VC8 and above"},
{"lineNum":"   74","line":"            typedef typename Cons::cdr_type::cdr_type::cdr_type::cdr_type type;"},
{"lineNum":"   75","line":"#else"},
{"lineNum":"   76","line":"            typedef typename Cons::cdr_type _a;"},
{"lineNum":"   77","line":"            typedef typename _a::cdr_type _b;"},
{"lineNum":"   78","line":"            typedef typename _b::cdr_type _c;"},
{"lineNum":"   79","line":"            typedef typename _c::cdr_type type;"},
{"lineNum":"   80","line":"#endif"},
{"lineNum":"   81","line":"        };"},
{"lineNum":"   82","line":"    }"},
{"lineNum":"   83","line":""},
{"lineNum":"   84","line":"    struct cons_tag;"},
{"lineNum":"   85","line":""},
{"lineNum":"   86","line":"    namespace extension"},
{"lineNum":"   87","line":"    {"},
{"lineNum":"   88","line":"        template <typename Tag>"},
{"lineNum":"   89","line":"        struct at_impl;"},
{"lineNum":"   90","line":""},
{"lineNum":"   91","line":"        template <>"},
{"lineNum":"   92","line":"        struct at_impl<cons_tag>"},
{"lineNum":"   93","line":"        {"},
{"lineNum":"   94","line":"            template <typename Sequence, typename N>"},
{"lineNum":"   95","line":"            struct apply"},
{"lineNum":"   96","line":"            {"},
{"lineNum":"   97","line":"                typedef typename detail::cons_deref<"},
{"lineNum":"   98","line":"                    typename detail::cons_advance<Sequence, N::value>::type>::type"},
{"lineNum":"   99","line":"                element;"},
{"lineNum":"  100","line":""},
{"lineNum":"  101","line":"                typedef typename"},
{"lineNum":"  102","line":"                    mpl::if_<"},
{"lineNum":"  103","line":"                        is_const<Sequence>"},
{"lineNum":"  104","line":"                      , typename detail::cref_result<element>::type"},
{"lineNum":"  105","line":"                      , typename detail::ref_result<element>::type"},
{"lineNum":"  106","line":"                    >::type"},
{"lineNum":"  107","line":"                type;"},
{"lineNum":"  108","line":""},
{"lineNum":"  109","line":"                template <typename Cons, int N2>"},
{"lineNum":"  110","line":"                BOOST_CONSTEXPR BOOST_FUSION_GPU_ENABLED"},
{"lineNum":"  111","line":"                static type"},
{"lineNum":"  112","line":"                call(Cons& s, mpl::int_<N2>)"},
{"lineNum":"  113","line":"                {"},
{"lineNum":"  114","line":"                    return call(s.cdr, mpl::int_<N2-1>());"},
{"lineNum":"  115","line":"                }"},
{"lineNum":"  116","line":""},
{"lineNum":"  117","line":"                template <typename Cons>"},
{"lineNum":"  118","line":"                BOOST_CONSTEXPR BOOST_FUSION_GPU_ENABLED"},
{"lineNum":"  119","line":"                static type"},
{"lineNum":"  120","line":"                call(Cons& s, mpl::int_<0>)"},
{"lineNum":"  121","line":"                {"},
{"lineNum":"  122","line":"                    return s.car;","class":"lineNoCov","hits":"0","possible_hits":"48",},
{"lineNum":"  123","line":"                }"},
{"lineNum":"  124","line":""},
{"lineNum":"  125","line":"                BOOST_CONSTEXPR BOOST_FUSION_GPU_ENABLED"},
{"lineNum":"  126","line":"                static type"},
{"lineNum":"  127","line":"                call(Sequence& s)"},
{"lineNum":"  128","line":"                {"},
{"lineNum":"  129","line":"                    return call(s, mpl::int_<N::value>());"},
{"lineNum":"  130","line":"                }"},
{"lineNum":"  131","line":"            };"},
{"lineNum":"  132","line":"        };"},
{"lineNum":"  133","line":"    }"},
{"lineNum":"  134","line":"}}"},
{"lineNum":"  135","line":""},
{"lineNum":"  136","line":"#endif"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:41", "instrumented" : 1, "covered" : 0,};
var merged_data = [];
