var data = {lines:[
{"lineNum":"    1","line":"// -*- C++ -*-"},
{"lineNum":"    2","line":"//===----------------------- initializer_list -----------------------------===//"},
{"lineNum":"    3","line":"//"},
{"lineNum":"    4","line":"// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions."},
{"lineNum":"    5","line":"// See https://llvm.org/LICENSE.txt for license information."},
{"lineNum":"    6","line":"// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception"},
{"lineNum":"    7","line":"//"},
{"lineNum":"    8","line":"//===----------------------------------------------------------------------===//"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"#ifndef _LIBCPP_INITIALIZER_LIST"},
{"lineNum":"   11","line":"#define _LIBCPP_INITIALIZER_LIST"},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"/*"},
{"lineNum":"   14","line":"    initializer_list synopsis"},
{"lineNum":"   15","line":""},
{"lineNum":"   16","line":"namespace std"},
{"lineNum":"   17","line":"{"},
{"lineNum":"   18","line":""},
{"lineNum":"   19","line":"template<class E>"},
{"lineNum":"   20","line":"class initializer_list"},
{"lineNum":"   21","line":"{"},
{"lineNum":"   22","line":"public:"},
{"lineNum":"   23","line":"    typedef E        value_type;"},
{"lineNum":"   24","line":"    typedef const E& reference;"},
{"lineNum":"   25","line":"    typedef const E& const_reference;"},
{"lineNum":"   26","line":"    typedef size_t   size_type;"},
{"lineNum":"   27","line":""},
{"lineNum":"   28","line":"    typedef const E* iterator;"},
{"lineNum":"   29","line":"    typedef const E* const_iterator;"},
{"lineNum":"   30","line":""},
{"lineNum":"   31","line":"    initializer_list() noexcept; // constexpr in C++14"},
{"lineNum":"   32","line":""},
{"lineNum":"   33","line":"    size_t   size()  const noexcept; // constexpr in C++14"},
{"lineNum":"   34","line":"    const E* begin() const noexcept; // constexpr in C++14"},
{"lineNum":"   35","line":"    const E* end()   const noexcept; // constexpr in C++14"},
{"lineNum":"   36","line":"};"},
{"lineNum":"   37","line":""},
{"lineNum":"   38","line":"template<class E> const E* begin(initializer_list<E> il) noexcept; // constexpr in C++14"},
{"lineNum":"   39","line":"template<class E> const E* end(initializer_list<E> il) noexcept; // constexpr in C++14"},
{"lineNum":"   40","line":""},
{"lineNum":"   41","line":"}  // std"},
{"lineNum":"   42","line":""},
{"lineNum":"   43","line":"*/"},
{"lineNum":"   44","line":""},
{"lineNum":"   45","line":"#include <__config>"},
{"lineNum":"   46","line":"#include <cstddef>"},
{"lineNum":"   47","line":""},
{"lineNum":"   48","line":"#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)"},
{"lineNum":"   49","line":"#pragma GCC system_header"},
{"lineNum":"   50","line":"#endif"},
{"lineNum":"   51","line":""},
{"lineNum":"   52","line":"namespace std  // purposefully not versioned"},
{"lineNum":"   53","line":"{"},
{"lineNum":"   54","line":""},
{"lineNum":"   55","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":"   56","line":""},
{"lineNum":"   57","line":"template<class _Ep>"},
{"lineNum":"   58","line":"class _LIBCPP_TEMPLATE_VIS initializer_list"},
{"lineNum":"   59","line":"{"},
{"lineNum":"   60","line":"    const _Ep* __begin_;"},
{"lineNum":"   61","line":"    size_t    __size_;"},
{"lineNum":"   62","line":""},
{"lineNum":"   63","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"   64","line":"    _LIBCPP_CONSTEXPR_AFTER_CXX11"},
{"lineNum":"   65","line":"    initializer_list(const _Ep* __b, size_t __s) _NOEXCEPT"},
{"lineNum":"   66","line":"        : __begin_(__b),"},
{"lineNum":"   67","line":"          __size_(__s)"},
{"lineNum":"   68","line":"        {}"},
{"lineNum":"   69","line":"public:"},
{"lineNum":"   70","line":"    typedef _Ep        value_type;"},
{"lineNum":"   71","line":"    typedef const _Ep& reference;"},
{"lineNum":"   72","line":"    typedef const _Ep& const_reference;"},
{"lineNum":"   73","line":"    typedef size_t    size_type;"},
{"lineNum":"   74","line":""},
{"lineNum":"   75","line":"    typedef const _Ep* iterator;"},
{"lineNum":"   76","line":"    typedef const _Ep* const_iterator;"},
{"lineNum":"   77","line":""},
{"lineNum":"   78","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"   79","line":"    _LIBCPP_CONSTEXPR_AFTER_CXX11"},
{"lineNum":"   80","line":"    initializer_list() _NOEXCEPT : __begin_(nullptr), __size_(0) {}"},
{"lineNum":"   81","line":""},
{"lineNum":"   82","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"   83","line":"    _LIBCPP_CONSTEXPR_AFTER_CXX11"},
{"lineNum":"   84","line":"    size_t    size()  const _NOEXCEPT {return __size_;}"},
{"lineNum":"   85","line":""},
{"lineNum":"   86","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"   87","line":"    _LIBCPP_CONSTEXPR_AFTER_CXX11"},
{"lineNum":"   88","line":"    const _Ep* begin() const _NOEXCEPT {return __begin_;}"},
{"lineNum":"   89","line":""},
{"lineNum":"   90","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"   91","line":"    _LIBCPP_CONSTEXPR_AFTER_CXX11"},
{"lineNum":"   92","line":"    const _Ep* end()   const _NOEXCEPT {return __begin_ + __size_;}","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"   93","line":"};"},
{"lineNum":"   94","line":""},
{"lineNum":"   95","line":"template<class _Ep>"},
{"lineNum":"   96","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"   97","line":"_LIBCPP_CONSTEXPR_AFTER_CXX11"},
{"lineNum":"   98","line":"const _Ep*"},
{"lineNum":"   99","line":"begin(initializer_list<_Ep> __il) _NOEXCEPT"},
{"lineNum":"  100","line":"{"},
{"lineNum":"  101","line":"    return __il.begin();"},
{"lineNum":"  102","line":"}"},
{"lineNum":"  103","line":""},
{"lineNum":"  104","line":"template<class _Ep>"},
{"lineNum":"  105","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  106","line":"_LIBCPP_CONSTEXPR_AFTER_CXX11"},
{"lineNum":"  107","line":"const _Ep*"},
{"lineNum":"  108","line":"end(initializer_list<_Ep> __il) _NOEXCEPT"},
{"lineNum":"  109","line":"{"},
{"lineNum":"  110","line":"    return __il.end();"},
{"lineNum":"  111","line":"}"},
{"lineNum":"  112","line":""},
{"lineNum":"  113","line":"#endif // !defined(_LIBCPP_CXX03_LANG)"},
{"lineNum":"  114","line":""},
{"lineNum":"  115","line":"}  // std"},
{"lineNum":"  116","line":""},
{"lineNum":"  117","line":"#endif // _LIBCPP_INITIALIZER_LIST"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:41", "instrumented" : 1, "covered" : 0,};
var merged_data = [];
