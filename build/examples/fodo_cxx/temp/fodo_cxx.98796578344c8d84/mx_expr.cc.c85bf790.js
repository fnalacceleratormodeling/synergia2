var data = {lines:[
{"lineNum":"    1","line":"#include \"mx_expr.h\""},
{"lineNum":"    2","line":"#include \"madx.h\""},
{"lineNum":"    3","line":""},
{"lineNum":"    4","line":"#include <stdexcept>"},
{"lineNum":"    5","line":"#include <cmath>"},
{"lineNum":"    6","line":"#include <limits>"},
{"lineNum":"    7","line":""},
{"lineNum":"    8","line":"using namespace synergia;"},
{"lineNum":"    9","line":"using namespace boost;"},
{"lineNum":"   10","line":""},
{"lineNum":"   11","line":"double mx_calculator::nan = std::numeric_limits<double>::quiet_NaN();"},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"double"},
{"lineNum":"   14","line":"  mx_calculator::operator()(double val) const"},
{"lineNum":"   15","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   16","line":"  return val;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   17","line":"}"},
{"lineNum":"   18","line":""},
{"lineNum":"   19","line":"double"},
{"lineNum":"   20","line":"  mx_calculator::operator()(std::string const & ref) const"},
{"lineNum":"   21","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   22","line":"  if( mx==NULL ) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   23","line":"    if( std::isnan(def) )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   24","line":"      throw std::runtime_error(\"Unable to locate reference \" + ref);","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   25","line":"    else"},
{"lineNum":"   26","line":"      return def;"},
{"lineNum":"   27","line":"  }"},
{"lineNum":"   28","line":"  return mx->variable_as_number(ref, def);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   29","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   30","line":""},
{"lineNum":"   31","line":"double"},
{"lineNum":"   32","line":"  mx_calculator::operator()(string_pair_t const & ref) const"},
{"lineNum":"   33","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   34","line":"  if( mx==NULL ) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   35","line":"    if( std::isnan(def) )","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   36","line":"      throw std::runtime_error(\"Unable to locate reference \" + ref.first + \"->\" + ref.second);","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   37","line":"    else"},
{"lineNum":"   38","line":"      return def;"},
{"lineNum":"   39","line":"  }"},
{"lineNum":"   40","line":"  return mx->command(ref.first).attribute_as_number(ref.second, def);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   41","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   42","line":""},
{"lineNum":"   43","line":"double"},
{"lineNum":"   44","line":"  mx_calculator::operator()(nop_t const & n) const"},
{"lineNum":"   45","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   46","line":"  return boost::apply_visitor(*this, n.expr);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   47","line":"}"},
{"lineNum":"   48","line":""},
{"lineNum":"   49","line":"double"},
{"lineNum":"   50","line":"  mx_calculator::operator()(uop_t const & u) const"},
{"lineNum":"   51","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   52","line":"  return u.func( boost::apply_visitor(*this, u.param) );","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   53","line":"}"},
{"lineNum":"   54","line":""},
{"lineNum":"   55","line":"double"},
{"lineNum":"   56","line":"  mx_calculator::operator()(bop_t const & b) const"},
{"lineNum":"   57","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   58","line":"  return b.func( boost::apply_visitor(*this, b.lhs)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   59","line":"               , boost::apply_visitor(*this, b.rhs) );"},
{"lineNum":"   60","line":"}"},
{"lineNum":"   61","line":""},
{"lineNum":"   62","line":"double"},
{"lineNum":"   63","line":"  synergia::mx_eval(mx_expr const & expr)"},
{"lineNum":"   64","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   65","line":"  return boost::apply_visitor(mx_calculator(0.0), expr);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   66","line":"}"},
{"lineNum":"   67","line":""},
{"lineNum":"   68","line":"double"},
{"lineNum":"   69","line":"  mx_eval(mx_expr const & expr, MadX const & mx)"},
{"lineNum":"   70","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   71","line":"  return boost::apply_visitor(mx_calculator(mx, 0.0), expr);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   72","line":"}"},
{"lineNum":"   73","line":""},
{"lineNum":"   74","line":"std::string"},
{"lineNum":"   75","line":"  synergia::mx_expr_refstr(mx_expr const & expr)"},
{"lineNum":"   76","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   77","line":"  mx_expr ex = get<nop_t>(get<nop_t>(get<nop_t>(expr).expr).expr).expr;"},
{"lineNum":"   78","line":""},
{"lineNum":"   79","line":"  if (ex.which() != 1) // string","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   80","line":"    throw std::runtime_error(\"unable to get ref string from mx_expr\");","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   81","line":""},
{"lineNum":"   82","line":"  return get<std::string>(ex);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   83","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   84","line":""},
{"lineNum":"   85","line":""},
{"lineNum":"   86","line":""},
{"lineNum":"   87","line":""},
{"lineNum":"   88","line":""},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 29, "covered" : 0,};
var merged_data = [];
