var data = {lines:[
{"lineNum":"    1","line":"// -*- C++ -*-"},
{"lineNum":"    2","line":"//===---------------------------- math.h ----------------------------------===//"},
{"lineNum":"    3","line":"//"},
{"lineNum":"    4","line":"// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions."},
{"lineNum":"    5","line":"// See https://llvm.org/LICENSE.txt for license information."},
{"lineNum":"    6","line":"// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception"},
{"lineNum":"    7","line":"//"},
{"lineNum":"    8","line":"//===----------------------------------------------------------------------===//"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"#ifndef _LIBCPP_MATH_H"},
{"lineNum":"   11","line":"#define _LIBCPP_MATH_H"},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"/*"},
{"lineNum":"   14","line":"    math.h synopsis"},
{"lineNum":"   15","line":""},
{"lineNum":"   16","line":"Macros:"},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"    HUGE_VAL"},
{"lineNum":"   19","line":"    HUGE_VALF               // C99"},
{"lineNum":"   20","line":"    HUGE_VALL               // C99"},
{"lineNum":"   21","line":"    INFINITY                // C99"},
{"lineNum":"   22","line":"    NAN                     // C99"},
{"lineNum":"   23","line":"    FP_INFINITE             // C99"},
{"lineNum":"   24","line":"    FP_NAN                  // C99"},
{"lineNum":"   25","line":"    FP_NORMAL               // C99"},
{"lineNum":"   26","line":"    FP_SUBNORMAL            // C99"},
{"lineNum":"   27","line":"    FP_ZERO                 // C99"},
{"lineNum":"   28","line":"    FP_FAST_FMA             // C99"},
{"lineNum":"   29","line":"    FP_FAST_FMAF            // C99"},
{"lineNum":"   30","line":"    FP_FAST_FMAL            // C99"},
{"lineNum":"   31","line":"    FP_ILOGB0               // C99"},
{"lineNum":"   32","line":"    FP_ILOGBNAN             // C99"},
{"lineNum":"   33","line":"    MATH_ERRNO              // C99"},
{"lineNum":"   34","line":"    MATH_ERREXCEPT          // C99"},
{"lineNum":"   35","line":"    math_errhandling        // C99"},
{"lineNum":"   36","line":""},
{"lineNum":"   37","line":"Types:"},
{"lineNum":"   38","line":""},
{"lineNum":"   39","line":"    float_t                 // C99"},
{"lineNum":"   40","line":"    double_t                // C99"},
{"lineNum":"   41","line":""},
{"lineNum":"   42","line":"// C90"},
{"lineNum":"   43","line":""},
{"lineNum":"   44","line":"floating_point abs(floating_point x);"},
{"lineNum":"   45","line":""},
{"lineNum":"   46","line":"floating_point acos (arithmetic x);"},
{"lineNum":"   47","line":"float          acosf(float x);"},
{"lineNum":"   48","line":"long double    acosl(long double x);"},
{"lineNum":"   49","line":""},
{"lineNum":"   50","line":"floating_point asin (arithmetic x);"},
{"lineNum":"   51","line":"float          asinf(float x);"},
{"lineNum":"   52","line":"long double    asinl(long double x);"},
{"lineNum":"   53","line":""},
{"lineNum":"   54","line":"floating_point atan (arithmetic x);"},
{"lineNum":"   55","line":"float          atanf(float x);"},
{"lineNum":"   56","line":"long double    atanl(long double x);"},
{"lineNum":"   57","line":""},
{"lineNum":"   58","line":"floating_point atan2 (arithmetic y, arithmetic x);"},
{"lineNum":"   59","line":"float          atan2f(float y, float x);"},
{"lineNum":"   60","line":"long double    atan2l(long double y, long double x);"},
{"lineNum":"   61","line":""},
{"lineNum":"   62","line":"floating_point ceil (arithmetic x);"},
{"lineNum":"   63","line":"float          ceilf(float x);"},
{"lineNum":"   64","line":"long double    ceill(long double x);"},
{"lineNum":"   65","line":""},
{"lineNum":"   66","line":"floating_point cos (arithmetic x);"},
{"lineNum":"   67","line":"float          cosf(float x);"},
{"lineNum":"   68","line":"long double    cosl(long double x);"},
{"lineNum":"   69","line":""},
{"lineNum":"   70","line":"floating_point cosh (arithmetic x);"},
{"lineNum":"   71","line":"float          coshf(float x);"},
{"lineNum":"   72","line":"long double    coshl(long double x);"},
{"lineNum":"   73","line":""},
{"lineNum":"   74","line":"floating_point exp (arithmetic x);"},
{"lineNum":"   75","line":"float          expf(float x);"},
{"lineNum":"   76","line":"long double    expl(long double x);"},
{"lineNum":"   77","line":""},
{"lineNum":"   78","line":"floating_point fabs (arithmetic x);"},
{"lineNum":"   79","line":"float          fabsf(float x);"},
{"lineNum":"   80","line":"long double    fabsl(long double x);"},
{"lineNum":"   81","line":""},
{"lineNum":"   82","line":"floating_point floor (arithmetic x);"},
{"lineNum":"   83","line":"float          floorf(float x);"},
{"lineNum":"   84","line":"long double    floorl(long double x);"},
{"lineNum":"   85","line":""},
{"lineNum":"   86","line":"floating_point fmod (arithmetic x, arithmetic y);"},
{"lineNum":"   87","line":"float          fmodf(float x, float y);"},
{"lineNum":"   88","line":"long double    fmodl(long double x, long double y);"},
{"lineNum":"   89","line":""},
{"lineNum":"   90","line":"floating_point frexp (arithmetic value, int* exp);"},
{"lineNum":"   91","line":"float          frexpf(float value, int* exp);"},
{"lineNum":"   92","line":"long double    frexpl(long double value, int* exp);"},
{"lineNum":"   93","line":""},
{"lineNum":"   94","line":"floating_point ldexp (arithmetic value, int exp);"},
{"lineNum":"   95","line":"float          ldexpf(float value, int exp);"},
{"lineNum":"   96","line":"long double    ldexpl(long double value, int exp);"},
{"lineNum":"   97","line":""},
{"lineNum":"   98","line":"floating_point log (arithmetic x);"},
{"lineNum":"   99","line":"float          logf(float x);"},
{"lineNum":"  100","line":"long double    logl(long double x);"},
{"lineNum":"  101","line":""},
{"lineNum":"  102","line":"floating_point log10 (arithmetic x);"},
{"lineNum":"  103","line":"float          log10f(float x);"},
{"lineNum":"  104","line":"long double    log10l(long double x);"},
{"lineNum":"  105","line":""},
{"lineNum":"  106","line":"floating_point modf (floating_point value, floating_point* iptr);"},
{"lineNum":"  107","line":"float          modff(float value, float* iptr);"},
{"lineNum":"  108","line":"long double    modfl(long double value, long double* iptr);"},
{"lineNum":"  109","line":""},
{"lineNum":"  110","line":"floating_point pow (arithmetic x, arithmetic y);"},
{"lineNum":"  111","line":"float          powf(float x, float y);"},
{"lineNum":"  112","line":"long double    powl(long double x, long double y);"},
{"lineNum":"  113","line":""},
{"lineNum":"  114","line":"floating_point sin (arithmetic x);"},
{"lineNum":"  115","line":"float          sinf(float x);"},
{"lineNum":"  116","line":"long double    sinl(long double x);"},
{"lineNum":"  117","line":""},
{"lineNum":"  118","line":"floating_point sinh (arithmetic x);"},
{"lineNum":"  119","line":"float          sinhf(float x);"},
{"lineNum":"  120","line":"long double    sinhl(long double x);"},
{"lineNum":"  121","line":""},
{"lineNum":"  122","line":"floating_point sqrt (arithmetic x);"},
{"lineNum":"  123","line":"float          sqrtf(float x);"},
{"lineNum":"  124","line":"long double    sqrtl(long double x);"},
{"lineNum":"  125","line":""},
{"lineNum":"  126","line":"floating_point tan (arithmetic x);"},
{"lineNum":"  127","line":"float          tanf(float x);"},
{"lineNum":"  128","line":"long double    tanl(long double x);"},
{"lineNum":"  129","line":""},
{"lineNum":"  130","line":"floating_point tanh (arithmetic x);"},
{"lineNum":"  131","line":"float          tanhf(float x);"},
{"lineNum":"  132","line":"long double    tanhl(long double x);"},
{"lineNum":"  133","line":""},
{"lineNum":"  134","line":"//  C99"},
{"lineNum":"  135","line":""},
{"lineNum":"  136","line":"bool signbit(arithmetic x);"},
{"lineNum":"  137","line":""},
{"lineNum":"  138","line":"int fpclassify(arithmetic x);"},
{"lineNum":"  139","line":""},
{"lineNum":"  140","line":"bool isfinite(arithmetic x);"},
{"lineNum":"  141","line":"bool isinf(arithmetic x);"},
{"lineNum":"  142","line":"bool isnan(arithmetic x);"},
{"lineNum":"  143","line":"bool isnormal(arithmetic x);"},
{"lineNum":"  144","line":""},
{"lineNum":"  145","line":"bool isgreater(arithmetic x, arithmetic y);"},
{"lineNum":"  146","line":"bool isgreaterequal(arithmetic x, arithmetic y);"},
{"lineNum":"  147","line":"bool isless(arithmetic x, arithmetic y);"},
{"lineNum":"  148","line":"bool islessequal(arithmetic x, arithmetic y);"},
{"lineNum":"  149","line":"bool islessgreater(arithmetic x, arithmetic y);"},
{"lineNum":"  150","line":"bool isunordered(arithmetic x, arithmetic y);"},
{"lineNum":"  151","line":""},
{"lineNum":"  152","line":"floating_point acosh (arithmetic x);"},
{"lineNum":"  153","line":"float          acoshf(float x);"},
{"lineNum":"  154","line":"long double    acoshl(long double x);"},
{"lineNum":"  155","line":""},
{"lineNum":"  156","line":"floating_point asinh (arithmetic x);"},
{"lineNum":"  157","line":"float          asinhf(float x);"},
{"lineNum":"  158","line":"long double    asinhl(long double x);"},
{"lineNum":"  159","line":""},
{"lineNum":"  160","line":"floating_point atanh (arithmetic x);"},
{"lineNum":"  161","line":"float          atanhf(float x);"},
{"lineNum":"  162","line":"long double    atanhl(long double x);"},
{"lineNum":"  163","line":""},
{"lineNum":"  164","line":"floating_point cbrt (arithmetic x);"},
{"lineNum":"  165","line":"float          cbrtf(float x);"},
{"lineNum":"  166","line":"long double    cbrtl(long double x);"},
{"lineNum":"  167","line":""},
{"lineNum":"  168","line":"floating_point copysign (arithmetic x, arithmetic y);"},
{"lineNum":"  169","line":"float          copysignf(float x, float y);"},
{"lineNum":"  170","line":"long double    copysignl(long double x, long double y);"},
{"lineNum":"  171","line":""},
{"lineNum":"  172","line":"floating_point erf (arithmetic x);"},
{"lineNum":"  173","line":"float          erff(float x);"},
{"lineNum":"  174","line":"long double    erfl(long double x);"},
{"lineNum":"  175","line":""},
{"lineNum":"  176","line":"floating_point erfc (arithmetic x);"},
{"lineNum":"  177","line":"float          erfcf(float x);"},
{"lineNum":"  178","line":"long double    erfcl(long double x);"},
{"lineNum":"  179","line":""},
{"lineNum":"  180","line":"floating_point exp2 (arithmetic x);"},
{"lineNum":"  181","line":"float          exp2f(float x);"},
{"lineNum":"  182","line":"long double    exp2l(long double x);"},
{"lineNum":"  183","line":""},
{"lineNum":"  184","line":"floating_point expm1 (arithmetic x);"},
{"lineNum":"  185","line":"float          expm1f(float x);"},
{"lineNum":"  186","line":"long double    expm1l(long double x);"},
{"lineNum":"  187","line":""},
{"lineNum":"  188","line":"floating_point fdim (arithmetic x, arithmetic y);"},
{"lineNum":"  189","line":"float          fdimf(float x, float y);"},
{"lineNum":"  190","line":"long double    fdiml(long double x, long double y);"},
{"lineNum":"  191","line":""},
{"lineNum":"  192","line":"floating_point fma (arithmetic x, arithmetic y, arithmetic z);"},
{"lineNum":"  193","line":"float          fmaf(float x, float y, float z);"},
{"lineNum":"  194","line":"long double    fmal(long double x, long double y, long double z);"},
{"lineNum":"  195","line":""},
{"lineNum":"  196","line":"floating_point fmax (arithmetic x, arithmetic y);"},
{"lineNum":"  197","line":"float          fmaxf(float x, float y);"},
{"lineNum":"  198","line":"long double    fmaxl(long double x, long double y);"},
{"lineNum":"  199","line":""},
{"lineNum":"  200","line":"floating_point fmin (arithmetic x, arithmetic y);"},
{"lineNum":"  201","line":"float          fminf(float x, float y);"},
{"lineNum":"  202","line":"long double    fminl(long double x, long double y);"},
{"lineNum":"  203","line":""},
{"lineNum":"  204","line":"floating_point hypot (arithmetic x, arithmetic y);"},
{"lineNum":"  205","line":"float          hypotf(float x, float y);"},
{"lineNum":"  206","line":"long double    hypotl(long double x, long double y);"},
{"lineNum":"  207","line":""},
{"lineNum":"  208","line":"int ilogb (arithmetic x);"},
{"lineNum":"  209","line":"int ilogbf(float x);"},
{"lineNum":"  210","line":"int ilogbl(long double x);"},
{"lineNum":"  211","line":""},
{"lineNum":"  212","line":"floating_point lgamma (arithmetic x);"},
{"lineNum":"  213","line":"float          lgammaf(float x);"},
{"lineNum":"  214","line":"long double    lgammal(long double x);"},
{"lineNum":"  215","line":""},
{"lineNum":"  216","line":"long long llrint (arithmetic x);"},
{"lineNum":"  217","line":"long long llrintf(float x);"},
{"lineNum":"  218","line":"long long llrintl(long double x);"},
{"lineNum":"  219","line":""},
{"lineNum":"  220","line":"long long llround (arithmetic x);"},
{"lineNum":"  221","line":"long long llroundf(float x);"},
{"lineNum":"  222","line":"long long llroundl(long double x);"},
{"lineNum":"  223","line":""},
{"lineNum":"  224","line":"floating_point log1p (arithmetic x);"},
{"lineNum":"  225","line":"float          log1pf(float x);"},
{"lineNum":"  226","line":"long double    log1pl(long double x);"},
{"lineNum":"  227","line":""},
{"lineNum":"  228","line":"floating_point log2 (arithmetic x);"},
{"lineNum":"  229","line":"float          log2f(float x);"},
{"lineNum":"  230","line":"long double    log2l(long double x);"},
{"lineNum":"  231","line":""},
{"lineNum":"  232","line":"floating_point logb (arithmetic x);"},
{"lineNum":"  233","line":"float          logbf(float x);"},
{"lineNum":"  234","line":"long double    logbl(long double x);"},
{"lineNum":"  235","line":""},
{"lineNum":"  236","line":"long lrint (arithmetic x);"},
{"lineNum":"  237","line":"long lrintf(float x);"},
{"lineNum":"  238","line":"long lrintl(long double x);"},
{"lineNum":"  239","line":""},
{"lineNum":"  240","line":"long lround (arithmetic x);"},
{"lineNum":"  241","line":"long lroundf(float x);"},
{"lineNum":"  242","line":"long lroundl(long double x);"},
{"lineNum":"  243","line":""},
{"lineNum":"  244","line":"double      nan (const char* str);"},
{"lineNum":"  245","line":"float       nanf(const char* str);"},
{"lineNum":"  246","line":"long double nanl(const char* str);"},
{"lineNum":"  247","line":""},
{"lineNum":"  248","line":"floating_point nearbyint (arithmetic x);"},
{"lineNum":"  249","line":"float          nearbyintf(float x);"},
{"lineNum":"  250","line":"long double    nearbyintl(long double x);"},
{"lineNum":"  251","line":""},
{"lineNum":"  252","line":"floating_point nextafter (arithmetic x, arithmetic y);"},
{"lineNum":"  253","line":"float          nextafterf(float x, float y);"},
{"lineNum":"  254","line":"long double    nextafterl(long double x, long double y);"},
{"lineNum":"  255","line":""},
{"lineNum":"  256","line":"floating_point nexttoward (arithmetic x, long double y);"},
{"lineNum":"  257","line":"float          nexttowardf(float x, long double y);"},
{"lineNum":"  258","line":"long double    nexttowardl(long double x, long double y);"},
{"lineNum":"  259","line":""},
{"lineNum":"  260","line":"floating_point remainder (arithmetic x, arithmetic y);"},
{"lineNum":"  261","line":"float          remainderf(float x, float y);"},
{"lineNum":"  262","line":"long double    remainderl(long double x, long double y);"},
{"lineNum":"  263","line":""},
{"lineNum":"  264","line":"floating_point remquo (arithmetic x, arithmetic y, int* pquo);"},
{"lineNum":"  265","line":"float          remquof(float x, float y, int* pquo);"},
{"lineNum":"  266","line":"long double    remquol(long double x, long double y, int* pquo);"},
{"lineNum":"  267","line":""},
{"lineNum":"  268","line":"floating_point rint (arithmetic x);"},
{"lineNum":"  269","line":"float          rintf(float x);"},
{"lineNum":"  270","line":"long double    rintl(long double x);"},
{"lineNum":"  271","line":""},
{"lineNum":"  272","line":"floating_point round (arithmetic x);"},
{"lineNum":"  273","line":"float          roundf(float x);"},
{"lineNum":"  274","line":"long double    roundl(long double x);"},
{"lineNum":"  275","line":""},
{"lineNum":"  276","line":"floating_point scalbln (arithmetic x, long ex);"},
{"lineNum":"  277","line":"float          scalblnf(float x, long ex);"},
{"lineNum":"  278","line":"long double    scalblnl(long double x, long ex);"},
{"lineNum":"  279","line":""},
{"lineNum":"  280","line":"floating_point scalbn (arithmetic x, int ex);"},
{"lineNum":"  281","line":"float          scalbnf(float x, int ex);"},
{"lineNum":"  282","line":"long double    scalbnl(long double x, int ex);"},
{"lineNum":"  283","line":""},
{"lineNum":"  284","line":"floating_point tgamma (arithmetic x);"},
{"lineNum":"  285","line":"float          tgammaf(float x);"},
{"lineNum":"  286","line":"long double    tgammal(long double x);"},
{"lineNum":"  287","line":""},
{"lineNum":"  288","line":"floating_point trunc (arithmetic x);"},
{"lineNum":"  289","line":"float          truncf(float x);"},
{"lineNum":"  290","line":"long double    truncl(long double x);"},
{"lineNum":"  291","line":""},
{"lineNum":"  292","line":"*/"},
{"lineNum":"  293","line":""},
{"lineNum":"  294","line":"#include <__config>"},
{"lineNum":"  295","line":""},
{"lineNum":"  296","line":"#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)"},
{"lineNum":"  297","line":"#pragma GCC system_header"},
{"lineNum":"  298","line":"#endif"},
{"lineNum":"  299","line":""},
{"lineNum":"  300","line":"#include_next <math.h>"},
{"lineNum":"  301","line":""},
{"lineNum":"  302","line":"#ifdef __cplusplus"},
{"lineNum":"  303","line":""},
{"lineNum":"  304","line":"// We support including .h headers inside \'extern \"C\"\' contexts, so switch"},
{"lineNum":"  305","line":"// back to C++ linkage before including these C++ headers."},
{"lineNum":"  306","line":"extern \"C++\" {"},
{"lineNum":"  307","line":""},
{"lineNum":"  308","line":"#include <stdlib.h>"},
{"lineNum":"  309","line":"#include <type_traits>"},
{"lineNum":"  310","line":"#include <limits>"},
{"lineNum":"  311","line":""},
{"lineNum":"  312","line":"// signbit"},
{"lineNum":"  313","line":""},
{"lineNum":"  314","line":"#ifdef signbit"},
{"lineNum":"  315","line":""},
{"lineNum":"  316","line":"template <class _A1>"},
{"lineNum":"  317","line":"_LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  318","line":"bool"},
{"lineNum":"  319","line":"__libcpp_signbit(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":"  320","line":"{"},
{"lineNum":"  321","line":"#if __has_builtin(__builtin_signbit)"},
{"lineNum":"  322","line":"    return __builtin_signbit(__lcpp_x);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  323","line":"#else"},
{"lineNum":"  324","line":"    return signbit(__lcpp_x);"},
{"lineNum":"  325","line":"#endif"},
{"lineNum":"  326","line":"}"},
{"lineNum":"  327","line":""},
{"lineNum":"  328","line":"#undef signbit"},
{"lineNum":"  329","line":""},
{"lineNum":"  330","line":"template <class _A1>"},
{"lineNum":"  331","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  332","line":"typename std::enable_if<std::is_floating_point<_A1>::value, bool>::type"},
{"lineNum":"  333","line":"signbit(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":"  334","line":"{"},
{"lineNum":"  335","line":"    return __libcpp_signbit((typename std::__promote<_A1>::type)__lcpp_x);"},
{"lineNum":"  336","line":"}"},
{"lineNum":"  337","line":""},
{"lineNum":"  338","line":"template <class _A1>"},
{"lineNum":"  339","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  340","line":"typename std::enable_if<"},
{"lineNum":"  341","line":"    std::is_integral<_A1>::value && std::is_signed<_A1>::value, bool>::type"},
{"lineNum":"  342","line":"signbit(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":"  343","line":"{ return __lcpp_x < 0; }"},
{"lineNum":"  344","line":""},
{"lineNum":"  345","line":"template <class _A1>"},
{"lineNum":"  346","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  347","line":"typename std::enable_if<"},
{"lineNum":"  348","line":"    std::is_integral<_A1>::value && !std::is_signed<_A1>::value, bool>::type"},
{"lineNum":"  349","line":"signbit(_A1) _NOEXCEPT"},
{"lineNum":"  350","line":"{ return false; }"},
{"lineNum":"  351","line":""},
{"lineNum":"  352","line":"#elif defined(_LIBCPP_MSVCRT)"},
{"lineNum":"  353","line":""},
{"lineNum":"  354","line":"template <typename _A1>"},
{"lineNum":"  355","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  356","line":"typename std::enable_if<std::is_floating_point<_A1>::value, bool>::type"},
{"lineNum":"  357","line":"signbit(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":"  358","line":"{"},
{"lineNum":"  359","line":"  return ::signbit(static_cast<typename std::__promote<_A1>::type>(__lcpp_x));"},
{"lineNum":"  360","line":"}"},
{"lineNum":"  361","line":""},
{"lineNum":"  362","line":"template <class _A1>"},
{"lineNum":"  363","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  364","line":"typename std::enable_if<"},
{"lineNum":"  365","line":"    std::is_integral<_A1>::value && std::is_signed<_A1>::value, bool>::type"},
{"lineNum":"  366","line":"signbit(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":"  367","line":"{ return __lcpp_x < 0; }"},
{"lineNum":"  368","line":""},
{"lineNum":"  369","line":"template <class _A1>"},
{"lineNum":"  370","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  371","line":"typename std::enable_if<"},
{"lineNum":"  372","line":"    std::is_integral<_A1>::value && !std::is_signed<_A1>::value, bool>::type"},
{"lineNum":"  373","line":"signbit(_A1) _NOEXCEPT"},
{"lineNum":"  374","line":"{ return false; }"},
{"lineNum":"  375","line":""},
{"lineNum":"  376","line":"#endif // signbit"},
{"lineNum":"  377","line":""},
{"lineNum":"  378","line":"// fpclassify"},
{"lineNum":"  379","line":""},
{"lineNum":"  380","line":"#ifdef fpclassify"},
{"lineNum":"  381","line":""},
{"lineNum":"  382","line":"template <class _A1>"},
{"lineNum":"  383","line":"_LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  384","line":"int"},
{"lineNum":"  385","line":"__libcpp_fpclassify(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":"  386","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  387","line":"#if __has_builtin(__builtin_fpclassify)"},
{"lineNum":"  388","line":"  return __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL, FP_SUBNORMAL,","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  389","line":"                                FP_ZERO, __lcpp_x);"},
{"lineNum":"  390","line":"#else"},
{"lineNum":"  391","line":"    return fpclassify(__lcpp_x);"},
{"lineNum":"  392","line":"#endif"},
{"lineNum":"  393","line":"}"},
{"lineNum":"  394","line":""},
{"lineNum":"  395","line":"#undef fpclassify"},
{"lineNum":"  396","line":""},
{"lineNum":"  397","line":"template <class _A1>"},
{"lineNum":"  398","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  399","line":"typename std::enable_if<std::is_floating_point<_A1>::value, int>::type"},
{"lineNum":"  400","line":"fpclassify(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":"  401","line":"{"},
{"lineNum":"  402","line":"    return __libcpp_fpclassify((typename std::__promote<_A1>::type)__lcpp_x);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  403","line":"}"},
{"lineNum":"  404","line":""},
{"lineNum":"  405","line":"template <class _A1>"},
{"lineNum":"  406","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  407","line":"typename std::enable_if<std::is_integral<_A1>::value, int>::type"},
{"lineNum":"  408","line":"fpclassify(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":"  409","line":"{ return __lcpp_x == 0 ? FP_ZERO : FP_NORMAL; }"},
{"lineNum":"  410","line":""},
{"lineNum":"  411","line":"#elif defined(_LIBCPP_MSVCRT)"},
{"lineNum":"  412","line":""},
{"lineNum":"  413","line":"template <typename _A1>"},
{"lineNum":"  414","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  415","line":"typename std::enable_if<std::is_floating_point<_A1>::value, bool>::type"},
{"lineNum":"  416","line":"fpclassify(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":"  417","line":"{"},
{"lineNum":"  418","line":"  return ::fpclassify(static_cast<typename std::__promote<_A1>::type>(__lcpp_x));"},
{"lineNum":"  419","line":"}"},
{"lineNum":"  420","line":""},
{"lineNum":"  421","line":"template <class _A1>"},
{"lineNum":"  422","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  423","line":"typename std::enable_if<std::is_integral<_A1>::value, int>::type"},
{"lineNum":"  424","line":"fpclassify(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":"  425","line":"{ return __lcpp_x == 0 ? FP_ZERO : FP_NORMAL; }"},
{"lineNum":"  426","line":""},
{"lineNum":"  427","line":"#endif // fpclassify"},
{"lineNum":"  428","line":""},
{"lineNum":"  429","line":"// isfinite"},
{"lineNum":"  430","line":""},
{"lineNum":"  431","line":"#ifdef isfinite"},
{"lineNum":"  432","line":""},
{"lineNum":"  433","line":"template <class _A1>"},
{"lineNum":"  434","line":"_LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  435","line":"bool"},
{"lineNum":"  436","line":"__libcpp_isfinite(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":"  437","line":"{"},
{"lineNum":"  438","line":"#if __has_builtin(__builtin_isfinite)"},
{"lineNum":"  439","line":"    return __builtin_isfinite(__lcpp_x);","class":"lineNoCov","hits":"0","possible_hits":"15",},
{"lineNum":"  440","line":"#else"},
{"lineNum":"  441","line":"    return isfinite(__lcpp_x);"},
{"lineNum":"  442","line":"#endif"},
{"lineNum":"  443","line":"}"},
{"lineNum":"  444","line":""},
{"lineNum":"  445","line":"#undef isfinite"},
{"lineNum":"  446","line":""},
{"lineNum":"  447","line":"template <class _A1>"},
{"lineNum":"  448","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  449","line":"typename std::enable_if<"},
{"lineNum":"  450","line":"    std::is_arithmetic<_A1>::value && std::numeric_limits<_A1>::has_infinity,"},
{"lineNum":"  451","line":"    bool>::type"},
{"lineNum":"  452","line":"isfinite(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":"  453","line":"{"},
{"lineNum":"  454","line":"    return __libcpp_isfinite((typename std::__promote<_A1>::type)__lcpp_x);"},
{"lineNum":"  455","line":"}"},
{"lineNum":"  456","line":""},
{"lineNum":"  457","line":"template <class _A1>"},
{"lineNum":"  458","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  459","line":"typename std::enable_if<"},
{"lineNum":"  460","line":"    std::is_arithmetic<_A1>::value && !std::numeric_limits<_A1>::has_infinity,"},
{"lineNum":"  461","line":"    bool>::type"},
{"lineNum":"  462","line":"isfinite(_A1) _NOEXCEPT"},
{"lineNum":"  463","line":"{ return true; }"},
{"lineNum":"  464","line":""},
{"lineNum":"  465","line":"#endif // isfinite"},
{"lineNum":"  466","line":""},
{"lineNum":"  467","line":"// isinf"},
{"lineNum":"  468","line":""},
{"lineNum":"  469","line":"#ifdef isinf"},
{"lineNum":"  470","line":""},
{"lineNum":"  471","line":"template <class _A1>"},
{"lineNum":"  472","line":"_LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  473","line":"bool"},
{"lineNum":"  474","line":"__libcpp_isinf(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":"  475","line":"{"},
{"lineNum":"  476","line":"#if __has_builtin(__builtin_isinf)"},
{"lineNum":"  477","line":"    return __builtin_isinf(__lcpp_x);"},
{"lineNum":"  478","line":"#else"},
{"lineNum":"  479","line":"    return isinf(__lcpp_x);"},
{"lineNum":"  480","line":"#endif"},
{"lineNum":"  481","line":"}"},
{"lineNum":"  482","line":""},
{"lineNum":"  483","line":"#undef isinf"},
{"lineNum":"  484","line":""},
{"lineNum":"  485","line":"template <class _A1>"},
{"lineNum":"  486","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  487","line":"typename std::enable_if<"},
{"lineNum":"  488","line":"    std::is_arithmetic<_A1>::value && std::numeric_limits<_A1>::has_infinity,"},
{"lineNum":"  489","line":"    bool>::type"},
{"lineNum":"  490","line":"isinf(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":"  491","line":"{"},
{"lineNum":"  492","line":"    return __libcpp_isinf((typename std::__promote<_A1>::type)__lcpp_x);"},
{"lineNum":"  493","line":"}"},
{"lineNum":"  494","line":""},
{"lineNum":"  495","line":"template <class _A1>"},
{"lineNum":"  496","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  497","line":"typename std::enable_if<"},
{"lineNum":"  498","line":"    std::is_arithmetic<_A1>::value && !std::numeric_limits<_A1>::has_infinity,"},
{"lineNum":"  499","line":"    bool>::type"},
{"lineNum":"  500","line":"isinf(_A1) _NOEXCEPT"},
{"lineNum":"  501","line":"{ return false; }"},
{"lineNum":"  502","line":""},
{"lineNum":"  503","line":"#ifdef _LIBCPP_PREFERRED_OVERLOAD"},
{"lineNum":"  504","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  505","line":"bool"},
{"lineNum":"  506","line":"isinf(float __lcpp_x) _NOEXCEPT { return __libcpp_isinf(__lcpp_x); }"},
{"lineNum":"  507","line":""},
{"lineNum":"  508","line":"inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_PREFERRED_OVERLOAD"},
{"lineNum":"  509","line":"bool"},
{"lineNum":"  510","line":"isinf(double __lcpp_x) _NOEXCEPT { return __libcpp_isinf(__lcpp_x); }"},
{"lineNum":"  511","line":""},
{"lineNum":"  512","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  513","line":"bool"},
{"lineNum":"  514","line":"isinf(long double __lcpp_x) _NOEXCEPT { return __libcpp_isinf(__lcpp_x); }"},
{"lineNum":"  515","line":"#endif"},
{"lineNum":"  516","line":""},
{"lineNum":"  517","line":"#endif // isinf"},
{"lineNum":"  518","line":""},
{"lineNum":"  519","line":"// isnan"},
{"lineNum":"  520","line":""},
{"lineNum":"  521","line":"#ifdef isnan"},
{"lineNum":"  522","line":""},
{"lineNum":"  523","line":"template <class _A1>"},
{"lineNum":"  524","line":"_LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  525","line":"bool"},
{"lineNum":"  526","line":"__libcpp_isnan(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":"  527","line":"{"},
{"lineNum":"  528","line":"#if __has_builtin(__builtin_isnan)"},
{"lineNum":"  529","line":"    return __builtin_isnan(__lcpp_x);","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  530","line":"#else"},
{"lineNum":"  531","line":"    return isnan(__lcpp_x);"},
{"lineNum":"  532","line":"#endif"},
{"lineNum":"  533","line":"}"},
{"lineNum":"  534","line":""},
{"lineNum":"  535","line":"#undef isnan"},
{"lineNum":"  536","line":""},
{"lineNum":"  537","line":"template <class _A1>"},
{"lineNum":"  538","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  539","line":"typename std::enable_if<std::is_floating_point<_A1>::value, bool>::type"},
{"lineNum":"  540","line":"isnan(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":"  541","line":"{"},
{"lineNum":"  542","line":"    return __libcpp_isnan((typename std::__promote<_A1>::type)__lcpp_x);"},
{"lineNum":"  543","line":"}"},
{"lineNum":"  544","line":""},
{"lineNum":"  545","line":"template <class _A1>"},
{"lineNum":"  546","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  547","line":"typename std::enable_if<std::is_integral<_A1>::value, bool>::type"},
{"lineNum":"  548","line":"isnan(_A1) _NOEXCEPT"},
{"lineNum":"  549","line":"{ return false; }"},
{"lineNum":"  550","line":""},
{"lineNum":"  551","line":"#ifdef _LIBCPP_PREFERRED_OVERLOAD"},
{"lineNum":"  552","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  553","line":"bool"},
{"lineNum":"  554","line":"isnan(float __lcpp_x) _NOEXCEPT { return __libcpp_isnan(__lcpp_x); }"},
{"lineNum":"  555","line":""},
{"lineNum":"  556","line":"inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_PREFERRED_OVERLOAD"},
{"lineNum":"  557","line":"bool"},
{"lineNum":"  558","line":"isnan(double __lcpp_x) _NOEXCEPT { return __libcpp_isnan(__lcpp_x); }"},
{"lineNum":"  559","line":""},
{"lineNum":"  560","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  561","line":"bool"},
{"lineNum":"  562","line":"isnan(long double __lcpp_x) _NOEXCEPT { return __libcpp_isnan(__lcpp_x); }"},
{"lineNum":"  563","line":"#endif"},
{"lineNum":"  564","line":""},
{"lineNum":"  565","line":"#endif // isnan"},
{"lineNum":"  566","line":""},
{"lineNum":"  567","line":"// isnormal"},
{"lineNum":"  568","line":""},
{"lineNum":"  569","line":"#ifdef isnormal"},
{"lineNum":"  570","line":""},
{"lineNum":"  571","line":"template <class _A1>"},
{"lineNum":"  572","line":"_LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  573","line":"bool"},
{"lineNum":"  574","line":"__libcpp_isnormal(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":"  575","line":"{"},
{"lineNum":"  576","line":"#if __has_builtin(__builtin_isnormal)"},
{"lineNum":"  577","line":"    return __builtin_isnormal(__lcpp_x);"},
{"lineNum":"  578","line":"#else"},
{"lineNum":"  579","line":"    return isnormal(__lcpp_x);"},
{"lineNum":"  580","line":"#endif"},
{"lineNum":"  581","line":"}"},
{"lineNum":"  582","line":""},
{"lineNum":"  583","line":"#undef isnormal"},
{"lineNum":"  584","line":""},
{"lineNum":"  585","line":"template <class _A1>"},
{"lineNum":"  586","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  587","line":"typename std::enable_if<std::is_floating_point<_A1>::value, bool>::type"},
{"lineNum":"  588","line":"isnormal(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":"  589","line":"{"},
{"lineNum":"  590","line":"    return __libcpp_isnormal((typename std::__promote<_A1>::type)__lcpp_x);"},
{"lineNum":"  591","line":"}"},
{"lineNum":"  592","line":""},
{"lineNum":"  593","line":"template <class _A1>"},
{"lineNum":"  594","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  595","line":"typename std::enable_if<std::is_integral<_A1>::value, bool>::type"},
{"lineNum":"  596","line":"isnormal(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":"  597","line":"{ return __lcpp_x != 0; }"},
{"lineNum":"  598","line":""},
{"lineNum":"  599","line":"#endif // isnormal"},
{"lineNum":"  600","line":""},
{"lineNum":"  601","line":"// isgreater"},
{"lineNum":"  602","line":""},
{"lineNum":"  603","line":"#ifdef isgreater"},
{"lineNum":"  604","line":""},
{"lineNum":"  605","line":"template <class _A1, class _A2>"},
{"lineNum":"  606","line":"_LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  607","line":"bool"},
{"lineNum":"  608","line":"__libcpp_isgreater(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT"},
{"lineNum":"  609","line":"{"},
{"lineNum":"  610","line":"    return isgreater(__lcpp_x, __lcpp_y);"},
{"lineNum":"  611","line":"}"},
{"lineNum":"  612","line":""},
{"lineNum":"  613","line":"#undef isgreater"},
{"lineNum":"  614","line":""},
{"lineNum":"  615","line":"template <class _A1, class _A2>"},
{"lineNum":"  616","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  617","line":"typename std::enable_if"},
{"lineNum":"  618","line":"<"},
{"lineNum":"  619","line":"    std::is_arithmetic<_A1>::value &&"},
{"lineNum":"  620","line":"    std::is_arithmetic<_A2>::value,"},
{"lineNum":"  621","line":"    bool"},
{"lineNum":"  622","line":">::type"},
{"lineNum":"  623","line":"isgreater(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT"},
{"lineNum":"  624","line":"{"},
{"lineNum":"  625","line":"    typedef typename std::__promote<_A1, _A2>::type type;"},
{"lineNum":"  626","line":"    return __libcpp_isgreater((type)__lcpp_x, (type)__lcpp_y);"},
{"lineNum":"  627","line":"}"},
{"lineNum":"  628","line":""},
{"lineNum":"  629","line":"#endif // isgreater"},
{"lineNum":"  630","line":""},
{"lineNum":"  631","line":"// isgreaterequal"},
{"lineNum":"  632","line":""},
{"lineNum":"  633","line":"#ifdef isgreaterequal"},
{"lineNum":"  634","line":""},
{"lineNum":"  635","line":"template <class _A1, class _A2>"},
{"lineNum":"  636","line":"_LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  637","line":"bool"},
{"lineNum":"  638","line":"__libcpp_isgreaterequal(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT"},
{"lineNum":"  639","line":"{"},
{"lineNum":"  640","line":"    return isgreaterequal(__lcpp_x, __lcpp_y);"},
{"lineNum":"  641","line":"}"},
{"lineNum":"  642","line":""},
{"lineNum":"  643","line":"#undef isgreaterequal"},
{"lineNum":"  644","line":""},
{"lineNum":"  645","line":"template <class _A1, class _A2>"},
{"lineNum":"  646","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  647","line":"typename std::enable_if"},
{"lineNum":"  648","line":"<"},
{"lineNum":"  649","line":"    std::is_arithmetic<_A1>::value &&"},
{"lineNum":"  650","line":"    std::is_arithmetic<_A2>::value,"},
{"lineNum":"  651","line":"    bool"},
{"lineNum":"  652","line":">::type"},
{"lineNum":"  653","line":"isgreaterequal(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT"},
{"lineNum":"  654","line":"{"},
{"lineNum":"  655","line":"    typedef typename std::__promote<_A1, _A2>::type type;"},
{"lineNum":"  656","line":"    return __libcpp_isgreaterequal((type)__lcpp_x, (type)__lcpp_y);"},
{"lineNum":"  657","line":"}"},
{"lineNum":"  658","line":""},
{"lineNum":"  659","line":"#endif // isgreaterequal"},
{"lineNum":"  660","line":""},
{"lineNum":"  661","line":"// isless"},
{"lineNum":"  662","line":""},
{"lineNum":"  663","line":"#ifdef isless"},
{"lineNum":"  664","line":""},
{"lineNum":"  665","line":"template <class _A1, class _A2>"},
{"lineNum":"  666","line":"_LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  667","line":"bool"},
{"lineNum":"  668","line":"__libcpp_isless(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT"},
{"lineNum":"  669","line":"{"},
{"lineNum":"  670","line":"    return isless(__lcpp_x, __lcpp_y);"},
{"lineNum":"  671","line":"}"},
{"lineNum":"  672","line":""},
{"lineNum":"  673","line":"#undef isless"},
{"lineNum":"  674","line":""},
{"lineNum":"  675","line":"template <class _A1, class _A2>"},
{"lineNum":"  676","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  677","line":"typename std::enable_if"},
{"lineNum":"  678","line":"<"},
{"lineNum":"  679","line":"    std::is_arithmetic<_A1>::value &&"},
{"lineNum":"  680","line":"    std::is_arithmetic<_A2>::value,"},
{"lineNum":"  681","line":"    bool"},
{"lineNum":"  682","line":">::type"},
{"lineNum":"  683","line":"isless(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT"},
{"lineNum":"  684","line":"{"},
{"lineNum":"  685","line":"    typedef typename std::__promote<_A1, _A2>::type type;"},
{"lineNum":"  686","line":"    return __libcpp_isless((type)__lcpp_x, (type)__lcpp_y);"},
{"lineNum":"  687","line":"}"},
{"lineNum":"  688","line":""},
{"lineNum":"  689","line":"#endif // isless"},
{"lineNum":"  690","line":""},
{"lineNum":"  691","line":"// islessequal"},
{"lineNum":"  692","line":""},
{"lineNum":"  693","line":"#ifdef islessequal"},
{"lineNum":"  694","line":""},
{"lineNum":"  695","line":"template <class _A1, class _A2>"},
{"lineNum":"  696","line":"_LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  697","line":"bool"},
{"lineNum":"  698","line":"__libcpp_islessequal(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT"},
{"lineNum":"  699","line":"{"},
{"lineNum":"  700","line":"    return islessequal(__lcpp_x, __lcpp_y);"},
{"lineNum":"  701","line":"}"},
{"lineNum":"  702","line":""},
{"lineNum":"  703","line":"#undef islessequal"},
{"lineNum":"  704","line":""},
{"lineNum":"  705","line":"template <class _A1, class _A2>"},
{"lineNum":"  706","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  707","line":"typename std::enable_if"},
{"lineNum":"  708","line":"<"},
{"lineNum":"  709","line":"    std::is_arithmetic<_A1>::value &&"},
{"lineNum":"  710","line":"    std::is_arithmetic<_A2>::value,"},
{"lineNum":"  711","line":"    bool"},
{"lineNum":"  712","line":">::type"},
{"lineNum":"  713","line":"islessequal(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT"},
{"lineNum":"  714","line":"{"},
{"lineNum":"  715","line":"    typedef typename std::__promote<_A1, _A2>::type type;"},
{"lineNum":"  716","line":"    return __libcpp_islessequal((type)__lcpp_x, (type)__lcpp_y);"},
{"lineNum":"  717","line":"}"},
{"lineNum":"  718","line":""},
{"lineNum":"  719","line":"#endif // islessequal"},
{"lineNum":"  720","line":""},
{"lineNum":"  721","line":"// islessgreater"},
{"lineNum":"  722","line":""},
{"lineNum":"  723","line":"#ifdef islessgreater"},
{"lineNum":"  724","line":""},
{"lineNum":"  725","line":"template <class _A1, class _A2>"},
{"lineNum":"  726","line":"_LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  727","line":"bool"},
{"lineNum":"  728","line":"__libcpp_islessgreater(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT"},
{"lineNum":"  729","line":"{"},
{"lineNum":"  730","line":"    return islessgreater(__lcpp_x, __lcpp_y);"},
{"lineNum":"  731","line":"}"},
{"lineNum":"  732","line":""},
{"lineNum":"  733","line":"#undef islessgreater"},
{"lineNum":"  734","line":""},
{"lineNum":"  735","line":"template <class _A1, class _A2>"},
{"lineNum":"  736","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  737","line":"typename std::enable_if"},
{"lineNum":"  738","line":"<"},
{"lineNum":"  739","line":"    std::is_arithmetic<_A1>::value &&"},
{"lineNum":"  740","line":"    std::is_arithmetic<_A2>::value,"},
{"lineNum":"  741","line":"    bool"},
{"lineNum":"  742","line":">::type"},
{"lineNum":"  743","line":"islessgreater(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT"},
{"lineNum":"  744","line":"{"},
{"lineNum":"  745","line":"    typedef typename std::__promote<_A1, _A2>::type type;"},
{"lineNum":"  746","line":"    return __libcpp_islessgreater((type)__lcpp_x, (type)__lcpp_y);"},
{"lineNum":"  747","line":"}"},
{"lineNum":"  748","line":""},
{"lineNum":"  749","line":"#endif // islessgreater"},
{"lineNum":"  750","line":""},
{"lineNum":"  751","line":"// isunordered"},
{"lineNum":"  752","line":""},
{"lineNum":"  753","line":"#ifdef isunordered"},
{"lineNum":"  754","line":""},
{"lineNum":"  755","line":"template <class _A1, class _A2>"},
{"lineNum":"  756","line":"_LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  757","line":"bool"},
{"lineNum":"  758","line":"__libcpp_isunordered(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT"},
{"lineNum":"  759","line":"{"},
{"lineNum":"  760","line":"    return isunordered(__lcpp_x, __lcpp_y);"},
{"lineNum":"  761","line":"}"},
{"lineNum":"  762","line":""},
{"lineNum":"  763","line":"#undef isunordered"},
{"lineNum":"  764","line":""},
{"lineNum":"  765","line":"template <class _A1, class _A2>"},
{"lineNum":"  766","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  767","line":"typename std::enable_if"},
{"lineNum":"  768","line":"<"},
{"lineNum":"  769","line":"    std::is_arithmetic<_A1>::value &&"},
{"lineNum":"  770","line":"    std::is_arithmetic<_A2>::value,"},
{"lineNum":"  771","line":"    bool"},
{"lineNum":"  772","line":">::type"},
{"lineNum":"  773","line":"isunordered(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT"},
{"lineNum":"  774","line":"{"},
{"lineNum":"  775","line":"    typedef typename std::__promote<_A1, _A2>::type type;"},
{"lineNum":"  776","line":"    return __libcpp_isunordered((type)__lcpp_x, (type)__lcpp_y);"},
{"lineNum":"  777","line":"}"},
{"lineNum":"  778","line":""},
{"lineNum":"  779","line":"#endif // isunordered"},
{"lineNum":"  780","line":""},
{"lineNum":"  781","line":"// abs"},
{"lineNum":"  782","line":"//"},
{"lineNum":"  783","line":"// handled in stdlib.h"},
{"lineNum":"  784","line":""},
{"lineNum":"  785","line":"// div"},
{"lineNum":"  786","line":"//"},
{"lineNum":"  787","line":"// handled in stdlib.h"},
{"lineNum":"  788","line":""},
{"lineNum":"  789","line":"// acos"},
{"lineNum":"  790","line":""},
{"lineNum":"  791","line":"#if !(defined(_AIX) || defined(__sun__))"},
{"lineNum":"  792","line":"inline _LIBCPP_INLINE_VISIBILITY float       acos(float __lcpp_x) _NOEXCEPT       {return ::acosf(__lcpp_x);}"},
{"lineNum":"  793","line":"inline _LIBCPP_INLINE_VISIBILITY long double acos(long double __lcpp_x) _NOEXCEPT {return ::acosl(__lcpp_x);}"},
{"lineNum":"  794","line":"#endif"},
{"lineNum":"  795","line":""},
{"lineNum":"  796","line":"template <class _A1>"},
{"lineNum":"  797","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  798","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":"  799","line":"acos(_A1 __lcpp_x) _NOEXCEPT {return ::acos((double)__lcpp_x);}"},
{"lineNum":"  800","line":""},
{"lineNum":"  801","line":"// asin"},
{"lineNum":"  802","line":""},
{"lineNum":"  803","line":"#if !(defined(_AIX) || defined(__sun__))"},
{"lineNum":"  804","line":"inline _LIBCPP_INLINE_VISIBILITY float       asin(float __lcpp_x) _NOEXCEPT       {return ::asinf(__lcpp_x);}"},
{"lineNum":"  805","line":"inline _LIBCPP_INLINE_VISIBILITY long double asin(long double __lcpp_x) _NOEXCEPT {return ::asinl(__lcpp_x);}"},
{"lineNum":"  806","line":"#endif"},
{"lineNum":"  807","line":""},
{"lineNum":"  808","line":"template <class _A1>"},
{"lineNum":"  809","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  810","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":"  811","line":"asin(_A1 __lcpp_x) _NOEXCEPT {return ::asin((double)__lcpp_x);}"},
{"lineNum":"  812","line":""},
{"lineNum":"  813","line":"// atan"},
{"lineNum":"  814","line":""},
{"lineNum":"  815","line":"#if !(defined(_AIX) || defined(__sun__))"},
{"lineNum":"  816","line":"inline _LIBCPP_INLINE_VISIBILITY float       atan(float __lcpp_x) _NOEXCEPT       {return ::atanf(__lcpp_x);}"},
{"lineNum":"  817","line":"inline _LIBCPP_INLINE_VISIBILITY long double atan(long double __lcpp_x) _NOEXCEPT {return ::atanl(__lcpp_x);}"},
{"lineNum":"  818","line":"#endif"},
{"lineNum":"  819","line":""},
{"lineNum":"  820","line":"template <class _A1>"},
{"lineNum":"  821","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  822","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":"  823","line":"atan(_A1 __lcpp_x) _NOEXCEPT {return ::atan((double)__lcpp_x);}"},
{"lineNum":"  824","line":""},
{"lineNum":"  825","line":"// atan2"},
{"lineNum":"  826","line":""},
{"lineNum":"  827","line":"#if !(defined(_AIX) || defined(__sun__))"},
{"lineNum":"  828","line":"inline _LIBCPP_INLINE_VISIBILITY float       atan2(float __lcpp_y, float __lcpp_x) _NOEXCEPT             {return ::atan2f(__lcpp_y, __lcpp_x);}"},
{"lineNum":"  829","line":"inline _LIBCPP_INLINE_VISIBILITY long double atan2(long double __lcpp_y, long double __lcpp_x) _NOEXCEPT {return ::atan2l(__lcpp_y, __lcpp_x);}"},
{"lineNum":"  830","line":"#endif"},
{"lineNum":"  831","line":""},
{"lineNum":"  832","line":"template <class _A1, class _A2>"},
{"lineNum":"  833","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  834","line":"typename std::_EnableIf"},
{"lineNum":"  835","line":"<"},
{"lineNum":"  836","line":"    std::is_arithmetic<_A1>::value &&"},
{"lineNum":"  837","line":"    std::is_arithmetic<_A2>::value,"},
{"lineNum":"  838","line":"    std::__promote<_A1, _A2>"},
{"lineNum":"  839","line":">::type"},
{"lineNum":"  840","line":"atan2(_A1 __lcpp_y, _A2 __lcpp_x) _NOEXCEPT"},
{"lineNum":"  841","line":"{"},
{"lineNum":"  842","line":"    typedef typename std::__promote<_A1, _A2>::type __result_type;"},
{"lineNum":"  843","line":"    static_assert((!(std::_IsSame<_A1, __result_type>::value &&"},
{"lineNum":"  844","line":"                     std::_IsSame<_A2, __result_type>::value)), \"\");"},
{"lineNum":"  845","line":"    return ::atan2((__result_type)__lcpp_y, (__result_type)__lcpp_x);"},
{"lineNum":"  846","line":"}"},
{"lineNum":"  847","line":""},
{"lineNum":"  848","line":"// ceil"},
{"lineNum":"  849","line":""},
{"lineNum":"  850","line":"#if !(defined(_AIX) || defined(__sun__))"},
{"lineNum":"  851","line":"inline _LIBCPP_INLINE_VISIBILITY float       ceil(float __lcpp_x) _NOEXCEPT       {return ::ceilf(__lcpp_x);}","class":"linePartCov","hits":"4","order":"131","possible_hits":"62",},
{"lineNum":"  852","line":"inline _LIBCPP_INLINE_VISIBILITY long double ceil(long double __lcpp_x) _NOEXCEPT {return ::ceill(__lcpp_x);}"},
{"lineNum":"  853","line":"#endif"},
{"lineNum":"  854","line":""},
{"lineNum":"  855","line":"template <class _A1>"},
{"lineNum":"  856","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  857","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":"  858","line":"ceil(_A1 __lcpp_x) _NOEXCEPT {return ::ceil((double)__lcpp_x);}"},
{"lineNum":"  859","line":""},
{"lineNum":"  860","line":"// cos"},
{"lineNum":"  861","line":""},
{"lineNum":"  862","line":"#if !(defined(_AIX) || defined(__sun__))"},
{"lineNum":"  863","line":"inline _LIBCPP_INLINE_VISIBILITY float       cos(float __lcpp_x) _NOEXCEPT       {return ::cosf(__lcpp_x);}"},
{"lineNum":"  864","line":"inline _LIBCPP_INLINE_VISIBILITY long double cos(long double __lcpp_x) _NOEXCEPT {return ::cosl(__lcpp_x);}"},
{"lineNum":"  865","line":"#endif"},
{"lineNum":"  866","line":""},
{"lineNum":"  867","line":"template <class _A1>"},
{"lineNum":"  868","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  869","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":"  870","line":"cos(_A1 __lcpp_x) _NOEXCEPT {return ::cos((double)__lcpp_x);}"},
{"lineNum":"  871","line":""},
{"lineNum":"  872","line":"// cosh"},
{"lineNum":"  873","line":""},
{"lineNum":"  874","line":"#if !(defined(_AIX) || defined(__sun__))"},
{"lineNum":"  875","line":"inline _LIBCPP_INLINE_VISIBILITY float       cosh(float __lcpp_x) _NOEXCEPT       {return ::coshf(__lcpp_x);}"},
{"lineNum":"  876","line":"inline _LIBCPP_INLINE_VISIBILITY long double cosh(long double __lcpp_x) _NOEXCEPT {return ::coshl(__lcpp_x);}"},
{"lineNum":"  877","line":"#endif"},
{"lineNum":"  878","line":""},
{"lineNum":"  879","line":"template <class _A1>"},
{"lineNum":"  880","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  881","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":"  882","line":"cosh(_A1 __lcpp_x) _NOEXCEPT {return ::cosh((double)__lcpp_x);}"},
{"lineNum":"  883","line":""},
{"lineNum":"  884","line":"// exp"},
{"lineNum":"  885","line":""},
{"lineNum":"  886","line":"#if !(defined(_AIX) || defined(__sun__))"},
{"lineNum":"  887","line":"inline _LIBCPP_INLINE_VISIBILITY float       exp(float __lcpp_x) _NOEXCEPT       {return ::expf(__lcpp_x);}"},
{"lineNum":"  888","line":"inline _LIBCPP_INLINE_VISIBILITY long double exp(long double __lcpp_x) _NOEXCEPT {return ::expl(__lcpp_x);}"},
{"lineNum":"  889","line":"#endif"},
{"lineNum":"  890","line":""},
{"lineNum":"  891","line":"template <class _A1>"},
{"lineNum":"  892","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  893","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":"  894","line":"exp(_A1 __lcpp_x) _NOEXCEPT {return ::exp((double)__lcpp_x);}"},
{"lineNum":"  895","line":""},
{"lineNum":"  896","line":"// fabs"},
{"lineNum":"  897","line":""},
{"lineNum":"  898","line":"#if !(defined(_AIX) || defined(__sun__))"},
{"lineNum":"  899","line":"inline _LIBCPP_INLINE_VISIBILITY float       fabs(float __lcpp_x) _NOEXCEPT       {return ::fabsf(__lcpp_x);}"},
{"lineNum":"  900","line":"inline _LIBCPP_INLINE_VISIBILITY long double fabs(long double __lcpp_x) _NOEXCEPT {return ::fabsl(__lcpp_x);}"},
{"lineNum":"  901","line":"#endif"},
{"lineNum":"  902","line":""},
{"lineNum":"  903","line":"template <class _A1>"},
{"lineNum":"  904","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  905","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":"  906","line":"fabs(_A1 __lcpp_x) _NOEXCEPT {return ::fabs((double)__lcpp_x);}"},
{"lineNum":"  907","line":""},
{"lineNum":"  908","line":"// floor"},
{"lineNum":"  909","line":""},
{"lineNum":"  910","line":"#if !(defined(_AIX) || defined(__sun__))"},
{"lineNum":"  911","line":"inline _LIBCPP_INLINE_VISIBILITY float       floor(float __lcpp_x) _NOEXCEPT       {return ::floorf(__lcpp_x);}"},
{"lineNum":"  912","line":"inline _LIBCPP_INLINE_VISIBILITY long double floor(long double __lcpp_x) _NOEXCEPT {return ::floorl(__lcpp_x);}"},
{"lineNum":"  913","line":"#endif"},
{"lineNum":"  914","line":""},
{"lineNum":"  915","line":"template <class _A1>"},
{"lineNum":"  916","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  917","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":"  918","line":"floor(_A1 __lcpp_x) _NOEXCEPT {return ::floor((double)__lcpp_x);}"},
{"lineNum":"  919","line":""},
{"lineNum":"  920","line":"// fmod"},
{"lineNum":"  921","line":""},
{"lineNum":"  922","line":"#if !(defined(_AIX) || defined(__sun__))"},
{"lineNum":"  923","line":"inline _LIBCPP_INLINE_VISIBILITY float       fmod(float __lcpp_x, float __lcpp_y) _NOEXCEPT             {return ::fmodf(__lcpp_x, __lcpp_y);}"},
{"lineNum":"  924","line":"inline _LIBCPP_INLINE_VISIBILITY long double fmod(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return ::fmodl(__lcpp_x, __lcpp_y);}"},
{"lineNum":"  925","line":"#endif"},
{"lineNum":"  926","line":""},
{"lineNum":"  927","line":"template <class _A1, class _A2>"},
{"lineNum":"  928","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  929","line":"typename std::_EnableIf"},
{"lineNum":"  930","line":"<"},
{"lineNum":"  931","line":"    std::is_arithmetic<_A1>::value &&"},
{"lineNum":"  932","line":"    std::is_arithmetic<_A2>::value,"},
{"lineNum":"  933","line":"    std::__promote<_A1, _A2>"},
{"lineNum":"  934","line":">::type"},
{"lineNum":"  935","line":"fmod(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT"},
{"lineNum":"  936","line":"{"},
{"lineNum":"  937","line":"    typedef typename std::__promote<_A1, _A2>::type __result_type;"},
{"lineNum":"  938","line":"    static_assert((!(std::_IsSame<_A1, __result_type>::value &&"},
{"lineNum":"  939","line":"                     std::_IsSame<_A2, __result_type>::value)), \"\");"},
{"lineNum":"  940","line":"    return ::fmod((__result_type)__lcpp_x, (__result_type)__lcpp_y);","class":"lineNoCov","hits":"0","possible_hits":"5",},
{"lineNum":"  941","line":"}"},
{"lineNum":"  942","line":""},
{"lineNum":"  943","line":"// frexp"},
{"lineNum":"  944","line":""},
{"lineNum":"  945","line":"#if !(defined(_AIX) || defined(__sun__))"},
{"lineNum":"  946","line":"inline _LIBCPP_INLINE_VISIBILITY float       frexp(float __lcpp_x, int* __lcpp_e) _NOEXCEPT       {return ::frexpf(__lcpp_x, __lcpp_e);}"},
{"lineNum":"  947","line":"inline _LIBCPP_INLINE_VISIBILITY long double frexp(long double __lcpp_x, int* __lcpp_e) _NOEXCEPT {return ::frexpl(__lcpp_x, __lcpp_e);}"},
{"lineNum":"  948","line":"#endif"},
{"lineNum":"  949","line":""},
{"lineNum":"  950","line":"template <class _A1>"},
{"lineNum":"  951","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  952","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":"  953","line":"frexp(_A1 __lcpp_x, int* __lcpp_e) _NOEXCEPT {return ::frexp((double)__lcpp_x, __lcpp_e);}"},
{"lineNum":"  954","line":""},
{"lineNum":"  955","line":"// ldexp"},
{"lineNum":"  956","line":""},
{"lineNum":"  957","line":"#if !(defined(_AIX) || defined(__sun__))"},
{"lineNum":"  958","line":"inline _LIBCPP_INLINE_VISIBILITY float       ldexp(float __lcpp_x, int __lcpp_e) _NOEXCEPT       {return ::ldexpf(__lcpp_x, __lcpp_e);}"},
{"lineNum":"  959","line":"inline _LIBCPP_INLINE_VISIBILITY long double ldexp(long double __lcpp_x, int __lcpp_e) _NOEXCEPT {return ::ldexpl(__lcpp_x, __lcpp_e);}"},
{"lineNum":"  960","line":"#endif"},
{"lineNum":"  961","line":""},
{"lineNum":"  962","line":"template <class _A1>"},
{"lineNum":"  963","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  964","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":"  965","line":"ldexp(_A1 __lcpp_x, int __lcpp_e) _NOEXCEPT {return ::ldexp((double)__lcpp_x, __lcpp_e);}"},
{"lineNum":"  966","line":""},
{"lineNum":"  967","line":"// log"},
{"lineNum":"  968","line":""},
{"lineNum":"  969","line":"#if !(defined(_AIX) || defined(__sun__))"},
{"lineNum":"  970","line":"inline _LIBCPP_INLINE_VISIBILITY float       log(float __lcpp_x) _NOEXCEPT       {return ::logf(__lcpp_x);}"},
{"lineNum":"  971","line":"inline _LIBCPP_INLINE_VISIBILITY long double log(long double __lcpp_x) _NOEXCEPT {return ::logl(__lcpp_x);}"},
{"lineNum":"  972","line":"#endif"},
{"lineNum":"  973","line":""},
{"lineNum":"  974","line":"template <class _A1>"},
{"lineNum":"  975","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  976","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":"  977","line":"log(_A1 __lcpp_x) _NOEXCEPT {return ::log((double)__lcpp_x);}"},
{"lineNum":"  978","line":""},
{"lineNum":"  979","line":"// log10"},
{"lineNum":"  980","line":""},
{"lineNum":"  981","line":"#if !(defined(_AIX) || defined(__sun__))"},
{"lineNum":"  982","line":"inline _LIBCPP_INLINE_VISIBILITY float       log10(float __lcpp_x) _NOEXCEPT       {return ::log10f(__lcpp_x);}"},
{"lineNum":"  983","line":"inline _LIBCPP_INLINE_VISIBILITY long double log10(long double __lcpp_x) _NOEXCEPT {return ::log10l(__lcpp_x);}"},
{"lineNum":"  984","line":"#endif"},
{"lineNum":"  985","line":""},
{"lineNum":"  986","line":"template <class _A1>"},
{"lineNum":"  987","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  988","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":"  989","line":"log10(_A1 __lcpp_x) _NOEXCEPT {return ::log10((double)__lcpp_x);}"},
{"lineNum":"  990","line":""},
{"lineNum":"  991","line":"// modf"},
{"lineNum":"  992","line":""},
{"lineNum":"  993","line":"#if !(defined(_AIX) || defined(__sun__))"},
{"lineNum":"  994","line":"inline _LIBCPP_INLINE_VISIBILITY float       modf(float __lcpp_x, float* __lcpp_y) _NOEXCEPT             {return ::modff(__lcpp_x, __lcpp_y);}"},
{"lineNum":"  995","line":"inline _LIBCPP_INLINE_VISIBILITY long double modf(long double __lcpp_x, long double* __lcpp_y) _NOEXCEPT {return ::modfl(__lcpp_x, __lcpp_y);}"},
{"lineNum":"  996","line":"#endif"},
{"lineNum":"  997","line":""},
{"lineNum":"  998","line":"// pow"},
{"lineNum":"  999","line":""},
{"lineNum":" 1000","line":"#if !(defined(_AIX) || defined(__sun__))"},
{"lineNum":" 1001","line":"inline _LIBCPP_INLINE_VISIBILITY float       pow(float __lcpp_x, float __lcpp_y) _NOEXCEPT             {return ::powf(__lcpp_x, __lcpp_y);}"},
{"lineNum":" 1002","line":"inline _LIBCPP_INLINE_VISIBILITY long double pow(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return ::powl(__lcpp_x, __lcpp_y);}"},
{"lineNum":" 1003","line":"#endif"},
{"lineNum":" 1004","line":""},
{"lineNum":" 1005","line":"template <class _A1, class _A2>"},
{"lineNum":" 1006","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1007","line":"typename std::_EnableIf"},
{"lineNum":" 1008","line":"<"},
{"lineNum":" 1009","line":"    std::is_arithmetic<_A1>::value &&"},
{"lineNum":" 1010","line":"    std::is_arithmetic<_A2>::value,"},
{"lineNum":" 1011","line":"    std::__promote<_A1, _A2>"},
{"lineNum":" 1012","line":">::type"},
{"lineNum":" 1013","line":"pow(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT"},
{"lineNum":" 1014","line":"{"},
{"lineNum":" 1015","line":"    typedef typename std::__promote<_A1, _A2>::type __result_type;"},
{"lineNum":" 1016","line":"    static_assert((!(std::_IsSame<_A1, __result_type>::value &&"},
{"lineNum":" 1017","line":"                     std::_IsSame<_A2, __result_type>::value)), \"\");"},
{"lineNum":" 1018","line":"    return ::pow((__result_type)__lcpp_x, (__result_type)__lcpp_y);","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":" 1019","line":"}"},
{"lineNum":" 1020","line":""},
{"lineNum":" 1021","line":"// sin"},
{"lineNum":" 1022","line":""},
{"lineNum":" 1023","line":"#if !(defined(_AIX) || defined(__sun__))"},
{"lineNum":" 1024","line":"inline _LIBCPP_INLINE_VISIBILITY float       sin(float __lcpp_x) _NOEXCEPT       {return ::sinf(__lcpp_x);}"},
{"lineNum":" 1025","line":"inline _LIBCPP_INLINE_VISIBILITY long double sin(long double __lcpp_x) _NOEXCEPT {return ::sinl(__lcpp_x);}"},
{"lineNum":" 1026","line":"#endif"},
{"lineNum":" 1027","line":""},
{"lineNum":" 1028","line":"template <class _A1>"},
{"lineNum":" 1029","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1030","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":" 1031","line":"sin(_A1 __lcpp_x) _NOEXCEPT {return ::sin((double)__lcpp_x);}"},
{"lineNum":" 1032","line":""},
{"lineNum":" 1033","line":"// sinh"},
{"lineNum":" 1034","line":""},
{"lineNum":" 1035","line":"#if !(defined(_AIX) || defined(__sun__))"},
{"lineNum":" 1036","line":"inline _LIBCPP_INLINE_VISIBILITY float       sinh(float __lcpp_x) _NOEXCEPT       {return ::sinhf(__lcpp_x);}"},
{"lineNum":" 1037","line":"inline _LIBCPP_INLINE_VISIBILITY long double sinh(long double __lcpp_x) _NOEXCEPT {return ::sinhl(__lcpp_x);}"},
{"lineNum":" 1038","line":"#endif"},
{"lineNum":" 1039","line":""},
{"lineNum":" 1040","line":"template <class _A1>"},
{"lineNum":" 1041","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1042","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":" 1043","line":"sinh(_A1 __lcpp_x) _NOEXCEPT {return ::sinh((double)__lcpp_x);}"},
{"lineNum":" 1044","line":""},
{"lineNum":" 1045","line":"// sqrt"},
{"lineNum":" 1046","line":""},
{"lineNum":" 1047","line":"#if !(defined(_AIX) || defined(__sun__))"},
{"lineNum":" 1048","line":"inline _LIBCPP_INLINE_VISIBILITY float       sqrt(float __lcpp_x) _NOEXCEPT       {return ::sqrtf(__lcpp_x);}"},
{"lineNum":" 1049","line":"inline _LIBCPP_INLINE_VISIBILITY long double sqrt(long double __lcpp_x) _NOEXCEPT {return ::sqrtl(__lcpp_x);}"},
{"lineNum":" 1050","line":"#endif"},
{"lineNum":" 1051","line":""},
{"lineNum":" 1052","line":"template <class _A1>"},
{"lineNum":" 1053","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1054","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":" 1055","line":"sqrt(_A1 __lcpp_x) _NOEXCEPT {return ::sqrt((double)__lcpp_x);}"},
{"lineNum":" 1056","line":""},
{"lineNum":" 1057","line":"// tan"},
{"lineNum":" 1058","line":""},
{"lineNum":" 1059","line":"#if !(defined(_AIX) || defined(__sun__))"},
{"lineNum":" 1060","line":"inline _LIBCPP_INLINE_VISIBILITY float       tan(float __lcpp_x) _NOEXCEPT       {return ::tanf(__lcpp_x);}"},
{"lineNum":" 1061","line":"inline _LIBCPP_INLINE_VISIBILITY long double tan(long double __lcpp_x) _NOEXCEPT {return ::tanl(__lcpp_x);}"},
{"lineNum":" 1062","line":"#endif"},
{"lineNum":" 1063","line":""},
{"lineNum":" 1064","line":"template <class _A1>"},
{"lineNum":" 1065","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1066","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":" 1067","line":"tan(_A1 __lcpp_x) _NOEXCEPT {return ::tan((double)__lcpp_x);}"},
{"lineNum":" 1068","line":""},
{"lineNum":" 1069","line":"// tanh"},
{"lineNum":" 1070","line":""},
{"lineNum":" 1071","line":"#if !(defined(_AIX) || defined(__sun__))"},
{"lineNum":" 1072","line":"inline _LIBCPP_INLINE_VISIBILITY float       tanh(float __lcpp_x) _NOEXCEPT       {return ::tanhf(__lcpp_x);}"},
{"lineNum":" 1073","line":"inline _LIBCPP_INLINE_VISIBILITY long double tanh(long double __lcpp_x) _NOEXCEPT {return ::tanhl(__lcpp_x);}"},
{"lineNum":" 1074","line":"#endif"},
{"lineNum":" 1075","line":""},
{"lineNum":" 1076","line":"template <class _A1>"},
{"lineNum":" 1077","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1078","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":" 1079","line":"tanh(_A1 __lcpp_x) _NOEXCEPT {return ::tanh((double)__lcpp_x);}"},
{"lineNum":" 1080","line":""},
{"lineNum":" 1081","line":"// acosh"},
{"lineNum":" 1082","line":""},
{"lineNum":" 1083","line":"inline _LIBCPP_INLINE_VISIBILITY float       acosh(float __lcpp_x) _NOEXCEPT       {return ::acoshf(__lcpp_x);}"},
{"lineNum":" 1084","line":"inline _LIBCPP_INLINE_VISIBILITY long double acosh(long double __lcpp_x) _NOEXCEPT {return ::acoshl(__lcpp_x);}"},
{"lineNum":" 1085","line":""},
{"lineNum":" 1086","line":"template <class _A1>"},
{"lineNum":" 1087","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1088","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":" 1089","line":"acosh(_A1 __lcpp_x) _NOEXCEPT {return ::acosh((double)__lcpp_x);}"},
{"lineNum":" 1090","line":""},
{"lineNum":" 1091","line":"// asinh"},
{"lineNum":" 1092","line":""},
{"lineNum":" 1093","line":"inline _LIBCPP_INLINE_VISIBILITY float       asinh(float __lcpp_x) _NOEXCEPT       {return ::asinhf(__lcpp_x);}"},
{"lineNum":" 1094","line":"inline _LIBCPP_INLINE_VISIBILITY long double asinh(long double __lcpp_x) _NOEXCEPT {return ::asinhl(__lcpp_x);}"},
{"lineNum":" 1095","line":""},
{"lineNum":" 1096","line":"template <class _A1>"},
{"lineNum":" 1097","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1098","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":" 1099","line":"asinh(_A1 __lcpp_x) _NOEXCEPT {return ::asinh((double)__lcpp_x);}"},
{"lineNum":" 1100","line":""},
{"lineNum":" 1101","line":"// atanh"},
{"lineNum":" 1102","line":""},
{"lineNum":" 1103","line":"inline _LIBCPP_INLINE_VISIBILITY float       atanh(float __lcpp_x) _NOEXCEPT       {return ::atanhf(__lcpp_x);}"},
{"lineNum":" 1104","line":"inline _LIBCPP_INLINE_VISIBILITY long double atanh(long double __lcpp_x) _NOEXCEPT {return ::atanhl(__lcpp_x);}"},
{"lineNum":" 1105","line":""},
{"lineNum":" 1106","line":"template <class _A1>"},
{"lineNum":" 1107","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1108","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":" 1109","line":"atanh(_A1 __lcpp_x) _NOEXCEPT {return ::atanh((double)__lcpp_x);}"},
{"lineNum":" 1110","line":""},
{"lineNum":" 1111","line":"// cbrt"},
{"lineNum":" 1112","line":""},
{"lineNum":" 1113","line":"inline _LIBCPP_INLINE_VISIBILITY float       cbrt(float __lcpp_x) _NOEXCEPT       {return ::cbrtf(__lcpp_x);}"},
{"lineNum":" 1114","line":"inline _LIBCPP_INLINE_VISIBILITY long double cbrt(long double __lcpp_x) _NOEXCEPT {return ::cbrtl(__lcpp_x);}"},
{"lineNum":" 1115","line":""},
{"lineNum":" 1116","line":"template <class _A1>"},
{"lineNum":" 1117","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1118","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":" 1119","line":"cbrt(_A1 __lcpp_x) _NOEXCEPT {return ::cbrt((double)__lcpp_x);}"},
{"lineNum":" 1120","line":""},
{"lineNum":" 1121","line":"// copysign"},
{"lineNum":" 1122","line":""},
{"lineNum":" 1123","line":"#if __has_builtin(__builtin_copysignf)"},
{"lineNum":" 1124","line":"_LIBCPP_CONSTEXPR"},
{"lineNum":" 1125","line":"#endif"},
{"lineNum":" 1126","line":"inline _LIBCPP_INLINE_VISIBILITY float __libcpp_copysign(float __lcpp_x, float __lcpp_y) _NOEXCEPT {"},
{"lineNum":" 1127","line":"#if __has_builtin(__builtin_copysignf)"},
{"lineNum":" 1128","line":"  return __builtin_copysignf(__lcpp_x, __lcpp_y);"},
{"lineNum":" 1129","line":"#else"},
{"lineNum":" 1130","line":"  return ::copysignf(__lcpp_x, __lcpp_y);"},
{"lineNum":" 1131","line":"#endif"},
{"lineNum":" 1132","line":"}"},
{"lineNum":" 1133","line":""},
{"lineNum":" 1134","line":"#if __has_builtin(__builtin_copysign)"},
{"lineNum":" 1135","line":"_LIBCPP_CONSTEXPR"},
{"lineNum":" 1136","line":"#endif"},
{"lineNum":" 1137","line":"inline _LIBCPP_INLINE_VISIBILITY double __libcpp_copysign(double __lcpp_x, double __lcpp_y) _NOEXCEPT {"},
{"lineNum":" 1138","line":"#if __has_builtin(__builtin_copysign)"},
{"lineNum":" 1139","line":"  return __builtin_copysign(__lcpp_x, __lcpp_y);"},
{"lineNum":" 1140","line":"#else"},
{"lineNum":" 1141","line":"  return ::copysign(__lcpp_x, __lcpp_y);"},
{"lineNum":" 1142","line":"#endif"},
{"lineNum":" 1143","line":"}"},
{"lineNum":" 1144","line":""},
{"lineNum":" 1145","line":"#if __has_builtin(__builtin_copysignl)"},
{"lineNum":" 1146","line":"_LIBCPP_CONSTEXPR"},
{"lineNum":" 1147","line":"#endif"},
{"lineNum":" 1148","line":"inline _LIBCPP_INLINE_VISIBILITY long double __libcpp_copysign(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {"},
{"lineNum":" 1149","line":"#if __has_builtin(__builtin_copysignl)"},
{"lineNum":" 1150","line":"  return __builtin_copysignl(__lcpp_x, __lcpp_y);"},
{"lineNum":" 1151","line":"#else"},
{"lineNum":" 1152","line":"  return ::copysignl(__lcpp_x, __lcpp_y);"},
{"lineNum":" 1153","line":"#endif"},
{"lineNum":" 1154","line":"}"},
{"lineNum":" 1155","line":""},
{"lineNum":" 1156","line":"template <class _A1, class _A2>"},
{"lineNum":" 1157","line":"#if __has_builtin(__builtin_copysign)"},
{"lineNum":" 1158","line":"_LIBCPP_CONSTEXPR"},
{"lineNum":" 1159","line":"#endif"},
{"lineNum":" 1160","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1161","line":"typename std::_EnableIf"},
{"lineNum":" 1162","line":"<"},
{"lineNum":" 1163","line":"    std::is_arithmetic<_A1>::value &&"},
{"lineNum":" 1164","line":"    std::is_arithmetic<_A2>::value,"},
{"lineNum":" 1165","line":"    std::__promote<_A1, _A2>"},
{"lineNum":" 1166","line":">::type"},
{"lineNum":" 1167","line":"__libcpp_copysign(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT {"},
{"lineNum":" 1168","line":"    typedef typename std::__promote<_A1, _A2>::type __result_type;"},
{"lineNum":" 1169","line":"    static_assert((!(std::_IsSame<_A1, __result_type>::value &&"},
{"lineNum":" 1170","line":"                     std::_IsSame<_A2, __result_type>::value)), \"\");"},
{"lineNum":" 1171","line":"#if __has_builtin(__builtin_copysign)"},
{"lineNum":" 1172","line":"    return __builtin_copysign((__result_type)__lcpp_x, (__result_type)__lcpp_y);"},
{"lineNum":" 1173","line":"#else"},
{"lineNum":" 1174","line":"    return ::copysign((__result_type)__lcpp_x, (__result_type)__lcpp_y);"},
{"lineNum":" 1175","line":"#endif"},
{"lineNum":" 1176","line":"}"},
{"lineNum":" 1177","line":""},
{"lineNum":" 1178","line":"inline _LIBCPP_INLINE_VISIBILITY float copysign(float __lcpp_x, float __lcpp_y) _NOEXCEPT {"},
{"lineNum":" 1179","line":"  return ::__libcpp_copysign(__lcpp_x, __lcpp_y);"},
{"lineNum":" 1180","line":"}"},
{"lineNum":" 1181","line":""},
{"lineNum":" 1182","line":"inline _LIBCPP_INLINE_VISIBILITY long double copysign(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {"},
{"lineNum":" 1183","line":"  return ::__libcpp_copysign(__lcpp_x, __lcpp_y);"},
{"lineNum":" 1184","line":"}"},
{"lineNum":" 1185","line":""},
{"lineNum":" 1186","line":"template <class _A1, class _A2>"},
{"lineNum":" 1187","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1188","line":"typename std::_EnableIf"},
{"lineNum":" 1189","line":"<"},
{"lineNum":" 1190","line":"    std::is_arithmetic<_A1>::value &&"},
{"lineNum":" 1191","line":"    std::is_arithmetic<_A2>::value,"},
{"lineNum":" 1192","line":"    std::__promote<_A1, _A2>"},
{"lineNum":" 1193","line":">::type"},
{"lineNum":" 1194","line":"    copysign(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT {"},
{"lineNum":" 1195","line":"  return ::__libcpp_copysign(__lcpp_x, __lcpp_y);"},
{"lineNum":" 1196","line":"}"},
{"lineNum":" 1197","line":""},
{"lineNum":" 1198","line":"// erf"},
{"lineNum":" 1199","line":""},
{"lineNum":" 1200","line":"inline _LIBCPP_INLINE_VISIBILITY float       erf(float __lcpp_x) _NOEXCEPT       {return ::erff(__lcpp_x);}"},
{"lineNum":" 1201","line":"inline _LIBCPP_INLINE_VISIBILITY long double erf(long double __lcpp_x) _NOEXCEPT {return ::erfl(__lcpp_x);}"},
{"lineNum":" 1202","line":""},
{"lineNum":" 1203","line":"template <class _A1>"},
{"lineNum":" 1204","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1205","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":" 1206","line":"erf(_A1 __lcpp_x) _NOEXCEPT {return ::erf((double)__lcpp_x);}"},
{"lineNum":" 1207","line":""},
{"lineNum":" 1208","line":"// erfc"},
{"lineNum":" 1209","line":""},
{"lineNum":" 1210","line":"inline _LIBCPP_INLINE_VISIBILITY float       erfc(float __lcpp_x) _NOEXCEPT       {return ::erfcf(__lcpp_x);}"},
{"lineNum":" 1211","line":"inline _LIBCPP_INLINE_VISIBILITY long double erfc(long double __lcpp_x) _NOEXCEPT {return ::erfcl(__lcpp_x);}"},
{"lineNum":" 1212","line":""},
{"lineNum":" 1213","line":"template <class _A1>"},
{"lineNum":" 1214","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1215","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":" 1216","line":"erfc(_A1 __lcpp_x) _NOEXCEPT {return ::erfc((double)__lcpp_x);}"},
{"lineNum":" 1217","line":""},
{"lineNum":" 1218","line":"// exp2"},
{"lineNum":" 1219","line":""},
{"lineNum":" 1220","line":"inline _LIBCPP_INLINE_VISIBILITY float       exp2(float __lcpp_x) _NOEXCEPT       {return ::exp2f(__lcpp_x);}"},
{"lineNum":" 1221","line":"inline _LIBCPP_INLINE_VISIBILITY long double exp2(long double __lcpp_x) _NOEXCEPT {return ::exp2l(__lcpp_x);}"},
{"lineNum":" 1222","line":""},
{"lineNum":" 1223","line":"template <class _A1>"},
{"lineNum":" 1224","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1225","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":" 1226","line":"exp2(_A1 __lcpp_x) _NOEXCEPT {return ::exp2((double)__lcpp_x);}"},
{"lineNum":" 1227","line":""},
{"lineNum":" 1228","line":"// expm1"},
{"lineNum":" 1229","line":""},
{"lineNum":" 1230","line":"inline _LIBCPP_INLINE_VISIBILITY float       expm1(float __lcpp_x) _NOEXCEPT       {return ::expm1f(__lcpp_x);}"},
{"lineNum":" 1231","line":"inline _LIBCPP_INLINE_VISIBILITY long double expm1(long double __lcpp_x) _NOEXCEPT {return ::expm1l(__lcpp_x);}"},
{"lineNum":" 1232","line":""},
{"lineNum":" 1233","line":"template <class _A1>"},
{"lineNum":" 1234","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1235","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":" 1236","line":"expm1(_A1 __lcpp_x) _NOEXCEPT {return ::expm1((double)__lcpp_x);}"},
{"lineNum":" 1237","line":""},
{"lineNum":" 1238","line":"// fdim"},
{"lineNum":" 1239","line":""},
{"lineNum":" 1240","line":"inline _LIBCPP_INLINE_VISIBILITY float       fdim(float __lcpp_x, float __lcpp_y) _NOEXCEPT             {return ::fdimf(__lcpp_x, __lcpp_y);}"},
{"lineNum":" 1241","line":"inline _LIBCPP_INLINE_VISIBILITY long double fdim(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return ::fdiml(__lcpp_x, __lcpp_y);}"},
{"lineNum":" 1242","line":""},
{"lineNum":" 1243","line":"template <class _A1, class _A2>"},
{"lineNum":" 1244","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1245","line":"typename std::_EnableIf"},
{"lineNum":" 1246","line":"<"},
{"lineNum":" 1247","line":"    std::is_arithmetic<_A1>::value &&"},
{"lineNum":" 1248","line":"    std::is_arithmetic<_A2>::value,"},
{"lineNum":" 1249","line":"    std::__promote<_A1, _A2>"},
{"lineNum":" 1250","line":">::type"},
{"lineNum":" 1251","line":"fdim(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT"},
{"lineNum":" 1252","line":"{"},
{"lineNum":" 1253","line":"    typedef typename std::__promote<_A1, _A2>::type __result_type;"},
{"lineNum":" 1254","line":"    static_assert((!(std::_IsSame<_A1, __result_type>::value &&"},
{"lineNum":" 1255","line":"                     std::_IsSame<_A2, __result_type>::value)), \"\");"},
{"lineNum":" 1256","line":"    return ::fdim((__result_type)__lcpp_x, (__result_type)__lcpp_y);"},
{"lineNum":" 1257","line":"}"},
{"lineNum":" 1258","line":""},
{"lineNum":" 1259","line":"// fma"},
{"lineNum":" 1260","line":""},
{"lineNum":" 1261","line":"inline _LIBCPP_INLINE_VISIBILITY float       fma(float __lcpp_x, float __lcpp_y, float __lcpp_z) _NOEXCEPT"},
{"lineNum":" 1262","line":"{"},
{"lineNum":" 1263","line":"#if __has_builtin(__builtin_fmaf)"},
{"lineNum":" 1264","line":"    return __builtin_fmaf(__lcpp_x, __lcpp_y, __lcpp_z);"},
{"lineNum":" 1265","line":"#else"},
{"lineNum":" 1266","line":"    return ::fmaf(__lcpp_x, __lcpp_y, __lcpp_z);"},
{"lineNum":" 1267","line":"#endif"},
{"lineNum":" 1268","line":"}"},
{"lineNum":" 1269","line":"inline _LIBCPP_INLINE_VISIBILITY long double fma(long double __lcpp_x, long double __lcpp_y, long double __lcpp_z) _NOEXCEPT"},
{"lineNum":" 1270","line":"{"},
{"lineNum":" 1271","line":"#if __has_builtin(__builtin_fmal)"},
{"lineNum":" 1272","line":"    return __builtin_fmal(__lcpp_x, __lcpp_y, __lcpp_z);"},
{"lineNum":" 1273","line":"#else"},
{"lineNum":" 1274","line":"    return ::fmal(__lcpp_x, __lcpp_y, __lcpp_z);"},
{"lineNum":" 1275","line":"#endif"},
{"lineNum":" 1276","line":"}"},
{"lineNum":" 1277","line":""},
{"lineNum":" 1278","line":"template <class _A1, class _A2, class _A3>"},
{"lineNum":" 1279","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1280","line":"typename std::_EnableIf"},
{"lineNum":" 1281","line":"<"},
{"lineNum":" 1282","line":"    std::is_arithmetic<_A1>::value &&"},
{"lineNum":" 1283","line":"    std::is_arithmetic<_A2>::value &&"},
{"lineNum":" 1284","line":"    std::is_arithmetic<_A3>::value,"},
{"lineNum":" 1285","line":"    std::__promote<_A1, _A2, _A3>"},
{"lineNum":" 1286","line":">::type"},
{"lineNum":" 1287","line":"fma(_A1 __lcpp_x, _A2 __lcpp_y, _A3 __lcpp_z) _NOEXCEPT"},
{"lineNum":" 1288","line":"{"},
{"lineNum":" 1289","line":"    typedef typename std::__promote<_A1, _A2, _A3>::type __result_type;"},
{"lineNum":" 1290","line":"    static_assert((!(std::_IsSame<_A1, __result_type>::value &&"},
{"lineNum":" 1291","line":"                     std::_IsSame<_A2, __result_type>::value &&"},
{"lineNum":" 1292","line":"                     std::_IsSame<_A3, __result_type>::value)), \"\");"},
{"lineNum":" 1293","line":"#if __has_builtin(__builtin_fma)"},
{"lineNum":" 1294","line":"    return __builtin_fma((__result_type)__lcpp_x, (__result_type)__lcpp_y, (__result_type)__lcpp_z);"},
{"lineNum":" 1295","line":"#else"},
{"lineNum":" 1296","line":"    return ::fma((__result_type)__lcpp_x, (__result_type)__lcpp_y, (__result_type)__lcpp_z);"},
{"lineNum":" 1297","line":"#endif"},
{"lineNum":" 1298","line":"}"},
{"lineNum":" 1299","line":""},
{"lineNum":" 1300","line":"// fmax"},
{"lineNum":" 1301","line":""},
{"lineNum":" 1302","line":"inline _LIBCPP_INLINE_VISIBILITY float       fmax(float __lcpp_x, float __lcpp_y) _NOEXCEPT             {return ::fmaxf(__lcpp_x, __lcpp_y);}"},
{"lineNum":" 1303","line":"inline _LIBCPP_INLINE_VISIBILITY long double fmax(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return ::fmaxl(__lcpp_x, __lcpp_y);}"},
{"lineNum":" 1304","line":""},
{"lineNum":" 1305","line":"template <class _A1, class _A2>"},
{"lineNum":" 1306","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1307","line":"typename std::_EnableIf"},
{"lineNum":" 1308","line":"<"},
{"lineNum":" 1309","line":"    std::is_arithmetic<_A1>::value &&"},
{"lineNum":" 1310","line":"    std::is_arithmetic<_A2>::value,"},
{"lineNum":" 1311","line":"    std::__promote<_A1, _A2>"},
{"lineNum":" 1312","line":">::type"},
{"lineNum":" 1313","line":"fmax(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT"},
{"lineNum":" 1314","line":"{"},
{"lineNum":" 1315","line":"    typedef typename std::__promote<_A1, _A2>::type __result_type;"},
{"lineNum":" 1316","line":"    static_assert((!(std::_IsSame<_A1, __result_type>::value &&"},
{"lineNum":" 1317","line":"                     std::_IsSame<_A2, __result_type>::value)), \"\");"},
{"lineNum":" 1318","line":"    return ::fmax((__result_type)__lcpp_x, (__result_type)__lcpp_y);"},
{"lineNum":" 1319","line":"}"},
{"lineNum":" 1320","line":""},
{"lineNum":" 1321","line":"// fmin"},
{"lineNum":" 1322","line":""},
{"lineNum":" 1323","line":"inline _LIBCPP_INLINE_VISIBILITY float       fmin(float __lcpp_x, float __lcpp_y) _NOEXCEPT             {return ::fminf(__lcpp_x, __lcpp_y);}"},
{"lineNum":" 1324","line":"inline _LIBCPP_INLINE_VISIBILITY long double fmin(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return ::fminl(__lcpp_x, __lcpp_y);}"},
{"lineNum":" 1325","line":""},
{"lineNum":" 1326","line":"template <class _A1, class _A2>"},
{"lineNum":" 1327","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1328","line":"typename std::_EnableIf"},
{"lineNum":" 1329","line":"<"},
{"lineNum":" 1330","line":"    std::is_arithmetic<_A1>::value &&"},
{"lineNum":" 1331","line":"    std::is_arithmetic<_A2>::value,"},
{"lineNum":" 1332","line":"    std::__promote<_A1, _A2>"},
{"lineNum":" 1333","line":">::type"},
{"lineNum":" 1334","line":"fmin(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT"},
{"lineNum":" 1335","line":"{"},
{"lineNum":" 1336","line":"    typedef typename std::__promote<_A1, _A2>::type __result_type;"},
{"lineNum":" 1337","line":"    static_assert((!(std::_IsSame<_A1, __result_type>::value &&"},
{"lineNum":" 1338","line":"                     std::_IsSame<_A2, __result_type>::value)), \"\");"},
{"lineNum":" 1339","line":"    return ::fmin((__result_type)__lcpp_x, (__result_type)__lcpp_y);"},
{"lineNum":" 1340","line":"}"},
{"lineNum":" 1341","line":""},
{"lineNum":" 1342","line":"// hypot"},
{"lineNum":" 1343","line":""},
{"lineNum":" 1344","line":"inline _LIBCPP_INLINE_VISIBILITY float       hypot(float __lcpp_x, float __lcpp_y) _NOEXCEPT             {return ::hypotf(__lcpp_x, __lcpp_y);}"},
{"lineNum":" 1345","line":"inline _LIBCPP_INLINE_VISIBILITY long double hypot(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return ::hypotl(__lcpp_x, __lcpp_y);}"},
{"lineNum":" 1346","line":""},
{"lineNum":" 1347","line":"template <class _A1, class _A2>"},
{"lineNum":" 1348","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1349","line":"typename std::_EnableIf"},
{"lineNum":" 1350","line":"<"},
{"lineNum":" 1351","line":"    std::is_arithmetic<_A1>::value &&"},
{"lineNum":" 1352","line":"    std::is_arithmetic<_A2>::value,"},
{"lineNum":" 1353","line":"    std::__promote<_A1, _A2>"},
{"lineNum":" 1354","line":">::type"},
{"lineNum":" 1355","line":"hypot(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT"},
{"lineNum":" 1356","line":"{"},
{"lineNum":" 1357","line":"    typedef typename std::__promote<_A1, _A2>::type __result_type;"},
{"lineNum":" 1358","line":"    static_assert((!(std::_IsSame<_A1, __result_type>::value &&"},
{"lineNum":" 1359","line":"                     std::_IsSame<_A2, __result_type>::value)), \"\");"},
{"lineNum":" 1360","line":"    return ::hypot((__result_type)__lcpp_x, (__result_type)__lcpp_y);"},
{"lineNum":" 1361","line":"}"},
{"lineNum":" 1362","line":""},
{"lineNum":" 1363","line":"// ilogb"},
{"lineNum":" 1364","line":""},
{"lineNum":" 1365","line":"inline _LIBCPP_INLINE_VISIBILITY int ilogb(float __lcpp_x) _NOEXCEPT       {return ::ilogbf(__lcpp_x);}"},
{"lineNum":" 1366","line":"inline _LIBCPP_INLINE_VISIBILITY int ilogb(long double __lcpp_x) _NOEXCEPT {return ::ilogbl(__lcpp_x);}"},
{"lineNum":" 1367","line":""},
{"lineNum":" 1368","line":"template <class _A1>"},
{"lineNum":" 1369","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1370","line":"typename std::enable_if<std::is_integral<_A1>::value, int>::type"},
{"lineNum":" 1371","line":"ilogb(_A1 __lcpp_x) _NOEXCEPT {return ::ilogb((double)__lcpp_x);}"},
{"lineNum":" 1372","line":""},
{"lineNum":" 1373","line":"// lgamma"},
{"lineNum":" 1374","line":""},
{"lineNum":" 1375","line":"inline _LIBCPP_INLINE_VISIBILITY float       lgamma(float __lcpp_x) _NOEXCEPT       {return ::lgammaf(__lcpp_x);}"},
{"lineNum":" 1376","line":"inline _LIBCPP_INLINE_VISIBILITY long double lgamma(long double __lcpp_x) _NOEXCEPT {return ::lgammal(__lcpp_x);}"},
{"lineNum":" 1377","line":""},
{"lineNum":" 1378","line":"template <class _A1>"},
{"lineNum":" 1379","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1380","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":" 1381","line":"lgamma(_A1 __lcpp_x) _NOEXCEPT {return ::lgamma((double)__lcpp_x);}"},
{"lineNum":" 1382","line":""},
{"lineNum":" 1383","line":"// llrint"},
{"lineNum":" 1384","line":""},
{"lineNum":" 1385","line":"inline _LIBCPP_INLINE_VISIBILITY long long llrint(float __lcpp_x) _NOEXCEPT"},
{"lineNum":" 1386","line":"{"},
{"lineNum":" 1387","line":"#if __has_builtin(__builtin_llrintf)"},
{"lineNum":" 1388","line":"    return __builtin_llrintf(__lcpp_x);"},
{"lineNum":" 1389","line":"#else"},
{"lineNum":" 1390","line":"    return ::llrintf(__lcpp_x);"},
{"lineNum":" 1391","line":"#endif"},
{"lineNum":" 1392","line":"}"},
{"lineNum":" 1393","line":"inline _LIBCPP_INLINE_VISIBILITY long long llrint(long double __lcpp_x) _NOEXCEPT"},
{"lineNum":" 1394","line":"{"},
{"lineNum":" 1395","line":"#if __has_builtin(__builtin_llrintl)"},
{"lineNum":" 1396","line":"    return __builtin_llrintl(__lcpp_x);"},
{"lineNum":" 1397","line":"#else"},
{"lineNum":" 1398","line":"    return ::llrintl(__lcpp_x);"},
{"lineNum":" 1399","line":"#endif"},
{"lineNum":" 1400","line":"}"},
{"lineNum":" 1401","line":""},
{"lineNum":" 1402","line":"template <class _A1>"},
{"lineNum":" 1403","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1404","line":"typename std::enable_if<std::is_integral<_A1>::value, long long>::type"},
{"lineNum":" 1405","line":"llrint(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":" 1406","line":"{"},
{"lineNum":" 1407","line":"#if __has_builtin(__builtin_llrint)"},
{"lineNum":" 1408","line":"    return __builtin_llrint((double)__lcpp_x);"},
{"lineNum":" 1409","line":"#else"},
{"lineNum":" 1410","line":"    return ::llrint((double)__lcpp_x);"},
{"lineNum":" 1411","line":"#endif"},
{"lineNum":" 1412","line":"}"},
{"lineNum":" 1413","line":""},
{"lineNum":" 1414","line":"// llround"},
{"lineNum":" 1415","line":""},
{"lineNum":" 1416","line":"inline _LIBCPP_INLINE_VISIBILITY long long llround(float __lcpp_x) _NOEXCEPT"},
{"lineNum":" 1417","line":"{"},
{"lineNum":" 1418","line":"#if __has_builtin(__builtin_llroundf)"},
{"lineNum":" 1419","line":"    return __builtin_llroundf(__lcpp_x);"},
{"lineNum":" 1420","line":"#else"},
{"lineNum":" 1421","line":"    return ::llroundf(__lcpp_x);"},
{"lineNum":" 1422","line":"#endif"},
{"lineNum":" 1423","line":"}"},
{"lineNum":" 1424","line":"inline _LIBCPP_INLINE_VISIBILITY long long llround(long double __lcpp_x) _NOEXCEPT"},
{"lineNum":" 1425","line":"{"},
{"lineNum":" 1426","line":"#if __has_builtin(__builtin_llroundl)"},
{"lineNum":" 1427","line":"    return __builtin_llroundl(__lcpp_x);"},
{"lineNum":" 1428","line":"#else"},
{"lineNum":" 1429","line":"    return ::llroundl(__lcpp_x);"},
{"lineNum":" 1430","line":"#endif"},
{"lineNum":" 1431","line":"}"},
{"lineNum":" 1432","line":""},
{"lineNum":" 1433","line":"template <class _A1>"},
{"lineNum":" 1434","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1435","line":"typename std::enable_if<std::is_integral<_A1>::value, long long>::type"},
{"lineNum":" 1436","line":"llround(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":" 1437","line":"{"},
{"lineNum":" 1438","line":"#if __has_builtin(__builtin_llround)"},
{"lineNum":" 1439","line":"    return __builtin_llround((double)__lcpp_x);"},
{"lineNum":" 1440","line":"#else"},
{"lineNum":" 1441","line":"    return ::llround((double)__lcpp_x);"},
{"lineNum":" 1442","line":"#endif"},
{"lineNum":" 1443","line":"}"},
{"lineNum":" 1444","line":""},
{"lineNum":" 1445","line":"// log1p"},
{"lineNum":" 1446","line":""},
{"lineNum":" 1447","line":"inline _LIBCPP_INLINE_VISIBILITY float       log1p(float __lcpp_x) _NOEXCEPT       {return ::log1pf(__lcpp_x);}"},
{"lineNum":" 1448","line":"inline _LIBCPP_INLINE_VISIBILITY long double log1p(long double __lcpp_x) _NOEXCEPT {return ::log1pl(__lcpp_x);}"},
{"lineNum":" 1449","line":""},
{"lineNum":" 1450","line":"template <class _A1>"},
{"lineNum":" 1451","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1452","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":" 1453","line":"log1p(_A1 __lcpp_x) _NOEXCEPT {return ::log1p((double)__lcpp_x);}"},
{"lineNum":" 1454","line":""},
{"lineNum":" 1455","line":"// log2"},
{"lineNum":" 1456","line":""},
{"lineNum":" 1457","line":"inline _LIBCPP_INLINE_VISIBILITY float       log2(float __lcpp_x) _NOEXCEPT       {return ::log2f(__lcpp_x);}"},
{"lineNum":" 1458","line":"inline _LIBCPP_INLINE_VISIBILITY long double log2(long double __lcpp_x) _NOEXCEPT {return ::log2l(__lcpp_x);}"},
{"lineNum":" 1459","line":""},
{"lineNum":" 1460","line":"template <class _A1>"},
{"lineNum":" 1461","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1462","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":" 1463","line":"log2(_A1 __lcpp_x) _NOEXCEPT {return ::log2((double)__lcpp_x);}"},
{"lineNum":" 1464","line":""},
{"lineNum":" 1465","line":"// logb"},
{"lineNum":" 1466","line":""},
{"lineNum":" 1467","line":"inline _LIBCPP_INLINE_VISIBILITY float       logb(float __lcpp_x) _NOEXCEPT       {return ::logbf(__lcpp_x);}"},
{"lineNum":" 1468","line":"inline _LIBCPP_INLINE_VISIBILITY long double logb(long double __lcpp_x) _NOEXCEPT {return ::logbl(__lcpp_x);}"},
{"lineNum":" 1469","line":""},
{"lineNum":" 1470","line":"template <class _A1>"},
{"lineNum":" 1471","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1472","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":" 1473","line":"logb(_A1 __lcpp_x) _NOEXCEPT {return ::logb((double)__lcpp_x);}"},
{"lineNum":" 1474","line":""},
{"lineNum":" 1475","line":"// lrint"},
{"lineNum":" 1476","line":""},
{"lineNum":" 1477","line":"inline _LIBCPP_INLINE_VISIBILITY long lrint(float __lcpp_x) _NOEXCEPT"},
{"lineNum":" 1478","line":"{"},
{"lineNum":" 1479","line":"#if __has_builtin(__builtin_lrintf)"},
{"lineNum":" 1480","line":"    return __builtin_lrintf(__lcpp_x);"},
{"lineNum":" 1481","line":"#else"},
{"lineNum":" 1482","line":"    return ::lrintf(__lcpp_x);"},
{"lineNum":" 1483","line":"#endif"},
{"lineNum":" 1484","line":"}"},
{"lineNum":" 1485","line":"inline _LIBCPP_INLINE_VISIBILITY long lrint(long double __lcpp_x) _NOEXCEPT"},
{"lineNum":" 1486","line":"{"},
{"lineNum":" 1487","line":"#if __has_builtin(__builtin_lrintl)"},
{"lineNum":" 1488","line":"    return __builtin_lrintl(__lcpp_x);"},
{"lineNum":" 1489","line":"#else"},
{"lineNum":" 1490","line":"    return ::lrintl(__lcpp_x);"},
{"lineNum":" 1491","line":"#endif"},
{"lineNum":" 1492","line":"}"},
{"lineNum":" 1493","line":""},
{"lineNum":" 1494","line":"template <class _A1>"},
{"lineNum":" 1495","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1496","line":"typename std::enable_if<std::is_integral<_A1>::value, long>::type"},
{"lineNum":" 1497","line":"lrint(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":" 1498","line":"{"},
{"lineNum":" 1499","line":"#if __has_builtin(__builtin_lrint)"},
{"lineNum":" 1500","line":"    return __builtin_lrint((double)__lcpp_x);"},
{"lineNum":" 1501","line":"#else"},
{"lineNum":" 1502","line":"    return ::lrint((double)__lcpp_x);"},
{"lineNum":" 1503","line":"#endif"},
{"lineNum":" 1504","line":"}"},
{"lineNum":" 1505","line":""},
{"lineNum":" 1506","line":"// lround"},
{"lineNum":" 1507","line":""},
{"lineNum":" 1508","line":"inline _LIBCPP_INLINE_VISIBILITY long lround(float __lcpp_x) _NOEXCEPT"},
{"lineNum":" 1509","line":"{"},
{"lineNum":" 1510","line":"#if __has_builtin(__builtin_lroundf)"},
{"lineNum":" 1511","line":"    return __builtin_lroundf(__lcpp_x);"},
{"lineNum":" 1512","line":"#else"},
{"lineNum":" 1513","line":"    return ::lroundf(__lcpp_x);"},
{"lineNum":" 1514","line":"#endif"},
{"lineNum":" 1515","line":"}"},
{"lineNum":" 1516","line":"inline _LIBCPP_INLINE_VISIBILITY long lround(long double __lcpp_x) _NOEXCEPT"},
{"lineNum":" 1517","line":"{"},
{"lineNum":" 1518","line":"#if __has_builtin(__builtin_lroundl)"},
{"lineNum":" 1519","line":"    return __builtin_lroundl(__lcpp_x);"},
{"lineNum":" 1520","line":"#else"},
{"lineNum":" 1521","line":"    return ::lroundl(__lcpp_x);"},
{"lineNum":" 1522","line":"#endif"},
{"lineNum":" 1523","line":"}"},
{"lineNum":" 1524","line":""},
{"lineNum":" 1525","line":"template <class _A1>"},
{"lineNum":" 1526","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1527","line":"typename std::enable_if<std::is_integral<_A1>::value, long>::type"},
{"lineNum":" 1528","line":"lround(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":" 1529","line":"{"},
{"lineNum":" 1530","line":"#if __has_builtin(__builtin_lround)"},
{"lineNum":" 1531","line":"    return __builtin_lround((double)__lcpp_x);"},
{"lineNum":" 1532","line":"#else"},
{"lineNum":" 1533","line":"    return ::lround((double)__lcpp_x);"},
{"lineNum":" 1534","line":"#endif"},
{"lineNum":" 1535","line":"}"},
{"lineNum":" 1536","line":""},
{"lineNum":" 1537","line":"// nan"},
{"lineNum":" 1538","line":""},
{"lineNum":" 1539","line":"// nearbyint"},
{"lineNum":" 1540","line":""},
{"lineNum":" 1541","line":"inline _LIBCPP_INLINE_VISIBILITY float       nearbyint(float __lcpp_x) _NOEXCEPT       {return ::nearbyintf(__lcpp_x);}"},
{"lineNum":" 1542","line":"inline _LIBCPP_INLINE_VISIBILITY long double nearbyint(long double __lcpp_x) _NOEXCEPT {return ::nearbyintl(__lcpp_x);}"},
{"lineNum":" 1543","line":""},
{"lineNum":" 1544","line":"template <class _A1>"},
{"lineNum":" 1545","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1546","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":" 1547","line":"nearbyint(_A1 __lcpp_x) _NOEXCEPT {return ::nearbyint((double)__lcpp_x);}"},
{"lineNum":" 1548","line":""},
{"lineNum":" 1549","line":"// nextafter"},
{"lineNum":" 1550","line":""},
{"lineNum":" 1551","line":"inline _LIBCPP_INLINE_VISIBILITY float       nextafter(float __lcpp_x, float __lcpp_y) _NOEXCEPT             {return ::nextafterf(__lcpp_x, __lcpp_y);}"},
{"lineNum":" 1552","line":"inline _LIBCPP_INLINE_VISIBILITY long double nextafter(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return ::nextafterl(__lcpp_x, __lcpp_y);}"},
{"lineNum":" 1553","line":""},
{"lineNum":" 1554","line":"template <class _A1, class _A2>"},
{"lineNum":" 1555","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1556","line":"typename std::_EnableIf"},
{"lineNum":" 1557","line":"<"},
{"lineNum":" 1558","line":"    std::is_arithmetic<_A1>::value &&"},
{"lineNum":" 1559","line":"    std::is_arithmetic<_A2>::value,"},
{"lineNum":" 1560","line":"    std::__promote<_A1, _A2>"},
{"lineNum":" 1561","line":">::type"},
{"lineNum":" 1562","line":"nextafter(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT"},
{"lineNum":" 1563","line":"{"},
{"lineNum":" 1564","line":"    typedef typename std::__promote<_A1, _A2>::type __result_type;"},
{"lineNum":" 1565","line":"    static_assert((!(std::_IsSame<_A1, __result_type>::value &&"},
{"lineNum":" 1566","line":"                     std::_IsSame<_A2, __result_type>::value)), \"\");"},
{"lineNum":" 1567","line":"    return ::nextafter((__result_type)__lcpp_x, (__result_type)__lcpp_y);"},
{"lineNum":" 1568","line":"}"},
{"lineNum":" 1569","line":""},
{"lineNum":" 1570","line":"// nexttoward"},
{"lineNum":" 1571","line":""},
{"lineNum":" 1572","line":"inline _LIBCPP_INLINE_VISIBILITY float       nexttoward(float __lcpp_x, long double __lcpp_y) _NOEXCEPT       {return ::nexttowardf(__lcpp_x, __lcpp_y);}"},
{"lineNum":" 1573","line":"inline _LIBCPP_INLINE_VISIBILITY long double nexttoward(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return ::nexttowardl(__lcpp_x, __lcpp_y);}"},
{"lineNum":" 1574","line":""},
{"lineNum":" 1575","line":"template <class _A1>"},
{"lineNum":" 1576","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1577","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":" 1578","line":"nexttoward(_A1 __lcpp_x, long double __lcpp_y) _NOEXCEPT {return ::nexttoward((double)__lcpp_x, __lcpp_y);}"},
{"lineNum":" 1579","line":""},
{"lineNum":" 1580","line":"// remainder"},
{"lineNum":" 1581","line":""},
{"lineNum":" 1582","line":"inline _LIBCPP_INLINE_VISIBILITY float       remainder(float __lcpp_x, float __lcpp_y) _NOEXCEPT             {return ::remainderf(__lcpp_x, __lcpp_y);}"},
{"lineNum":" 1583","line":"inline _LIBCPP_INLINE_VISIBILITY long double remainder(long double __lcpp_x, long double __lcpp_y) _NOEXCEPT {return ::remainderl(__lcpp_x, __lcpp_y);}"},
{"lineNum":" 1584","line":""},
{"lineNum":" 1585","line":"template <class _A1, class _A2>"},
{"lineNum":" 1586","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1587","line":"typename std::_EnableIf"},
{"lineNum":" 1588","line":"<"},
{"lineNum":" 1589","line":"    std::is_arithmetic<_A1>::value &&"},
{"lineNum":" 1590","line":"    std::is_arithmetic<_A2>::value,"},
{"lineNum":" 1591","line":"    std::__promote<_A1, _A2>"},
{"lineNum":" 1592","line":">::type"},
{"lineNum":" 1593","line":"remainder(_A1 __lcpp_x, _A2 __lcpp_y) _NOEXCEPT"},
{"lineNum":" 1594","line":"{"},
{"lineNum":" 1595","line":"    typedef typename std::__promote<_A1, _A2>::type __result_type;"},
{"lineNum":" 1596","line":"    static_assert((!(std::_IsSame<_A1, __result_type>::value &&"},
{"lineNum":" 1597","line":"                     std::_IsSame<_A2, __result_type>::value)), \"\");"},
{"lineNum":" 1598","line":"    return ::remainder((__result_type)__lcpp_x, (__result_type)__lcpp_y);"},
{"lineNum":" 1599","line":"}"},
{"lineNum":" 1600","line":""},
{"lineNum":" 1601","line":"// remquo"},
{"lineNum":" 1602","line":""},
{"lineNum":" 1603","line":"inline _LIBCPP_INLINE_VISIBILITY float       remquo(float __lcpp_x, float __lcpp_y, int* __lcpp_z) _NOEXCEPT             {return ::remquof(__lcpp_x, __lcpp_y, __lcpp_z);}"},
{"lineNum":" 1604","line":"inline _LIBCPP_INLINE_VISIBILITY long double remquo(long double __lcpp_x, long double __lcpp_y, int* __lcpp_z) _NOEXCEPT {return ::remquol(__lcpp_x, __lcpp_y, __lcpp_z);}"},
{"lineNum":" 1605","line":""},
{"lineNum":" 1606","line":"template <class _A1, class _A2>"},
{"lineNum":" 1607","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1608","line":"typename std::_EnableIf"},
{"lineNum":" 1609","line":"<"},
{"lineNum":" 1610","line":"    std::is_arithmetic<_A1>::value &&"},
{"lineNum":" 1611","line":"    std::is_arithmetic<_A2>::value,"},
{"lineNum":" 1612","line":"    std::__promote<_A1, _A2>"},
{"lineNum":" 1613","line":">::type"},
{"lineNum":" 1614","line":"remquo(_A1 __lcpp_x, _A2 __lcpp_y, int* __lcpp_z) _NOEXCEPT"},
{"lineNum":" 1615","line":"{"},
{"lineNum":" 1616","line":"    typedef typename std::__promote<_A1, _A2>::type __result_type;"},
{"lineNum":" 1617","line":"    static_assert((!(std::_IsSame<_A1, __result_type>::value &&"},
{"lineNum":" 1618","line":"                     std::_IsSame<_A2, __result_type>::value)), \"\");"},
{"lineNum":" 1619","line":"    return ::remquo((__result_type)__lcpp_x, (__result_type)__lcpp_y, __lcpp_z);"},
{"lineNum":" 1620","line":"}"},
{"lineNum":" 1621","line":""},
{"lineNum":" 1622","line":"// rint"},
{"lineNum":" 1623","line":""},
{"lineNum":" 1624","line":"inline _LIBCPP_INLINE_VISIBILITY float       rint(float __lcpp_x) _NOEXCEPT"},
{"lineNum":" 1625","line":"{"},
{"lineNum":" 1626","line":"#if __has_builtin(__builtin_rintf)"},
{"lineNum":" 1627","line":"    return __builtin_rintf(__lcpp_x);"},
{"lineNum":" 1628","line":"#else"},
{"lineNum":" 1629","line":"    return ::rintf(__lcpp_x);"},
{"lineNum":" 1630","line":"#endif"},
{"lineNum":" 1631","line":"}"},
{"lineNum":" 1632","line":"inline _LIBCPP_INLINE_VISIBILITY long double rint(long double __lcpp_x) _NOEXCEPT"},
{"lineNum":" 1633","line":"{"},
{"lineNum":" 1634","line":"#if __has_builtin(__builtin_rintl)"},
{"lineNum":" 1635","line":"    return __builtin_rintl(__lcpp_x);"},
{"lineNum":" 1636","line":"#else"},
{"lineNum":" 1637","line":"    return ::rintl(__lcpp_x);"},
{"lineNum":" 1638","line":"#endif"},
{"lineNum":" 1639","line":"}"},
{"lineNum":" 1640","line":""},
{"lineNum":" 1641","line":"template <class _A1>"},
{"lineNum":" 1642","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1643","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":" 1644","line":"rint(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":" 1645","line":"{"},
{"lineNum":" 1646","line":"#if __has_builtin(__builtin_rint)"},
{"lineNum":" 1647","line":"    return __builtin_rint((double)__lcpp_x);"},
{"lineNum":" 1648","line":"#else"},
{"lineNum":" 1649","line":"    return ::rint((double)__lcpp_x);"},
{"lineNum":" 1650","line":"#endif"},
{"lineNum":" 1651","line":"}"},
{"lineNum":" 1652","line":""},
{"lineNum":" 1653","line":"// round"},
{"lineNum":" 1654","line":""},
{"lineNum":" 1655","line":"inline _LIBCPP_INLINE_VISIBILITY float       round(float __lcpp_x) _NOEXCEPT"},
{"lineNum":" 1656","line":"{"},
{"lineNum":" 1657","line":"#if __has_builtin(__builtin_round)"},
{"lineNum":" 1658","line":"    return __builtin_round(__lcpp_x);"},
{"lineNum":" 1659","line":"#else"},
{"lineNum":" 1660","line":"    return ::round(__lcpp_x);"},
{"lineNum":" 1661","line":"#endif"},
{"lineNum":" 1662","line":"}"},
{"lineNum":" 1663","line":"inline _LIBCPP_INLINE_VISIBILITY long double round(long double __lcpp_x) _NOEXCEPT"},
{"lineNum":" 1664","line":"{"},
{"lineNum":" 1665","line":"#if __has_builtin(__builtin_roundl)"},
{"lineNum":" 1666","line":"    return __builtin_roundl(__lcpp_x);"},
{"lineNum":" 1667","line":"#else"},
{"lineNum":" 1668","line":"    return ::roundl(__lcpp_x);"},
{"lineNum":" 1669","line":"#endif"},
{"lineNum":" 1670","line":"}"},
{"lineNum":" 1671","line":""},
{"lineNum":" 1672","line":"template <class _A1>"},
{"lineNum":" 1673","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1674","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":" 1675","line":"round(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":" 1676","line":"{"},
{"lineNum":" 1677","line":"#if __has_builtin(__builtin_round)"},
{"lineNum":" 1678","line":"    return __builtin_round((double)__lcpp_x);"},
{"lineNum":" 1679","line":"#else"},
{"lineNum":" 1680","line":"    return ::round((double)__lcpp_x);"},
{"lineNum":" 1681","line":"#endif"},
{"lineNum":" 1682","line":"}"},
{"lineNum":" 1683","line":""},
{"lineNum":" 1684","line":"// scalbln"},
{"lineNum":" 1685","line":""},
{"lineNum":" 1686","line":"inline _LIBCPP_INLINE_VISIBILITY float       scalbln(float __lcpp_x, long __lcpp_y) _NOEXCEPT       {return ::scalblnf(__lcpp_x, __lcpp_y);}"},
{"lineNum":" 1687","line":"inline _LIBCPP_INLINE_VISIBILITY long double scalbln(long double __lcpp_x, long __lcpp_y) _NOEXCEPT {return ::scalblnl(__lcpp_x, __lcpp_y);}"},
{"lineNum":" 1688","line":""},
{"lineNum":" 1689","line":"template <class _A1>"},
{"lineNum":" 1690","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1691","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":" 1692","line":"scalbln(_A1 __lcpp_x, long __lcpp_y) _NOEXCEPT {return ::scalbln((double)__lcpp_x, __lcpp_y);}"},
{"lineNum":" 1693","line":""},
{"lineNum":" 1694","line":"// scalbn"},
{"lineNum":" 1695","line":""},
{"lineNum":" 1696","line":"inline _LIBCPP_INLINE_VISIBILITY float       scalbn(float __lcpp_x, int __lcpp_y) _NOEXCEPT       {return ::scalbnf(__lcpp_x, __lcpp_y);}"},
{"lineNum":" 1697","line":"inline _LIBCPP_INLINE_VISIBILITY long double scalbn(long double __lcpp_x, int __lcpp_y) _NOEXCEPT {return ::scalbnl(__lcpp_x, __lcpp_y);}"},
{"lineNum":" 1698","line":""},
{"lineNum":" 1699","line":"template <class _A1>"},
{"lineNum":" 1700","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1701","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":" 1702","line":"scalbn(_A1 __lcpp_x, int __lcpp_y) _NOEXCEPT {return ::scalbn((double)__lcpp_x, __lcpp_y);}"},
{"lineNum":" 1703","line":""},
{"lineNum":" 1704","line":"// tgamma"},
{"lineNum":" 1705","line":""},
{"lineNum":" 1706","line":"inline _LIBCPP_INLINE_VISIBILITY float       tgamma(float __lcpp_x) _NOEXCEPT       {return ::tgammaf(__lcpp_x);}"},
{"lineNum":" 1707","line":"inline _LIBCPP_INLINE_VISIBILITY long double tgamma(long double __lcpp_x) _NOEXCEPT {return ::tgammal(__lcpp_x);}"},
{"lineNum":" 1708","line":""},
{"lineNum":" 1709","line":"template <class _A1>"},
{"lineNum":" 1710","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1711","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":" 1712","line":"tgamma(_A1 __lcpp_x) _NOEXCEPT {return ::tgamma((double)__lcpp_x);}"},
{"lineNum":" 1713","line":""},
{"lineNum":" 1714","line":"// trunc"},
{"lineNum":" 1715","line":""},
{"lineNum":" 1716","line":"inline _LIBCPP_INLINE_VISIBILITY float       trunc(float __lcpp_x) _NOEXCEPT"},
{"lineNum":" 1717","line":"{"},
{"lineNum":" 1718","line":"#if __has_builtin(__builtin_trunc)"},
{"lineNum":" 1719","line":"    return __builtin_trunc(__lcpp_x);"},
{"lineNum":" 1720","line":"#else"},
{"lineNum":" 1721","line":"    return ::trunc(__lcpp_x);"},
{"lineNum":" 1722","line":"#endif"},
{"lineNum":" 1723","line":"}"},
{"lineNum":" 1724","line":"inline _LIBCPP_INLINE_VISIBILITY long double trunc(long double __lcpp_x) _NOEXCEPT"},
{"lineNum":" 1725","line":"{"},
{"lineNum":" 1726","line":"#if __has_builtin(__builtin_truncl)"},
{"lineNum":" 1727","line":"    return __builtin_truncl(__lcpp_x);"},
{"lineNum":" 1728","line":"#else"},
{"lineNum":" 1729","line":"    return ::truncl(__lcpp_x);"},
{"lineNum":" 1730","line":"#endif"},
{"lineNum":" 1731","line":"}"},
{"lineNum":" 1732","line":""},
{"lineNum":" 1733","line":"template <class _A1>"},
{"lineNum":" 1734","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1735","line":"typename std::enable_if<std::is_integral<_A1>::value, double>::type"},
{"lineNum":" 1736","line":"trunc(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":" 1737","line":"{"},
{"lineNum":" 1738","line":"#if __has_builtin(__builtin_trunc)"},
{"lineNum":" 1739","line":"    return __builtin_trunc((double)__lcpp_x);"},
{"lineNum":" 1740","line":"#else"},
{"lineNum":" 1741","line":"    return ::trunc((double)__lcpp_x);"},
{"lineNum":" 1742","line":"#endif"},
{"lineNum":" 1743","line":"}"},
{"lineNum":" 1744","line":""},
{"lineNum":" 1745","line":"} // extern \"C++\""},
{"lineNum":" 1746","line":""},
{"lineNum":" 1747","line":"#endif // __cplusplus"},
{"lineNum":" 1748","line":""},
{"lineNum":" 1749","line":"#else // _LIBCPP_MATH_H"},
{"lineNum":" 1750","line":""},
{"lineNum":" 1751","line":"// This include lives outside the header guard in order to support an MSVC"},
{"lineNum":" 1752","line":"// extension which allows users to do:"},
{"lineNum":" 1753","line":"//"},
{"lineNum":" 1754","line":"// #define _USE_MATH_DEFINES"},
{"lineNum":" 1755","line":"// #include <math.h>"},
{"lineNum":" 1756","line":"//"},
{"lineNum":" 1757","line":"// and receive the definitions of mathematical constants, even if <math.h>"},
{"lineNum":" 1758","line":"// has previously been included."},
{"lineNum":" 1759","line":"#if defined(_LIBCPP_MSVCRT) && defined(_USE_MATH_DEFINES)"},
{"lineNum":" 1760","line":"#include_next <math.h>"},
{"lineNum":" 1761","line":"#endif"},
{"lineNum":" 1762","line":""},
{"lineNum":" 1763","line":"#endif // _LIBCPP_MATH_H"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 9, "covered" : 1,};
var merged_data = [];
