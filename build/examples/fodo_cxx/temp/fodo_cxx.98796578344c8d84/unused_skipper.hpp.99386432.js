var data = {lines:[
{"lineNum":"    1","line":"//  Copyright (c) 2001-2011 Hartmut Kaiser"},
{"lineNum":"    2","line":"//"},
{"lineNum":"    3","line":"//  Distributed under the Boost Software License, Version 1.0. (See accompanying"},
{"lineNum":"    4","line":"//  file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)"},
{"lineNum":"    5","line":""},
{"lineNum":"    6","line":"#if !defined(BOOST_SPIRIT_QI_UNUSED_SKIPPER_JUL_25_2009_0921AM)"},
{"lineNum":"    7","line":"#define BOOST_SPIRIT_QI_UNUSED_SKIPPER_JUL_25_2009_0921AM"},
{"lineNum":"    8","line":""},
{"lineNum":"    9","line":"#if defined(_MSC_VER)"},
{"lineNum":"   10","line":"#pragma once"},
{"lineNum":"   11","line":"#endif"},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"#include <boost/spirit/home/support/unused.hpp>"},
{"lineNum":"   14","line":"#include <boost/mpl/bool.hpp>"},
{"lineNum":"   15","line":""},
{"lineNum":"   16","line":"namespace boost { namespace spirit { namespace qi { namespace detail"},
{"lineNum":"   17","line":"{"},
{"lineNum":"   18","line":"    template <typename Skipper>"},
{"lineNum":"   19","line":"    struct unused_skipper : unused_type"},
{"lineNum":"   20","line":"    {"},
{"lineNum":"   21","line":"        unused_skipper(Skipper const& skipper_)"},
{"lineNum":"   22","line":"          : skipper(skipper_) {}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   23","line":"        Skipper const& skipper;"},
{"lineNum":"   24","line":""},
{"lineNum":"   25","line":"    private:"},
{"lineNum":"   26","line":"        // silence MSVC warning C4512: assignment operator could not be generated"},
{"lineNum":"   27","line":"        unused_skipper& operator= (unused_skipper const&);"},
{"lineNum":"   28","line":"    };"},
{"lineNum":"   29","line":""},
{"lineNum":"   30","line":"    template <typename Skipper>"},
{"lineNum":"   31","line":"    struct is_unused_skipper"},
{"lineNum":"   32","line":"      : mpl::false_ {};"},
{"lineNum":"   33","line":""},
{"lineNum":"   34","line":"    template <typename Skipper>"},
{"lineNum":"   35","line":"    struct is_unused_skipper<unused_skipper<Skipper> >"},
{"lineNum":"   36","line":"      : mpl::true_ {};"},
{"lineNum":"   37","line":""},
{"lineNum":"   38","line":"    template <>"},
{"lineNum":"   39","line":"    struct is_unused_skipper<unused_type>"},
{"lineNum":"   40","line":"      : mpl::true_ {};"},
{"lineNum":"   41","line":""},
{"lineNum":"   42","line":"    // If a surrounding lexeme[] directive was specified, the current"},
{"lineNum":"   43","line":"    // skipper is of the type unused_skipper. In this case we"},
{"lineNum":"   44","line":"    // re-activate the skipper which was active before the skip[]"},
{"lineNum":"   45","line":"    // directive."},
{"lineNum":"   46","line":"    template <typename Skipper>"},
{"lineNum":"   47","line":"    inline Skipper const&"},
{"lineNum":"   48","line":"    get_skipper(unused_skipper<Skipper> const& u)"},
{"lineNum":"   49","line":"    {"},
{"lineNum":"   50","line":"        return u.skipper;"},
{"lineNum":"   51","line":"    }"},
{"lineNum":"   52","line":""},
{"lineNum":"   53","line":"    // If no surrounding lexeme[] directive was specified we keep what we got."},
{"lineNum":"   54","line":"    template <typename Skipper>"},
{"lineNum":"   55","line":"    inline Skipper const&"},
{"lineNum":"   56","line":"    get_skipper(Skipper const& u)"},
{"lineNum":"   57","line":"    {"},
{"lineNum":"   58","line":"        return u;"},
{"lineNum":"   59","line":"    }"},
{"lineNum":"   60","line":""},
{"lineNum":"   61","line":"}}}}"},
{"lineNum":"   62","line":""},
{"lineNum":"   63","line":"#endif"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 1, "covered" : 0,};
var merged_data = [];
