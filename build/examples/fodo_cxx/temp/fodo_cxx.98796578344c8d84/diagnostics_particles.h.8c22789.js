var data = {lines:[
{"lineNum":"    1","line":"#ifndef DIAGNOSTICS_PARTICLES_H_"},
{"lineNum":"    2","line":"#define DIAGNOSTICS_PARTICLES_H_"},
{"lineNum":"    3","line":""},
{"lineNum":"    4","line":"#include \"synergia/bunch/diagnostics.h\""},
{"lineNum":"    5","line":""},
{"lineNum":"    6","line":"/// Diagnostics_particles dumps the state of particles in a bunch"},
{"lineNum":"    7","line":"class Diagnostics_particles : public Diagnostics","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"    8","line":"{"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"private:"},
{"lineNum":"   11","line":""},
{"lineNum":"   12","line":"    Bunch const* bunch_ptr;"},
{"lineNum":"   13","line":""},
{"lineNum":"   14","line":"    int num_part, offset;"},
{"lineNum":"   15","line":"    int num_spec_part, spec_offset;"},
{"lineNum":"   16","line":""},
{"lineNum":"   17","line":"public:"},
{"lineNum":"   18","line":""},
{"lineNum":"   19","line":"    Diagnostics_particles("},
{"lineNum":"   20","line":"            std::string const& filename = \"diag_particles.h5\","},
{"lineNum":"   21","line":"            int num_part = -1, int offset = 0,"},
{"lineNum":"   22","line":"            int num_spec_part = 0, int spec_offset = 0 );"},
{"lineNum":"   23","line":""},
{"lineNum":"   24","line":"private:"},
{"lineNum":"   25","line":""},
{"lineNum":"   26","line":"    void do_reduce(Commxx const& comm, int root) override { }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   27","line":"    void do_first_write(Hdf5_file& file) override { }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   28","line":"    void do_update(Bunch const& bunch) override { bunch_ptr = &bunch; }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   29","line":"    void do_write(Hdf5_file& file) override;"},
{"lineNum":"   30","line":""},
{"lineNum":"   31","line":"    friend class cereal::access;"},
{"lineNum":"   32","line":""},
{"lineNum":"   33","line":"    template<class AR>"},
{"lineNum":"   34","line":"    void serialize(AR & ar)"},
{"lineNum":"   35","line":"    {","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"   36","line":"        ar(cereal::base_class<Diagnostics>(this));","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   37","line":"        ar(num_part);","class":"lineNoCov","hits":"0","possible_hits":"9",},
{"lineNum":"   38","line":"        ar(offset);","class":"lineNoCov","hits":"0","possible_hits":"9",},
{"lineNum":"   39","line":"        ar(num_spec_part);","class":"lineNoCov","hits":"0","possible_hits":"9",},
{"lineNum":"   40","line":"        ar(spec_offset);","class":"lineNoCov","hits":"0","possible_hits":"9",},
{"lineNum":"   41","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"   42","line":"};"},
{"lineNum":"   43","line":""},
{"lineNum":"   44","line":"CEREAL_REGISTER_TYPE(Diagnostics_particles)","class":"linePartCov","hits":"4","order":"505","possible_hits":"9",},
{"lineNum":"   45","line":""},
{"lineNum":"   46","line":"#endif /* DIAGNOSTICS_PARTICLES_H_ */"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 12, "covered" : 1,};
var merged_data = [];
