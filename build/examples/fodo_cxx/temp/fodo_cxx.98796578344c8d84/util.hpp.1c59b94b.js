var data = {lines:[
{"lineNum":"    1","line":"/*! \\file util.hpp"},
{"lineNum":"    2","line":"    \\brief Internal misc utilities"},
{"lineNum":"    3","line":"    \\ingroup Internal */"},
{"lineNum":"    4","line":"/*"},
{"lineNum":"    5","line":"  Copyright (c) 2014, Randolph Voorhies, Shane Grant"},
{"lineNum":"    6","line":"  All rights reserved."},
{"lineNum":"    7","line":""},
{"lineNum":"    8","line":"  Redistribution and use in source and binary forms, with or without"},
{"lineNum":"    9","line":"  modification, are permitted provided that the following conditions are met:"},
{"lineNum":"   10","line":"      * Redistributions of source code must retain the above copyright"},
{"lineNum":"   11","line":"        notice, this list of conditions and the following disclaimer."},
{"lineNum":"   12","line":"      * Redistributions in binary form must reproduce the above copyright"},
{"lineNum":"   13","line":"        notice, this list of conditions and the following disclaimer in the"},
{"lineNum":"   14","line":"        documentation and/or other materials provided with the distribution."},
{"lineNum":"   15","line":"      * Neither the name of cereal nor the"},
{"lineNum":"   16","line":"        names of its contributors may be used to endorse or promote products"},
{"lineNum":"   17","line":"        derived from this software without specific prior written permission."},
{"lineNum":"   18","line":""},
{"lineNum":"   19","line":"  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND"},
{"lineNum":"   20","line":"  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED"},
{"lineNum":"   21","line":"  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE"},
{"lineNum":"   22","line":"  DISCLAIMED. IN NO EVENT SHALL RANDOLPH VOORHIES OR SHANE GRANT BE LIABLE FOR ANY"},
{"lineNum":"   23","line":"  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES"},
{"lineNum":"   24","line":"  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;"},
{"lineNum":"   25","line":"  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"},
{"lineNum":"   26","line":"  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT"},
{"lineNum":"   27","line":"  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS"},
{"lineNum":"   28","line":"  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."},
{"lineNum":"   29","line":"*/"},
{"lineNum":"   30","line":"#ifndef CEREAL_DETAILS_UTIL_HPP_"},
{"lineNum":"   31","line":"#define CEREAL_DETAILS_UTIL_HPP_"},
{"lineNum":"   32","line":""},
{"lineNum":"   33","line":"#include <typeinfo>"},
{"lineNum":"   34","line":"#include <string>"},
{"lineNum":"   35","line":""},
{"lineNum":"   36","line":"#ifdef _MSC_VER"},
{"lineNum":"   37","line":"namespace cereal"},
{"lineNum":"   38","line":"{"},
{"lineNum":"   39","line":"  namespace util"},
{"lineNum":"   40","line":"  {"},
{"lineNum":"   41","line":"    //! Demangles the type encoded in a string"},
{"lineNum":"   42","line":"    /*! @internal */"},
{"lineNum":"   43","line":"    inline std::string demangle( std::string const & name )"},
{"lineNum":"   44","line":"    { return name; }"},
{"lineNum":"   45","line":""},
{"lineNum":"   46","line":"    //! Gets the demangled name of a type"},
{"lineNum":"   47","line":"    /*! @internal */"},
{"lineNum":"   48","line":"    template <class T> inline"},
{"lineNum":"   49","line":"    std::string demangledName()"},
{"lineNum":"   50","line":"    { return typeid( T ).name(); }"},
{"lineNum":"   51","line":"  } // namespace util"},
{"lineNum":"   52","line":"} // namespace cereal"},
{"lineNum":"   53","line":"#else // clang or gcc"},
{"lineNum":"   54","line":"#include <cxxabi.h>"},
{"lineNum":"   55","line":"#include <cstdlib>"},
{"lineNum":"   56","line":"namespace cereal"},
{"lineNum":"   57","line":"{"},
{"lineNum":"   58","line":"  namespace util"},
{"lineNum":"   59","line":"  {"},
{"lineNum":"   60","line":"    //! Demangles the type encoded in a string"},
{"lineNum":"   61","line":"    /*! @internal */"},
{"lineNum":"   62","line":"    inline std::string demangle(std::string mangledName)"},
{"lineNum":"   63","line":"    {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   64","line":"      int status = 0;","class":"lineNoCov","hits":"0","possible_hits":"143",},
{"lineNum":"   65","line":"      char *demangledName = nullptr;"},
{"lineNum":"   66","line":"      std::size_t len;"},
{"lineNum":"   67","line":""},
{"lineNum":"   68","line":"      demangledName = abi::__cxa_demangle(mangledName.c_str(), 0, &len, &status);","class":"lineNoCov","hits":"0","possible_hits":"143",},
{"lineNum":"   69","line":""},
{"lineNum":"   70","line":"      std::string retName(demangledName);"},
{"lineNum":"   71","line":"      free(demangledName);","class":"lineNoCov","hits":"0","possible_hits":"143",},
{"lineNum":"   72","line":""},
{"lineNum":"   73","line":"      return retName;"},
{"lineNum":"   74","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   75","line":""},
{"lineNum":"   76","line":"    //! Gets the demangled name of a type"},
{"lineNum":"   77","line":"    /*! @internal */"},
{"lineNum":"   78","line":"    template<class T> inline"},
{"lineNum":"   79","line":"    std::string demangledName()"},
{"lineNum":"   80","line":"    { return demangle(typeid(T).name()); }","class":"lineNoCov","hits":"0","possible_hits":"294",},
{"lineNum":"   81","line":"  }"},
{"lineNum":"   82","line":"} // namespace cereal"},
{"lineNum":"   83","line":"#endif // clang or gcc branch of _MSC_VER"},
{"lineNum":"   84","line":"#endif // CEREAL_DETAILS_UTIL_HPP_"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 6, "covered" : 0,};
var merged_data = [];
