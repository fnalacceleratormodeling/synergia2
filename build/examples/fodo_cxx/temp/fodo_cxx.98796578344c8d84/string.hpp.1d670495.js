var data = {lines:[
{"lineNum":"    1","line":"/*! \\file string.hpp"},
{"lineNum":"    2","line":"    \\brief Support for types found in \\<string\\>"},
{"lineNum":"    3","line":"    \\ingroup STLSupport */"},
{"lineNum":"    4","line":"/*"},
{"lineNum":"    5","line":"  Copyright (c) 2014, Randolph Voorhies, Shane Grant"},
{"lineNum":"    6","line":"  All rights reserved."},
{"lineNum":"    7","line":""},
{"lineNum":"    8","line":"  Redistribution and use in source and binary forms, with or without"},
{"lineNum":"    9","line":"  modification, are permitted provided that the following conditions are met:"},
{"lineNum":"   10","line":"      * Redistributions of source code must retain the above copyright"},
{"lineNum":"   11","line":"        notice, this list of conditions and the following disclaimer."},
{"lineNum":"   12","line":"      * Redistributions in binary form must reproduce the above copyright"},
{"lineNum":"   13","line":"        notice, this list of conditions and the following disclaimer in the"},
{"lineNum":"   14","line":"        documentation and/or other materials provided with the distribution."},
{"lineNum":"   15","line":"      * Neither the name of cereal nor the"},
{"lineNum":"   16","line":"        names of its contributors may be used to endorse or promote products"},
{"lineNum":"   17","line":"        derived from this software without specific prior written permission."},
{"lineNum":"   18","line":""},
{"lineNum":"   19","line":"  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND"},
{"lineNum":"   20","line":"  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED"},
{"lineNum":"   21","line":"  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE"},
{"lineNum":"   22","line":"  DISCLAIMED. IN NO EVENT SHALL RANDOLPH VOORHIES OR SHANE GRANT BE LIABLE FOR ANY"},
{"lineNum":"   23","line":"  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES"},
{"lineNum":"   24","line":"  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;"},
{"lineNum":"   25","line":"  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND"},
{"lineNum":"   26","line":"  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT"},
{"lineNum":"   27","line":"  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS"},
{"lineNum":"   28","line":"  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."},
{"lineNum":"   29","line":"*/"},
{"lineNum":"   30","line":"#ifndef CEREAL_TYPES_STRING_HPP_"},
{"lineNum":"   31","line":"#define CEREAL_TYPES_STRING_HPP_"},
{"lineNum":"   32","line":""},
{"lineNum":"   33","line":"#include \"cereal/cereal.hpp\""},
{"lineNum":"   34","line":"#include <string>"},
{"lineNum":"   35","line":""},
{"lineNum":"   36","line":"namespace cereal"},
{"lineNum":"   37","line":"{"},
{"lineNum":"   38","line":"  //! Serialization for basic_string types, if binary data is supported"},
{"lineNum":"   39","line":"  template<class Archive, class CharT, class Traits, class Alloc> inline"},
{"lineNum":"   40","line":"  typename std::enable_if<traits::is_output_serializable<BinaryData<CharT>, Archive>::value, void>::type"},
{"lineNum":"   41","line":"  CEREAL_SAVE_FUNCTION_NAME(Archive & ar, std::basic_string<CharT, Traits, Alloc> const & str)"},
{"lineNum":"   42","line":"  {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   43","line":"    // Save number of chars + the data"},
{"lineNum":"   44","line":"    ar( make_size_tag( static_cast<size_type>(str.size()) ) );","class":"lineNoCov","hits":"0","possible_hits":"25",},
{"lineNum":"   45","line":"    ar( binary_data( str.data(), str.size() * sizeof(CharT) ) );"},
{"lineNum":"   46","line":"  }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   47","line":""},
{"lineNum":"   48","line":"  //! Serialization for basic_string types, if binary data is supported"},
{"lineNum":"   49","line":"  template<class Archive, class CharT, class Traits, class Alloc> inline"},
{"lineNum":"   50","line":"  typename std::enable_if<traits::is_input_serializable<BinaryData<CharT>, Archive>::value, void>::type"},
{"lineNum":"   51","line":"  CEREAL_LOAD_FUNCTION_NAME(Archive & ar, std::basic_string<CharT, Traits, Alloc> & str)"},
{"lineNum":"   52","line":"  {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   53","line":"    size_type size;"},
{"lineNum":"   54","line":"    ar( make_size_tag( size ) );"},
{"lineNum":"   55","line":"    str.resize(static_cast<std::size_t>(size));","class":"lineNoCov","hits":"0","possible_hits":"8",},
{"lineNum":"   56","line":"    ar( binary_data( const_cast<CharT *>( str.data() ), static_cast<std::size_t>(size) * sizeof(CharT) ) );","class":"lineNoCov","hits":"0","possible_hits":"8",},
{"lineNum":"   57","line":"  }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   58","line":"} // namespace cereal"},
{"lineNum":"   59","line":""},
{"lineNum":"   60","line":"#endif // CEREAL_TYPES_STRING_HPP_"},
{"lineNum":"   61","line":""},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 7, "covered" : 0,};
var merged_data = [];
