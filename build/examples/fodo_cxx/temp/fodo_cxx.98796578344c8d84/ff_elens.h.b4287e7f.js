var data = {lines:[
{"lineNum":"    1","line":"#ifndef FF_ELENS_H"},
{"lineNum":"    2","line":"#define FF_ELENS_H"},
{"lineNum":"    3","line":""},
{"lineNum":"    4","line":"#include \"synergia/libFF/ff_algorithm.h\""},
{"lineNum":"    5","line":"#include \"synergia/libFF/ff_patterned_propagator.h\""},
{"lineNum":"    6","line":"#include \"synergia/utils/simple_timer.h\""},
{"lineNum":"    7","line":""},
{"lineNum":"    8","line":""},
{"lineNum":"    9","line":"namespace FF_elens"},
{"lineNum":"   10","line":"{"},
{"lineNum":"   11","line":"    template<class BunchT>"},
{"lineNum":"   12","line":"    void apply(Lattice_element_slice const& slice, BunchT& bunch)"},
{"lineNum":"   13","line":"    {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   14","line":"        scoped_simple_timer timer(\"libFF_elens\");"},
{"lineNum":"   15","line":""},
{"lineNum":"   16","line":"        double length = slice.get_right() - slice.get_left();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"        auto const& elem = slice.get_lattice_element();"},
{"lineNum":"   19","line":""},
{"lineNum":"   20","line":"        // hk and vk are the hk/vk under lattice reference momentum"},
{"lineNum":"   21","line":"        double   lengh = elem.get_double_attribute(\"l\");","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   22","line":"        double current = elem.get_double_attribute(\"current\");","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   23","line":"        double eenergy = elem.get_double_attribute(\"eenergy\") * 0.001;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   24","line":"        double  radius = elem.get_double_attribute(\"radius\");","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   25","line":""},
{"lineNum":"   26","line":"        bool  gaussian = elem.get_double_attribute(\"gaussian\", 0.0) != 0.0;","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"   27","line":"        bool   uniform = elem.get_double_attribute(\"uniform\", 0.0) != 0.0;","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   28","line":""},
{"lineNum":"   29","line":"        if (!(uniform || gaussian))","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   30","line":"        {"},
{"lineNum":"   31","line":"            throw std::runtime_error(","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   32","line":"                    \"elens must set either gaussian or uniform attribute\");"},
{"lineNum":"   33","line":"        }"},
{"lineNum":"   34","line":""},
{"lineNum":"   35","line":"        if (gaussian && uniform)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   36","line":"        {"},
{"lineNum":"   37","line":"            throw std::runtime_error(","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   38","line":"                    \"elens must not set both gaussian and uniform attributes\");"},
{"lineNum":"   39","line":"        }"},
{"lineNum":"   40","line":""},
{"lineNum":"   41","line":"        const double  current_over_e = current / pconstants::e;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   42","line":""},
{"lineNum":"   43","line":"        // references"},
{"lineNum":"   44","line":"        Reference_particle       & ref_l = bunch.get_design_reference_particle();"},
{"lineNum":"   45","line":"        Reference_particle const & ref_b = bunch.get_reference_particle();"},
{"lineNum":"   46","line":""},
{"lineNum":"   47","line":"        const double gamma_e = (eenergy + pconstants::me) / pconstants::me;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   48","line":"        const double  beta_e = std::sqrt(1.0 - 1.0/(gamma_e*gamma_e));","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   49","line":"        const double gamma_b = ref_b.get_gamma();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   50","line":"        const double  beta_b = ref_b.get_beta();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   51","line":""},
{"lineNum":"   52","line":"        const double  pref_l = ref_l.get_momentum();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   53","line":"        const double  pref_b = ref_b.get_momentum();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   54","line":""},
{"lineNum":"   55","line":"        const double     m_l = ref_l.get_mass();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   56","line":"        const double     m_b = ref_b.get_mass();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   57","line":""},
{"lineNum":"   58","line":"        const double k[6] = {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   59","line":"            beta_b, gamma_b, beta_e, current_over_e, length, radius"},
{"lineNum":"   60","line":"        };"},
{"lineNum":"   61","line":""},
{"lineNum":"   62","line":"        using gsv_t = typename std::conditional<"},
{"lineNum":"   63","line":"            std::is_floating_point<typename BunchT::part_t>::value,"},
{"lineNum":"   64","line":"            Vec<double>, typename BunchT::gsv_t>::type;"},
{"lineNum":"   65","line":""},
{"lineNum":"   66","line":"        if (gaussian)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   67","line":"        {"},
{"lineNum":"   68","line":"            using pp = FF_patterned_propagator<BunchT, gsv_t,"},
{"lineNum":"   69","line":"                  FF_algorithm::elens_kick_gaussian<gsv_t>,"},
{"lineNum":"   70","line":"                  FF_algorithm::elens_kick_gaussian<double> >;"},
{"lineNum":"   71","line":""},
{"lineNum":"   72","line":"            if (close_to_zero(length))","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   73","line":"            {"},
{"lineNum":"   74","line":"                pp::get_reference_cdt_zero(ref_l, k);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   75","line":""},
{"lineNum":"   76","line":"                pp::apply_thin_kick(bunch, ParticleGroup::regular, k);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   77","line":"                pp::apply_thin_kick(bunch, ParticleGroup::spectator, k);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   78","line":"            }"},
{"lineNum":"   79","line":"            else"},
{"lineNum":"   80","line":"            {"},
{"lineNum":"   81","line":"                double ref_cdt = pp::get_reference_cdt_simple(","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   82","line":"                        ref_l, length, k);"},
{"lineNum":"   83","line":""},
{"lineNum":"   84","line":"                pp::apply_simple_kick(bunch, ParticleGroup::regular,","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   85","line":"                        pref_b, m_b, ref_cdt, length, k);"},
{"lineNum":"   86","line":""},
{"lineNum":"   87","line":"                pp::apply_simple_kick(bunch, ParticleGroup::spectator,","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   88","line":"                        pref_b, m_b, ref_cdt, length, k);"},
{"lineNum":"   89","line":"            }"},
{"lineNum":"   90","line":"        }"},
{"lineNum":"   91","line":"        else"},
{"lineNum":"   92","line":"        {"},
{"lineNum":"   93","line":"            using pp = FF_patterned_propagator<BunchT, gsv_t,"},
{"lineNum":"   94","line":"                  FF_algorithm::elens_kick_uniform<gsv_t>,"},
{"lineNum":"   95","line":"                  FF_algorithm::elens_kick_uniform<double> >;"},
{"lineNum":"   96","line":""},
{"lineNum":"   97","line":"            if (close_to_zero(length))","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   98","line":"            {"},
{"lineNum":"   99","line":"                pp::get_reference_cdt_zero(ref_l, k);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  100","line":""},
{"lineNum":"  101","line":"                pp::apply_thin_kick(bunch, ParticleGroup::regular, k);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  102","line":"                pp::apply_thin_kick(bunch, ParticleGroup::spectator, k);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  103","line":"            }"},
{"lineNum":"  104","line":"            else"},
{"lineNum":"  105","line":"            {"},
{"lineNum":"  106","line":"                double ref_cdt = pp::get_reference_cdt_simple(","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  107","line":"                        ref_l, length, k);"},
{"lineNum":"  108","line":""},
{"lineNum":"  109","line":"                pp::apply_simple_kick(bunch, ParticleGroup::regular,","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  110","line":"                        pref_b, m_b, ref_cdt, length, k);"},
{"lineNum":"  111","line":""},
{"lineNum":"  112","line":"                pp::apply_simple_kick(bunch, ParticleGroup::spectator,","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  113","line":"                        pref_b, m_b, ref_cdt, length, k);"},
{"lineNum":"  114","line":"            }"},
{"lineNum":"  115","line":""},
{"lineNum":"  116","line":"        }"},
{"lineNum":"  117","line":""},
{"lineNum":"  118","line":"        // increment the trajectory"},
{"lineNum":"  119","line":"        bunch.get_reference_particle().increment_trajectory(length);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  120","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  121","line":"}"},
{"lineNum":"  122","line":""},
{"lineNum":"  123","line":"#endif // FF_HKICKER_H"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 39, "covered" : 0,};
var merged_data = [];
