var data = {lines:[
{"lineNum":"    1","line":"#include \"split_operator_stepper_elements.h\""},
{"lineNum":"    2","line":""},
{"lineNum":"    3","line":"std::vector<Step>"},
{"lineNum":"    4","line":"Split_operator_stepper_elements::apply_impl(Lattice const & lattice) const"},
{"lineNum":"    5","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"    6","line":"    if (steps_per_element < 1)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"    7","line":"    {"},
{"lineNum":"    8","line":"        throw std::runtime_error(","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"    9","line":"                \"Split_operator_stepper_elements: steps_per_element must be >= 1\");"},
{"lineNum":"   10","line":"    }"},
{"lineNum":"   11","line":""},
{"lineNum":"   12","line":"    std::vector<Step> steps;"},
{"lineNum":"   13","line":"    auto col_op_ptr = std::shared_ptr<Operator>(co_ops->create_operator());","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   14","line":""},
{"lineNum":"   15","line":"    for (auto const & ele : lattice.get_elements())","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   16","line":"    {"},
{"lineNum":"   17","line":"        double length = ele.get_length();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   18","line":""},
{"lineNum":"   19","line":"        //zero-length element"},
{"lineNum":"   20","line":"        if (length == 0.0)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   21","line":"        {"},
{"lineNum":"   22","line":"            steps.emplace_back(0.0);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   23","line":"            steps.back()"},
{"lineNum":"   24","line":"                .append_independent(\"step\", 1.0)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   25","line":"                .append_slice(ele);"},
{"lineNum":"   26","line":"        }"},
{"lineNum":"   27","line":"        else"},
{"lineNum":"   28","line":"        {"},
{"lineNum":"   29","line":"            double step_length = length / steps_per_element;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   30","line":"            double half_step_length = 0.5 * step_length;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   31","line":""},
{"lineNum":"   32","line":"            for (int i = 0; i < steps_per_element; ++i)","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   33","line":"            {"},
{"lineNum":"   34","line":"                double left = i * step_length;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   35","line":"                double middle = left + half_step_length;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   36","line":"                double right = (i + 1) * step_length;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   37","line":""},
{"lineNum":"   38","line":"                steps.emplace_back(step_length);"},
{"lineNum":"   39","line":""},
{"lineNum":"   40","line":"                // 1st Half"},
{"lineNum":"   41","line":"                steps.back()"},
{"lineNum":"   42","line":"                    .append_independent(\"first_half\", 0.5)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   43","line":"                    .append_slice(ele, left, middle);"},
{"lineNum":"   44","line":""},
{"lineNum":"   45","line":"                // Collective Effects"},
{"lineNum":"   46","line":"                //steps.back().append_collective(co_ops);"},
{"lineNum":"   47","line":"                steps.back().append(col_op_ptr);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   48","line":""},
{"lineNum":"   49","line":"                // 2nd Half"},
{"lineNum":"   50","line":"                steps.back()"},
{"lineNum":"   51","line":"                    .append_independent(\"second_half\", 0.5)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   52","line":"                    .append_slice(ele, middle, right);"},
{"lineNum":"   53","line":"            }"},
{"lineNum":"   54","line":"        }"},
{"lineNum":"   55","line":"    }"},
{"lineNum":"   56","line":""},
{"lineNum":"   57","line":"    return steps;"},
{"lineNum":"   58","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   59","line":""},
{"lineNum":"   60","line":""},
{"lineNum":"   61","line":"#if 0"},
{"lineNum":"   62","line":"void"},
{"lineNum":"   63","line":"Split_operator_stepper_elements::construct("},
{"lineNum":"   64","line":"        Collective_operators const& collective_operators,"},
{"lineNum":"   65","line":"        int steps_per_element )"},
{"lineNum":"   66","line":"{"},
{"lineNum":"   67","line":"    if (steps_per_element < 1)"},
{"lineNum":"   68","line":"    {"},
{"lineNum":"   69","line":"        throw std::runtime_error("},
{"lineNum":"   70","line":"                \"Split_operator_stepper_elements: steps_per_element must be >= 1\");"},
{"lineNum":"   71","line":"    }"},
{"lineNum":"   72","line":""},
{"lineNum":"   73","line":"    for (Lattice_elements::iterator it ="},
{"lineNum":"   74","line":"            get_lattice_simulator().get_lattice_sptr()->get_elements().begin(); it"},
{"lineNum":"   75","line":"            != get_lattice_simulator().get_lattice_sptr()->get_elements().end(); ++it)"},
{"lineNum":"   76","line":"    {"},
{"lineNum":"   77","line":"        double length = (*it)->get_length();"},
{"lineNum":"   78","line":""},
{"lineNum":"   79","line":"        //zero-length element"},
{"lineNum":"   80","line":"        if (length == 0.0) {"},
{"lineNum":"   81","line":"            Independent_operator_sptr"},
{"lineNum":"   82","line":"                    ind_op("},
{"lineNum":"   83","line":"                            new Independent_operator("},
{"lineNum":"   84","line":"                                    \"step\","},
{"lineNum":"   85","line":"                                    get_lattice_simulator().get_operation_extractor_map_sptr(),"},
{"lineNum":"   86","line":"                                    get_lattice_simulator().get_aperture_operation_extractor_map_sptr()));"},
{"lineNum":"   87","line":"            Lattice_element_slice_sptr slice(new Lattice_element_slice(*it));"},
{"lineNum":"   88","line":"            ind_op->append_slice(slice);"},
{"lineNum":"   89","line":"            Step_sptr step(new Step(0.0));"},
{"lineNum":"   90","line":"            step->append(ind_op, 1.0);"},
{"lineNum":"   91","line":"            get_steps().push_back(step);"},
{"lineNum":"   92","line":"            //else"},
{"lineNum":"   93","line":"        } else {"},
{"lineNum":"   94","line":"            double step_length = length / steps_per_element;"},
{"lineNum":"   95","line":"            double half_step_length = 0.5 * step_length;"},
{"lineNum":"   96","line":""},
{"lineNum":"   97","line":"            for (int i = 0; i < steps_per_element; ++i) {"},
{"lineNum":"   98","line":"                double left = i * step_length;"},
{"lineNum":"   99","line":"                double middle = left + half_step_length;"},
{"lineNum":"  100","line":"                double right = (i + 1) * step_length;"},
{"lineNum":"  101","line":""},
{"lineNum":"  102","line":"                Step_sptr step(new Step(step_length));"},
{"lineNum":"  103","line":""},
{"lineNum":"  104","line":"                //1st Half"},
{"lineNum":"  105","line":"                Independent_operator_sptr"},
{"lineNum":"  106","line":"                        ind_op_first_half("},
{"lineNum":"  107","line":"                                new Independent_operator("},
{"lineNum":"  108","line":"                                        \"first_half\","},
{"lineNum":"  109","line":"                                        get_lattice_simulator().get_operation_extractor_map_sptr(),"},
{"lineNum":"  110","line":"                                        get_lattice_simulator().get_aperture_operation_extractor_map_sptr()));"},
{"lineNum":"  111","line":"                Lattice_element_slice_sptr slice_1st_half("},
{"lineNum":"  112","line":"                        new Lattice_element_slice(*it, left, middle));"},
{"lineNum":"  113","line":"                ind_op_first_half->append_slice(slice_1st_half);"},
{"lineNum":"  114","line":"                step->append(ind_op_first_half, 0.5);"},
{"lineNum":"  115","line":""},
{"lineNum":"  116","line":"                //Collective Effects"},
{"lineNum":"  117","line":"                for (Collective_operators::const_iterator coll_op_it ="},
{"lineNum":"  118","line":"                        collective_operators.begin(); coll_op_it"},
{"lineNum":"  119","line":"                        != collective_operators.end(); ++coll_op_it) {"},
{"lineNum":"  120","line":"                    Collective_operator_sptr copied_collective_operator_sptr("},
{"lineNum":"  121","line":"                                                            (*coll_op_it)->clone());"},
{"lineNum":"  122","line":"                    step->append(copied_collective_operator_sptr, 1.0);"},
{"lineNum":"  123","line":"                }"},
{"lineNum":"  124","line":""},
{"lineNum":"  125","line":"                //2nd Half"},
{"lineNum":"  126","line":"                Independent_operator_sptr"},
{"lineNum":"  127","line":"                        ind_op_second_half("},
{"lineNum":"  128","line":"                                new Independent_operator("},
{"lineNum":"  129","line":"                                        \"second_half\","},
{"lineNum":"  130","line":"                                        get_lattice_simulator().get_operation_extractor_map_sptr(),"},
{"lineNum":"  131","line":"                                        get_lattice_simulator().get_aperture_operation_extractor_map_sptr()));"},
{"lineNum":"  132","line":"                Lattice_element_slice_sptr slice_2nd_half("},
{"lineNum":"  133","line":"                        new Lattice_element_slice(*it, middle, right));"},
{"lineNum":"  134","line":"                //slice(new Lattice_element_slice(*it, middle, right));"},
{"lineNum":"  135","line":"                ind_op_second_half->append_slice(slice_2nd_half);"},
{"lineNum":"  136","line":"                step->append(ind_op_second_half, 0.5);"},
{"lineNum":"  137","line":""},
{"lineNum":"  138","line":"                get_steps().push_back(step);"},
{"lineNum":"  139","line":""},
{"lineNum":"  140","line":"            }"},
{"lineNum":"  141","line":"        }"},
{"lineNum":"  142","line":"    }"},
{"lineNum":"  143","line":"    get_lattice_simulator().set_slices(extract_slices(get_steps()));"},
{"lineNum":"  144","line":"}"},
{"lineNum":"  145","line":""},
{"lineNum":"  146","line":"Split_operator_stepper_elements::Split_operator_stepper_elements("},
{"lineNum":"  147","line":"        Lattice_sptr lattice_sptr, int map_order,"},
{"lineNum":"  148","line":"        Collective_operator_sptr collective_operator, int steps_per_element)"},
{"lineNum":"  149","line":"    : Stepper(lattice_sptr, map_order)"},
{"lineNum":"  150","line":"{"},
{"lineNum":"  151","line":"    Collective_operators collective_operators;"},
{"lineNum":"  152","line":"    collective_operators.push_back(collective_operator);"},
{"lineNum":"  153","line":"    construct(collective_operators, steps_per_element);"},
{"lineNum":"  154","line":"}"},
{"lineNum":"  155","line":"#endif"},
{"lineNum":"  156","line":""},
{"lineNum":"  157","line":"#if 0"},
{"lineNum":"  158","line":"Split_operator_stepper_elements::Split_operator_stepper_elements("},
{"lineNum":"  159","line":"        Lattice_sptr lattice_sptr, int map_order,"},
{"lineNum":"  160","line":"        Collective_operators const& collective_operators, int steps_per_element) :"},
{"lineNum":"  161","line":"    Stepper(lattice_sptr, map_order)"},
{"lineNum":"  162","line":"{"},
{"lineNum":"  163","line":"    construct(collective_operators, steps_per_element);"},
{"lineNum":"  164","line":"}"},
{"lineNum":"  165","line":""},
{"lineNum":"  166","line":""},
{"lineNum":"  167","line":"#endif"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 19, "covered" : 0,};
var merged_data = [];
