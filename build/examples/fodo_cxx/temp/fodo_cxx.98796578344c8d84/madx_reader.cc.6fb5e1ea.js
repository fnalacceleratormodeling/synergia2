var data = {lines:[
{"lineNum":"    1","line":"#include \"madx_reader.h\""},
{"lineNum":"    2","line":"#include \"mx_parse.h\""},
{"lineNum":"    3","line":"#include \"synergia/utils/digits.h\""},
{"lineNum":"    4","line":"#include \"synergia/foundation/physical_constants.h\""},
{"lineNum":"    5","line":"#include \"synergia/foundation/four_momentum.h\""},
{"lineNum":"    6","line":"#include \"synergia/foundation/reference_particle.h\""},
{"lineNum":"    7","line":""},
{"lineNum":"    8","line":"#include <stdexcept>"},
{"lineNum":"    9","line":"#include <algorithm>"},
{"lineNum":"   10","line":"#include <iomanip>"},
{"lineNum":"   11","line":""},
{"lineNum":"   12","line":"using namespace synergia;"},
{"lineNum":"   13","line":""},
{"lineNum":"   14","line":""},
{"lineNum":"   15","line":"namespace"},
{"lineNum":"   16","line":"{"},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"  void insert_line( Lattice & lattice,"},
{"lineNum":"   19","line":"                    MadX const & mx,"},
{"lineNum":"   20","line":"                    std::string const & line_name )"},
{"lineNum":"   21","line":"  {"},
{"lineNum":"   22","line":"    MadX_line line(mx.line(line_name));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   23","line":""},
{"lineNum":"   24","line":"    for (int i = 0; i < line.element_count(); ++i)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   25","line":"    {"},
{"lineNum":"   26","line":"      MadX_command cmd = line.element(i, true);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   27","line":"      std::string name = line.element_name(i);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   28","line":"      std::string type = cmd.name();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   29","line":""},
{"lineNum":"   30","line":"      Lattice_element element(type, name);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   31","line":"      std::vector<std::string> attr_names( cmd.attribute_names() );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   32","line":""},
{"lineNum":"   33","line":"      for (std::vector<std::string>::const_iterator it = attr_names.begin();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   34","line":"           it != attr_names.end(); ++it)"},
{"lineNum":"   35","line":"      for (auto const & name : attr_names)","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   36","line":"      {"},
{"lineNum":"   37","line":"        MadX_value_type vt = cmd.attribute_type(name);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   38","line":""},
{"lineNum":"   39","line":"        switch( vt )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   40","line":"        {"},
{"lineNum":"   41","line":"          case NONE:"},
{"lineNum":"   42","line":""},
{"lineNum":"   43","line":"          case STRING:"},
{"lineNum":"   44","line":"            element.set_string_attribute(name, cmd.attribute_as_string(name, \"\"));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   45","line":"            break;"},
{"lineNum":"   46","line":""},
{"lineNum":"   47","line":"          case NUMBER:"},
{"lineNum":"   48","line":"            element.set_double_attribute(name, cmd.attribute_as_number(name, 0.0));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   49","line":"            break;"},
{"lineNum":"   50","line":""},
{"lineNum":"   51","line":"          case ARRAY:"},
{"lineNum":"   52","line":"            element.set_vector_attribute(name, cmd.attribute_as_number_seq(name, 0.0));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   53","line":"            break;"},
{"lineNum":"   54","line":""},
{"lineNum":"   55","line":"          default:"},
{"lineNum":"   56","line":"            throw std::runtime_error(","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   57","line":"                    \"unable to process attribute \" + name + \" of element \" + name);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   58","line":"        }"},
{"lineNum":"   59","line":"      }"},
{"lineNum":"   60","line":""},
{"lineNum":"   61","line":"      lattice.append(element);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   62","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   63","line":"  }"},
{"lineNum":"   64","line":""},
{"lineNum":"   65","line":"  double insert_sequence( Lattice & lattice,"},
{"lineNum":"   66","line":"                          MadX const & mx,"},
{"lineNum":"   67","line":"                          std::string const & line_name )"},
{"lineNum":"   68","line":"  {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   69","line":"    MadX_sequence sequence(mx.sequence(line_name));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   70","line":""},
{"lineNum":"   71","line":"    double r = 0.5;"},
{"lineNum":"   72","line":"    double total_length = sequence.length();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   73","line":"    double current_pos = 0.0;"},
{"lineNum":"   74","line":"    const double min_drift_length = 1.0e-6;"},
{"lineNum":"   75","line":"    int drift_count = 0;"},
{"lineNum":"   76","line":"    int drift_digits = digits(sequence.element_count());","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   77","line":""},
{"lineNum":"   78","line":"    MadX_sequence_refer ref = sequence.refer();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   79","line":"    if( ref==SEQ_REF_ENTRY )      r = 1.0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   80","line":"    else if( ref==SEQ_REF_CENTRE) r = 0.5;"},
{"lineNum":"   81","line":"    else                          r = 0.0;"},
{"lineNum":"   82","line":""},
{"lineNum":"   83","line":"    for (int i = 0; i < sequence.element_count(); ++i)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   84","line":"    {"},
{"lineNum":"   85","line":""},
{"lineNum":"   86","line":"      double at = sequence.element_at(i);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   87","line":"      double from = sequence.element_from(i);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   88","line":"      std::string label = sequence.element_label(i);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   89","line":""},
{"lineNum":"   90","line":"      if( sequence.element_type(i)==ENTRY_SEQUENCE )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   91","line":"      {"},
{"lineNum":"   92","line":"        double l = insert_sequence( lattice, mx, label );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   93","line":"        current_pos = at + from + l;  // sub-sequence always refer to the entry point","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   94","line":""},
{"lineNum":"   95","line":"        continue;"},
{"lineNum":"   96","line":"      }"},
{"lineNum":"   97","line":""},
{"lineNum":"   98","line":"      MadX_command cmd = sequence.element(i);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   99","line":"      std::string type(cmd.name());","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  100","line":"      std::string name(cmd.label());","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  101","line":"      Lattice_element element(type, name);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  102","line":"      std::vector<string_t > attribute_names( cmd.attribute_names() );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  103","line":""},
{"lineNum":"  104","line":"      for (std::vector<string_t >::iterator it = attribute_names.begin();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  105","line":"           it != attribute_names.end(); ++it) {"},
{"lineNum":"  106","line":""},
{"lineNum":"  107","line":"        MadX_value_type vt = cmd.attribute_type(*it);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  108","line":""},
{"lineNum":"  109","line":"        switch( vt ) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  110","line":"        case NONE:"},
{"lineNum":"  111","line":"        case STRING:"},
{"lineNum":"  112","line":"          element.set_string_attribute(*it, cmd.attribute_as_string(*it, \"\"));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  113","line":"          break;"},
{"lineNum":"  114","line":"        case NUMBER:"},
{"lineNum":"  115","line":"          element.set_double_attribute(*it, cmd.attribute_as_number(*it, 0.0));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  116","line":"          break;"},
{"lineNum":"  117","line":"        case ARRAY:"},
{"lineNum":"  118","line":"          element.set_vector_attribute(*it, cmd.attribute_as_number_seq(*it, 0.0));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  119","line":"          break;"},
{"lineNum":"  120","line":"        default:"},
{"lineNum":"  121","line":"          throw std::runtime_error(","class":"lineNoCov","hits":"0","possible_hits":"5",},
{"lineNum":"  122","line":"                  \"unable to process attribute \" + *it + \" of element \" + name);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  123","line":"        }"},
{"lineNum":"  124","line":"      }"},
{"lineNum":"  125","line":""},
{"lineNum":"  126","line":"      double drift_length = at + from - current_pos - element.get_length() * (1.0-r);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  127","line":"      if (drift_length > min_drift_length) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  128","line":"        std::stringstream name_stream;"},
{"lineNum":"  129","line":"        name_stream << \"auto_drift\";"},
{"lineNum":"  130","line":"        name_stream << \"_\";"},
{"lineNum":"  131","line":"        name_stream << line_name;"},
{"lineNum":"  132","line":"        name_stream << \"_\";"},
{"lineNum":"  133","line":"        name_stream << std::setw(drift_digits);"},
{"lineNum":"  134","line":"        name_stream << std::setfill(\'0\');"},
{"lineNum":"  135","line":"        name_stream << drift_count;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  136","line":"        Lattice_element drift(\"drift\", name_stream.str());","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  137","line":"        drift.set_double_attribute(\"l\", drift_length, false);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  138","line":"        lattice.append(drift);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  139","line":"        ++drift_count;"},
{"lineNum":"  140","line":"      }","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  141","line":"      lattice.append(element);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  142","line":"      current_pos = at + from + element.get_length() * r;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  143","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  144","line":""},
{"lineNum":"  145","line":"    double final_drift_length = sequence.length() - current_pos;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  146","line":"    if (final_drift_length > min_drift_length) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  147","line":"      std::stringstream name_stream;"},
{"lineNum":"  148","line":"      name_stream << \"auto_drift\";","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  149","line":"      name_stream << \"_\";"},
{"lineNum":"  150","line":"      name_stream << line_name;"},
{"lineNum":"  151","line":"      name_stream << \"_\";"},
{"lineNum":"  152","line":"      name_stream << std::setw(drift_digits);"},
{"lineNum":"  153","line":"      name_stream << std::setfill(\'0\');"},
{"lineNum":"  154","line":"      name_stream << drift_count;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  155","line":"      Lattice_element drift(\"drift\", name_stream.str());","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  156","line":"      drift.set_double_attribute(\"l\", final_drift_length, false);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  157","line":"      lattice.append(drift);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  158","line":"      ++drift_count;"},
{"lineNum":"  159","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  160","line":""},
{"lineNum":"  161","line":"    return sequence.length();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  162","line":"  }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  163","line":""},
{"lineNum":"  164","line":""},
{"lineNum":"  165","line":"    void extract_reference_particle( Lattice & lattice,"},
{"lineNum":"  166","line":"                                     MadX const & mx )"},
{"lineNum":"  167","line":"    {"},
{"lineNum":"  168","line":"        try {"},
{"lineNum":"  169","line":"            synergia::MadX_command command(mx.command(\"beam\"));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  170","line":"            std::vector < std::string > attributes(command.attribute_names());","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  171","line":"            double mass = 0, charge = 0, energy = 0, pc = 0, gamma = 0;"},
{"lineNum":"  172","line":"            for (std::vector<std::string >::const_iterator it = attributes.begin();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  173","line":"                    it != attributes.end(); ++it) {"},
{"lineNum":"  174","line":"                if (*it == \"particle\") {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  175","line":"                    std::string particle(command.attribute_as_string(*it));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  176","line":"                    if (particle == \"proton\") {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  177","line":"                        mass = pconstants::mp;"},
{"lineNum":"  178","line":"                        charge = pconstants::proton_charge;"},
{"lineNum":"  179","line":"                    } else if (particle == \"antiproton\") {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  180","line":"                        mass = pconstants::mp;"},
{"lineNum":"  181","line":"                        charge = pconstants::antiproton_charge;"},
{"lineNum":"  182","line":"                    } else if (particle == \"electron\") {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  183","line":"                        mass = pconstants::me;"},
{"lineNum":"  184","line":"                        charge = pconstants::electron_charge;"},
{"lineNum":"  185","line":"                    } else if (particle == \"positron\") {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  186","line":"                        mass = pconstants::me;"},
{"lineNum":"  187","line":"                        charge = pconstants::positron_charge;"},
{"lineNum":"  188","line":"                    } else if (particle == \"negmuon\") {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  189","line":"                        mass = pconstants::mmu;"},
{"lineNum":"  190","line":"                        charge = pconstants::muon_charge;"},
{"lineNum":"  191","line":"                    } else if (particle == \"posmuon\") {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  192","line":"                        mass = pconstants::mmu;"},
{"lineNum":"  193","line":"                        charge = pconstants::antimuon_charge;"},
{"lineNum":"  194","line":"                    }"},
{"lineNum":"  195","line":"                } else if (*it == \"mass\") {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  196","line":"                    mass = command.attribute_as_number(*it);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  197","line":"                } else if (*it == \"charge\") {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  198","line":"                    charge = command.attribute_as_number(*it);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  199","line":"                } else if (*it == \"energy\") {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  200","line":"                    energy = command.attribute_as_number(*it);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  201","line":"                } else if (*it == \"pc\") {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  202","line":"                    pc = command.attribute_as_number(*it);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  203","line":"                } else if (*it == \"gamma\") {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  204","line":"                    gamma = command.attribute_as_number(*it);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  205","line":"                }"},
{"lineNum":"  206","line":"            }"},
{"lineNum":"  207","line":"            Four_momentum four_momentum(mass);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  208","line":"            if (energy > 0) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  209","line":"                four_momentum.set_total_energy(energy);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  210","line":"            }"},
{"lineNum":"  211","line":"            if (pc > 0) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  212","line":"                four_momentum.set_momentum(pc);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  213","line":"            }"},
{"lineNum":"  214","line":"            if (gamma > 0) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  215","line":"                four_momentum.set_gamma(gamma);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  216","line":"            }"},
{"lineNum":"  217","line":"            Reference_particle reference_particle((int)charge, four_momentum);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  218","line":"            lattice.set_reference_particle(reference_particle);"},
{"lineNum":"  219","line":"        }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  220","line":"        catch( ... ) {"},
{"lineNum":"  221","line":"        }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  222","line":"    }"},
{"lineNum":"  223","line":"}"},
{"lineNum":"  224","line":""},
{"lineNum":"  225","line":"MadX_reader::MadX_reader()"},
{"lineNum":"  226","line":"    : madx()"},
{"lineNum":"  227","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  228","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  229","line":""},
{"lineNum":"  230","line":"void"},
{"lineNum":"  231","line":"MadX_reader::parse(std::string const& string)"},
{"lineNum":"  232","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  233","line":"    synergia::parse_madx(string, madx);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  234","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  235","line":""},
{"lineNum":"  236","line":"void"},
{"lineNum":"  237","line":"MadX_reader::parse_file(std::string const& filename)"},
{"lineNum":"  238","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  239","line":"    synergia::parse_madx_file(filename, madx);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  240","line":"}"},
{"lineNum":"  241","line":""},
{"lineNum":"  242","line":"std::vector<std::string >"},
{"lineNum":"  243","line":"MadX_reader::get_line_names() const"},
{"lineNum":"  244","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  245","line":"    return madx.line_labels();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  246","line":"}"},
{"lineNum":"  247","line":""},
{"lineNum":"  248","line":"std::vector<std::string >"},
{"lineNum":"  249","line":"MadX_reader::get_sequence_names() const"},
{"lineNum":"  250","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  251","line":"    return madx.sequence_labels();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  252","line":"}"},
{"lineNum":"  253","line":""},
{"lineNum":"  254","line":"std::vector<std::string >"},
{"lineNum":"  255","line":"MadX_reader::get_all_names() const"},
{"lineNum":"  256","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  257","line":"    std::vector < std::string > retval(madx.line_labels());","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  258","line":"    std::vector < std::string > sequence_labels(madx.sequence_labels());","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  259","line":"    for (std::vector<std::string >::const_iterator it = sequence_labels.begin();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  260","line":"            it != sequence_labels.end(); ++it) {"},
{"lineNum":"  261","line":"        retval.push_back(*it);"},
{"lineNum":"  262","line":"    }"},
{"lineNum":"  263","line":"    return retval;"},
{"lineNum":"  264","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  265","line":""},
{"lineNum":"  266","line":"double"},
{"lineNum":"  267","line":"MadX_reader::get_double_variable(std::string const& name) const"},
{"lineNum":"  268","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  269","line":"    return madx.variable_as_number(name);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  270","line":"}"},
{"lineNum":"  271","line":""},
{"lineNum":"  272","line":"std::string"},
{"lineNum":"  273","line":"MadX_reader::get_string_variable(std::string const& name) const"},
{"lineNum":"  274","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  275","line":"    return madx.variable_as_string(name);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  276","line":"}"},
{"lineNum":"  277","line":""},
{"lineNum":"  278","line":"Lattice"},
{"lineNum":"  279","line":"MadX_reader::get_lattice(std::string const& line_name)"},
{"lineNum":"  280","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  281","line":"    Lattice lattice(line_name);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  282","line":""},
{"lineNum":"  283","line":"    std::vector<std::string> lines(madx.line_labels());","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  284","line":"    if (std::find(lines.begin(), lines.end(), line_name) != lines.end())","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  285","line":"    {"},
{"lineNum":"  286","line":"        insert_line( lattice, madx, line_name );"},
{"lineNum":"  287","line":"    }"},
{"lineNum":"  288","line":"    else"},
{"lineNum":"  289","line":"    {"},
{"lineNum":"  290","line":"        std::vector<std::string> seq(madx.sequence_labels());","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  291","line":"        if (std::find(seq.begin(), seq.end(), line_name) != seq.end())","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  292","line":"        {"},
{"lineNum":"  293","line":"            insert_sequence( lattice, madx, line_name );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  294","line":"        }"},
{"lineNum":"  295","line":"        else"},
{"lineNum":"  296","line":"        {"},
{"lineNum":"  297","line":"            throw std::runtime_error(","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  298","line":"                    \"MadX_reader::get_lattice: \""},
{"lineNum":"  299","line":"                    \"cannot find line or sequence with label \" + line_name );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  300","line":"        }"},
{"lineNum":"  301","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  302","line":""},
{"lineNum":"  303","line":"    extract_reference_particle(lattice, madx);"},
{"lineNum":"  304","line":"    return lattice;"},
{"lineNum":"  305","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  306","line":""},
{"lineNum":"  307","line":"Lattice"},
{"lineNum":"  308","line":"MadX_reader::get_lattice(std::string const& line_name,"},
{"lineNum":"  309","line":"        std::string const& filename)"},
{"lineNum":"  310","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  311","line":"    parse_file(filename);"},
{"lineNum":"  312","line":"    return get_lattice(line_name);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  313","line":"}"},
{"lineNum":"  314","line":""},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 128, "covered" : 0,};
var merged_data = [];
