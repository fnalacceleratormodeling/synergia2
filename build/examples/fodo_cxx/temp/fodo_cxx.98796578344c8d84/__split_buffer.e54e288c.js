var data = {lines:[
{"lineNum":"    1","line":"// -*- C++ -*-"},
{"lineNum":"    2","line":"#ifndef _LIBCPP_SPLIT_BUFFER"},
{"lineNum":"    3","line":"#define _LIBCPP_SPLIT_BUFFER"},
{"lineNum":"    4","line":""},
{"lineNum":"    5","line":"#include <__config>"},
{"lineNum":"    6","line":"#include <__utility/forward.h>"},
{"lineNum":"    7","line":"#include <algorithm>"},
{"lineNum":"    8","line":"#include <type_traits>"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)"},
{"lineNum":"   11","line":"#pragma GCC system_header"},
{"lineNum":"   12","line":"#endif"},
{"lineNum":"   13","line":""},
{"lineNum":"   14","line":"_LIBCPP_PUSH_MACROS"},
{"lineNum":"   15","line":"#include <__undef_macros>"},
{"lineNum":"   16","line":""},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"_LIBCPP_BEGIN_NAMESPACE_STD"},
{"lineNum":"   19","line":""},
{"lineNum":"   20","line":"template <bool>"},
{"lineNum":"   21","line":"class __split_buffer_common"},
{"lineNum":"   22","line":"{"},
{"lineNum":"   23","line":"protected:"},
{"lineNum":"   24","line":"    _LIBCPP_NORETURN void __throw_length_error() const;"},
{"lineNum":"   25","line":"    _LIBCPP_NORETURN void __throw_out_of_range() const;"},
{"lineNum":"   26","line":"};"},
{"lineNum":"   27","line":""},
{"lineNum":"   28","line":"template <class _Tp, class _Allocator = allocator<_Tp> >"},
{"lineNum":"   29","line":"struct __split_buffer"},
{"lineNum":"   30","line":"    : private __split_buffer_common<true>"},
{"lineNum":"   31","line":"{"},
{"lineNum":"   32","line":"private:"},
{"lineNum":"   33","line":"    __split_buffer(const __split_buffer&);"},
{"lineNum":"   34","line":"    __split_buffer& operator=(const __split_buffer&);"},
{"lineNum":"   35","line":"public:"},
{"lineNum":"   36","line":"    typedef _Tp                                             value_type;"},
{"lineNum":"   37","line":"    typedef _Allocator                                      allocator_type;"},
{"lineNum":"   38","line":"    typedef typename remove_reference<allocator_type>::type __alloc_rr;"},
{"lineNum":"   39","line":"    typedef allocator_traits<__alloc_rr>                    __alloc_traits;"},
{"lineNum":"   40","line":"    typedef value_type&                                     reference;"},
{"lineNum":"   41","line":"    typedef const value_type&                               const_reference;"},
{"lineNum":"   42","line":"    typedef typename __alloc_traits::size_type              size_type;"},
{"lineNum":"   43","line":"    typedef typename __alloc_traits::difference_type        difference_type;"},
{"lineNum":"   44","line":"    typedef typename __alloc_traits::pointer                pointer;"},
{"lineNum":"   45","line":"    typedef typename __alloc_traits::const_pointer          const_pointer;"},
{"lineNum":"   46","line":"    typedef pointer                                         iterator;"},
{"lineNum":"   47","line":"    typedef const_pointer                                   const_iterator;"},
{"lineNum":"   48","line":""},
{"lineNum":"   49","line":"    pointer                                         __first_;"},
{"lineNum":"   50","line":"    pointer                                         __begin_;"},
{"lineNum":"   51","line":"    pointer                                         __end_;"},
{"lineNum":"   52","line":"    __compressed_pair<pointer, allocator_type> __end_cap_;"},
{"lineNum":"   53","line":""},
{"lineNum":"   54","line":"    typedef typename add_lvalue_reference<allocator_type>::type __alloc_ref;"},
{"lineNum":"   55","line":"    typedef typename add_lvalue_reference<allocator_type>::type __alloc_const_ref;"},
{"lineNum":"   56","line":""},
{"lineNum":"   57","line":"    _LIBCPP_INLINE_VISIBILITY __alloc_rr&           __alloc() _NOEXCEPT         {return __end_cap_.second();}","class":"linePartCov","hits":"1","order":"258","possible_hits":"37",},
{"lineNum":"   58","line":"    _LIBCPP_INLINE_VISIBILITY const __alloc_rr&     __alloc() const _NOEXCEPT   {return __end_cap_.second();}"},
{"lineNum":"   59","line":"    _LIBCPP_INLINE_VISIBILITY pointer&              __end_cap() _NOEXCEPT       {return __end_cap_.first();}"},
{"lineNum":"   60","line":"    _LIBCPP_INLINE_VISIBILITY const pointer&        __end_cap() const _NOEXCEPT {return __end_cap_.first();}"},
{"lineNum":"   61","line":""},
{"lineNum":"   62","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"   63","line":"    __split_buffer()"},
{"lineNum":"   64","line":"        _NOEXCEPT_(is_nothrow_default_constructible<allocator_type>::value);"},
{"lineNum":"   65","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"   66","line":"    explicit __split_buffer(__alloc_rr& __a);"},
{"lineNum":"   67","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"   68","line":"    explicit __split_buffer(const __alloc_rr& __a);"},
{"lineNum":"   69","line":"    __split_buffer(size_type __cap, size_type __start, __alloc_rr& __a);"},
{"lineNum":"   70","line":"    ~__split_buffer();"},
{"lineNum":"   71","line":""},
{"lineNum":"   72","line":"    __split_buffer(__split_buffer&& __c)"},
{"lineNum":"   73","line":"        _NOEXCEPT_(is_nothrow_move_constructible<allocator_type>::value);"},
{"lineNum":"   74","line":"    __split_buffer(__split_buffer&& __c, const __alloc_rr& __a);"},
{"lineNum":"   75","line":"    __split_buffer& operator=(__split_buffer&& __c)"},
{"lineNum":"   76","line":"        _NOEXCEPT_((__alloc_traits::propagate_on_container_move_assignment::value &&"},
{"lineNum":"   77","line":"                is_nothrow_move_assignable<allocator_type>::value) ||"},
{"lineNum":"   78","line":"               !__alloc_traits::propagate_on_container_move_assignment::value);"},
{"lineNum":"   79","line":""},
{"lineNum":"   80","line":"    _LIBCPP_INLINE_VISIBILITY       iterator begin() _NOEXCEPT       {return __begin_;}","class":"linePartCov","hits":"14","order":"271","possible_hits":"847",},
{"lineNum":"   81","line":"    _LIBCPP_INLINE_VISIBILITY const_iterator begin() const _NOEXCEPT {return __begin_;}"},
{"lineNum":"   82","line":"    _LIBCPP_INLINE_VISIBILITY       iterator end() _NOEXCEPT         {return __end_;}","class":"linePartCov","hits":"2","order":"265","possible_hits":"24",},
{"lineNum":"   83","line":"    _LIBCPP_INLINE_VISIBILITY const_iterator end() const _NOEXCEPT   {return __end_;}"},
{"lineNum":"   84","line":""},
{"lineNum":"   85","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"   86","line":"    void clear() _NOEXCEPT"},
{"lineNum":"   87","line":"        {__destruct_at_end(__begin_);}","class":"linePartCov","hits":"4","order":"225","possible_hits":"40",},
{"lineNum":"   88","line":"    _LIBCPP_INLINE_VISIBILITY size_type size() const {return static_cast<size_type>(__end_ - __begin_);}","class":"linePartCov","hits":"5","order":"247","possible_hits":"910",},
{"lineNum":"   89","line":"    _LIBCPP_INLINE_VISIBILITY bool empty()     const {return __end_ == __begin_;}","class":"linePartCov","hits":"2","order":"368","possible_hits":"63",},
{"lineNum":"   90","line":"    _LIBCPP_INLINE_VISIBILITY size_type capacity() const {return static_cast<size_type>(__end_cap() - __first_);}","class":"linePartCov","hits":"1","order":"255","possible_hits":"38",},
{"lineNum":"   91","line":"    _LIBCPP_INLINE_VISIBILITY size_type __front_spare() const {return static_cast<size_type>(__begin_ - __first_);}"},
{"lineNum":"   92","line":"    _LIBCPP_INLINE_VISIBILITY size_type __back_spare() const {return static_cast<size_type>(__end_cap() - __end_);}"},
{"lineNum":"   93","line":""},
{"lineNum":"   94","line":"    _LIBCPP_INLINE_VISIBILITY       reference front()       {return *__begin_;}","class":"lineNoCov","hits":"0","possible_hits":"32",},
{"lineNum":"   95","line":"    _LIBCPP_INLINE_VISIBILITY const_reference front() const {return *__begin_;}"},
{"lineNum":"   96","line":"    _LIBCPP_INLINE_VISIBILITY       reference back()        {return *(__end_ - 1);}","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   97","line":"    _LIBCPP_INLINE_VISIBILITY const_reference back() const  {return *(__end_ - 1);}"},
{"lineNum":"   98","line":""},
{"lineNum":"   99","line":"    void reserve(size_type __n);"},
{"lineNum":"  100","line":"    void shrink_to_fit() _NOEXCEPT;"},
{"lineNum":"  101","line":"    void push_front(const_reference __x);"},
{"lineNum":"  102","line":"    _LIBCPP_INLINE_VISIBILITY void push_back(const_reference __x);"},
{"lineNum":"  103","line":"    void push_front(value_type&& __x);"},
{"lineNum":"  104","line":"    void push_back(value_type&& __x);"},
{"lineNum":"  105","line":"    template <class... _Args>"},
{"lineNum":"  106","line":"        void emplace_back(_Args&&... __args);"},
{"lineNum":"  107","line":""},
{"lineNum":"  108","line":"    _LIBCPP_INLINE_VISIBILITY void pop_front() {__destruct_at_begin(__begin_+1);}","class":"lineNoCov","hits":"0","possible_hits":"135",},
{"lineNum":"  109","line":"    _LIBCPP_INLINE_VISIBILITY void pop_back() {__destruct_at_end(__end_-1);}","class":"lineNoCov","hits":"0","possible_hits":"5",},
{"lineNum":"  110","line":""},
{"lineNum":"  111","line":"    void __construct_at_end(size_type __n);"},
{"lineNum":"  112","line":"    void __construct_at_end(size_type __n, const_reference __x);"},
{"lineNum":"  113","line":"    template <class _InputIter>"},
{"lineNum":"  114","line":"        typename enable_if"},
{"lineNum":"  115","line":"        <"},
{"lineNum":"  116","line":"            __is_cpp17_input_iterator<_InputIter>::value &&"},
{"lineNum":"  117","line":"           !__is_cpp17_forward_iterator<_InputIter>::value,"},
{"lineNum":"  118","line":"            void"},
{"lineNum":"  119","line":"        >::type"},
{"lineNum":"  120","line":"        __construct_at_end(_InputIter __first, _InputIter __last);"},
{"lineNum":"  121","line":"    template <class _ForwardIterator>"},
{"lineNum":"  122","line":"        typename enable_if"},
{"lineNum":"  123","line":"        <"},
{"lineNum":"  124","line":"            __is_cpp17_forward_iterator<_ForwardIterator>::value,"},
{"lineNum":"  125","line":"            void"},
{"lineNum":"  126","line":"        >::type"},
{"lineNum":"  127","line":"        __construct_at_end(_ForwardIterator __first, _ForwardIterator __last);"},
{"lineNum":"  128","line":""},
{"lineNum":"  129","line":"    _LIBCPP_INLINE_VISIBILITY void __destruct_at_begin(pointer __new_begin)"},
{"lineNum":"  130","line":"        {__destruct_at_begin(__new_begin, is_trivially_destructible<value_type>());}"},
{"lineNum":"  131","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  132","line":"        void __destruct_at_begin(pointer __new_begin, false_type);"},
{"lineNum":"  133","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  134","line":"        void __destruct_at_begin(pointer __new_begin, true_type);"},
{"lineNum":"  135","line":""},
{"lineNum":"  136","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  137","line":"    void __destruct_at_end(pointer __new_last) _NOEXCEPT"},
{"lineNum":"  138","line":"        {__destruct_at_end(__new_last, false_type());}","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  139","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  140","line":"        void __destruct_at_end(pointer __new_last, false_type) _NOEXCEPT;"},
{"lineNum":"  141","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  142","line":"        void __destruct_at_end(pointer __new_last, true_type) _NOEXCEPT;"},
{"lineNum":"  143","line":""},
{"lineNum":"  144","line":"    void swap(__split_buffer& __x)"},
{"lineNum":"  145","line":"        _NOEXCEPT_(!__alloc_traits::propagate_on_container_swap::value||"},
{"lineNum":"  146","line":"                   __is_nothrow_swappable<__alloc_rr>::value);"},
{"lineNum":"  147","line":""},
{"lineNum":"  148","line":"    bool __invariants() const;"},
{"lineNum":"  149","line":""},
{"lineNum":"  150","line":"private:"},
{"lineNum":"  151","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  152","line":"    void __move_assign_alloc(__split_buffer& __c, true_type)"},
{"lineNum":"  153","line":"        _NOEXCEPT_(is_nothrow_move_assignable<allocator_type>::value)"},
{"lineNum":"  154","line":"        {"},
{"lineNum":"  155","line":"            __alloc() = _VSTD::move(__c.__alloc());"},
{"lineNum":"  156","line":"        }"},
{"lineNum":"  157","line":""},
{"lineNum":"  158","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  159","line":"    void __move_assign_alloc(__split_buffer&, false_type) _NOEXCEPT"},
{"lineNum":"  160","line":"        {}"},
{"lineNum":"  161","line":""},
{"lineNum":"  162","line":"    struct _ConstructTransaction {"},
{"lineNum":"  163","line":"      explicit _ConstructTransaction(pointer* __p, size_type __n) _NOEXCEPT"},
{"lineNum":"  164","line":"      : __pos_(*__p), __end_(*__p + __n), __dest_(__p) {","class":"linePartCov","hits":"1","order":"576","possible_hits":"17",},
{"lineNum":"  165","line":"      }"},
{"lineNum":"  166","line":"      ~_ConstructTransaction() {"},
{"lineNum":"  167","line":"        *__dest_ = __pos_;","class":"linePartCov","hits":"1","order":"579","possible_hits":"12",},
{"lineNum":"  168","line":"      }"},
{"lineNum":"  169","line":"      pointer __pos_;"},
{"lineNum":"  170","line":"     const pointer __end_;"},
{"lineNum":"  171","line":"    private:"},
{"lineNum":"  172","line":"     pointer *__dest_;"},
{"lineNum":"  173","line":"    };"},
{"lineNum":"  174","line":"};"},
{"lineNum":"  175","line":""},
{"lineNum":"  176","line":"template <class _Tp, class _Allocator>"},
{"lineNum":"  177","line":"bool"},
{"lineNum":"  178","line":"__split_buffer<_Tp, _Allocator>::__invariants() const"},
{"lineNum":"  179","line":"{"},
{"lineNum":"  180","line":"    if (__first_ == nullptr)"},
{"lineNum":"  181","line":"    {"},
{"lineNum":"  182","line":"        if (__begin_ != nullptr)"},
{"lineNum":"  183","line":"            return false;"},
{"lineNum":"  184","line":"        if (__end_ != nullptr)"},
{"lineNum":"  185","line":"            return false;"},
{"lineNum":"  186","line":"        if (__end_cap() != nullptr)"},
{"lineNum":"  187","line":"            return false;"},
{"lineNum":"  188","line":"    }"},
{"lineNum":"  189","line":"    else"},
{"lineNum":"  190","line":"    {"},
{"lineNum":"  191","line":"        if (__begin_ < __first_)"},
{"lineNum":"  192","line":"            return false;"},
{"lineNum":"  193","line":"        if (__end_ < __begin_)"},
{"lineNum":"  194","line":"            return false;"},
{"lineNum":"  195","line":"        if (__end_cap() < __end_)"},
{"lineNum":"  196","line":"            return false;"},
{"lineNum":"  197","line":"    }"},
{"lineNum":"  198","line":"    return true;"},
{"lineNum":"  199","line":"}"},
{"lineNum":"  200","line":""},
{"lineNum":"  201","line":"//  Default constructs __n objects starting at __end_"},
{"lineNum":"  202","line":"//  throws if construction throws"},
{"lineNum":"  203","line":"//  Precondition:  __n > 0"},
{"lineNum":"  204","line":"//  Precondition:  size() + __n <= capacity()"},
{"lineNum":"  205","line":"//  Postcondition:  size() == size() + __n"},
{"lineNum":"  206","line":"template <class _Tp, class _Allocator>"},
{"lineNum":"  207","line":"void"},
{"lineNum":"  208","line":"__split_buffer<_Tp, _Allocator>::__construct_at_end(size_type __n)"},
{"lineNum":"  209","line":"{"},
{"lineNum":"  210","line":"    _ConstructTransaction __tx(&this->__end_, __n);"},
{"lineNum":"  211","line":"    for (; __tx.__pos_ != __tx.__end_; ++__tx.__pos_) {","class":"lineNoCov","hits":"0","possible_hits":"21",},
{"lineNum":"  212","line":"        __alloc_traits::construct(this->__alloc(), _VSTD::__to_address(__tx.__pos_));"},
{"lineNum":"  213","line":"    }"},
{"lineNum":"  214","line":"}"},
{"lineNum":"  215","line":""},
{"lineNum":"  216","line":"//  Copy constructs __n objects starting at __end_ from __x"},
{"lineNum":"  217","line":"//  throws if construction throws"},
{"lineNum":"  218","line":"//  Precondition:  __n > 0"},
{"lineNum":"  219","line":"//  Precondition:  size() + __n <= capacity()"},
{"lineNum":"  220","line":"//  Postcondition:  size() == old size() + __n"},
{"lineNum":"  221","line":"//  Postcondition:  [i] == __x for all i in [size() - __n, __n)"},
{"lineNum":"  222","line":"template <class _Tp, class _Allocator>"},
{"lineNum":"  223","line":"void"},
{"lineNum":"  224","line":"__split_buffer<_Tp, _Allocator>::__construct_at_end(size_type __n, const_reference __x)"},
{"lineNum":"  225","line":"{"},
{"lineNum":"  226","line":"    _ConstructTransaction __tx(&this->__end_, __n);"},
{"lineNum":"  227","line":"    for (; __tx.__pos_ != __tx.__end_; ++__tx.__pos_) {","class":"lineNoCov","hits":"0","possible_hits":"9",},
{"lineNum":"  228","line":"        __alloc_traits::construct(this->__alloc(),"},
{"lineNum":"  229","line":"            _VSTD::__to_address(__tx.__pos_), __x);"},
{"lineNum":"  230","line":"    }"},
{"lineNum":"  231","line":"}"},
{"lineNum":"  232","line":""},
{"lineNum":"  233","line":"template <class _Tp, class _Allocator>"},
{"lineNum":"  234","line":"template <class _InputIter>"},
{"lineNum":"  235","line":"typename enable_if"},
{"lineNum":"  236","line":"<"},
{"lineNum":"  237","line":"     __is_cpp17_input_iterator<_InputIter>::value &&"},
{"lineNum":"  238","line":"    !__is_cpp17_forward_iterator<_InputIter>::value,"},
{"lineNum":"  239","line":"    void"},
{"lineNum":"  240","line":">::type"},
{"lineNum":"  241","line":"__split_buffer<_Tp, _Allocator>::__construct_at_end(_InputIter __first, _InputIter __last)"},
{"lineNum":"  242","line":"{"},
{"lineNum":"  243","line":"    __alloc_rr& __a = this->__alloc();"},
{"lineNum":"  244","line":"    for (; __first != __last; ++__first)"},
{"lineNum":"  245","line":"    {"},
{"lineNum":"  246","line":"        if (__end_ == __end_cap())"},
{"lineNum":"  247","line":"        {"},
{"lineNum":"  248","line":"            size_type __old_cap = __end_cap() - __first_;"},
{"lineNum":"  249","line":"            size_type __new_cap = _VSTD::max<size_type>(2 * __old_cap, 8);"},
{"lineNum":"  250","line":"            __split_buffer __buf(__new_cap, 0, __a);"},
{"lineNum":"  251","line":"            for (pointer __p = __begin_; __p != __end_; ++__p, ++__buf.__end_)"},
{"lineNum":"  252","line":"                __alloc_traits::construct(__buf.__alloc(),"},
{"lineNum":"  253","line":"                        _VSTD::__to_address(__buf.__end_), _VSTD::move(*__p));"},
{"lineNum":"  254","line":"            swap(__buf);"},
{"lineNum":"  255","line":"        }"},
{"lineNum":"  256","line":"        __alloc_traits::construct(__a, _VSTD::__to_address(this->__end_), *__first);"},
{"lineNum":"  257","line":"        ++this->__end_;"},
{"lineNum":"  258","line":"    }"},
{"lineNum":"  259","line":"}"},
{"lineNum":"  260","line":""},
{"lineNum":"  261","line":"template <class _Tp, class _Allocator>"},
{"lineNum":"  262","line":"template <class _ForwardIterator>"},
{"lineNum":"  263","line":"typename enable_if"},
{"lineNum":"  264","line":"<"},
{"lineNum":"  265","line":"    __is_cpp17_forward_iterator<_ForwardIterator>::value,"},
{"lineNum":"  266","line":"    void"},
{"lineNum":"  267","line":">::type"},
{"lineNum":"  268","line":"__split_buffer<_Tp, _Allocator>::__construct_at_end(_ForwardIterator __first, _ForwardIterator __last)"},
{"lineNum":"  269","line":"{","class":"linePartCov","hits":"1","order":"575","possible_hits":"6",},
{"lineNum":"  270","line":"    _ConstructTransaction __tx(&this->__end_, _VSTD::distance(__first, __last));"},
{"lineNum":"  271","line":"    for (; __tx.__pos_ != __tx.__end_; ++__tx.__pos_, ++__first) {","class":"linePartCov","hits":"2","order":"577","possible_hits":"432",},
{"lineNum":"  272","line":"        __alloc_traits::construct(this->__alloc(),","class":"lineNoCov","hits":"0","possible_hits":"5",},
{"lineNum":"  273","line":"            _VSTD::__to_address(__tx.__pos_), *__first);"},
{"lineNum":"  274","line":"    }","class":"linePartCov","hits":"1","order":"578","possible_hits":"6",},
{"lineNum":"  275","line":"}","class":"linePartCov","hits":"1","order":"580","possible_hits":"12",},
{"lineNum":"  276","line":""},
{"lineNum":"  277","line":"template <class _Tp, class _Allocator>"},
{"lineNum":"  278","line":"inline"},
{"lineNum":"  279","line":"void"},
{"lineNum":"  280","line":"__split_buffer<_Tp, _Allocator>::__destruct_at_begin(pointer __new_begin, false_type)"},
{"lineNum":"  281","line":"{"},
{"lineNum":"  282","line":"    while (__begin_ != __new_begin)"},
{"lineNum":"  283","line":"        __alloc_traits::destroy(__alloc(), _VSTD::__to_address(__begin_++));"},
{"lineNum":"  284","line":"}"},
{"lineNum":"  285","line":""},
{"lineNum":"  286","line":"template <class _Tp, class _Allocator>"},
{"lineNum":"  287","line":"inline"},
{"lineNum":"  288","line":"void"},
{"lineNum":"  289","line":"__split_buffer<_Tp, _Allocator>::__destruct_at_begin(pointer __new_begin, true_type)"},
{"lineNum":"  290","line":"{"},
{"lineNum":"  291","line":"    __begin_ = __new_begin;","class":"lineNoCov","hits":"0","possible_hits":"84",},
{"lineNum":"  292","line":"}"},
{"lineNum":"  293","line":""},
{"lineNum":"  294","line":"template <class _Tp, class _Allocator>"},
{"lineNum":"  295","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  296","line":"void"},
{"lineNum":"  297","line":"__split_buffer<_Tp, _Allocator>::__destruct_at_end(pointer __new_last, false_type) _NOEXCEPT"},
{"lineNum":"  298","line":"{"},
{"lineNum":"  299","line":"    while (__new_last != __end_)","class":"linePartCov","hits":"4","order":"226","possible_hits":"220",},
{"lineNum":"  300","line":"        __alloc_traits::destroy(__alloc(), _VSTD::__to_address(--__end_));","class":"lineNoCov","hits":"0","possible_hits":"54",},
{"lineNum":"  301","line":"}"},
{"lineNum":"  302","line":""},
{"lineNum":"  303","line":"template <class _Tp, class _Allocator>"},
{"lineNum":"  304","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  305","line":"void"},
{"lineNum":"  306","line":"__split_buffer<_Tp, _Allocator>::__destruct_at_end(pointer __new_last, true_type) _NOEXCEPT"},
{"lineNum":"  307","line":"{"},
{"lineNum":"  308","line":"    __end_ = __new_last;"},
{"lineNum":"  309","line":"}"},
{"lineNum":"  310","line":""},
{"lineNum":"  311","line":"template <class _Tp, class _Allocator>"},
{"lineNum":"  312","line":"__split_buffer<_Tp, _Allocator>::__split_buffer(size_type __cap, size_type __start, __alloc_rr& __a)"},
{"lineNum":"  313","line":"    : __end_cap_(nullptr, __a)"},
{"lineNum":"  314","line":"{","class":"linePartCov","hits":"3","order":"204","possible_hits":"11",},
{"lineNum":"  315","line":"    __first_ = __cap != 0 ? __alloc_traits::allocate(__alloc(), __cap) : nullptr;","class":"linePartCov","hits":"3","order":"205","possible_hits":"275",},
{"lineNum":"  316","line":"    __begin_ = __end_ = __first_ + __start;","class":"linePartCov","hits":"3","order":"206","possible_hits":"205",},
{"lineNum":"  317","line":"    __end_cap() = __first_ + __cap;","class":"linePartCov","hits":"3","order":"207","possible_hits":"255",},
{"lineNum":"  318","line":"}","class":"linePartCov","hits":"3","order":"208","possible_hits":"11",},
{"lineNum":"  319","line":""},
{"lineNum":"  320","line":"template <class _Tp, class _Allocator>"},
{"lineNum":"  321","line":"inline"},
{"lineNum":"  322","line":"__split_buffer<_Tp, _Allocator>::__split_buffer()"},
{"lineNum":"  323","line":"    _NOEXCEPT_(is_nothrow_default_constructible<allocator_type>::value)"},
{"lineNum":"  324","line":"    : __first_(nullptr), __begin_(nullptr), __end_(nullptr), __end_cap_(nullptr, __default_init_tag())","class":"lineCov","hits":"11","order":"240","possible_hits":"11",},
{"lineNum":"  325","line":"{"},
{"lineNum":"  326","line":"}"},
{"lineNum":"  327","line":""},
{"lineNum":"  328","line":"template <class _Tp, class _Allocator>"},
{"lineNum":"  329","line":"inline"},
{"lineNum":"  330","line":"__split_buffer<_Tp, _Allocator>::__split_buffer(__alloc_rr& __a)"},
{"lineNum":"  331","line":"    : __first_(nullptr), __begin_(nullptr), __end_(nullptr), __end_cap_(nullptr, __a)"},
{"lineNum":"  332","line":"{"},
{"lineNum":"  333","line":"}"},
{"lineNum":"  334","line":""},
{"lineNum":"  335","line":"template <class _Tp, class _Allocator>"},
{"lineNum":"  336","line":"inline"},
{"lineNum":"  337","line":"__split_buffer<_Tp, _Allocator>::__split_buffer(const __alloc_rr& __a)"},
{"lineNum":"  338","line":"    : __first_(nullptr), __begin_(nullptr), __end_(nullptr), __end_cap_(nullptr, __a)"},
{"lineNum":"  339","line":"{"},
{"lineNum":"  340","line":"}"},
{"lineNum":"  341","line":""},
{"lineNum":"  342","line":"template <class _Tp, class _Allocator>"},
{"lineNum":"  343","line":"__split_buffer<_Tp, _Allocator>::~__split_buffer()"},
{"lineNum":"  344","line":"{","class":"linePartCov","hits":"4","order":"224","possible_hits":"30",},
{"lineNum":"  345","line":"    clear();","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  346","line":"    if (__first_)","class":"linePartCov","hits":"4","order":"227","possible_hits":"441",},
{"lineNum":"  347","line":"        __alloc_traits::deallocate(__alloc(), __first_, capacity());","class":"linePartCov","hits":"3","order":"340","possible_hits":"12",},
{"lineNum":"  348","line":"}","class":"linePartCov","hits":"3","order":"228","possible_hits":"59",},
{"lineNum":"  349","line":""},
{"lineNum":"  350","line":"template <class _Tp, class _Allocator>"},
{"lineNum":"  351","line":"__split_buffer<_Tp, _Allocator>::__split_buffer(__split_buffer&& __c)"},
{"lineNum":"  352","line":"    _NOEXCEPT_(is_nothrow_move_constructible<allocator_type>::value)"},
{"lineNum":"  353","line":"    : __first_(_VSTD::move(__c.__first_)),"},
{"lineNum":"  354","line":"      __begin_(_VSTD::move(__c.__begin_)),"},
{"lineNum":"  355","line":"      __end_(_VSTD::move(__c.__end_)),"},
{"lineNum":"  356","line":"      __end_cap_(_VSTD::move(__c.__end_cap_))"},
{"lineNum":"  357","line":"{"},
{"lineNum":"  358","line":"    __c.__first_ = nullptr;"},
{"lineNum":"  359","line":"    __c.__begin_ = nullptr;"},
{"lineNum":"  360","line":"    __c.__end_ = nullptr;"},
{"lineNum":"  361","line":"    __c.__end_cap() = nullptr;"},
{"lineNum":"  362","line":"}"},
{"lineNum":"  363","line":""},
{"lineNum":"  364","line":"template <class _Tp, class _Allocator>"},
{"lineNum":"  365","line":"__split_buffer<_Tp, _Allocator>::__split_buffer(__split_buffer&& __c, const __alloc_rr& __a)"},
{"lineNum":"  366","line":"    : __end_cap_(nullptr, __a)"},
{"lineNum":"  367","line":"{"},
{"lineNum":"  368","line":"    if (__a == __c.__alloc())"},
{"lineNum":"  369","line":"    {"},
{"lineNum":"  370","line":"        __first_ = __c.__first_;"},
{"lineNum":"  371","line":"        __begin_ = __c.__begin_;"},
{"lineNum":"  372","line":"        __end_ = __c.__end_;"},
{"lineNum":"  373","line":"        __end_cap() = __c.__end_cap();"},
{"lineNum":"  374","line":"        __c.__first_ = nullptr;"},
{"lineNum":"  375","line":"        __c.__begin_ = nullptr;"},
{"lineNum":"  376","line":"        __c.__end_ = nullptr;"},
{"lineNum":"  377","line":"        __c.__end_cap() = nullptr;"},
{"lineNum":"  378","line":"    }"},
{"lineNum":"  379","line":"    else"},
{"lineNum":"  380","line":"    {"},
{"lineNum":"  381","line":"        size_type __cap = __c.size();"},
{"lineNum":"  382","line":"        __first_ = __alloc_traits::allocate(__alloc(), __cap);"},
{"lineNum":"  383","line":"        __begin_ = __end_ = __first_;"},
{"lineNum":"  384","line":"        __end_cap() = __first_ + __cap;"},
{"lineNum":"  385","line":"        typedef move_iterator<iterator> _Ip;"},
{"lineNum":"  386","line":"        __construct_at_end(_Ip(__c.begin()), _Ip(__c.end()));"},
{"lineNum":"  387","line":"    }"},
{"lineNum":"  388","line":"}"},
{"lineNum":"  389","line":""},
{"lineNum":"  390","line":"template <class _Tp, class _Allocator>"},
{"lineNum":"  391","line":"__split_buffer<_Tp, _Allocator>&"},
{"lineNum":"  392","line":"__split_buffer<_Tp, _Allocator>::operator=(__split_buffer&& __c)"},
{"lineNum":"  393","line":"    _NOEXCEPT_((__alloc_traits::propagate_on_container_move_assignment::value &&"},
{"lineNum":"  394","line":"                is_nothrow_move_assignable<allocator_type>::value) ||"},
{"lineNum":"  395","line":"               !__alloc_traits::propagate_on_container_move_assignment::value)"},
{"lineNum":"  396","line":"{"},
{"lineNum":"  397","line":"    clear();"},
{"lineNum":"  398","line":"    shrink_to_fit();"},
{"lineNum":"  399","line":"    __first_ = __c.__first_;"},
{"lineNum":"  400","line":"    __begin_ = __c.__begin_;"},
{"lineNum":"  401","line":"    __end_ = __c.__end_;"},
{"lineNum":"  402","line":"    __end_cap() = __c.__end_cap();"},
{"lineNum":"  403","line":"    __move_assign_alloc(__c,"},
{"lineNum":"  404","line":"        integral_constant<bool,"},
{"lineNum":"  405","line":"                          __alloc_traits::propagate_on_container_move_assignment::value>());"},
{"lineNum":"  406","line":"    __c.__first_ = __c.__begin_ = __c.__end_ = __c.__end_cap() = nullptr;"},
{"lineNum":"  407","line":"    return *this;"},
{"lineNum":"  408","line":"}"},
{"lineNum":"  409","line":""},
{"lineNum":"  410","line":"template <class _Tp, class _Allocator>"},
{"lineNum":"  411","line":"void"},
{"lineNum":"  412","line":"__split_buffer<_Tp, _Allocator>::swap(__split_buffer& __x)"},
{"lineNum":"  413","line":"        _NOEXCEPT_(!__alloc_traits::propagate_on_container_swap::value||"},
{"lineNum":"  414","line":"                   __is_nothrow_swappable<__alloc_rr>::value)"},
{"lineNum":"  415","line":"{"},
{"lineNum":"  416","line":"    _VSTD::swap(__first_, __x.__first_);"},
{"lineNum":"  417","line":"    _VSTD::swap(__begin_, __x.__begin_);"},
{"lineNum":"  418","line":"    _VSTD::swap(__end_, __x.__end_);"},
{"lineNum":"  419","line":"    _VSTD::swap(__end_cap(), __x.__end_cap());"},
{"lineNum":"  420","line":"    _VSTD::__swap_allocator(__alloc(), __x.__alloc());"},
{"lineNum":"  421","line":"}"},
{"lineNum":"  422","line":""},
{"lineNum":"  423","line":"template <class _Tp, class _Allocator>"},
{"lineNum":"  424","line":"void"},
{"lineNum":"  425","line":"__split_buffer<_Tp, _Allocator>::reserve(size_type __n)"},
{"lineNum":"  426","line":"{"},
{"lineNum":"  427","line":"    if (__n < capacity())"},
{"lineNum":"  428","line":"    {"},
{"lineNum":"  429","line":"        __split_buffer<value_type, __alloc_rr&> __t(__n, 0, __alloc());"},
{"lineNum":"  430","line":"        __t.__construct_at_end(move_iterator<pointer>(__begin_),"},
{"lineNum":"  431","line":"                               move_iterator<pointer>(__end_));"},
{"lineNum":"  432","line":"        _VSTD::swap(__first_, __t.__first_);"},
{"lineNum":"  433","line":"        _VSTD::swap(__begin_, __t.__begin_);"},
{"lineNum":"  434","line":"        _VSTD::swap(__end_, __t.__end_);"},
{"lineNum":"  435","line":"        _VSTD::swap(__end_cap(), __t.__end_cap());"},
{"lineNum":"  436","line":"    }"},
{"lineNum":"  437","line":"}"},
{"lineNum":"  438","line":""},
{"lineNum":"  439","line":"template <class _Tp, class _Allocator>"},
{"lineNum":"  440","line":"void"},
{"lineNum":"  441","line":"__split_buffer<_Tp, _Allocator>::shrink_to_fit() _NOEXCEPT"},
{"lineNum":"  442","line":"{"},
{"lineNum":"  443","line":"    if (capacity() > size())"},
{"lineNum":"  444","line":"    {"},
{"lineNum":"  445","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  446","line":"        try"},
{"lineNum":"  447","line":"        {"},
{"lineNum":"  448","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  449","line":"            __split_buffer<value_type, __alloc_rr&> __t(size(), 0, __alloc());"},
{"lineNum":"  450","line":"            __t.__construct_at_end(move_iterator<pointer>(__begin_),"},
{"lineNum":"  451","line":"                                   move_iterator<pointer>(__end_));"},
{"lineNum":"  452","line":"            __t.__end_ = __t.__begin_ + (__end_ - __begin_);"},
{"lineNum":"  453","line":"            _VSTD::swap(__first_, __t.__first_);"},
{"lineNum":"  454","line":"            _VSTD::swap(__begin_, __t.__begin_);"},
{"lineNum":"  455","line":"            _VSTD::swap(__end_, __t.__end_);"},
{"lineNum":"  456","line":"            _VSTD::swap(__end_cap(), __t.__end_cap());"},
{"lineNum":"  457","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  458","line":"        }"},
{"lineNum":"  459","line":"        catch (...)"},
{"lineNum":"  460","line":"        {"},
{"lineNum":"  461","line":"        }"},
{"lineNum":"  462","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  463","line":"    }"},
{"lineNum":"  464","line":"}"},
{"lineNum":"  465","line":""},
{"lineNum":"  466","line":"template <class _Tp, class _Allocator>"},
{"lineNum":"  467","line":"void"},
{"lineNum":"  468","line":"__split_buffer<_Tp, _Allocator>::push_front(const_reference __x)"},
{"lineNum":"  469","line":"{","class":"lineNoCov","hits":"0","possible_hits":"22",},
{"lineNum":"  470","line":"    if (__begin_ == __first_)","class":"lineNoCov","hits":"0","possible_hits":"22",},
{"lineNum":"  471","line":"    {"},
{"lineNum":"  472","line":"        if (__end_ < __end_cap())","class":"lineNoCov","hits":"0","possible_hits":"22",},
{"lineNum":"  473","line":"        {"},
{"lineNum":"  474","line":"            difference_type __d = __end_cap() - __end_;","class":"lineNoCov","hits":"0","possible_hits":"22",},
{"lineNum":"  475","line":"            __d = (__d + 1) / 2;","class":"lineNoCov","hits":"0","possible_hits":"27",},
{"lineNum":"  476","line":"            __begin_ = _VSTD::move_backward(__begin_, __end_, __end_ + __d);","class":"lineNoCov","hits":"0","possible_hits":"49",},
{"lineNum":"  477","line":"            __end_ += __d;","class":"lineNoCov","hits":"0","possible_hits":"44",},
{"lineNum":"  478","line":"        }"},
{"lineNum":"  479","line":"        else"},
{"lineNum":"  480","line":"        {"},
{"lineNum":"  481","line":"            size_type __c = max<size_type>(2 * static_cast<size_t>(__end_cap() - __first_), 1);","class":"lineNoCov","hits":"0","possible_hits":"39",},
{"lineNum":"  482","line":"            __split_buffer<value_type, __alloc_rr&> __t(__c, (__c + 3) / 4, __alloc());","class":"lineNoCov","hits":"0","possible_hits":"27",},
{"lineNum":"  483","line":"            __t.__construct_at_end(move_iterator<pointer>(__begin_),","class":"lineNoCov","hits":"0","possible_hits":"10",},
{"lineNum":"  484","line":"                                   move_iterator<pointer>(__end_));","class":"lineNoCov","hits":"0","possible_hits":"5",},
{"lineNum":"  485","line":"            _VSTD::swap(__first_, __t.__first_);","class":"lineNoCov","hits":"0","possible_hits":"5",},
{"lineNum":"  486","line":"            _VSTD::swap(__begin_, __t.__begin_);"},
{"lineNum":"  487","line":"            _VSTD::swap(__end_, __t.__end_);"},
{"lineNum":"  488","line":"            _VSTD::swap(__end_cap(), __t.__end_cap());"},
{"lineNum":"  489","line":"        }","class":"lineNoCov","hits":"0","possible_hits":"15",},
{"lineNum":"  490","line":"    }"},
{"lineNum":"  491","line":"    __alloc_traits::construct(__alloc(), _VSTD::__to_address(__begin_-1), __x);","class":"lineNoCov","hits":"0","possible_hits":"22",},
{"lineNum":"  492","line":"    --__begin_;","class":"lineNoCov","hits":"0","possible_hits":"22",},
{"lineNum":"  493","line":"}","class":"lineNoCov","hits":"0","possible_hits":"22",},
{"lineNum":"  494","line":""},
{"lineNum":"  495","line":"template <class _Tp, class _Allocator>"},
{"lineNum":"  496","line":"void"},
{"lineNum":"  497","line":"__split_buffer<_Tp, _Allocator>::push_front(value_type&& __x)"},
{"lineNum":"  498","line":"{","class":"lineNoCov","hits":"0","possible_hits":"21",},
{"lineNum":"  499","line":"    if (__begin_ == __first_)","class":"lineNoCov","hits":"0","possible_hits":"21",},
{"lineNum":"  500","line":"    {"},
{"lineNum":"  501","line":"        if (__end_ < __end_cap())","class":"lineNoCov","hits":"0","possible_hits":"21",},
{"lineNum":"  502","line":"        {"},
{"lineNum":"  503","line":"            difference_type __d = __end_cap() - __end_;","class":"lineNoCov","hits":"0","possible_hits":"21",},
{"lineNum":"  504","line":"            __d = (__d + 1) / 2;","class":"lineNoCov","hits":"0","possible_hits":"26",},
{"lineNum":"  505","line":"            __begin_ = _VSTD::move_backward(__begin_, __end_, __end_ + __d);","class":"lineNoCov","hits":"0","possible_hits":"47",},
{"lineNum":"  506","line":"            __end_ += __d;","class":"lineNoCov","hits":"0","possible_hits":"42",},
{"lineNum":"  507","line":"        }"},
{"lineNum":"  508","line":"        else"},
{"lineNum":"  509","line":"        {"},
{"lineNum":"  510","line":"            size_type __c = max<size_type>(2 * static_cast<size_t>(__end_cap() - __first_), 1);","class":"lineNoCov","hits":"0","possible_hits":"37",},
{"lineNum":"  511","line":"            __split_buffer<value_type, __alloc_rr&> __t(__c, (__c + 3) / 4, __alloc());","class":"lineNoCov","hits":"0","possible_hits":"26",},
{"lineNum":"  512","line":"            __t.__construct_at_end(move_iterator<pointer>(__begin_),","class":"lineNoCov","hits":"0","possible_hits":"10",},
{"lineNum":"  513","line":"                                   move_iterator<pointer>(__end_));","class":"lineNoCov","hits":"0","possible_hits":"5",},
{"lineNum":"  514","line":"            _VSTD::swap(__first_, __t.__first_);","class":"lineNoCov","hits":"0","possible_hits":"5",},
{"lineNum":"  515","line":"            _VSTD::swap(__begin_, __t.__begin_);"},
{"lineNum":"  516","line":"            _VSTD::swap(__end_, __t.__end_);"},
{"lineNum":"  517","line":"            _VSTD::swap(__end_cap(), __t.__end_cap());"},
{"lineNum":"  518","line":"        }","class":"lineNoCov","hits":"0","possible_hits":"15",},
{"lineNum":"  519","line":"    }"},
{"lineNum":"  520","line":"    __alloc_traits::construct(__alloc(), _VSTD::__to_address(__begin_-1),","class":"lineNoCov","hits":"0","possible_hits":"21",},
{"lineNum":"  521","line":"            _VSTD::move(__x));"},
{"lineNum":"  522","line":"    --__begin_;","class":"lineNoCov","hits":"0","possible_hits":"21",},
{"lineNum":"  523","line":"}","class":"lineNoCov","hits":"0","possible_hits":"21",},
{"lineNum":"  524","line":""},
{"lineNum":"  525","line":"template <class _Tp, class _Allocator>"},
{"lineNum":"  526","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  527","line":"void"},
{"lineNum":"  528","line":"__split_buffer<_Tp, _Allocator>::push_back(const_reference __x)"},
{"lineNum":"  529","line":"{","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  530","line":"    if (__end_ == __end_cap())","class":"lineNoCov","hits":"0","possible_hits":"71",},
{"lineNum":"  531","line":"    {"},
{"lineNum":"  532","line":"        if (__begin_ > __first_)","class":"lineNoCov","hits":"0","possible_hits":"39",},
{"lineNum":"  533","line":"        {"},
{"lineNum":"  534","line":"            difference_type __d = __begin_ - __first_;","class":"lineNoCov","hits":"0","possible_hits":"7",},
{"lineNum":"  535","line":"            __d = (__d + 1) / 2;","class":"lineNoCov","hits":"0","possible_hits":"7",},
{"lineNum":"  536","line":"            __end_ = _VSTD::move(__begin_, __end_, __begin_ - __d);","class":"lineNoCov","hits":"0","possible_hits":"13",},
{"lineNum":"  537","line":"            __begin_ -= __d;","class":"lineNoCov","hits":"0","possible_hits":"14",},
{"lineNum":"  538","line":"        }"},
{"lineNum":"  539","line":"        else"},
{"lineNum":"  540","line":"        {"},
{"lineNum":"  541","line":"            size_type __c = max<size_type>(2 * static_cast<size_t>(__end_cap() - __first_), 1);","class":"lineNoCov","hits":"0","possible_hits":"73",},
{"lineNum":"  542","line":"            __split_buffer<value_type, __alloc_rr&> __t(__c, __c / 4, __alloc());","class":"lineNoCov","hits":"0","possible_hits":"44",},
{"lineNum":"  543","line":"            __t.__construct_at_end(move_iterator<pointer>(__begin_),","class":"lineNoCov","hits":"0","possible_hits":"10",},
{"lineNum":"  544","line":"                                   move_iterator<pointer>(__end_));","class":"lineNoCov","hits":"0","possible_hits":"5",},
{"lineNum":"  545","line":"            _VSTD::swap(__first_, __t.__first_);","class":"lineNoCov","hits":"0","possible_hits":"5",},
{"lineNum":"  546","line":"            _VSTD::swap(__begin_, __t.__begin_);"},
{"lineNum":"  547","line":"            _VSTD::swap(__end_, __t.__end_);"},
{"lineNum":"  548","line":"            _VSTD::swap(__end_cap(), __t.__end_cap());"},
{"lineNum":"  549","line":"        }","class":"lineNoCov","hits":"0","possible_hits":"15",},
{"lineNum":"  550","line":"    }"},
{"lineNum":"  551","line":"    __alloc_traits::construct(__alloc(), _VSTD::__to_address(__end_), __x);","class":"lineNoCov","hits":"0","possible_hits":"7",},
{"lineNum":"  552","line":"    ++__end_;","class":"lineNoCov","hits":"0","possible_hits":"8",},
{"lineNum":"  553","line":"}","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  554","line":""},
{"lineNum":"  555","line":"template <class _Tp, class _Allocator>"},
{"lineNum":"  556","line":"void"},
{"lineNum":"  557","line":"__split_buffer<_Tp, _Allocator>::push_back(value_type&& __x)"},
{"lineNum":"  558","line":"{","class":"linePartCov","hits":"1","order":"260","possible_hits":"42",},
{"lineNum":"  559","line":"    if (__end_ == __end_cap())","class":"linePartCov","hits":"1","order":"261","possible_hits":"42",},
{"lineNum":"  560","line":"    {"},
{"lineNum":"  561","line":"        if (__begin_ > __first_)","class":"lineNoCov","hits":"0","possible_hits":"42",},
{"lineNum":"  562","line":"        {"},
{"lineNum":"  563","line":"            difference_type __d = __begin_ - __first_;","class":"lineNoCov","hits":"0","possible_hits":"42",},
{"lineNum":"  564","line":"            __d = (__d + 1) / 2;","class":"lineNoCov","hits":"0","possible_hits":"42",},
{"lineNum":"  565","line":"            __end_ = _VSTD::move(__begin_, __end_, __begin_ - __d);","class":"lineNoCov","hits":"0","possible_hits":"84",},
{"lineNum":"  566","line":"            __begin_ -= __d;","class":"lineNoCov","hits":"0","possible_hits":"84",},
{"lineNum":"  567","line":"        }"},
{"lineNum":"  568","line":"        else"},
{"lineNum":"  569","line":"        {"},
{"lineNum":"  570","line":"            size_type __c = max<size_type>(2 * static_cast<size_t>(__end_cap() - __first_), 1);","class":"lineNoCov","hits":"0","possible_hits":"74",},
{"lineNum":"  571","line":"            __split_buffer<value_type, __alloc_rr&> __t(__c, __c / 4, __alloc());","class":"lineNoCov","hits":"0","possible_hits":"52",},
{"lineNum":"  572","line":"            __t.__construct_at_end(move_iterator<pointer>(__begin_),","class":"lineNoCov","hits":"0","possible_hits":"20",},
{"lineNum":"  573","line":"                                   move_iterator<pointer>(__end_));","class":"lineNoCov","hits":"0","possible_hits":"10",},
{"lineNum":"  574","line":"            _VSTD::swap(__first_, __t.__first_);","class":"lineNoCov","hits":"0","possible_hits":"10",},
{"lineNum":"  575","line":"            _VSTD::swap(__begin_, __t.__begin_);"},
{"lineNum":"  576","line":"            _VSTD::swap(__end_, __t.__end_);"},
{"lineNum":"  577","line":"            _VSTD::swap(__end_cap(), __t.__end_cap());"},
{"lineNum":"  578","line":"        }","class":"lineNoCov","hits":"0","possible_hits":"30",},
{"lineNum":"  579","line":"    }"},
{"lineNum":"  580","line":"    __alloc_traits::construct(__alloc(), _VSTD::__to_address(__end_),","class":"lineNoCov","hits":"0","possible_hits":"42",},
{"lineNum":"  581","line":"            _VSTD::move(__x));"},
{"lineNum":"  582","line":"    ++__end_;","class":"linePartCov","hits":"1","order":"262","possible_hits":"42",},
{"lineNum":"  583","line":"}","class":"linePartCov","hits":"1","order":"263","possible_hits":"42",},
{"lineNum":"  584","line":""},
{"lineNum":"  585","line":"template <class _Tp, class _Allocator>"},
{"lineNum":"  586","line":"template <class... _Args>"},
{"lineNum":"  587","line":"void"},
{"lineNum":"  588","line":"__split_buffer<_Tp, _Allocator>::emplace_back(_Args&&... __args)"},
{"lineNum":"  589","line":"{"},
{"lineNum":"  590","line":"    if (__end_ == __end_cap())"},
{"lineNum":"  591","line":"    {"},
{"lineNum":"  592","line":"        if (__begin_ > __first_)"},
{"lineNum":"  593","line":"        {"},
{"lineNum":"  594","line":"            difference_type __d = __begin_ - __first_;"},
{"lineNum":"  595","line":"            __d = (__d + 1) / 2;"},
{"lineNum":"  596","line":"            __end_ = _VSTD::move(__begin_, __end_, __begin_ - __d);"},
{"lineNum":"  597","line":"            __begin_ -= __d;"},
{"lineNum":"  598","line":"        }"},
{"lineNum":"  599","line":"        else"},
{"lineNum":"  600","line":"        {"},
{"lineNum":"  601","line":"            size_type __c = max<size_type>(2 * static_cast<size_t>(__end_cap() - __first_), 1);"},
{"lineNum":"  602","line":"            __split_buffer<value_type, __alloc_rr&> __t(__c, __c / 4, __alloc());"},
{"lineNum":"  603","line":"            __t.__construct_at_end(move_iterator<pointer>(__begin_),"},
{"lineNum":"  604","line":"                                   move_iterator<pointer>(__end_));"},
{"lineNum":"  605","line":"            _VSTD::swap(__first_, __t.__first_);"},
{"lineNum":"  606","line":"            _VSTD::swap(__begin_, __t.__begin_);"},
{"lineNum":"  607","line":"            _VSTD::swap(__end_, __t.__end_);"},
{"lineNum":"  608","line":"            _VSTD::swap(__end_cap(), __t.__end_cap());"},
{"lineNum":"  609","line":"        }"},
{"lineNum":"  610","line":"    }"},
{"lineNum":"  611","line":"    __alloc_traits::construct(__alloc(), _VSTD::__to_address(__end_),"},
{"lineNum":"  612","line":"                              _VSTD::forward<_Args>(__args)...);"},
{"lineNum":"  613","line":"    ++__end_;"},
{"lineNum":"  614","line":"}"},
{"lineNum":"  615","line":""},
{"lineNum":"  616","line":"template <class _Tp, class _Allocator>"},
{"lineNum":"  617","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  618","line":"void"},
{"lineNum":"  619","line":"swap(__split_buffer<_Tp, _Allocator>& __x, __split_buffer<_Tp, _Allocator>& __y)"},
{"lineNum":"  620","line":"        _NOEXCEPT_(_NOEXCEPT_(__x.swap(__y)))"},
{"lineNum":"  621","line":"{"},
{"lineNum":"  622","line":"    __x.swap(__y);"},
{"lineNum":"  623","line":"}"},
{"lineNum":"  624","line":""},
{"lineNum":"  625","line":"_LIBCPP_END_NAMESPACE_STD"},
{"lineNum":"  626","line":""},
{"lineNum":"  627","line":"_LIBCPP_POP_MACROS"},
{"lineNum":"  628","line":""},
{"lineNum":"  629","line":"#endif // _LIBCPP_SPLIT_BUFFER"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 99, "covered" : 28,};
var merged_data = [];
