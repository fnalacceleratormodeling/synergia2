var data = {lines:[
{"lineNum":"    1","line":"#ifndef DIAGNOSTICS_BULK_TRACK_H_"},
{"lineNum":"    2","line":"#define DIAGNOSTICS_BULK_TRACK_H_"},
{"lineNum":"    3","line":""},
{"lineNum":"    4","line":"#include \"synergia/bunch/diagnostics.h\""},
{"lineNum":"    5","line":"#include \"synergia/bunch/bunch.h\""},
{"lineNum":"    6","line":""},
{"lineNum":"    7","line":"/// Diagnostics_bulk_track records the phase space coordinates of a multiple"},
{"lineNum":"    8","line":"/// particles."},
{"lineNum":"    9","line":"/// Particles will only be tracked if they stay on the same processor."},
{"lineNum":"   10","line":"/// Lost particles that are somehow restored or particles not available when"},
{"lineNum":"   11","line":"/// the first update is called will also not be tracked."},
{"lineNum":"   12","line":"class Diagnostics_bulk_track : public Diagnostics","class":"lineNoCov","hits":"0","possible_hits":"13",},
{"lineNum":"   13","line":"{"},
{"lineNum":"   14","line":""},
{"lineNum":"   15","line":"private:"},
{"lineNum":"   16","line":""},
{"lineNum":"   17","line":"    int total_num_tracks, local_num_tracks;"},
{"lineNum":"   18","line":"    int offset, local_offset;"},
{"lineNum":"   19","line":"    bool setup;"},
{"lineNum":"   20","line":""},
{"lineNum":"   21","line":"    // used between update and write"},
{"lineNum":"   22","line":"    double s_n;"},
{"lineNum":"   23","line":"    int repetition;"},
{"lineNum":"   24","line":"    double s;"},
{"lineNum":"   25","line":"    double pz;"},
{"lineNum":"   26","line":""},
{"lineNum":"   27","line":"    double ref_charge;"},
{"lineNum":"   28","line":"    double ref_mass;"},
{"lineNum":"   29","line":"    double ref_pz;"},
{"lineNum":"   30","line":""},
{"lineNum":"   31","line":"    karray2d_row track_coords;"},
{"lineNum":"   32","line":""},
{"lineNum":"   33","line":"    ParticleGroup pg;"},
{"lineNum":"   34","line":""},
{"lineNum":"   35","line":"private:"},
{"lineNum":"   36","line":""},
{"lineNum":"   37","line":"    void do_update(Bunch const& bunch) override;"},
{"lineNum":"   38","line":"    void do_reduce(Commxx const& comm, int root) override { }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   39","line":"    void do_first_write(Hdf5_file& file) override;"},
{"lineNum":"   40","line":"    void do_write(Hdf5_file& file) override;"},
{"lineNum":"   41","line":""},
{"lineNum":"   42","line":"    friend class cereal::access;"},
{"lineNum":"   43","line":""},
{"lineNum":"   44","line":"    template<class AR>"},
{"lineNum":"   45","line":"    void serialize(AR & ar)"},
{"lineNum":"   46","line":"    {","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"   47","line":"        ar(cereal::base_class<Diagnostics>(this));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   48","line":"        ar(total_num_tracks);","class":"lineNoCov","hits":"0","possible_hits":"9",},
{"lineNum":"   49","line":"        ar(local_num_tracks);","class":"lineNoCov","hits":"0","possible_hits":"9",},
{"lineNum":"   50","line":"        ar(offset);","class":"lineNoCov","hits":"0","possible_hits":"9",},
{"lineNum":"   51","line":"        ar(local_offset);","class":"lineNoCov","hits":"0","possible_hits":"9",},
{"lineNum":"   52","line":"        ar(setup);","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"   53","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"   54","line":""},
{"lineNum":"   55","line":"public:"},
{"lineNum":"   56","line":""},
{"lineNum":"   57","line":"    /// Create an empty Diagnostics_bulk_track object"},
{"lineNum":"   58","line":"    /// @param bunch_sptr the Bunch"},
{"lineNum":"   59","line":"    /// @param filename the base name for file to write to (base names will have"},
{"lineNum":"   60","line":"    ///        a numerical index inserted"},
{"lineNum":"   61","line":"    /// @param num_tracks the number of local particles to track"},
{"lineNum":"   62","line":"    /// @param offset id offset for first particle to track"},
{"lineNum":"   63","line":"    Diagnostics_bulk_track("},
{"lineNum":"   64","line":"            std::string const& filename = \"diag_bulk_track.h5\","},
{"lineNum":"   65","line":"            int num_tracks = 0,"},
{"lineNum":"   66","line":"            int offset = 0,"},
{"lineNum":"   67","line":"            ParticleGroup pg = ParticleGroup::regular);"},
{"lineNum":"   68","line":""},
{"lineNum":"   69","line":"};"},
{"lineNum":"   70","line":""},
{"lineNum":"   71","line":"CEREAL_REGISTER_TYPE(Diagnostics_bulk_track)","class":"linePartCov","hits":"4","order":"512","possible_hits":"9",},
{"lineNum":"   72","line":""},
{"lineNum":"   73","line":"#endif /* DIAGNOSTICS_BULK_TRACK_H_ */"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 11, "covered" : 1,};
var merged_data = [];
