var data = {lines:[
{"lineNum":"    1","line":"// -*- C++ -*-"},
{"lineNum":"    2","line":"//===-------------------------- locale ------------------------------------===//"},
{"lineNum":"    3","line":"//"},
{"lineNum":"    4","line":"// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions."},
{"lineNum":"    5","line":"// See https://llvm.org/LICENSE.txt for license information."},
{"lineNum":"    6","line":"// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception"},
{"lineNum":"    7","line":"//"},
{"lineNum":"    8","line":"//===----------------------------------------------------------------------===//"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"#ifndef _LIBCPP_LOCALE"},
{"lineNum":"   11","line":"#define _LIBCPP_LOCALE"},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"/*"},
{"lineNum":"   14","line":"    locale synopsis"},
{"lineNum":"   15","line":""},
{"lineNum":"   16","line":"namespace std"},
{"lineNum":"   17","line":"{"},
{"lineNum":"   18","line":""},
{"lineNum":"   19","line":"class locale"},
{"lineNum":"   20","line":"{"},
{"lineNum":"   21","line":"public:"},
{"lineNum":"   22","line":"    // types:"},
{"lineNum":"   23","line":"    class facet;"},
{"lineNum":"   24","line":"    class id;"},
{"lineNum":"   25","line":""},
{"lineNum":"   26","line":"    typedef int category;"},
{"lineNum":"   27","line":"    static const category // values assigned here are for exposition only"},
{"lineNum":"   28","line":"        none     = 0x000,"},
{"lineNum":"   29","line":"        collate  = 0x010,"},
{"lineNum":"   30","line":"        ctype    = 0x020,"},
{"lineNum":"   31","line":"        monetary = 0x040,"},
{"lineNum":"   32","line":"        numeric  = 0x080,"},
{"lineNum":"   33","line":"        time     = 0x100,"},
{"lineNum":"   34","line":"        messages = 0x200,"},
{"lineNum":"   35","line":"        all = collate | ctype | monetary | numeric | time | messages;"},
{"lineNum":"   36","line":""},
{"lineNum":"   37","line":"    // construct/copy/destroy:"},
{"lineNum":"   38","line":"    locale() noexcept;"},
{"lineNum":"   39","line":"    locale(const locale& other) noexcept;"},
{"lineNum":"   40","line":"    explicit locale(const char* std_name);"},
{"lineNum":"   41","line":"    explicit locale(const string& std_name);"},
{"lineNum":"   42","line":"    locale(const locale& other, const char* std_name, category);"},
{"lineNum":"   43","line":"    locale(const locale& other, const string& std_name, category);"},
{"lineNum":"   44","line":"    template <class Facet> locale(const locale& other, Facet* f);"},
{"lineNum":"   45","line":"    locale(const locale& other, const locale& one, category);"},
{"lineNum":"   46","line":""},
{"lineNum":"   47","line":"    ~locale(); // not virtual"},
{"lineNum":"   48","line":""},
{"lineNum":"   49","line":"    const locale& operator=(const locale& other) noexcept;"},
{"lineNum":"   50","line":""},
{"lineNum":"   51","line":"    template <class Facet> locale combine(const locale& other) const;"},
{"lineNum":"   52","line":""},
{"lineNum":"   53","line":"    // locale operations:"},
{"lineNum":"   54","line":"    basic_string<char> name() const;"},
{"lineNum":"   55","line":"    bool operator==(const locale& other) const;"},
{"lineNum":"   56","line":"    bool operator!=(const locale& other) const;"},
{"lineNum":"   57","line":"    template <class charT, class Traits, class Allocator>"},
{"lineNum":"   58","line":"      bool operator()(const basic_string<charT,Traits,Allocator>& s1,"},
{"lineNum":"   59","line":"                      const basic_string<charT,Traits,Allocator>& s2) const;"},
{"lineNum":"   60","line":""},
{"lineNum":"   61","line":"    // global locale objects:"},
{"lineNum":"   62","line":"    static locale global(const locale&);"},
{"lineNum":"   63","line":"    static const locale& classic();"},
{"lineNum":"   64","line":"};"},
{"lineNum":"   65","line":""},
{"lineNum":"   66","line":"template <class Facet> const Facet& use_facet(const locale&);"},
{"lineNum":"   67","line":"template <class Facet> bool has_facet(const locale&) noexcept;"},
{"lineNum":"   68","line":""},
{"lineNum":"   69","line":"// 22.3.3, convenience interfaces:"},
{"lineNum":"   70","line":"template <class charT> bool isspace (charT c, const locale& loc);"},
{"lineNum":"   71","line":"template <class charT> bool isprint (charT c, const locale& loc);"},
{"lineNum":"   72","line":"template <class charT> bool iscntrl (charT c, const locale& loc);"},
{"lineNum":"   73","line":"template <class charT> bool isupper (charT c, const locale& loc);"},
{"lineNum":"   74","line":"template <class charT> bool islower (charT c, const locale& loc);"},
{"lineNum":"   75","line":"template <class charT> bool isalpha (charT c, const locale& loc);"},
{"lineNum":"   76","line":"template <class charT> bool isdigit (charT c, const locale& loc);"},
{"lineNum":"   77","line":"template <class charT> bool ispunct (charT c, const locale& loc);"},
{"lineNum":"   78","line":"template <class charT> bool isxdigit(charT c, const locale& loc);"},
{"lineNum":"   79","line":"template <class charT> bool isalnum (charT c, const locale& loc);"},
{"lineNum":"   80","line":"template <class charT> bool isgraph (charT c, const locale& loc);"},
{"lineNum":"   81","line":"template <class charT> charT toupper(charT c, const locale& loc);"},
{"lineNum":"   82","line":"template <class charT> charT tolower(charT c, const locale& loc);"},
{"lineNum":"   83","line":""},
{"lineNum":"   84","line":"template<class Codecvt, class Elem = wchar_t,"},
{"lineNum":"   85","line":"         class Wide_alloc = allocator<Elem>,"},
{"lineNum":"   86","line":"         class Byte_alloc = allocator<char>>"},
{"lineNum":"   87","line":"class wstring_convert"},
{"lineNum":"   88","line":"{"},
{"lineNum":"   89","line":"public:"},
{"lineNum":"   90","line":"    typedef basic_string<char, char_traits<char>, Byte_alloc> byte_string;"},
{"lineNum":"   91","line":"    typedef basic_string<Elem, char_traits<Elem>, Wide_alloc> wide_string;"},
{"lineNum":"   92","line":"    typedef typename Codecvt::state_type                      state_type;"},
{"lineNum":"   93","line":"    typedef typename wide_string::traits_type::int_type       int_type;"},
{"lineNum":"   94","line":""},
{"lineNum":"   95","line":"    wstring_convert(Codecvt* pcvt = new Codecvt);          // before C++14"},
{"lineNum":"   96","line":"    explicit wstring_convert(Codecvt* pcvt = new Codecvt); // before C++20"},
{"lineNum":"   97","line":"    wstring_convert() : wstring_convert(new Codecvt) {}    // C++20"},
{"lineNum":"   98","line":"    explicit wstring_convert(Codecvt* pcvt);               // C++20"},
{"lineNum":"   99","line":""},
{"lineNum":"  100","line":"    wstring_convert(Codecvt* pcvt, state_type state);"},
{"lineNum":"  101","line":"    explicit wstring_convert(const byte_string& byte_err,           // explicit in C++14"},
{"lineNum":"  102","line":"                    const wide_string& wide_err = wide_string());"},
{"lineNum":"  103","line":"    wstring_convert(const wstring_convert&) = delete;               // C++14"},
{"lineNum":"  104","line":"    wstring_convert & operator=(const wstring_convert &) = delete;  // C++14"},
{"lineNum":"  105","line":"    ~wstring_convert();"},
{"lineNum":"  106","line":""},
{"lineNum":"  107","line":"    wide_string from_bytes(char byte);"},
{"lineNum":"  108","line":"    wide_string from_bytes(const char* ptr);"},
{"lineNum":"  109","line":"    wide_string from_bytes(const byte_string& str);"},
{"lineNum":"  110","line":"    wide_string from_bytes(const char* first, const char* last);"},
{"lineNum":"  111","line":""},
{"lineNum":"  112","line":"    byte_string to_bytes(Elem wchar);"},
{"lineNum":"  113","line":"    byte_string to_bytes(const Elem* wptr);"},
{"lineNum":"  114","line":"    byte_string to_bytes(const wide_string& wstr);"},
{"lineNum":"  115","line":"    byte_string to_bytes(const Elem* first, const Elem* last);"},
{"lineNum":"  116","line":""},
{"lineNum":"  117","line":"    size_t converted() const; // noexcept in C++14"},
{"lineNum":"  118","line":"    state_type state() const;"},
{"lineNum":"  119","line":"};"},
{"lineNum":"  120","line":""},
{"lineNum":"  121","line":"template <class Codecvt, class Elem = wchar_t, class Tr = char_traits<Elem>>"},
{"lineNum":"  122","line":"class wbuffer_convert"},
{"lineNum":"  123","line":"    : public basic_streambuf<Elem, Tr>"},
{"lineNum":"  124","line":"{"},
{"lineNum":"  125","line":"public:"},
{"lineNum":"  126","line":"    typedef typename Tr::state_type state_type;"},
{"lineNum":"  127","line":""},
{"lineNum":"  128","line":"    wbuffer_convert(streambuf* bytebuf = 0, Codecvt* pcvt = new Codecvt,"},
{"lineNum":"  129","line":"                    state_type state = state_type());          // before C++14"},
{"lineNum":"  130","line":"    explicit wbuffer_convert(streambuf* bytebuf = nullptr, Codecvt* pcvt = new Codecvt,"},
{"lineNum":"  131","line":"                            state_type state = state_type()); // before C++20"},
{"lineNum":"  132","line":"    wbuffer_convert() : wbuffer_convert(nullptr) {} // C++20"},
{"lineNum":"  133","line":"    explicit wbuffer_convert(streambuf* bytebuf, Codecvt* pcvt = new Codecvt,"},
{"lineNum":"  134","line":"                            state_type state = state_type()); // C++20"},
{"lineNum":"  135","line":""},
{"lineNum":"  136","line":"    wbuffer_convert(const wbuffer_convert&) = delete;               // C++14"},
{"lineNum":"  137","line":"    wbuffer_convert & operator=(const wbuffer_convert &) = delete;  // C++14"},
{"lineNum":"  138","line":"    ~wbuffer_convert();                                             // C++14"},
{"lineNum":"  139","line":""},
{"lineNum":"  140","line":"    streambuf* rdbuf() const;"},
{"lineNum":"  141","line":"    streambuf* rdbuf(streambuf* bytebuf);"},
{"lineNum":"  142","line":""},
{"lineNum":"  143","line":"    state_type state() const;"},
{"lineNum":"  144","line":"};"},
{"lineNum":"  145","line":""},
{"lineNum":"  146","line":"// 22.4.1 and 22.4.1.3, ctype:"},
{"lineNum":"  147","line":"class ctype_base;"},
{"lineNum":"  148","line":"template <class charT> class ctype;"},
{"lineNum":"  149","line":"template <> class ctype<char>; // specialization"},
{"lineNum":"  150","line":"template <class charT> class ctype_byname;"},
{"lineNum":"  151","line":"template <> class ctype_byname<char>; // specialization"},
{"lineNum":"  152","line":""},
{"lineNum":"  153","line":"class codecvt_base;"},
{"lineNum":"  154","line":"template <class internT, class externT, class stateT> class codecvt;"},
{"lineNum":"  155","line":"template <class internT, class externT, class stateT> class codecvt_byname;"},
{"lineNum":"  156","line":""},
{"lineNum":"  157","line":"// 22.4.2 and 22.4.3, numeric:"},
{"lineNum":"  158","line":"template <class charT, class InputIterator> class num_get;"},
{"lineNum":"  159","line":"template <class charT, class OutputIterator> class num_put;"},
{"lineNum":"  160","line":"template <class charT> class numpunct;"},
{"lineNum":"  161","line":"template <class charT> class numpunct_byname;"},
{"lineNum":"  162","line":""},
{"lineNum":"  163","line":"// 22.4.4, col lation:"},
{"lineNum":"  164","line":"template <class charT> class collate;"},
{"lineNum":"  165","line":"template <class charT> class collate_byname;"},
{"lineNum":"  166","line":""},
{"lineNum":"  167","line":"// 22.4.5, date and time:"},
{"lineNum":"  168","line":"class time_base;"},
{"lineNum":"  169","line":"template <class charT, class InputIterator> class time_get;"},
{"lineNum":"  170","line":"template <class charT, class InputIterator> class time_get_byname;"},
{"lineNum":"  171","line":"template <class charT, class OutputIterator> class time_put;"},
{"lineNum":"  172","line":"template <class charT, class OutputIterator> class time_put_byname;"},
{"lineNum":"  173","line":""},
{"lineNum":"  174","line":"// 22.4.6, money:"},
{"lineNum":"  175","line":"class money_base;"},
{"lineNum":"  176","line":"template <class charT, class InputIterator> class money_get;"},
{"lineNum":"  177","line":"template <class charT, class OutputIterator> class money_put;"},
{"lineNum":"  178","line":"template <class charT, bool Intl> class moneypunct;"},
{"lineNum":"  179","line":"template <class charT, bool Intl> class moneypunct_byname;"},
{"lineNum":"  180","line":""},
{"lineNum":"  181","line":"// 22.4.7, message retrieval:"},
{"lineNum":"  182","line":"class messages_base;"},
{"lineNum":"  183","line":"template <class charT> class messages;"},
{"lineNum":"  184","line":"template <class charT> class messages_byname;"},
{"lineNum":"  185","line":""},
{"lineNum":"  186","line":"}  // std"},
{"lineNum":"  187","line":""},
{"lineNum":"  188","line":"*/"},
{"lineNum":"  189","line":""},
{"lineNum":"  190","line":"#include <__config>"},
{"lineNum":"  191","line":"#include <__debug>"},
{"lineNum":"  192","line":"#include <__locale>"},
{"lineNum":"  193","line":"#include <algorithm>"},
{"lineNum":"  194","line":"#ifndef __APPLE__"},
{"lineNum":"  195","line":"# include <cstdarg>"},
{"lineNum":"  196","line":"#endif"},
{"lineNum":"  197","line":"#include <cstdio>"},
{"lineNum":"  198","line":"#include <cstdlib>"},
{"lineNum":"  199","line":"#include <ctime>"},
{"lineNum":"  200","line":"#include <ios>"},
{"lineNum":"  201","line":"#include <iterator>"},
{"lineNum":"  202","line":"#include <limits>"},
{"lineNum":"  203","line":"#include <memory>"},
{"lineNum":"  204","line":"#include <streambuf>"},
{"lineNum":"  205","line":"#include <version>"},
{"lineNum":"  206","line":""},
{"lineNum":"  207","line":"#if defined(__unix__) || (defined(__APPLE__) && defined(__MACH__))"},
{"lineNum":"  208","line":"// Most unix variants have catopen.  These are the specific ones that don\'t."},
{"lineNum":"  209","line":"#  if !defined(__BIONIC__) && !defined(_NEWLIB_VERSION)"},
{"lineNum":"  210","line":"#    define _LIBCPP_HAS_CATOPEN 1"},
{"lineNum":"  211","line":"#    include <nl_types.h>"},
{"lineNum":"  212","line":"#  endif"},
{"lineNum":"  213","line":"#endif"},
{"lineNum":"  214","line":""},
{"lineNum":"  215","line":"#ifdef _LIBCPP_LOCALE__L_EXTENSIONS"},
{"lineNum":"  216","line":"#include <__bsd_locale_defaults.h>"},
{"lineNum":"  217","line":"#else"},
{"lineNum":"  218","line":"#include <__bsd_locale_fallbacks.h>"},
{"lineNum":"  219","line":"#endif"},
{"lineNum":"  220","line":""},
{"lineNum":"  221","line":"#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)"},
{"lineNum":"  222","line":"#pragma GCC system_header"},
{"lineNum":"  223","line":"#endif"},
{"lineNum":"  224","line":""},
{"lineNum":"  225","line":"_LIBCPP_PUSH_MACROS"},
{"lineNum":"  226","line":"#include <__undef_macros>"},
{"lineNum":"  227","line":""},
{"lineNum":"  228","line":""},
{"lineNum":"  229","line":"_LIBCPP_BEGIN_NAMESPACE_STD"},
{"lineNum":"  230","line":""},
{"lineNum":"  231","line":"#if defined(__APPLE__) || defined(__FreeBSD__)"},
{"lineNum":"  232","line":"#  define _LIBCPP_GET_C_LOCALE 0"},
{"lineNum":"  233","line":"#elif defined(__CloudABI__) || defined(__NetBSD__)"},
{"lineNum":"  234","line":"#  define _LIBCPP_GET_C_LOCALE LC_C_LOCALE"},
{"lineNum":"  235","line":"#else"},
{"lineNum":"  236","line":"#  define _LIBCPP_GET_C_LOCALE __cloc()"},
{"lineNum":"  237","line":"   // Get the C locale object"},
{"lineNum":"  238","line":"   _LIBCPP_FUNC_VIS locale_t __cloc();"},
{"lineNum":"  239","line":"#define __cloc_defined"},
{"lineNum":"  240","line":"#endif"},
{"lineNum":"  241","line":""},
{"lineNum":"  242","line":"// __scan_keyword"},
{"lineNum":"  243","line":"// Scans [__b, __e) until a match is found in the basic_strings range"},
{"lineNum":"  244","line":"//  [__kb, __ke) or until it can be shown that there is no match in [__kb, __ke)."},
{"lineNum":"  245","line":"//  __b will be incremented (visibly), consuming CharT until a match is found"},
{"lineNum":"  246","line":"//  or proved to not exist.  A keyword may be \"\", in which will match anything."},
{"lineNum":"  247","line":"//  If one keyword is a prefix of another, and the next CharT in the input"},
{"lineNum":"  248","line":"//  might match another keyword, the algorithm will attempt to find the longest"},
{"lineNum":"  249","line":"//  matching keyword.  If the longer matching keyword ends up not matching, then"},
{"lineNum":"  250","line":"//  no keyword match is found.  If no keyword match is found, __ke is returned"},
{"lineNum":"  251","line":"//  and failbit is set in __err."},
{"lineNum":"  252","line":"//  Else an iterator pointing to the matching keyword is found.  If more than"},
{"lineNum":"  253","line":"//  one keyword matches, an iterator to the first matching keyword is returned."},
{"lineNum":"  254","line":"//  If on exit __b == __e, eofbit is set in __err.  If __case_sensitive is false,"},
{"lineNum":"  255","line":"//  __ct is used to force to lower case before comparing characters."},
{"lineNum":"  256","line":"//  Examples:"},
{"lineNum":"  257","line":"//  Keywords:  \"a\", \"abb\""},
{"lineNum":"  258","line":"//  If the input is \"a\", the first keyword matches and eofbit is set."},
{"lineNum":"  259","line":"//  If the input is \"abc\", no match is found and \"ab\" are consumed."},
{"lineNum":"  260","line":"template <class _InputIterator, class _ForwardIterator, class _Ctype>"},
{"lineNum":"  261","line":"_LIBCPP_HIDDEN"},
{"lineNum":"  262","line":"_ForwardIterator"},
{"lineNum":"  263","line":"__scan_keyword(_InputIterator& __b, _InputIterator __e,"},
{"lineNum":"  264","line":"               _ForwardIterator __kb, _ForwardIterator __ke,"},
{"lineNum":"  265","line":"               const _Ctype& __ct, ios_base::iostate& __err,"},
{"lineNum":"  266","line":"               bool __case_sensitive = true)"},
{"lineNum":"  267","line":"{"},
{"lineNum":"  268","line":"    typedef typename iterator_traits<_InputIterator>::value_type _CharT;"},
{"lineNum":"  269","line":"    size_t __nkw = static_cast<size_t>(_VSTD::distance(__kb, __ke));"},
{"lineNum":"  270","line":"    const unsigned char __doesnt_match = \'\\0\';"},
{"lineNum":"  271","line":"    const unsigned char __might_match = \'\\1\';"},
{"lineNum":"  272","line":"    const unsigned char __does_match = \'\\2\';"},
{"lineNum":"  273","line":"    unsigned char __statbuf[100];"},
{"lineNum":"  274","line":"    unsigned char* __status = __statbuf;"},
{"lineNum":"  275","line":"    unique_ptr<unsigned char, void(*)(void*)> __stat_hold(nullptr, free);"},
{"lineNum":"  276","line":"    if (__nkw > sizeof(__statbuf))"},
{"lineNum":"  277","line":"    {"},
{"lineNum":"  278","line":"        __status = (unsigned char*)malloc(__nkw);"},
{"lineNum":"  279","line":"        if (__status == nullptr)"},
{"lineNum":"  280","line":"            __throw_bad_alloc();"},
{"lineNum":"  281","line":"        __stat_hold.reset(__status);"},
{"lineNum":"  282","line":"    }"},
{"lineNum":"  283","line":"    size_t __n_might_match = __nkw;  // At this point, any keyword might match"},
{"lineNum":"  284","line":"    size_t __n_does_match = 0;       // but none of them definitely do"},
{"lineNum":"  285","line":"    // Initialize all statuses to __might_match, except for \"\" keywords are __does_match"},
{"lineNum":"  286","line":"    unsigned char* __st = __status;"},
{"lineNum":"  287","line":"    for (_ForwardIterator __ky = __kb; __ky != __ke; ++__ky, (void) ++__st)"},
{"lineNum":"  288","line":"    {"},
{"lineNum":"  289","line":"        if (!__ky->empty())"},
{"lineNum":"  290","line":"            *__st = __might_match;"},
{"lineNum":"  291","line":"        else"},
{"lineNum":"  292","line":"        {"},
{"lineNum":"  293","line":"            *__st = __does_match;"},
{"lineNum":"  294","line":"            --__n_might_match;"},
{"lineNum":"  295","line":"            ++__n_does_match;"},
{"lineNum":"  296","line":"        }"},
{"lineNum":"  297","line":"    }"},
{"lineNum":"  298","line":"    // While there might be a match, test keywords against the next CharT"},
{"lineNum":"  299","line":"    for (size_t __indx = 0; __b != __e && __n_might_match > 0; ++__indx)"},
{"lineNum":"  300","line":"    {"},
{"lineNum":"  301","line":"        // Peek at the next CharT but don\'t consume it"},
{"lineNum":"  302","line":"        _CharT __c = *__b;"},
{"lineNum":"  303","line":"        if (!__case_sensitive)"},
{"lineNum":"  304","line":"            __c = __ct.toupper(__c);"},
{"lineNum":"  305","line":"        bool __consume = false;"},
{"lineNum":"  306","line":"        // For each keyword which might match, see if the __indx character is __c"},
{"lineNum":"  307","line":"        // If a match if found, consume __c"},
{"lineNum":"  308","line":"        // If a match is found, and that is the last character in the keyword,"},
{"lineNum":"  309","line":"        //    then that keyword matches."},
{"lineNum":"  310","line":"        // If the keyword doesn\'t match this character, then change the keyword"},
{"lineNum":"  311","line":"        //    to doesn\'t match"},
{"lineNum":"  312","line":"        __st = __status;"},
{"lineNum":"  313","line":"        for (_ForwardIterator __ky = __kb; __ky != __ke; ++__ky, (void) ++__st)"},
{"lineNum":"  314","line":"        {"},
{"lineNum":"  315","line":"            if (*__st == __might_match)"},
{"lineNum":"  316","line":"            {"},
{"lineNum":"  317","line":"                _CharT __kc = (*__ky)[__indx];"},
{"lineNum":"  318","line":"                if (!__case_sensitive)"},
{"lineNum":"  319","line":"                    __kc = __ct.toupper(__kc);"},
{"lineNum":"  320","line":"                if (__c == __kc)"},
{"lineNum":"  321","line":"                {"},
{"lineNum":"  322","line":"                    __consume = true;"},
{"lineNum":"  323","line":"                    if (__ky->size() == __indx+1)"},
{"lineNum":"  324","line":"                    {"},
{"lineNum":"  325","line":"                        *__st = __does_match;"},
{"lineNum":"  326","line":"                        --__n_might_match;"},
{"lineNum":"  327","line":"                        ++__n_does_match;"},
{"lineNum":"  328","line":"                    }"},
{"lineNum":"  329","line":"                }"},
{"lineNum":"  330","line":"                else"},
{"lineNum":"  331","line":"                {"},
{"lineNum":"  332","line":"                    *__st = __doesnt_match;"},
{"lineNum":"  333","line":"                    --__n_might_match;"},
{"lineNum":"  334","line":"                }"},
{"lineNum":"  335","line":"            }"},
{"lineNum":"  336","line":"        }"},
{"lineNum":"  337","line":"        // consume if we matched a character"},
{"lineNum":"  338","line":"        if (__consume)"},
{"lineNum":"  339","line":"        {"},
{"lineNum":"  340","line":"            ++__b;"},
{"lineNum":"  341","line":"            // If we consumed a character and there might be a matched keyword that"},
{"lineNum":"  342","line":"            //   was marked matched on a previous iteration, then such keywords"},
{"lineNum":"  343","line":"            //   which are now marked as not matching."},
{"lineNum":"  344","line":"            if (__n_might_match + __n_does_match > 1)"},
{"lineNum":"  345","line":"            {"},
{"lineNum":"  346","line":"                __st = __status;"},
{"lineNum":"  347","line":"                for (_ForwardIterator __ky = __kb; __ky != __ke; ++__ky, (void) ++__st)"},
{"lineNum":"  348","line":"                {"},
{"lineNum":"  349","line":"                    if (*__st == __does_match && __ky->size() != __indx+1)"},
{"lineNum":"  350","line":"                    {"},
{"lineNum":"  351","line":"                        *__st = __doesnt_match;"},
{"lineNum":"  352","line":"                        --__n_does_match;"},
{"lineNum":"  353","line":"                    }"},
{"lineNum":"  354","line":"                }"},
{"lineNum":"  355","line":"            }"},
{"lineNum":"  356","line":"        }"},
{"lineNum":"  357","line":"    }"},
{"lineNum":"  358","line":"    // We\'ve exited the loop because we hit eof and/or we have no more \"might matches\"."},
{"lineNum":"  359","line":"    if (__b == __e)"},
{"lineNum":"  360","line":"        __err |= ios_base::eofbit;"},
{"lineNum":"  361","line":"    // Return the first matching result"},
{"lineNum":"  362","line":"    for (__st = __status; __kb != __ke; ++__kb, (void) ++__st)"},
{"lineNum":"  363","line":"        if (*__st == __does_match)"},
{"lineNum":"  364","line":"            break;"},
{"lineNum":"  365","line":"    if (__kb == __ke)"},
{"lineNum":"  366","line":"        __err |= ios_base::failbit;"},
{"lineNum":"  367","line":"    return __kb;"},
{"lineNum":"  368","line":"}"},
{"lineNum":"  369","line":""},
{"lineNum":"  370","line":"struct _LIBCPP_TYPE_VIS __num_get_base"},
{"lineNum":"  371","line":"{"},
{"lineNum":"  372","line":"    static const int __num_get_buf_sz = 40;"},
{"lineNum":"  373","line":""},
{"lineNum":"  374","line":"    static int __get_base(ios_base&);"},
{"lineNum":"  375","line":"    static const char __src[33];"},
{"lineNum":"  376","line":"};"},
{"lineNum":"  377","line":""},
{"lineNum":"  378","line":"_LIBCPP_FUNC_VIS"},
{"lineNum":"  379","line":"void __check_grouping(const string& __grouping, unsigned* __g, unsigned* __g_end,"},
{"lineNum":"  380","line":"                      ios_base::iostate& __err);"},
{"lineNum":"  381","line":""},
{"lineNum":"  382","line":"template <class _CharT>"},
{"lineNum":"  383","line":"struct __num_get"},
{"lineNum":"  384","line":"    : protected __num_get_base"},
{"lineNum":"  385","line":"{"},
{"lineNum":"  386","line":"    static string __stage2_float_prep(ios_base& __iob, _CharT* __atoms, _CharT& __decimal_point,"},
{"lineNum":"  387","line":"                                      _CharT& __thousands_sep);"},
{"lineNum":"  388","line":""},
{"lineNum":"  389","line":"    static int __stage2_float_loop(_CharT __ct, bool& __in_units, char& __exp,"},
{"lineNum":"  390","line":"                                   char* __a, char*& __a_end,"},
{"lineNum":"  391","line":"                                   _CharT __decimal_point, _CharT __thousands_sep,"},
{"lineNum":"  392","line":"                                   const string& __grouping, unsigned* __g,"},
{"lineNum":"  393","line":"                                   unsigned*& __g_end, unsigned& __dc, _CharT* __atoms);"},
{"lineNum":"  394","line":"#ifndef _LIBCPP_ABI_OPTIMIZED_LOCALE_NUM_GET"},
{"lineNum":"  395","line":"    static string __stage2_int_prep(ios_base& __iob, _CharT* __atoms, _CharT& __thousands_sep);"},
{"lineNum":"  396","line":"    static int __stage2_int_loop(_CharT __ct, int __base, char* __a, char*& __a_end,"},
{"lineNum":"  397","line":"                  unsigned& __dc, _CharT __thousands_sep, const string& __grouping,"},
{"lineNum":"  398","line":"                  unsigned* __g, unsigned*& __g_end, _CharT* __atoms);"},
{"lineNum":"  399","line":""},
{"lineNum":"  400","line":"#else"},
{"lineNum":"  401","line":"    static string __stage2_int_prep(ios_base& __iob, _CharT& __thousands_sep)"},
{"lineNum":"  402","line":"    {"},
{"lineNum":"  403","line":"        locale __loc = __iob.getloc();"},
{"lineNum":"  404","line":"        const numpunct<_CharT>& __np = use_facet<numpunct<_CharT> >(__loc);"},
{"lineNum":"  405","line":"        __thousands_sep = __np.thousands_sep();"},
{"lineNum":"  406","line":"        return __np.grouping();"},
{"lineNum":"  407","line":"    }"},
{"lineNum":"  408","line":""},
{"lineNum":"  409","line":"    const _CharT* __do_widen(ios_base& __iob, _CharT* __atoms) const"},
{"lineNum":"  410","line":"    {"},
{"lineNum":"  411","line":"      return __do_widen_p(__iob, __atoms);"},
{"lineNum":"  412","line":"    }"},
{"lineNum":"  413","line":""},
{"lineNum":"  414","line":""},
{"lineNum":"  415","line":"    static int __stage2_int_loop(_CharT __ct, int __base, char* __a, char*& __a_end,"},
{"lineNum":"  416","line":"                  unsigned& __dc, _CharT __thousands_sep, const string& __grouping,"},
{"lineNum":"  417","line":"                  unsigned* __g, unsigned*& __g_end, const _CharT* __atoms);"},
{"lineNum":"  418","line":"private:"},
{"lineNum":"  419","line":"    template<typename T>"},
{"lineNum":"  420","line":"    const T* __do_widen_p(ios_base& __iob, T* __atoms) const"},
{"lineNum":"  421","line":"    {"},
{"lineNum":"  422","line":"      locale __loc = __iob.getloc();"},
{"lineNum":"  423","line":"      use_facet<ctype<T> >(__loc).widen(__src, __src + 26, __atoms);"},
{"lineNum":"  424","line":"      return __atoms;"},
{"lineNum":"  425","line":"    }"},
{"lineNum":"  426","line":""},
{"lineNum":"  427","line":"    const char* __do_widen_p(ios_base& __iob, char* __atoms) const"},
{"lineNum":"  428","line":"    {"},
{"lineNum":"  429","line":"      (void)__iob;"},
{"lineNum":"  430","line":"      (void)__atoms;"},
{"lineNum":"  431","line":"      return __src;"},
{"lineNum":"  432","line":"    }"},
{"lineNum":"  433","line":"#endif"},
{"lineNum":"  434","line":"};"},
{"lineNum":"  435","line":""},
{"lineNum":"  436","line":"#ifndef _LIBCPP_ABI_OPTIMIZED_LOCALE_NUM_GET"},
{"lineNum":"  437","line":"template <class _CharT>"},
{"lineNum":"  438","line":"string"},
{"lineNum":"  439","line":"__num_get<_CharT>::__stage2_int_prep(ios_base& __iob, _CharT* __atoms, _CharT& __thousands_sep)"},
{"lineNum":"  440","line":"{"},
{"lineNum":"  441","line":"    locale __loc = __iob.getloc();"},
{"lineNum":"  442","line":"    use_facet<ctype<_CharT> >(__loc).widen(__src, __src + 26, __atoms);"},
{"lineNum":"  443","line":"    const numpunct<_CharT>& __np = use_facet<numpunct<_CharT> >(__loc);"},
{"lineNum":"  444","line":"    __thousands_sep = __np.thousands_sep();"},
{"lineNum":"  445","line":"    return __np.grouping();"},
{"lineNum":"  446","line":"}"},
{"lineNum":"  447","line":"#endif"},
{"lineNum":"  448","line":""},
{"lineNum":"  449","line":"template <class _CharT>"},
{"lineNum":"  450","line":"string"},
{"lineNum":"  451","line":"__num_get<_CharT>::__stage2_float_prep(ios_base& __iob, _CharT* __atoms, _CharT& __decimal_point,"},
{"lineNum":"  452","line":"                    _CharT& __thousands_sep)"},
{"lineNum":"  453","line":"{"},
{"lineNum":"  454","line":"    locale __loc = __iob.getloc();"},
{"lineNum":"  455","line":"    use_facet<ctype<_CharT> >(__loc).widen(__src, __src + 32, __atoms);"},
{"lineNum":"  456","line":"    const numpunct<_CharT>& __np = use_facet<numpunct<_CharT> >(__loc);"},
{"lineNum":"  457","line":"    __decimal_point = __np.decimal_point();"},
{"lineNum":"  458","line":"    __thousands_sep = __np.thousands_sep();"},
{"lineNum":"  459","line":"    return __np.grouping();"},
{"lineNum":"  460","line":"}"},
{"lineNum":"  461","line":""},
{"lineNum":"  462","line":"template <class _CharT>"},
{"lineNum":"  463","line":"int"},
{"lineNum":"  464","line":"#ifndef _LIBCPP_ABI_OPTIMIZED_LOCALE_NUM_GET"},
{"lineNum":"  465","line":"__num_get<_CharT>::__stage2_int_loop(_CharT __ct, int __base, char* __a, char*& __a_end,"},
{"lineNum":"  466","line":"                  unsigned& __dc, _CharT __thousands_sep, const string& __grouping,"},
{"lineNum":"  467","line":"                  unsigned* __g, unsigned*& __g_end, _CharT* __atoms)"},
{"lineNum":"  468","line":"#else"},
{"lineNum":"  469","line":"__num_get<_CharT>::__stage2_int_loop(_CharT __ct, int __base, char* __a, char*& __a_end,"},
{"lineNum":"  470","line":"                  unsigned& __dc, _CharT __thousands_sep, const string& __grouping,"},
{"lineNum":"  471","line":"                  unsigned* __g, unsigned*& __g_end, const _CharT* __atoms)"},
{"lineNum":"  472","line":""},
{"lineNum":"  473","line":"#endif"},
{"lineNum":"  474","line":"{"},
{"lineNum":"  475","line":"    if (__a_end == __a && (__ct == __atoms[24] || __ct == __atoms[25]))"},
{"lineNum":"  476","line":"    {"},
{"lineNum":"  477","line":"        *__a_end++ = __ct == __atoms[24] ? \'+\' : \'-\';"},
{"lineNum":"  478","line":"        __dc = 0;"},
{"lineNum":"  479","line":"        return 0;"},
{"lineNum":"  480","line":"    }"},
{"lineNum":"  481","line":"    if (__grouping.size() != 0 && __ct == __thousands_sep)"},
{"lineNum":"  482","line":"    {"},
{"lineNum":"  483","line":"        if (__g_end-__g < __num_get_buf_sz)"},
{"lineNum":"  484","line":"        {"},
{"lineNum":"  485","line":"            *__g_end++ = __dc;"},
{"lineNum":"  486","line":"            __dc = 0;"},
{"lineNum":"  487","line":"        }"},
{"lineNum":"  488","line":"        return 0;"},
{"lineNum":"  489","line":"    }"},
{"lineNum":"  490","line":"    ptrdiff_t __f = find(__atoms, __atoms + 26, __ct) - __atoms;"},
{"lineNum":"  491","line":"    if (__f >= 24)"},
{"lineNum":"  492","line":"        return -1;"},
{"lineNum":"  493","line":"    switch (__base)"},
{"lineNum":"  494","line":"    {"},
{"lineNum":"  495","line":"    case 8:"},
{"lineNum":"  496","line":"    case 10:"},
{"lineNum":"  497","line":"        if (__f >= __base)"},
{"lineNum":"  498","line":"            return -1;"},
{"lineNum":"  499","line":"        break;"},
{"lineNum":"  500","line":"    case 16:"},
{"lineNum":"  501","line":"        if (__f < 22)"},
{"lineNum":"  502","line":"            break;"},
{"lineNum":"  503","line":"        if (__a_end != __a && __a_end - __a <= 2 && __a_end[-1] == \'0\')"},
{"lineNum":"  504","line":"        {"},
{"lineNum":"  505","line":"            __dc = 0;"},
{"lineNum":"  506","line":"            *__a_end++ = __src[__f];"},
{"lineNum":"  507","line":"            return 0;"},
{"lineNum":"  508","line":"        }"},
{"lineNum":"  509","line":"        return -1;"},
{"lineNum":"  510","line":"    }"},
{"lineNum":"  511","line":"    *__a_end++ = __src[__f];"},
{"lineNum":"  512","line":"    ++__dc;"},
{"lineNum":"  513","line":"    return 0;"},
{"lineNum":"  514","line":"}"},
{"lineNum":"  515","line":""},
{"lineNum":"  516","line":"template <class _CharT>"},
{"lineNum":"  517","line":"int"},
{"lineNum":"  518","line":"__num_get<_CharT>::__stage2_float_loop(_CharT __ct, bool& __in_units, char& __exp, char* __a, char*& __a_end,"},
{"lineNum":"  519","line":"                    _CharT __decimal_point, _CharT __thousands_sep, const string& __grouping,"},
{"lineNum":"  520","line":"                    unsigned* __g, unsigned*& __g_end, unsigned& __dc, _CharT* __atoms)"},
{"lineNum":"  521","line":"{"},
{"lineNum":"  522","line":"    if (__ct == __decimal_point)"},
{"lineNum":"  523","line":"    {"},
{"lineNum":"  524","line":"        if (!__in_units)"},
{"lineNum":"  525","line":"            return -1;"},
{"lineNum":"  526","line":"        __in_units = false;"},
{"lineNum":"  527","line":"        *__a_end++ = \'.\';"},
{"lineNum":"  528","line":"        if (__grouping.size() != 0 && __g_end-__g < __num_get_buf_sz)"},
{"lineNum":"  529","line":"            *__g_end++ = __dc;"},
{"lineNum":"  530","line":"        return 0;"},
{"lineNum":"  531","line":"    }"},
{"lineNum":"  532","line":"    if (__ct == __thousands_sep && __grouping.size() != 0)"},
{"lineNum":"  533","line":"    {"},
{"lineNum":"  534","line":"        if (!__in_units)"},
{"lineNum":"  535","line":"            return -1;"},
{"lineNum":"  536","line":"        if (__g_end-__g < __num_get_buf_sz)"},
{"lineNum":"  537","line":"        {"},
{"lineNum":"  538","line":"            *__g_end++ = __dc;"},
{"lineNum":"  539","line":"            __dc = 0;"},
{"lineNum":"  540","line":"        }"},
{"lineNum":"  541","line":"        return 0;"},
{"lineNum":"  542","line":"    }"},
{"lineNum":"  543","line":"    ptrdiff_t __f = find(__atoms, __atoms + 32, __ct) - __atoms;"},
{"lineNum":"  544","line":"    if (__f >= 32)"},
{"lineNum":"  545","line":"        return -1;"},
{"lineNum":"  546","line":"    char __x = __src[__f];"},
{"lineNum":"  547","line":"    if (__x == \'-\' || __x == \'+\')"},
{"lineNum":"  548","line":"    {"},
{"lineNum":"  549","line":"        if (__a_end == __a || (__a_end[-1] & 0x5F) == (__exp & 0x7F))"},
{"lineNum":"  550","line":"        {"},
{"lineNum":"  551","line":"            *__a_end++ = __x;"},
{"lineNum":"  552","line":"            return 0;"},
{"lineNum":"  553","line":"        }"},
{"lineNum":"  554","line":"        return -1;"},
{"lineNum":"  555","line":"    }"},
{"lineNum":"  556","line":"    if (__x == \'x\' || __x == \'X\')"},
{"lineNum":"  557","line":"        __exp = \'P\';"},
{"lineNum":"  558","line":"    else if ((__x & 0x5F) == __exp)"},
{"lineNum":"  559","line":"    {"},
{"lineNum":"  560","line":"        __exp |= (char) 0x80;"},
{"lineNum":"  561","line":"        if (__in_units)"},
{"lineNum":"  562","line":"        {"},
{"lineNum":"  563","line":"            __in_units = false;"},
{"lineNum":"  564","line":"            if (__grouping.size() != 0 && __g_end-__g < __num_get_buf_sz)"},
{"lineNum":"  565","line":"                *__g_end++ = __dc;"},
{"lineNum":"  566","line":"        }"},
{"lineNum":"  567","line":"    }"},
{"lineNum":"  568","line":"    *__a_end++ = __x;"},
{"lineNum":"  569","line":"    if (__f >= 22)"},
{"lineNum":"  570","line":"        return 0;"},
{"lineNum":"  571","line":"    ++__dc;"},
{"lineNum":"  572","line":"    return 0;"},
{"lineNum":"  573","line":"}"},
{"lineNum":"  574","line":""},
{"lineNum":"  575","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(struct _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS __num_get<char>)"},
{"lineNum":"  576","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(struct _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS __num_get<wchar_t>)"},
{"lineNum":"  577","line":""},
{"lineNum":"  578","line":"template <class _CharT, class _InputIterator = istreambuf_iterator<_CharT> >"},
{"lineNum":"  579","line":"class _LIBCPP_TEMPLATE_VIS num_get"},
{"lineNum":"  580","line":"    : public locale::facet,"},
{"lineNum":"  581","line":"      private __num_get<_CharT>"},
{"lineNum":"  582","line":"{"},
{"lineNum":"  583","line":"public:"},
{"lineNum":"  584","line":"    typedef _CharT char_type;"},
{"lineNum":"  585","line":"    typedef _InputIterator iter_type;"},
{"lineNum":"  586","line":""},
{"lineNum":"  587","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  588","line":"    explicit num_get(size_t __refs = 0)"},
{"lineNum":"  589","line":"        : locale::facet(__refs) {}"},
{"lineNum":"  590","line":""},
{"lineNum":"  591","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  592","line":"    iter_type get(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":"  593","line":"                  ios_base::iostate& __err, bool& __v) const"},
{"lineNum":"  594","line":"    {"},
{"lineNum":"  595","line":"        return do_get(__b, __e, __iob, __err, __v);"},
{"lineNum":"  596","line":"    }"},
{"lineNum":"  597","line":""},
{"lineNum":"  598","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  599","line":"    iter_type get(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":"  600","line":"                  ios_base::iostate& __err, long& __v) const"},
{"lineNum":"  601","line":"    {"},
{"lineNum":"  602","line":"        return do_get(__b, __e, __iob, __err, __v);"},
{"lineNum":"  603","line":"    }"},
{"lineNum":"  604","line":""},
{"lineNum":"  605","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  606","line":"    iter_type get(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":"  607","line":"                  ios_base::iostate& __err, long long& __v) const"},
{"lineNum":"  608","line":"    {"},
{"lineNum":"  609","line":"        return do_get(__b, __e, __iob, __err, __v);"},
{"lineNum":"  610","line":"    }"},
{"lineNum":"  611","line":""},
{"lineNum":"  612","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  613","line":"    iter_type get(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":"  614","line":"                  ios_base::iostate& __err, unsigned short& __v) const"},
{"lineNum":"  615","line":"    {"},
{"lineNum":"  616","line":"        return do_get(__b, __e, __iob, __err, __v);"},
{"lineNum":"  617","line":"    }"},
{"lineNum":"  618","line":""},
{"lineNum":"  619","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  620","line":"    iter_type get(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":"  621","line":"                  ios_base::iostate& __err, unsigned int& __v) const"},
{"lineNum":"  622","line":"    {"},
{"lineNum":"  623","line":"        return do_get(__b, __e, __iob, __err, __v);"},
{"lineNum":"  624","line":"    }"},
{"lineNum":"  625","line":""},
{"lineNum":"  626","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  627","line":"    iter_type get(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":"  628","line":"                  ios_base::iostate& __err, unsigned long& __v) const"},
{"lineNum":"  629","line":"    {"},
{"lineNum":"  630","line":"        return do_get(__b, __e, __iob, __err, __v);"},
{"lineNum":"  631","line":"    }"},
{"lineNum":"  632","line":""},
{"lineNum":"  633","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  634","line":"    iter_type get(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":"  635","line":"                  ios_base::iostate& __err, unsigned long long& __v) const"},
{"lineNum":"  636","line":"    {"},
{"lineNum":"  637","line":"        return do_get(__b, __e, __iob, __err, __v);"},
{"lineNum":"  638","line":"    }"},
{"lineNum":"  639","line":""},
{"lineNum":"  640","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  641","line":"    iter_type get(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":"  642","line":"                  ios_base::iostate& __err, float& __v) const"},
{"lineNum":"  643","line":"    {"},
{"lineNum":"  644","line":"        return do_get(__b, __e, __iob, __err, __v);"},
{"lineNum":"  645","line":"    }"},
{"lineNum":"  646","line":""},
{"lineNum":"  647","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  648","line":"    iter_type get(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":"  649","line":"                  ios_base::iostate& __err, double& __v) const"},
{"lineNum":"  650","line":"    {"},
{"lineNum":"  651","line":"        return do_get(__b, __e, __iob, __err, __v);"},
{"lineNum":"  652","line":"    }"},
{"lineNum":"  653","line":""},
{"lineNum":"  654","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  655","line":"    iter_type get(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":"  656","line":"                  ios_base::iostate& __err, long double& __v) const"},
{"lineNum":"  657","line":"    {"},
{"lineNum":"  658","line":"        return do_get(__b, __e, __iob, __err, __v);"},
{"lineNum":"  659","line":"    }"},
{"lineNum":"  660","line":""},
{"lineNum":"  661","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  662","line":"    iter_type get(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":"  663","line":"                  ios_base::iostate& __err, void*& __v) const"},
{"lineNum":"  664","line":"    {"},
{"lineNum":"  665","line":"        return do_get(__b, __e, __iob, __err, __v);"},
{"lineNum":"  666","line":"    }"},
{"lineNum":"  667","line":""},
{"lineNum":"  668","line":"    static locale::id id;"},
{"lineNum":"  669","line":""},
{"lineNum":"  670","line":"protected:"},
{"lineNum":"  671","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  672","line":"    ~num_get() {}"},
{"lineNum":"  673","line":""},
{"lineNum":"  674","line":"    template <class _Fp>"},
{"lineNum":"  675","line":"    _LIBCPP_METHOD_TEMPLATE_IMPLICIT_INSTANTIATION_VIS"},
{"lineNum":"  676","line":"    iter_type __do_get_floating_point"},
{"lineNum":"  677","line":"                            (iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":"  678","line":"                             ios_base::iostate& __err, _Fp& __v) const;"},
{"lineNum":"  679","line":""},
{"lineNum":"  680","line":"    template <class _Signed>"},
{"lineNum":"  681","line":"    _LIBCPP_METHOD_TEMPLATE_IMPLICIT_INSTANTIATION_VIS"},
{"lineNum":"  682","line":"    iter_type __do_get_signed"},
{"lineNum":"  683","line":"                            (iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":"  684","line":"                             ios_base::iostate& __err, _Signed& __v) const;"},
{"lineNum":"  685","line":""},
{"lineNum":"  686","line":"    template <class _Unsigned>"},
{"lineNum":"  687","line":"    _LIBCPP_METHOD_TEMPLATE_IMPLICIT_INSTANTIATION_VIS"},
{"lineNum":"  688","line":"    iter_type __do_get_unsigned"},
{"lineNum":"  689","line":"                            (iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":"  690","line":"                             ios_base::iostate& __err, _Unsigned& __v) const;"},
{"lineNum":"  691","line":""},
{"lineNum":"  692","line":""},
{"lineNum":"  693","line":"    virtual iter_type do_get(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":"  694","line":"                             ios_base::iostate& __err, bool& __v) const;"},
{"lineNum":"  695","line":""},
{"lineNum":"  696","line":"    virtual iter_type do_get(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":"  697","line":"                             ios_base::iostate& __err, long& __v) const"},
{"lineNum":"  698","line":"    { return this->__do_get_signed ( __b, __e, __iob, __err, __v ); }"},
{"lineNum":"  699","line":""},
{"lineNum":"  700","line":"    virtual iter_type do_get(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":"  701","line":"                             ios_base::iostate& __err, long long& __v) const"},
{"lineNum":"  702","line":"    { return this->__do_get_signed ( __b, __e, __iob, __err, __v ); }"},
{"lineNum":"  703","line":""},
{"lineNum":"  704","line":"    virtual iter_type do_get(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":"  705","line":"                             ios_base::iostate& __err, unsigned short& __v) const"},
{"lineNum":"  706","line":"    { return this->__do_get_unsigned ( __b, __e, __iob, __err, __v ); }"},
{"lineNum":"  707","line":""},
{"lineNum":"  708","line":"    virtual iter_type do_get(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":"  709","line":"                             ios_base::iostate& __err, unsigned int& __v) const"},
{"lineNum":"  710","line":"    { return this->__do_get_unsigned ( __b, __e, __iob, __err, __v ); }"},
{"lineNum":"  711","line":""},
{"lineNum":"  712","line":"    virtual iter_type do_get(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":"  713","line":"                             ios_base::iostate& __err, unsigned long& __v) const"},
{"lineNum":"  714","line":"    { return this->__do_get_unsigned ( __b, __e, __iob, __err, __v ); }"},
{"lineNum":"  715","line":""},
{"lineNum":"  716","line":"    virtual iter_type do_get(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":"  717","line":"                             ios_base::iostate& __err, unsigned long long& __v) const"},
{"lineNum":"  718","line":"    { return this->__do_get_unsigned ( __b, __e, __iob, __err, __v ); }"},
{"lineNum":"  719","line":""},
{"lineNum":"  720","line":"    virtual iter_type do_get(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":"  721","line":"                             ios_base::iostate& __err, float& __v) const"},
{"lineNum":"  722","line":"    { return this->__do_get_floating_point ( __b, __e, __iob, __err, __v ); }"},
{"lineNum":"  723","line":""},
{"lineNum":"  724","line":"    virtual iter_type do_get(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":"  725","line":"                             ios_base::iostate& __err, double& __v) const"},
{"lineNum":"  726","line":"    { return this->__do_get_floating_point ( __b, __e, __iob, __err, __v ); }"},
{"lineNum":"  727","line":""},
{"lineNum":"  728","line":"    virtual iter_type do_get(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":"  729","line":"                             ios_base::iostate& __err, long double& __v) const"},
{"lineNum":"  730","line":"    { return this->__do_get_floating_point ( __b, __e, __iob, __err, __v ); }"},
{"lineNum":"  731","line":""},
{"lineNum":"  732","line":"    virtual iter_type do_get(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":"  733","line":"                             ios_base::iostate& __err, void*& __v) const;"},
{"lineNum":"  734","line":"};"},
{"lineNum":"  735","line":""},
{"lineNum":"  736","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":"  737","line":"locale::id"},
{"lineNum":"  738","line":"num_get<_CharT, _InputIterator>::id;"},
{"lineNum":"  739","line":""},
{"lineNum":"  740","line":"template <class _Tp>"},
{"lineNum":"  741","line":"_LIBCPP_HIDDEN _Tp"},
{"lineNum":"  742","line":"__num_get_signed_integral(const char* __a, const char* __a_end,"},
{"lineNum":"  743","line":"                          ios_base::iostate& __err, int __base)"},
{"lineNum":"  744","line":"{"},
{"lineNum":"  745","line":"    if (__a != __a_end)"},
{"lineNum":"  746","line":"    {"},
{"lineNum":"  747","line":"        typename remove_reference<decltype(errno)>::type __save_errno = errno;"},
{"lineNum":"  748","line":"        errno = 0;"},
{"lineNum":"  749","line":"        char *__p2;"},
{"lineNum":"  750","line":"        long long __ll = strtoll_l(__a, &__p2, __base, _LIBCPP_GET_C_LOCALE);"},
{"lineNum":"  751","line":"        typename remove_reference<decltype(errno)>::type __current_errno = errno;"},
{"lineNum":"  752","line":"        if (__current_errno == 0)"},
{"lineNum":"  753","line":"            errno = __save_errno;"},
{"lineNum":"  754","line":"        if (__p2 != __a_end)"},
{"lineNum":"  755","line":"        {"},
{"lineNum":"  756","line":"            __err = ios_base::failbit;"},
{"lineNum":"  757","line":"            return 0;"},
{"lineNum":"  758","line":"        }"},
{"lineNum":"  759","line":"        else if (__current_errno == ERANGE         ||"},
{"lineNum":"  760","line":"                 __ll < numeric_limits<_Tp>::min() ||"},
{"lineNum":"  761","line":"                 numeric_limits<_Tp>::max() < __ll)"},
{"lineNum":"  762","line":"        {"},
{"lineNum":"  763","line":"            __err = ios_base::failbit;"},
{"lineNum":"  764","line":"            if (__ll > 0)"},
{"lineNum":"  765","line":"                return numeric_limits<_Tp>::max();"},
{"lineNum":"  766","line":"            else"},
{"lineNum":"  767","line":"                return numeric_limits<_Tp>::min();"},
{"lineNum":"  768","line":"        }"},
{"lineNum":"  769","line":"        return static_cast<_Tp>(__ll);"},
{"lineNum":"  770","line":"    }"},
{"lineNum":"  771","line":"    __err = ios_base::failbit;"},
{"lineNum":"  772","line":"    return 0;"},
{"lineNum":"  773","line":"}"},
{"lineNum":"  774","line":""},
{"lineNum":"  775","line":"template <class _Tp>"},
{"lineNum":"  776","line":"_LIBCPP_HIDDEN _Tp"},
{"lineNum":"  777","line":"__num_get_unsigned_integral(const char* __a, const char* __a_end,"},
{"lineNum":"  778","line":"                            ios_base::iostate& __err, int __base)"},
{"lineNum":"  779","line":"{"},
{"lineNum":"  780","line":"    if (__a != __a_end)"},
{"lineNum":"  781","line":"    {"},
{"lineNum":"  782","line":"        const bool __negate = *__a == \'-\';"},
{"lineNum":"  783","line":"        if (__negate && ++__a == __a_end) {"},
{"lineNum":"  784","line":"          __err = ios_base::failbit;"},
{"lineNum":"  785","line":"          return 0;"},
{"lineNum":"  786","line":"        }"},
{"lineNum":"  787","line":"        typename remove_reference<decltype(errno)>::type __save_errno = errno;"},
{"lineNum":"  788","line":"        errno = 0;"},
{"lineNum":"  789","line":"        char *__p2;"},
{"lineNum":"  790","line":"        unsigned long long __ll = strtoull_l(__a, &__p2, __base, _LIBCPP_GET_C_LOCALE);"},
{"lineNum":"  791","line":"        typename remove_reference<decltype(errno)>::type __current_errno = errno;"},
{"lineNum":"  792","line":"        if (__current_errno == 0)"},
{"lineNum":"  793","line":"            errno = __save_errno;"},
{"lineNum":"  794","line":"        if (__p2 != __a_end)"},
{"lineNum":"  795","line":"        {"},
{"lineNum":"  796","line":"            __err = ios_base::failbit;"},
{"lineNum":"  797","line":"            return 0;"},
{"lineNum":"  798","line":"        }"},
{"lineNum":"  799","line":"        else if (__current_errno == ERANGE || numeric_limits<_Tp>::max() < __ll)"},
{"lineNum":"  800","line":"        {"},
{"lineNum":"  801","line":"            __err = ios_base::failbit;"},
{"lineNum":"  802","line":"            return numeric_limits<_Tp>::max();"},
{"lineNum":"  803","line":"        }"},
{"lineNum":"  804","line":"        _Tp __res = static_cast<_Tp>(__ll);"},
{"lineNum":"  805","line":"        if (__negate) __res = -__res;"},
{"lineNum":"  806","line":"        return __res;"},
{"lineNum":"  807","line":"    }"},
{"lineNum":"  808","line":"    __err = ios_base::failbit;"},
{"lineNum":"  809","line":"    return 0;"},
{"lineNum":"  810","line":"}"},
{"lineNum":"  811","line":""},
{"lineNum":"  812","line":"template <class _Tp>"},
{"lineNum":"  813","line":"_LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  814","line":"_Tp __do_strtod(const char* __a, char** __p2);"},
{"lineNum":"  815","line":""},
{"lineNum":"  816","line":"template <>"},
{"lineNum":"  817","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  818","line":"float __do_strtod<float>(const char* __a, char** __p2) {"},
{"lineNum":"  819","line":"    return strtof_l(__a, __p2, _LIBCPP_GET_C_LOCALE);"},
{"lineNum":"  820","line":"}"},
{"lineNum":"  821","line":""},
{"lineNum":"  822","line":"template <>"},
{"lineNum":"  823","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  824","line":"double __do_strtod<double>(const char* __a, char** __p2) {"},
{"lineNum":"  825","line":"    return strtod_l(__a, __p2, _LIBCPP_GET_C_LOCALE);"},
{"lineNum":"  826","line":"}"},
{"lineNum":"  827","line":""},
{"lineNum":"  828","line":"template <>"},
{"lineNum":"  829","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  830","line":"long double __do_strtod<long double>(const char* __a, char** __p2) {"},
{"lineNum":"  831","line":"    return strtold_l(__a, __p2, _LIBCPP_GET_C_LOCALE);"},
{"lineNum":"  832","line":"}"},
{"lineNum":"  833","line":""},
{"lineNum":"  834","line":"template <class _Tp>"},
{"lineNum":"  835","line":"_LIBCPP_HIDDEN"},
{"lineNum":"  836","line":"_Tp"},
{"lineNum":"  837","line":"__num_get_float(const char* __a, const char* __a_end, ios_base::iostate& __err)"},
{"lineNum":"  838","line":"{"},
{"lineNum":"  839","line":"    if (__a != __a_end)"},
{"lineNum":"  840","line":"    {"},
{"lineNum":"  841","line":"        typename remove_reference<decltype(errno)>::type __save_errno = errno;"},
{"lineNum":"  842","line":"        errno = 0;"},
{"lineNum":"  843","line":"        char *__p2;"},
{"lineNum":"  844","line":"        _Tp __ld = __do_strtod<_Tp>(__a, &__p2);"},
{"lineNum":"  845","line":"        typename remove_reference<decltype(errno)>::type __current_errno = errno;"},
{"lineNum":"  846","line":"        if (__current_errno == 0)"},
{"lineNum":"  847","line":"            errno = __save_errno;"},
{"lineNum":"  848","line":"        if (__p2 != __a_end)"},
{"lineNum":"  849","line":"        {"},
{"lineNum":"  850","line":"            __err = ios_base::failbit;"},
{"lineNum":"  851","line":"            return 0;"},
{"lineNum":"  852","line":"        }"},
{"lineNum":"  853","line":"        else if (__current_errno == ERANGE)"},
{"lineNum":"  854","line":"            __err = ios_base::failbit;"},
{"lineNum":"  855","line":"        return __ld;"},
{"lineNum":"  856","line":"    }"},
{"lineNum":"  857","line":"    __err = ios_base::failbit;"},
{"lineNum":"  858","line":"    return 0;"},
{"lineNum":"  859","line":"}"},
{"lineNum":"  860","line":""},
{"lineNum":"  861","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":"  862","line":"_InputIterator"},
{"lineNum":"  863","line":"num_get<_CharT, _InputIterator>::do_get(iter_type __b, iter_type __e,"},
{"lineNum":"  864","line":"                                        ios_base& __iob,"},
{"lineNum":"  865","line":"                                        ios_base::iostate& __err,"},
{"lineNum":"  866","line":"                                        bool& __v) const"},
{"lineNum":"  867","line":"{"},
{"lineNum":"  868","line":"    if ((__iob.flags() & ios_base::boolalpha) == 0)"},
{"lineNum":"  869","line":"    {"},
{"lineNum":"  870","line":"        long __lv = -1;"},
{"lineNum":"  871","line":"        __b = do_get(__b, __e, __iob, __err, __lv);"},
{"lineNum":"  872","line":"        switch (__lv)"},
{"lineNum":"  873","line":"        {"},
{"lineNum":"  874","line":"        case 0:"},
{"lineNum":"  875","line":"            __v = false;"},
{"lineNum":"  876","line":"            break;"},
{"lineNum":"  877","line":"        case 1:"},
{"lineNum":"  878","line":"            __v = true;"},
{"lineNum":"  879","line":"            break;"},
{"lineNum":"  880","line":"        default:"},
{"lineNum":"  881","line":"            __v = true;"},
{"lineNum":"  882","line":"            __err = ios_base::failbit;"},
{"lineNum":"  883","line":"            break;"},
{"lineNum":"  884","line":"        }"},
{"lineNum":"  885","line":"        return __b;"},
{"lineNum":"  886","line":"    }"},
{"lineNum":"  887","line":"    const ctype<_CharT>& __ct = use_facet<ctype<_CharT> >(__iob.getloc());"},
{"lineNum":"  888","line":"    const numpunct<_CharT>& __np = use_facet<numpunct<_CharT> >(__iob.getloc());"},
{"lineNum":"  889","line":"    typedef typename numpunct<_CharT>::string_type string_type;"},
{"lineNum":"  890","line":"    const string_type __names[2] = {__np.truename(), __np.falsename()};"},
{"lineNum":"  891","line":"    const string_type* __i = _VSTD::__scan_keyword(__b, __e, __names, __names+2,"},
{"lineNum":"  892","line":"                                                   __ct, __err);"},
{"lineNum":"  893","line":"    __v = __i == __names;"},
{"lineNum":"  894","line":"    return __b;"},
{"lineNum":"  895","line":"}"},
{"lineNum":"  896","line":""},
{"lineNum":"  897","line":"// signed"},
{"lineNum":"  898","line":""},
{"lineNum":"  899","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":"  900","line":"template <class _Signed>"},
{"lineNum":"  901","line":"_InputIterator"},
{"lineNum":"  902","line":"num_get<_CharT, _InputIterator>::__do_get_signed(iter_type __b, iter_type __e,"},
{"lineNum":"  903","line":"                                        ios_base& __iob,"},
{"lineNum":"  904","line":"                                        ios_base::iostate& __err,"},
{"lineNum":"  905","line":"                                        _Signed& __v) const"},
{"lineNum":"  906","line":"{"},
{"lineNum":"  907","line":"    // Stage 1"},
{"lineNum":"  908","line":"    int __base = this->__get_base(__iob);"},
{"lineNum":"  909","line":"    // Stage 2"},
{"lineNum":"  910","line":"    char_type __thousands_sep;"},
{"lineNum":"  911","line":"    const int __atoms_size = 26;"},
{"lineNum":"  912","line":"#ifdef _LIBCPP_ABI_OPTIMIZED_LOCALE_NUM_GET"},
{"lineNum":"  913","line":"    char_type __atoms1[__atoms_size];"},
{"lineNum":"  914","line":"    const char_type *__atoms = this->__do_widen(__iob, __atoms1);"},
{"lineNum":"  915","line":"    string __grouping = this->__stage2_int_prep(__iob, __thousands_sep);"},
{"lineNum":"  916","line":"#else"},
{"lineNum":"  917","line":"    char_type __atoms[__atoms_size];"},
{"lineNum":"  918","line":"    string __grouping = this->__stage2_int_prep(__iob, __atoms, __thousands_sep);"},
{"lineNum":"  919","line":"#endif"},
{"lineNum":"  920","line":"    string __buf;"},
{"lineNum":"  921","line":"    __buf.resize(__buf.capacity());"},
{"lineNum":"  922","line":"    char* __a = &__buf[0];"},
{"lineNum":"  923","line":"    char* __a_end = __a;"},
{"lineNum":"  924","line":"    unsigned __g[__num_get_base::__num_get_buf_sz];"},
{"lineNum":"  925","line":"    unsigned* __g_end = __g;"},
{"lineNum":"  926","line":"    unsigned __dc = 0;"},
{"lineNum":"  927","line":"    for (; __b != __e; ++__b)"},
{"lineNum":"  928","line":"    {"},
{"lineNum":"  929","line":"        if (__a_end == __a + __buf.size())"},
{"lineNum":"  930","line":"        {"},
{"lineNum":"  931","line":"            size_t __tmp = __buf.size();"},
{"lineNum":"  932","line":"            __buf.resize(2*__buf.size());"},
{"lineNum":"  933","line":"            __buf.resize(__buf.capacity());"},
{"lineNum":"  934","line":"            __a = &__buf[0];"},
{"lineNum":"  935","line":"            __a_end = __a + __tmp;"},
{"lineNum":"  936","line":"        }"},
{"lineNum":"  937","line":"        if (this->__stage2_int_loop(*__b, __base, __a, __a_end, __dc,"},
{"lineNum":"  938","line":"                                    __thousands_sep, __grouping, __g, __g_end,"},
{"lineNum":"  939","line":"                                    __atoms))"},
{"lineNum":"  940","line":"            break;"},
{"lineNum":"  941","line":"    }"},
{"lineNum":"  942","line":"    if (__grouping.size() != 0 && __g_end-__g < __num_get_base::__num_get_buf_sz)"},
{"lineNum":"  943","line":"        *__g_end++ = __dc;"},
{"lineNum":"  944","line":"    // Stage 3"},
{"lineNum":"  945","line":"    __v = __num_get_signed_integral<_Signed>(__a, __a_end, __err, __base);"},
{"lineNum":"  946","line":"    // Digit grouping checked"},
{"lineNum":"  947","line":"    __check_grouping(__grouping, __g, __g_end, __err);"},
{"lineNum":"  948","line":"    // EOF checked"},
{"lineNum":"  949","line":"    if (__b == __e)"},
{"lineNum":"  950","line":"        __err |= ios_base::eofbit;"},
{"lineNum":"  951","line":"    return __b;"},
{"lineNum":"  952","line":"}"},
{"lineNum":"  953","line":""},
{"lineNum":"  954","line":"// unsigned"},
{"lineNum":"  955","line":""},
{"lineNum":"  956","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":"  957","line":"template <class _Unsigned>"},
{"lineNum":"  958","line":"_InputIterator"},
{"lineNum":"  959","line":"num_get<_CharT, _InputIterator>::__do_get_unsigned(iter_type __b, iter_type __e,"},
{"lineNum":"  960","line":"                                        ios_base& __iob,"},
{"lineNum":"  961","line":"                                        ios_base::iostate& __err,"},
{"lineNum":"  962","line":"                                        _Unsigned& __v) const"},
{"lineNum":"  963","line":"{"},
{"lineNum":"  964","line":"    // Stage 1"},
{"lineNum":"  965","line":"    int __base = this->__get_base(__iob);"},
{"lineNum":"  966","line":"    // Stage 2"},
{"lineNum":"  967","line":"    char_type __thousands_sep;"},
{"lineNum":"  968","line":"    const int __atoms_size = 26;"},
{"lineNum":"  969","line":"#ifdef _LIBCPP_ABI_OPTIMIZED_LOCALE_NUM_GET"},
{"lineNum":"  970","line":"    char_type __atoms1[__atoms_size];"},
{"lineNum":"  971","line":"    const char_type *__atoms = this->__do_widen(__iob, __atoms1);"},
{"lineNum":"  972","line":"    string __grouping = this->__stage2_int_prep(__iob, __thousands_sep);"},
{"lineNum":"  973","line":"#else"},
{"lineNum":"  974","line":"    char_type __atoms[__atoms_size];"},
{"lineNum":"  975","line":"    string __grouping = this->__stage2_int_prep(__iob, __atoms, __thousands_sep);"},
{"lineNum":"  976","line":"#endif"},
{"lineNum":"  977","line":"    string __buf;"},
{"lineNum":"  978","line":"    __buf.resize(__buf.capacity());"},
{"lineNum":"  979","line":"    char* __a = &__buf[0];"},
{"lineNum":"  980","line":"    char* __a_end = __a;"},
{"lineNum":"  981","line":"    unsigned __g[__num_get_base::__num_get_buf_sz];"},
{"lineNum":"  982","line":"    unsigned* __g_end = __g;"},
{"lineNum":"  983","line":"    unsigned __dc = 0;"},
{"lineNum":"  984","line":"    for (; __b != __e; ++__b)"},
{"lineNum":"  985","line":"    {"},
{"lineNum":"  986","line":"        if (__a_end == __a + __buf.size())"},
{"lineNum":"  987","line":"        {"},
{"lineNum":"  988","line":"            size_t __tmp = __buf.size();"},
{"lineNum":"  989","line":"            __buf.resize(2*__buf.size());"},
{"lineNum":"  990","line":"            __buf.resize(__buf.capacity());"},
{"lineNum":"  991","line":"            __a = &__buf[0];"},
{"lineNum":"  992","line":"            __a_end = __a + __tmp;"},
{"lineNum":"  993","line":"        }"},
{"lineNum":"  994","line":"        if (this->__stage2_int_loop(*__b, __base, __a, __a_end, __dc,"},
{"lineNum":"  995","line":"                                    __thousands_sep, __grouping, __g, __g_end,"},
{"lineNum":"  996","line":"                                    __atoms))"},
{"lineNum":"  997","line":"            break;"},
{"lineNum":"  998","line":"    }"},
{"lineNum":"  999","line":"    if (__grouping.size() != 0 && __g_end-__g < __num_get_base::__num_get_buf_sz)"},
{"lineNum":" 1000","line":"        *__g_end++ = __dc;"},
{"lineNum":" 1001","line":"    // Stage 3"},
{"lineNum":" 1002","line":"    __v = __num_get_unsigned_integral<_Unsigned>(__a, __a_end, __err, __base);"},
{"lineNum":" 1003","line":"    // Digit grouping checked"},
{"lineNum":" 1004","line":"    __check_grouping(__grouping, __g, __g_end, __err);"},
{"lineNum":" 1005","line":"    // EOF checked"},
{"lineNum":" 1006","line":"    if (__b == __e)"},
{"lineNum":" 1007","line":"        __err |= ios_base::eofbit;"},
{"lineNum":" 1008","line":"    return __b;"},
{"lineNum":" 1009","line":"}"},
{"lineNum":" 1010","line":""},
{"lineNum":" 1011","line":"// floating point"},
{"lineNum":" 1012","line":""},
{"lineNum":" 1013","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":" 1014","line":"template <class _Fp>"},
{"lineNum":" 1015","line":"_InputIterator"},
{"lineNum":" 1016","line":"num_get<_CharT, _InputIterator>::__do_get_floating_point(iter_type __b, iter_type __e,"},
{"lineNum":" 1017","line":"                                        ios_base& __iob,"},
{"lineNum":" 1018","line":"                                        ios_base::iostate& __err,"},
{"lineNum":" 1019","line":"                                        _Fp& __v) const"},
{"lineNum":" 1020","line":"{"},
{"lineNum":" 1021","line":"    // Stage 1, nothing to do"},
{"lineNum":" 1022","line":"    // Stage 2"},
{"lineNum":" 1023","line":"    char_type __atoms[32];"},
{"lineNum":" 1024","line":"    char_type __decimal_point;"},
{"lineNum":" 1025","line":"    char_type __thousands_sep;"},
{"lineNum":" 1026","line":"    string __grouping = this->__stage2_float_prep(__iob, __atoms,"},
{"lineNum":" 1027","line":"                                                  __decimal_point,"},
{"lineNum":" 1028","line":"                                                  __thousands_sep);"},
{"lineNum":" 1029","line":"    string __buf;"},
{"lineNum":" 1030","line":"    __buf.resize(__buf.capacity());"},
{"lineNum":" 1031","line":"    char* __a = &__buf[0];"},
{"lineNum":" 1032","line":"    char* __a_end = __a;"},
{"lineNum":" 1033","line":"    unsigned __g[__num_get_base::__num_get_buf_sz];"},
{"lineNum":" 1034","line":"    unsigned* __g_end = __g;"},
{"lineNum":" 1035","line":"    unsigned __dc = 0;"},
{"lineNum":" 1036","line":"    bool __in_units = true;"},
{"lineNum":" 1037","line":"    char __exp = \'E\';"},
{"lineNum":" 1038","line":"    for (; __b != __e; ++__b)"},
{"lineNum":" 1039","line":"    {"},
{"lineNum":" 1040","line":"        if (__a_end == __a + __buf.size())"},
{"lineNum":" 1041","line":"        {"},
{"lineNum":" 1042","line":"            size_t __tmp = __buf.size();"},
{"lineNum":" 1043","line":"            __buf.resize(2*__buf.size());"},
{"lineNum":" 1044","line":"            __buf.resize(__buf.capacity());"},
{"lineNum":" 1045","line":"            __a = &__buf[0];"},
{"lineNum":" 1046","line":"            __a_end = __a + __tmp;"},
{"lineNum":" 1047","line":"        }"},
{"lineNum":" 1048","line":"        if (this->__stage2_float_loop(*__b, __in_units, __exp, __a, __a_end,"},
{"lineNum":" 1049","line":"                                      __decimal_point, __thousands_sep,"},
{"lineNum":" 1050","line":"                                      __grouping, __g, __g_end,"},
{"lineNum":" 1051","line":"                                      __dc, __atoms))"},
{"lineNum":" 1052","line":"            break;"},
{"lineNum":" 1053","line":"    }"},
{"lineNum":" 1054","line":"    if (__grouping.size() != 0 && __in_units && __g_end-__g < __num_get_base::__num_get_buf_sz)"},
{"lineNum":" 1055","line":"        *__g_end++ = __dc;"},
{"lineNum":" 1056","line":"    // Stage 3"},
{"lineNum":" 1057","line":"    __v = __num_get_float<_Fp>(__a, __a_end, __err);"},
{"lineNum":" 1058","line":"    // Digit grouping checked"},
{"lineNum":" 1059","line":"    __check_grouping(__grouping, __g, __g_end, __err);"},
{"lineNum":" 1060","line":"    // EOF checked"},
{"lineNum":" 1061","line":"    if (__b == __e)"},
{"lineNum":" 1062","line":"        __err |= ios_base::eofbit;"},
{"lineNum":" 1063","line":"    return __b;"},
{"lineNum":" 1064","line":"}"},
{"lineNum":" 1065","line":""},
{"lineNum":" 1066","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":" 1067","line":"_InputIterator"},
{"lineNum":" 1068","line":"num_get<_CharT, _InputIterator>::do_get(iter_type __b, iter_type __e,"},
{"lineNum":" 1069","line":"                                        ios_base& __iob,"},
{"lineNum":" 1070","line":"                                        ios_base::iostate& __err,"},
{"lineNum":" 1071","line":"                                        void*& __v) const"},
{"lineNum":" 1072","line":"{"},
{"lineNum":" 1073","line":"    // Stage 1"},
{"lineNum":" 1074","line":"    int __base = 16;"},
{"lineNum":" 1075","line":"    // Stage 2"},
{"lineNum":" 1076","line":"    char_type __atoms[26];"},
{"lineNum":" 1077","line":"    char_type __thousands_sep = 0;"},
{"lineNum":" 1078","line":"    string __grouping;"},
{"lineNum":" 1079","line":"    use_facet<ctype<_CharT> >(__iob.getloc()).widen(__num_get_base::__src,"},
{"lineNum":" 1080","line":"                                                    __num_get_base::__src + 26, __atoms);"},
{"lineNum":" 1081","line":"    string __buf;"},
{"lineNum":" 1082","line":"    __buf.resize(__buf.capacity());"},
{"lineNum":" 1083","line":"    char* __a = &__buf[0];"},
{"lineNum":" 1084","line":"    char* __a_end = __a;"},
{"lineNum":" 1085","line":"    unsigned __g[__num_get_base::__num_get_buf_sz];"},
{"lineNum":" 1086","line":"    unsigned* __g_end = __g;"},
{"lineNum":" 1087","line":"    unsigned __dc = 0;"},
{"lineNum":" 1088","line":"    for (; __b != __e; ++__b)"},
{"lineNum":" 1089","line":"    {"},
{"lineNum":" 1090","line":"        if (__a_end == __a + __buf.size())"},
{"lineNum":" 1091","line":"        {"},
{"lineNum":" 1092","line":"            size_t __tmp = __buf.size();"},
{"lineNum":" 1093","line":"            __buf.resize(2*__buf.size());"},
{"lineNum":" 1094","line":"            __buf.resize(__buf.capacity());"},
{"lineNum":" 1095","line":"            __a = &__buf[0];"},
{"lineNum":" 1096","line":"            __a_end = __a + __tmp;"},
{"lineNum":" 1097","line":"        }"},
{"lineNum":" 1098","line":"        if (this->__stage2_int_loop(*__b, __base, __a, __a_end, __dc,"},
{"lineNum":" 1099","line":"                                    __thousands_sep, __grouping,"},
{"lineNum":" 1100","line":"                                    __g, __g_end, __atoms))"},
{"lineNum":" 1101","line":"            break;"},
{"lineNum":" 1102","line":"    }"},
{"lineNum":" 1103","line":"    // Stage 3"},
{"lineNum":" 1104","line":"    __buf.resize(__a_end - __a);"},
{"lineNum":" 1105","line":"    if (__libcpp_sscanf_l(__buf.c_str(), _LIBCPP_GET_C_LOCALE, \"%p\", &__v) != 1)"},
{"lineNum":" 1106","line":"        __err = ios_base::failbit;"},
{"lineNum":" 1107","line":"    // EOF checked"},
{"lineNum":" 1108","line":"    if (__b == __e)"},
{"lineNum":" 1109","line":"        __err |= ios_base::eofbit;"},
{"lineNum":" 1110","line":"    return __b;"},
{"lineNum":" 1111","line":"}"},
{"lineNum":" 1112","line":""},
{"lineNum":" 1113","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS num_get<char>)"},
{"lineNum":" 1114","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS num_get<wchar_t>)"},
{"lineNum":" 1115","line":""},
{"lineNum":" 1116","line":"struct _LIBCPP_TYPE_VIS __num_put_base"},
{"lineNum":" 1117","line":"{"},
{"lineNum":" 1118","line":"protected:"},
{"lineNum":" 1119","line":"    static void __format_int(char* __fmt, const char* __len, bool __signd,"},
{"lineNum":" 1120","line":"                             ios_base::fmtflags __flags);"},
{"lineNum":" 1121","line":"    static bool __format_float(char* __fmt, const char* __len,"},
{"lineNum":" 1122","line":"                               ios_base::fmtflags __flags);"},
{"lineNum":" 1123","line":"    static char* __identify_padding(char* __nb, char* __ne,"},
{"lineNum":" 1124","line":"                                    const ios_base& __iob);"},
{"lineNum":" 1125","line":"};"},
{"lineNum":" 1126","line":""},
{"lineNum":" 1127","line":"template <class _CharT>"},
{"lineNum":" 1128","line":"struct __num_put"},
{"lineNum":" 1129","line":"    : protected __num_put_base"},
{"lineNum":" 1130","line":"{"},
{"lineNum":" 1131","line":"    static void __widen_and_group_int(char* __nb, char* __np, char* __ne,"},
{"lineNum":" 1132","line":"                                      _CharT* __ob, _CharT*& __op, _CharT*& __oe,"},
{"lineNum":" 1133","line":"                                      const locale& __loc);"},
{"lineNum":" 1134","line":"    static void __widen_and_group_float(char* __nb, char* __np, char* __ne,"},
{"lineNum":" 1135","line":"                                        _CharT* __ob, _CharT*& __op, _CharT*& __oe,"},
{"lineNum":" 1136","line":"                                        const locale& __loc);"},
{"lineNum":" 1137","line":"};"},
{"lineNum":" 1138","line":""},
{"lineNum":" 1139","line":"template <class _CharT>"},
{"lineNum":" 1140","line":"void"},
{"lineNum":" 1141","line":"__num_put<_CharT>::__widen_and_group_int(char* __nb, char* __np, char* __ne,"},
{"lineNum":" 1142","line":"                                         _CharT* __ob, _CharT*& __op, _CharT*& __oe,"},
{"lineNum":" 1143","line":"                                         const locale& __loc)"},
{"lineNum":" 1144","line":"{"},
{"lineNum":" 1145","line":"    const ctype<_CharT>&    __ct = use_facet<ctype<_CharT> >   (__loc);"},
{"lineNum":" 1146","line":"    const numpunct<_CharT>& __npt = use_facet<numpunct<_CharT> >(__loc);"},
{"lineNum":" 1147","line":"    string __grouping = __npt.grouping();"},
{"lineNum":" 1148","line":"    if (__grouping.empty())"},
{"lineNum":" 1149","line":"    {"},
{"lineNum":" 1150","line":"        __ct.widen(__nb, __ne, __ob);"},
{"lineNum":" 1151","line":"        __oe = __ob + (__ne - __nb);"},
{"lineNum":" 1152","line":"    }"},
{"lineNum":" 1153","line":"    else"},
{"lineNum":" 1154","line":"    {"},
{"lineNum":" 1155","line":"        __oe = __ob;"},
{"lineNum":" 1156","line":"        char* __nf = __nb;"},
{"lineNum":" 1157","line":"        if (*__nf == \'-\' || *__nf == \'+\')"},
{"lineNum":" 1158","line":"            *__oe++ = __ct.widen(*__nf++);"},
{"lineNum":" 1159","line":"        if (__ne - __nf >= 2 && __nf[0] == \'0\' && (__nf[1] == \'x\' ||"},
{"lineNum":" 1160","line":"                                                   __nf[1] == \'X\'))"},
{"lineNum":" 1161","line":"        {"},
{"lineNum":" 1162","line":"            *__oe++ = __ct.widen(*__nf++);"},
{"lineNum":" 1163","line":"            *__oe++ = __ct.widen(*__nf++);"},
{"lineNum":" 1164","line":"        }"},
{"lineNum":" 1165","line":"        reverse(__nf, __ne);"},
{"lineNum":" 1166","line":"        _CharT __thousands_sep = __npt.thousands_sep();"},
{"lineNum":" 1167","line":"        unsigned __dc = 0;"},
{"lineNum":" 1168","line":"        unsigned __dg = 0;"},
{"lineNum":" 1169","line":"        for (char* __p = __nf; __p < __ne; ++__p)"},
{"lineNum":" 1170","line":"        {"},
{"lineNum":" 1171","line":"            if (static_cast<unsigned>(__grouping[__dg]) > 0 &&"},
{"lineNum":" 1172","line":"                __dc == static_cast<unsigned>(__grouping[__dg]))"},
{"lineNum":" 1173","line":"            {"},
{"lineNum":" 1174","line":"                *__oe++ = __thousands_sep;"},
{"lineNum":" 1175","line":"                __dc = 0;"},
{"lineNum":" 1176","line":"                if (__dg < __grouping.size()-1)"},
{"lineNum":" 1177","line":"                    ++__dg;"},
{"lineNum":" 1178","line":"            }"},
{"lineNum":" 1179","line":"            *__oe++ = __ct.widen(*__p);"},
{"lineNum":" 1180","line":"            ++__dc;"},
{"lineNum":" 1181","line":"        }"},
{"lineNum":" 1182","line":"        reverse(__ob + (__nf - __nb), __oe);"},
{"lineNum":" 1183","line":"    }"},
{"lineNum":" 1184","line":"    if (__np == __ne)"},
{"lineNum":" 1185","line":"        __op = __oe;"},
{"lineNum":" 1186","line":"    else"},
{"lineNum":" 1187","line":"        __op = __ob + (__np - __nb);"},
{"lineNum":" 1188","line":"}"},
{"lineNum":" 1189","line":""},
{"lineNum":" 1190","line":"template <class _CharT>"},
{"lineNum":" 1191","line":"void"},
{"lineNum":" 1192","line":"__num_put<_CharT>::__widen_and_group_float(char* __nb, char* __np, char* __ne,"},
{"lineNum":" 1193","line":"                                           _CharT* __ob, _CharT*& __op, _CharT*& __oe,"},
{"lineNum":" 1194","line":"                                           const locale& __loc)"},
{"lineNum":" 1195","line":"{"},
{"lineNum":" 1196","line":"    const ctype<_CharT>&    __ct = use_facet<ctype<_CharT> >   (__loc);"},
{"lineNum":" 1197","line":"    const numpunct<_CharT>& __npt = use_facet<numpunct<_CharT> >(__loc);"},
{"lineNum":" 1198","line":"    string __grouping = __npt.grouping();"},
{"lineNum":" 1199","line":"    __oe = __ob;"},
{"lineNum":" 1200","line":"    char* __nf = __nb;"},
{"lineNum":" 1201","line":"    if (*__nf == \'-\' || *__nf == \'+\')"},
{"lineNum":" 1202","line":"        *__oe++ = __ct.widen(*__nf++);"},
{"lineNum":" 1203","line":"    char* __ns;"},
{"lineNum":" 1204","line":"    if (__ne - __nf >= 2 && __nf[0] == \'0\' && (__nf[1] == \'x\' ||"},
{"lineNum":" 1205","line":"                                               __nf[1] == \'X\'))"},
{"lineNum":" 1206","line":"    {"},
{"lineNum":" 1207","line":"        *__oe++ = __ct.widen(*__nf++);"},
{"lineNum":" 1208","line":"        *__oe++ = __ct.widen(*__nf++);"},
{"lineNum":" 1209","line":"        for (__ns = __nf; __ns < __ne; ++__ns)"},
{"lineNum":" 1210","line":"            if (!isxdigit_l(*__ns, _LIBCPP_GET_C_LOCALE))"},
{"lineNum":" 1211","line":"                break;"},
{"lineNum":" 1212","line":"    }"},
{"lineNum":" 1213","line":"    else"},
{"lineNum":" 1214","line":"    {"},
{"lineNum":" 1215","line":"        for (__ns = __nf; __ns < __ne; ++__ns)"},
{"lineNum":" 1216","line":"            if (!isdigit_l(*__ns, _LIBCPP_GET_C_LOCALE))"},
{"lineNum":" 1217","line":"                break;"},
{"lineNum":" 1218","line":"    }"},
{"lineNum":" 1219","line":"    if (__grouping.empty())"},
{"lineNum":" 1220","line":"    {"},
{"lineNum":" 1221","line":"        __ct.widen(__nf, __ns, __oe);"},
{"lineNum":" 1222","line":"        __oe += __ns - __nf;"},
{"lineNum":" 1223","line":"    }"},
{"lineNum":" 1224","line":"    else"},
{"lineNum":" 1225","line":"    {"},
{"lineNum":" 1226","line":"        reverse(__nf, __ns);"},
{"lineNum":" 1227","line":"        _CharT __thousands_sep = __npt.thousands_sep();"},
{"lineNum":" 1228","line":"        unsigned __dc = 0;"},
{"lineNum":" 1229","line":"        unsigned __dg = 0;"},
{"lineNum":" 1230","line":"        for (char* __p = __nf; __p < __ns; ++__p)"},
{"lineNum":" 1231","line":"        {"},
{"lineNum":" 1232","line":"            if (__grouping[__dg] > 0 && __dc == static_cast<unsigned>(__grouping[__dg]))"},
{"lineNum":" 1233","line":"            {"},
{"lineNum":" 1234","line":"                *__oe++ = __thousands_sep;"},
{"lineNum":" 1235","line":"                __dc = 0;"},
{"lineNum":" 1236","line":"                if (__dg < __grouping.size()-1)"},
{"lineNum":" 1237","line":"                    ++__dg;"},
{"lineNum":" 1238","line":"            }"},
{"lineNum":" 1239","line":"            *__oe++ = __ct.widen(*__p);"},
{"lineNum":" 1240","line":"            ++__dc;"},
{"lineNum":" 1241","line":"        }"},
{"lineNum":" 1242","line":"        reverse(__ob + (__nf - __nb), __oe);"},
{"lineNum":" 1243","line":"    }"},
{"lineNum":" 1244","line":"    for (__nf = __ns; __nf < __ne; ++__nf)"},
{"lineNum":" 1245","line":"    {"},
{"lineNum":" 1246","line":"        if (*__nf == \'.\')"},
{"lineNum":" 1247","line":"        {"},
{"lineNum":" 1248","line":"            *__oe++ = __npt.decimal_point();"},
{"lineNum":" 1249","line":"            ++__nf;"},
{"lineNum":" 1250","line":"            break;"},
{"lineNum":" 1251","line":"        }"},
{"lineNum":" 1252","line":"        else"},
{"lineNum":" 1253","line":"            *__oe++ = __ct.widen(*__nf);"},
{"lineNum":" 1254","line":"    }"},
{"lineNum":" 1255","line":"    __ct.widen(__nf, __ne, __oe);"},
{"lineNum":" 1256","line":"    __oe += __ne - __nf;"},
{"lineNum":" 1257","line":"    if (__np == __ne)"},
{"lineNum":" 1258","line":"        __op = __oe;"},
{"lineNum":" 1259","line":"    else"},
{"lineNum":" 1260","line":"        __op = __ob + (__np - __nb);"},
{"lineNum":" 1261","line":"}"},
{"lineNum":" 1262","line":""},
{"lineNum":" 1263","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(struct _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS __num_put<char>)"},
{"lineNum":" 1264","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(struct _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS __num_put<wchar_t>)"},
{"lineNum":" 1265","line":""},
{"lineNum":" 1266","line":"template <class _CharT, class _OutputIterator = ostreambuf_iterator<_CharT> >"},
{"lineNum":" 1267","line":"class _LIBCPP_TEMPLATE_VIS num_put"},
{"lineNum":" 1268","line":"    : public locale::facet,"},
{"lineNum":" 1269","line":"      private __num_put<_CharT>"},
{"lineNum":" 1270","line":"{"},
{"lineNum":" 1271","line":"public:"},
{"lineNum":" 1272","line":"    typedef _CharT char_type;"},
{"lineNum":" 1273","line":"    typedef _OutputIterator iter_type;"},
{"lineNum":" 1274","line":""},
{"lineNum":" 1275","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1276","line":"    explicit num_put(size_t __refs = 0)"},
{"lineNum":" 1277","line":"        : locale::facet(__refs) {}"},
{"lineNum":" 1278","line":""},
{"lineNum":" 1279","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1280","line":"    iter_type put(iter_type __s, ios_base& __iob, char_type __fl,"},
{"lineNum":" 1281","line":"                  bool __v) const"},
{"lineNum":" 1282","line":"    {"},
{"lineNum":" 1283","line":"        return do_put(__s, __iob, __fl, __v);"},
{"lineNum":" 1284","line":"    }"},
{"lineNum":" 1285","line":""},
{"lineNum":" 1286","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1287","line":"    iter_type put(iter_type __s, ios_base& __iob, char_type __fl,"},
{"lineNum":" 1288","line":"                  long __v) const"},
{"lineNum":" 1289","line":"    {"},
{"lineNum":" 1290","line":"        return do_put(__s, __iob, __fl, __v);"},
{"lineNum":" 1291","line":"    }"},
{"lineNum":" 1292","line":""},
{"lineNum":" 1293","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1294","line":"    iter_type put(iter_type __s, ios_base& __iob, char_type __fl,"},
{"lineNum":" 1295","line":"                  long long __v) const"},
{"lineNum":" 1296","line":"    {"},
{"lineNum":" 1297","line":"        return do_put(__s, __iob, __fl, __v);"},
{"lineNum":" 1298","line":"    }"},
{"lineNum":" 1299","line":""},
{"lineNum":" 1300","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1301","line":"    iter_type put(iter_type __s, ios_base& __iob, char_type __fl,"},
{"lineNum":" 1302","line":"                  unsigned long __v) const"},
{"lineNum":" 1303","line":"    {"},
{"lineNum":" 1304","line":"        return do_put(__s, __iob, __fl, __v);"},
{"lineNum":" 1305","line":"    }"},
{"lineNum":" 1306","line":""},
{"lineNum":" 1307","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1308","line":"    iter_type put(iter_type __s, ios_base& __iob, char_type __fl,"},
{"lineNum":" 1309","line":"                  unsigned long long __v) const"},
{"lineNum":" 1310","line":"    {"},
{"lineNum":" 1311","line":"        return do_put(__s, __iob, __fl, __v);"},
{"lineNum":" 1312","line":"    }"},
{"lineNum":" 1313","line":""},
{"lineNum":" 1314","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1315","line":"    iter_type put(iter_type __s, ios_base& __iob, char_type __fl,"},
{"lineNum":" 1316","line":"                  double __v) const"},
{"lineNum":" 1317","line":"    {"},
{"lineNum":" 1318","line":"        return do_put(__s, __iob, __fl, __v);"},
{"lineNum":" 1319","line":"    }"},
{"lineNum":" 1320","line":""},
{"lineNum":" 1321","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1322","line":"    iter_type put(iter_type __s, ios_base& __iob, char_type __fl,"},
{"lineNum":" 1323","line":"                  long double __v) const"},
{"lineNum":" 1324","line":"    {"},
{"lineNum":" 1325","line":"        return do_put(__s, __iob, __fl, __v);"},
{"lineNum":" 1326","line":"    }"},
{"lineNum":" 1327","line":""},
{"lineNum":" 1328","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1329","line":"    iter_type put(iter_type __s, ios_base& __iob, char_type __fl,"},
{"lineNum":" 1330","line":"                  const void* __v) const"},
{"lineNum":" 1331","line":"    {"},
{"lineNum":" 1332","line":"        return do_put(__s, __iob, __fl, __v);"},
{"lineNum":" 1333","line":"    }"},
{"lineNum":" 1334","line":""},
{"lineNum":" 1335","line":"    static locale::id id;"},
{"lineNum":" 1336","line":""},
{"lineNum":" 1337","line":"protected:"},
{"lineNum":" 1338","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1339","line":"    ~num_put() {}"},
{"lineNum":" 1340","line":""},
{"lineNum":" 1341","line":"    virtual iter_type do_put(iter_type __s, ios_base& __iob, char_type __fl,"},
{"lineNum":" 1342","line":"                             bool __v) const;"},
{"lineNum":" 1343","line":"    virtual iter_type do_put(iter_type __s, ios_base& __iob, char_type __fl,"},
{"lineNum":" 1344","line":"                             long __v) const;"},
{"lineNum":" 1345","line":"    virtual iter_type do_put(iter_type __s, ios_base& __iob, char_type __fl,"},
{"lineNum":" 1346","line":"                             long long __v) const;"},
{"lineNum":" 1347","line":"    virtual iter_type do_put(iter_type __s, ios_base& __iob, char_type __fl,"},
{"lineNum":" 1348","line":"                             unsigned long) const;"},
{"lineNum":" 1349","line":"    virtual iter_type do_put(iter_type __s, ios_base& __iob, char_type __fl,"},
{"lineNum":" 1350","line":"                             unsigned long long) const;"},
{"lineNum":" 1351","line":"    virtual iter_type do_put(iter_type __s, ios_base& __iob, char_type __fl,"},
{"lineNum":" 1352","line":"                             double __v) const;"},
{"lineNum":" 1353","line":"    virtual iter_type do_put(iter_type __s, ios_base& __iob, char_type __fl,"},
{"lineNum":" 1354","line":"                             long double __v) const;"},
{"lineNum":" 1355","line":"    virtual iter_type do_put(iter_type __s, ios_base& __iob, char_type __fl,"},
{"lineNum":" 1356","line":"                             const void* __v) const;"},
{"lineNum":" 1357","line":"};"},
{"lineNum":" 1358","line":""},
{"lineNum":" 1359","line":"template <class _CharT, class _OutputIterator>"},
{"lineNum":" 1360","line":"locale::id"},
{"lineNum":" 1361","line":"num_put<_CharT, _OutputIterator>::id;"},
{"lineNum":" 1362","line":""},
{"lineNum":" 1363","line":"template <class _CharT, class _OutputIterator>"},
{"lineNum":" 1364","line":"_LIBCPP_HIDDEN"},
{"lineNum":" 1365","line":"_OutputIterator"},
{"lineNum":" 1366","line":"__pad_and_output(_OutputIterator __s,"},
{"lineNum":" 1367","line":"                 const _CharT* __ob, const _CharT* __op, const _CharT* __oe,"},
{"lineNum":" 1368","line":"                 ios_base& __iob, _CharT __fl)"},
{"lineNum":" 1369","line":"{"},
{"lineNum":" 1370","line":"    streamsize __sz = __oe - __ob;"},
{"lineNum":" 1371","line":"    streamsize __ns = __iob.width();"},
{"lineNum":" 1372","line":"    if (__ns > __sz)"},
{"lineNum":" 1373","line":"        __ns -= __sz;"},
{"lineNum":" 1374","line":"    else"},
{"lineNum":" 1375","line":"        __ns = 0;"},
{"lineNum":" 1376","line":"    for (;__ob < __op; ++__ob, ++__s)"},
{"lineNum":" 1377","line":"        *__s = *__ob;"},
{"lineNum":" 1378","line":"    for (; __ns; --__ns, ++__s)"},
{"lineNum":" 1379","line":"        *__s = __fl;"},
{"lineNum":" 1380","line":"    for (; __ob < __oe; ++__ob, ++__s)"},
{"lineNum":" 1381","line":"        *__s = *__ob;"},
{"lineNum":" 1382","line":"    __iob.width(0);"},
{"lineNum":" 1383","line":"    return __s;"},
{"lineNum":" 1384","line":"}"},
{"lineNum":" 1385","line":""},
{"lineNum":" 1386","line":"template <class _CharT, class _Traits>"},
{"lineNum":" 1387","line":"_LIBCPP_HIDDEN"},
{"lineNum":" 1388","line":"ostreambuf_iterator<_CharT, _Traits>"},
{"lineNum":" 1389","line":"__pad_and_output(ostreambuf_iterator<_CharT, _Traits> __s,"},
{"lineNum":" 1390","line":"                 const _CharT* __ob, const _CharT* __op, const _CharT* __oe,"},
{"lineNum":" 1391","line":"                 ios_base& __iob, _CharT __fl)"},
{"lineNum":" 1392","line":"{","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":" 1393","line":"    if (__s.__sbuf_ == nullptr)","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":" 1394","line":"        return __s;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1395","line":"    streamsize __sz = __oe - __ob;","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":" 1396","line":"    streamsize __ns = __iob.width();"},
{"lineNum":" 1397","line":"    if (__ns > __sz)","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":" 1398","line":"        __ns -= __sz;"},
{"lineNum":" 1399","line":"    else"},
{"lineNum":" 1400","line":"        __ns = 0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1401","line":"    streamsize __np = __op - __ob;","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":" 1402","line":"    if (__np > 0)","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":" 1403","line":"    {"},
{"lineNum":" 1404","line":"        if (__s.__sbuf_->sputn(__ob, __np) != __np)","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":" 1405","line":"        {"},
{"lineNum":" 1406","line":"            __s.__sbuf_ = nullptr;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1407","line":"            return __s;"},
{"lineNum":" 1408","line":"        }"},
{"lineNum":" 1409","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1410","line":"    if (__ns > 0)","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":" 1411","line":"    {"},
{"lineNum":" 1412","line":"        basic_string<_CharT, _Traits> __sp(__ns, __fl);"},
{"lineNum":" 1413","line":"        if (__s.__sbuf_->sputn(__sp.data(), __ns) != __ns)","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":" 1414","line":"        {"},
{"lineNum":" 1415","line":"            __s.__sbuf_ = nullptr;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1416","line":"            return __s;"},
{"lineNum":" 1417","line":"        }"},
{"lineNum":" 1418","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":" 1419","line":"    __np = __oe - __op;","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":" 1420","line":"    if (__np > 0)","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":" 1421","line":"    {"},
{"lineNum":" 1422","line":"        if (__s.__sbuf_->sputn(__op, __np) != __np)","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":" 1423","line":"        {"},
{"lineNum":" 1424","line":"            __s.__sbuf_ = nullptr;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1425","line":"            return __s;"},
{"lineNum":" 1426","line":"        }"},
{"lineNum":" 1427","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1428","line":"    __iob.width(0);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1429","line":"    return __s;"},
{"lineNum":" 1430","line":"}","class":"lineNoCov","hits":"0","possible_hits":"13",},
{"lineNum":" 1431","line":""},
{"lineNum":" 1432","line":"template <class _CharT, class _OutputIterator>"},
{"lineNum":" 1433","line":"_OutputIterator"},
{"lineNum":" 1434","line":"num_put<_CharT, _OutputIterator>::do_put(iter_type __s, ios_base& __iob,"},
{"lineNum":" 1435","line":"                                         char_type __fl, bool __v) const"},
{"lineNum":" 1436","line":"{"},
{"lineNum":" 1437","line":"    if ((__iob.flags() & ios_base::boolalpha) == 0)"},
{"lineNum":" 1438","line":"        return do_put(__s, __iob, __fl, (unsigned long)__v);"},
{"lineNum":" 1439","line":"    const numpunct<char_type>& __np = use_facet<numpunct<char_type> >(__iob.getloc());"},
{"lineNum":" 1440","line":"    typedef typename numpunct<char_type>::string_type string_type;"},
{"lineNum":" 1441","line":"#if _LIBCPP_DEBUG_LEVEL == 2"},
{"lineNum":" 1442","line":"    string_type __tmp(__v ? __np.truename() : __np.falsename());"},
{"lineNum":" 1443","line":"    string_type __nm = _VSTD::move(__tmp);"},
{"lineNum":" 1444","line":"#else"},
{"lineNum":" 1445","line":"    string_type __nm = __v ? __np.truename() : __np.falsename();"},
{"lineNum":" 1446","line":"#endif"},
{"lineNum":" 1447","line":"    for (typename string_type::iterator __i = __nm.begin(); __i != __nm.end(); ++__i, ++__s)"},
{"lineNum":" 1448","line":"        *__s = *__i;"},
{"lineNum":" 1449","line":"    return __s;"},
{"lineNum":" 1450","line":"}"},
{"lineNum":" 1451","line":""},
{"lineNum":" 1452","line":"template <class _CharT, class _OutputIterator>"},
{"lineNum":" 1453","line":"_OutputIterator"},
{"lineNum":" 1454","line":"num_put<_CharT, _OutputIterator>::do_put(iter_type __s, ios_base& __iob,"},
{"lineNum":" 1455","line":"                                         char_type __fl, long __v) const"},
{"lineNum":" 1456","line":"{"},
{"lineNum":" 1457","line":"    // Stage 1 - Get number in narrow char"},
{"lineNum":" 1458","line":"    char __fmt[6] = {\'%\', 0};"},
{"lineNum":" 1459","line":"    const char* __len = \"l\";"},
{"lineNum":" 1460","line":"    this->__format_int(__fmt+1, __len, true, __iob.flags());"},
{"lineNum":" 1461","line":"    // Worst case is octal, with showbase enabled. Note that octal is always"},
{"lineNum":" 1462","line":"    // printed as an unsigned value."},
{"lineNum":" 1463","line":"    _LIBCPP_CONSTEXPR const unsigned __nbuf"},
{"lineNum":" 1464","line":"        = (numeric_limits<unsigned long>::digits / 3)        // 1 char per 3 bits"},
{"lineNum":" 1465","line":"        + ((numeric_limits<unsigned long>::digits % 3) != 0) // round up"},
{"lineNum":" 1466","line":"        + 2; // base prefix + terminating null character"},
{"lineNum":" 1467","line":"    char __nar[__nbuf];"},
{"lineNum":" 1468","line":"    int __nc = __libcpp_snprintf_l(__nar, sizeof(__nar), _LIBCPP_GET_C_LOCALE, __fmt, __v);"},
{"lineNum":" 1469","line":"    char* __ne = __nar + __nc;"},
{"lineNum":" 1470","line":"    char* __np = this->__identify_padding(__nar, __ne, __iob);"},
{"lineNum":" 1471","line":"    // Stage 2 - Widen __nar while adding thousands separators"},
{"lineNum":" 1472","line":"    char_type __o[2*(__nbuf-1) - 1];"},
{"lineNum":" 1473","line":"    char_type* __op;  // pad here"},
{"lineNum":" 1474","line":"    char_type* __oe;  // end of output"},
{"lineNum":" 1475","line":"    this->__widen_and_group_int(__nar, __np, __ne, __o, __op, __oe, __iob.getloc());"},
{"lineNum":" 1476","line":"    // [__o, __oe) contains thousands_sep\'d wide number"},
{"lineNum":" 1477","line":"    // Stage 3 & 4"},
{"lineNum":" 1478","line":"    return __pad_and_output(__s, __o, __op, __oe, __iob, __fl);"},
{"lineNum":" 1479","line":"}"},
{"lineNum":" 1480","line":""},
{"lineNum":" 1481","line":"template <class _CharT, class _OutputIterator>"},
{"lineNum":" 1482","line":"_OutputIterator"},
{"lineNum":" 1483","line":"num_put<_CharT, _OutputIterator>::do_put(iter_type __s, ios_base& __iob,"},
{"lineNum":" 1484","line":"                                         char_type __fl, long long __v) const"},
{"lineNum":" 1485","line":"{"},
{"lineNum":" 1486","line":"    // Stage 1 - Get number in narrow char"},
{"lineNum":" 1487","line":"    char __fmt[8] = {\'%\', 0};"},
{"lineNum":" 1488","line":"    const char* __len = \"ll\";"},
{"lineNum":" 1489","line":"    this->__format_int(__fmt+1, __len, true, __iob.flags());"},
{"lineNum":" 1490","line":"    // Worst case is octal, with showbase enabled. Note that octal is always"},
{"lineNum":" 1491","line":"    // printed as an unsigned value."},
{"lineNum":" 1492","line":"    _LIBCPP_CONSTEXPR const unsigned __nbuf"},
{"lineNum":" 1493","line":"        = (numeric_limits<unsigned long long>::digits / 3)        // 1 char per 3 bits"},
{"lineNum":" 1494","line":"        + ((numeric_limits<unsigned long long>::digits % 3) != 0) // round up"},
{"lineNum":" 1495","line":"        + 2; // base prefix + terminating null character"},
{"lineNum":" 1496","line":"    char __nar[__nbuf];"},
{"lineNum":" 1497","line":"    int __nc = __libcpp_snprintf_l(__nar, sizeof(__nar), _LIBCPP_GET_C_LOCALE, __fmt, __v);"},
{"lineNum":" 1498","line":"    char* __ne = __nar + __nc;"},
{"lineNum":" 1499","line":"    char* __np = this->__identify_padding(__nar, __ne, __iob);"},
{"lineNum":" 1500","line":"    // Stage 2 - Widen __nar while adding thousands separators"},
{"lineNum":" 1501","line":"    char_type __o[2*(__nbuf-1) - 1];"},
{"lineNum":" 1502","line":"    char_type* __op;  // pad here"},
{"lineNum":" 1503","line":"    char_type* __oe;  // end of output"},
{"lineNum":" 1504","line":"    this->__widen_and_group_int(__nar, __np, __ne, __o, __op, __oe, __iob.getloc());"},
{"lineNum":" 1505","line":"    // [__o, __oe) contains thousands_sep\'d wide number"},
{"lineNum":" 1506","line":"    // Stage 3 & 4"},
{"lineNum":" 1507","line":"    return __pad_and_output(__s, __o, __op, __oe, __iob, __fl);"},
{"lineNum":" 1508","line":"}"},
{"lineNum":" 1509","line":""},
{"lineNum":" 1510","line":"template <class _CharT, class _OutputIterator>"},
{"lineNum":" 1511","line":"_OutputIterator"},
{"lineNum":" 1512","line":"num_put<_CharT, _OutputIterator>::do_put(iter_type __s, ios_base& __iob,"},
{"lineNum":" 1513","line":"                                         char_type __fl, unsigned long __v) const"},
{"lineNum":" 1514","line":"{"},
{"lineNum":" 1515","line":"    // Stage 1 - Get number in narrow char"},
{"lineNum":" 1516","line":"    char __fmt[6] = {\'%\', 0};"},
{"lineNum":" 1517","line":"    const char* __len = \"l\";"},
{"lineNum":" 1518","line":"    this->__format_int(__fmt+1, __len, false, __iob.flags());"},
{"lineNum":" 1519","line":"    // Worst case is octal, with showbase enabled."},
{"lineNum":" 1520","line":"    _LIBCPP_CONSTEXPR const unsigned __nbuf"},
{"lineNum":" 1521","line":"        = (numeric_limits<unsigned long>::digits / 3)        // 1 char per 3 bits"},
{"lineNum":" 1522","line":"        + ((numeric_limits<unsigned long>::digits % 3) != 0) // round up"},
{"lineNum":" 1523","line":"        + 2; // base prefix + terminating null character"},
{"lineNum":" 1524","line":"    char __nar[__nbuf];"},
{"lineNum":" 1525","line":"    int __nc = __libcpp_snprintf_l(__nar, sizeof(__nar), _LIBCPP_GET_C_LOCALE, __fmt, __v);"},
{"lineNum":" 1526","line":"    char* __ne = __nar + __nc;"},
{"lineNum":" 1527","line":"    char* __np = this->__identify_padding(__nar, __ne, __iob);"},
{"lineNum":" 1528","line":"    // Stage 2 - Widen __nar while adding thousands separators"},
{"lineNum":" 1529","line":"    char_type __o[2*(__nbuf-1) - 1];"},
{"lineNum":" 1530","line":"    char_type* __op;  // pad here"},
{"lineNum":" 1531","line":"    char_type* __oe;  // end of output"},
{"lineNum":" 1532","line":"    this->__widen_and_group_int(__nar, __np, __ne, __o, __op, __oe, __iob.getloc());"},
{"lineNum":" 1533","line":"    // [__o, __oe) contains thousands_sep\'d wide number"},
{"lineNum":" 1534","line":"    // Stage 3 & 4"},
{"lineNum":" 1535","line":"    return __pad_and_output(__s, __o, __op, __oe, __iob, __fl);"},
{"lineNum":" 1536","line":"}"},
{"lineNum":" 1537","line":""},
{"lineNum":" 1538","line":"template <class _CharT, class _OutputIterator>"},
{"lineNum":" 1539","line":"_OutputIterator"},
{"lineNum":" 1540","line":"num_put<_CharT, _OutputIterator>::do_put(iter_type __s, ios_base& __iob,"},
{"lineNum":" 1541","line":"                                         char_type __fl, unsigned long long __v) const"},
{"lineNum":" 1542","line":"{"},
{"lineNum":" 1543","line":"    // Stage 1 - Get number in narrow char"},
{"lineNum":" 1544","line":"    char __fmt[8] = {\'%\', 0};"},
{"lineNum":" 1545","line":"    const char* __len = \"ll\";"},
{"lineNum":" 1546","line":"    this->__format_int(__fmt+1, __len, false, __iob.flags());"},
{"lineNum":" 1547","line":"    // Worst case is octal, with showbase enabled."},
{"lineNum":" 1548","line":"    _LIBCPP_CONSTEXPR const unsigned __nbuf"},
{"lineNum":" 1549","line":"        = (numeric_limits<unsigned long long>::digits / 3)        // 1 char per 3 bits"},
{"lineNum":" 1550","line":"        + ((numeric_limits<unsigned long long>::digits % 3) != 0) // round up"},
{"lineNum":" 1551","line":"        + 2; // base prefix + terminating null character"},
{"lineNum":" 1552","line":"    char __nar[__nbuf];"},
{"lineNum":" 1553","line":"    int __nc = __libcpp_snprintf_l(__nar, sizeof(__nar), _LIBCPP_GET_C_LOCALE, __fmt, __v);"},
{"lineNum":" 1554","line":"    char* __ne = __nar + __nc;"},
{"lineNum":" 1555","line":"    char* __np = this->__identify_padding(__nar, __ne, __iob);"},
{"lineNum":" 1556","line":"    // Stage 2 - Widen __nar while adding thousands separators"},
{"lineNum":" 1557","line":"    char_type __o[2*(__nbuf-1) - 1];"},
{"lineNum":" 1558","line":"    char_type* __op;  // pad here"},
{"lineNum":" 1559","line":"    char_type* __oe;  // end of output"},
{"lineNum":" 1560","line":"    this->__widen_and_group_int(__nar, __np, __ne, __o, __op, __oe, __iob.getloc());"},
{"lineNum":" 1561","line":"    // [__o, __oe) contains thousands_sep\'d wide number"},
{"lineNum":" 1562","line":"    // Stage 3 & 4"},
{"lineNum":" 1563","line":"    return __pad_and_output(__s, __o, __op, __oe, __iob, __fl);"},
{"lineNum":" 1564","line":"}"},
{"lineNum":" 1565","line":""},
{"lineNum":" 1566","line":"template <class _CharT, class _OutputIterator>"},
{"lineNum":" 1567","line":"_OutputIterator"},
{"lineNum":" 1568","line":"num_put<_CharT, _OutputIterator>::do_put(iter_type __s, ios_base& __iob,"},
{"lineNum":" 1569","line":"                                         char_type __fl, double __v) const"},
{"lineNum":" 1570","line":"{"},
{"lineNum":" 1571","line":"    // Stage 1 - Get number in narrow char"},
{"lineNum":" 1572","line":"    char __fmt[8] = {\'%\', 0};"},
{"lineNum":" 1573","line":"    const char* __len = \"\";"},
{"lineNum":" 1574","line":"    bool __specify_precision = this->__format_float(__fmt+1, __len, __iob.flags());"},
{"lineNum":" 1575","line":"    const unsigned __nbuf = 30;"},
{"lineNum":" 1576","line":"    char __nar[__nbuf];"},
{"lineNum":" 1577","line":"    char* __nb = __nar;"},
{"lineNum":" 1578","line":"    int __nc;"},
{"lineNum":" 1579","line":"    if (__specify_precision)"},
{"lineNum":" 1580","line":"        __nc = __libcpp_snprintf_l(__nb, __nbuf, _LIBCPP_GET_C_LOCALE, __fmt,"},
{"lineNum":" 1581","line":"                                   (int)__iob.precision(), __v);"},
{"lineNum":" 1582","line":"    else"},
{"lineNum":" 1583","line":"        __nc = __libcpp_snprintf_l(__nb, __nbuf, _LIBCPP_GET_C_LOCALE, __fmt, __v);"},
{"lineNum":" 1584","line":"    unique_ptr<char, void(*)(void*)> __nbh(nullptr, free);"},
{"lineNum":" 1585","line":"    if (__nc > static_cast<int>(__nbuf-1))"},
{"lineNum":" 1586","line":"    {"},
{"lineNum":" 1587","line":"        if (__specify_precision)"},
{"lineNum":" 1588","line":"            __nc = __libcpp_asprintf_l(&__nb, _LIBCPP_GET_C_LOCALE, __fmt, (int)__iob.precision(), __v);"},
{"lineNum":" 1589","line":"        else"},
{"lineNum":" 1590","line":"            __nc = __libcpp_asprintf_l(&__nb, _LIBCPP_GET_C_LOCALE, __fmt, __v);"},
{"lineNum":" 1591","line":"        if (__nc == -1)"},
{"lineNum":" 1592","line":"            __throw_bad_alloc();"},
{"lineNum":" 1593","line":"        __nbh.reset(__nb);"},
{"lineNum":" 1594","line":"    }"},
{"lineNum":" 1595","line":"    char* __ne = __nb + __nc;"},
{"lineNum":" 1596","line":"    char* __np = this->__identify_padding(__nb, __ne, __iob);"},
{"lineNum":" 1597","line":"    // Stage 2 - Widen __nar while adding thousands separators"},
{"lineNum":" 1598","line":"    char_type __o[2*(__nbuf-1) - 1];"},
{"lineNum":" 1599","line":"    char_type* __ob = __o;"},
{"lineNum":" 1600","line":"    unique_ptr<char_type, void(*)(void*)> __obh(0, free);"},
{"lineNum":" 1601","line":"    if (__nb != __nar)"},
{"lineNum":" 1602","line":"    {"},
{"lineNum":" 1603","line":"        __ob = (char_type*)malloc(2*static_cast<size_t>(__nc)*sizeof(char_type));"},
{"lineNum":" 1604","line":"        if (__ob == 0)"},
{"lineNum":" 1605","line":"            __throw_bad_alloc();"},
{"lineNum":" 1606","line":"        __obh.reset(__ob);"},
{"lineNum":" 1607","line":"    }"},
{"lineNum":" 1608","line":"    char_type* __op;  // pad here"},
{"lineNum":" 1609","line":"    char_type* __oe;  // end of output"},
{"lineNum":" 1610","line":"    this->__widen_and_group_float(__nb, __np, __ne, __ob, __op, __oe, __iob.getloc());"},
{"lineNum":" 1611","line":"    // [__o, __oe) contains thousands_sep\'d wide number"},
{"lineNum":" 1612","line":"    // Stage 3 & 4"},
{"lineNum":" 1613","line":"    __s = __pad_and_output(__s, __ob, __op, __oe, __iob, __fl);"},
{"lineNum":" 1614","line":"    return __s;"},
{"lineNum":" 1615","line":"}"},
{"lineNum":" 1616","line":""},
{"lineNum":" 1617","line":"template <class _CharT, class _OutputIterator>"},
{"lineNum":" 1618","line":"_OutputIterator"},
{"lineNum":" 1619","line":"num_put<_CharT, _OutputIterator>::do_put(iter_type __s, ios_base& __iob,"},
{"lineNum":" 1620","line":"                                         char_type __fl, long double __v) const"},
{"lineNum":" 1621","line":"{"},
{"lineNum":" 1622","line":"    // Stage 1 - Get number in narrow char"},
{"lineNum":" 1623","line":"    char __fmt[8] = {\'%\', 0};"},
{"lineNum":" 1624","line":"    const char* __len = \"L\";"},
{"lineNum":" 1625","line":"    bool __specify_precision = this->__format_float(__fmt+1, __len, __iob.flags());"},
{"lineNum":" 1626","line":"    const unsigned __nbuf = 30;"},
{"lineNum":" 1627","line":"    char __nar[__nbuf];"},
{"lineNum":" 1628","line":"    char* __nb = __nar;"},
{"lineNum":" 1629","line":"    int __nc;"},
{"lineNum":" 1630","line":"    if (__specify_precision)"},
{"lineNum":" 1631","line":"        __nc = __libcpp_snprintf_l(__nb, __nbuf, _LIBCPP_GET_C_LOCALE, __fmt,"},
{"lineNum":" 1632","line":"                                   (int)__iob.precision(), __v);"},
{"lineNum":" 1633","line":"    else"},
{"lineNum":" 1634","line":"        __nc = __libcpp_snprintf_l(__nb, __nbuf, _LIBCPP_GET_C_LOCALE, __fmt, __v);"},
{"lineNum":" 1635","line":"    unique_ptr<char, void(*)(void*)> __nbh(nullptr, free);"},
{"lineNum":" 1636","line":"    if (__nc > static_cast<int>(__nbuf-1))"},
{"lineNum":" 1637","line":"    {"},
{"lineNum":" 1638","line":"        if (__specify_precision)"},
{"lineNum":" 1639","line":"            __nc = __libcpp_asprintf_l(&__nb, _LIBCPP_GET_C_LOCALE, __fmt, (int)__iob.precision(), __v);"},
{"lineNum":" 1640","line":"        else"},
{"lineNum":" 1641","line":"            __nc = __libcpp_asprintf_l(&__nb, _LIBCPP_GET_C_LOCALE, __fmt, __v);"},
{"lineNum":" 1642","line":"        if (__nc == -1)"},
{"lineNum":" 1643","line":"            __throw_bad_alloc();"},
{"lineNum":" 1644","line":"        __nbh.reset(__nb);"},
{"lineNum":" 1645","line":"    }"},
{"lineNum":" 1646","line":"    char* __ne = __nb + __nc;"},
{"lineNum":" 1647","line":"    char* __np = this->__identify_padding(__nb, __ne, __iob);"},
{"lineNum":" 1648","line":"    // Stage 2 - Widen __nar while adding thousands separators"},
{"lineNum":" 1649","line":"    char_type __o[2*(__nbuf-1) - 1];"},
{"lineNum":" 1650","line":"    char_type* __ob = __o;"},
{"lineNum":" 1651","line":"    unique_ptr<char_type, void(*)(void*)> __obh(0, free);"},
{"lineNum":" 1652","line":"    if (__nb != __nar)"},
{"lineNum":" 1653","line":"    {"},
{"lineNum":" 1654","line":"        __ob = (char_type*)malloc(2*static_cast<size_t>(__nc)*sizeof(char_type));"},
{"lineNum":" 1655","line":"        if (__ob == 0)"},
{"lineNum":" 1656","line":"            __throw_bad_alloc();"},
{"lineNum":" 1657","line":"        __obh.reset(__ob);"},
{"lineNum":" 1658","line":"    }"},
{"lineNum":" 1659","line":"    char_type* __op;  // pad here"},
{"lineNum":" 1660","line":"    char_type* __oe;  // end of output"},
{"lineNum":" 1661","line":"    this->__widen_and_group_float(__nb, __np, __ne, __ob, __op, __oe, __iob.getloc());"},
{"lineNum":" 1662","line":"    // [__o, __oe) contains thousands_sep\'d wide number"},
{"lineNum":" 1663","line":"    // Stage 3 & 4"},
{"lineNum":" 1664","line":"    __s = __pad_and_output(__s, __ob, __op, __oe, __iob, __fl);"},
{"lineNum":" 1665","line":"    return __s;"},
{"lineNum":" 1666","line":"}"},
{"lineNum":" 1667","line":""},
{"lineNum":" 1668","line":"template <class _CharT, class _OutputIterator>"},
{"lineNum":" 1669","line":"_OutputIterator"},
{"lineNum":" 1670","line":"num_put<_CharT, _OutputIterator>::do_put(iter_type __s, ios_base& __iob,"},
{"lineNum":" 1671","line":"                                         char_type __fl, const void* __v) const"},
{"lineNum":" 1672","line":"{"},
{"lineNum":" 1673","line":"    // Stage 1 - Get pointer in narrow char"},
{"lineNum":" 1674","line":"    char __fmt[6] = \"%p\";"},
{"lineNum":" 1675","line":"    const unsigned __nbuf = 20;"},
{"lineNum":" 1676","line":"    char __nar[__nbuf];"},
{"lineNum":" 1677","line":"    int __nc = __libcpp_snprintf_l(__nar, sizeof(__nar), _LIBCPP_GET_C_LOCALE, __fmt, __v);"},
{"lineNum":" 1678","line":"    char* __ne = __nar + __nc;"},
{"lineNum":" 1679","line":"    char* __np = this->__identify_padding(__nar, __ne, __iob);"},
{"lineNum":" 1680","line":"    // Stage 2 - Widen __nar"},
{"lineNum":" 1681","line":"    char_type __o[2*(__nbuf-1) - 1];"},
{"lineNum":" 1682","line":"    char_type* __op;  // pad here"},
{"lineNum":" 1683","line":"    char_type* __oe;  // end of output"},
{"lineNum":" 1684","line":"    const ctype<char_type>& __ct = use_facet<ctype<char_type> >(__iob.getloc());"},
{"lineNum":" 1685","line":"    __ct.widen(__nar, __ne, __o);"},
{"lineNum":" 1686","line":"    __oe = __o + (__ne - __nar);"},
{"lineNum":" 1687","line":"    if (__np == __ne)"},
{"lineNum":" 1688","line":"        __op = __oe;"},
{"lineNum":" 1689","line":"    else"},
{"lineNum":" 1690","line":"        __op = __o + (__np - __nar);"},
{"lineNum":" 1691","line":"    // [__o, __oe) contains wide number"},
{"lineNum":" 1692","line":"    // Stage 3 & 4"},
{"lineNum":" 1693","line":"    return __pad_and_output(__s, __o, __op, __oe, __iob, __fl);"},
{"lineNum":" 1694","line":"}"},
{"lineNum":" 1695","line":""},
{"lineNum":" 1696","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS num_put<char>)"},
{"lineNum":" 1697","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS num_put<wchar_t>)"},
{"lineNum":" 1698","line":""},
{"lineNum":" 1699","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":" 1700","line":"_LIBCPP_HIDDEN"},
{"lineNum":" 1701","line":"int"},
{"lineNum":" 1702","line":"__get_up_to_n_digits(_InputIterator& __b, _InputIterator __e,"},
{"lineNum":" 1703","line":"                     ios_base::iostate& __err, const ctype<_CharT>& __ct, int __n)"},
{"lineNum":" 1704","line":"{"},
{"lineNum":" 1705","line":"    // Precondition:  __n >= 1"},
{"lineNum":" 1706","line":"    if (__b == __e)"},
{"lineNum":" 1707","line":"    {"},
{"lineNum":" 1708","line":"        __err |= ios_base::eofbit | ios_base::failbit;"},
{"lineNum":" 1709","line":"        return 0;"},
{"lineNum":" 1710","line":"    }"},
{"lineNum":" 1711","line":"    // get first digit"},
{"lineNum":" 1712","line":"    _CharT __c = *__b;"},
{"lineNum":" 1713","line":"    if (!__ct.is(ctype_base::digit, __c))"},
{"lineNum":" 1714","line":"    {"},
{"lineNum":" 1715","line":"        __err |= ios_base::failbit;"},
{"lineNum":" 1716","line":"        return 0;"},
{"lineNum":" 1717","line":"    }"},
{"lineNum":" 1718","line":"    int __r = __ct.narrow(__c, 0) - \'0\';"},
{"lineNum":" 1719","line":"    for (++__b, (void) --__n; __b != __e && __n > 0; ++__b, (void) --__n)"},
{"lineNum":" 1720","line":"    {"},
{"lineNum":" 1721","line":"        // get next digit"},
{"lineNum":" 1722","line":"        __c = *__b;"},
{"lineNum":" 1723","line":"        if (!__ct.is(ctype_base::digit, __c))"},
{"lineNum":" 1724","line":"            return __r;"},
{"lineNum":" 1725","line":"        __r = __r * 10 + __ct.narrow(__c, 0) - \'0\';"},
{"lineNum":" 1726","line":"    }"},
{"lineNum":" 1727","line":"    if (__b == __e)"},
{"lineNum":" 1728","line":"        __err |= ios_base::eofbit;"},
{"lineNum":" 1729","line":"    return __r;"},
{"lineNum":" 1730","line":"}"},
{"lineNum":" 1731","line":""},
{"lineNum":" 1732","line":"class _LIBCPP_TYPE_VIS time_base"},
{"lineNum":" 1733","line":"{"},
{"lineNum":" 1734","line":"public:"},
{"lineNum":" 1735","line":"    enum dateorder {no_order, dmy, mdy, ymd, ydm};"},
{"lineNum":" 1736","line":"};"},
{"lineNum":" 1737","line":""},
{"lineNum":" 1738","line":"template <class _CharT>"},
{"lineNum":" 1739","line":"class _LIBCPP_TEMPLATE_VIS __time_get_c_storage"},
{"lineNum":" 1740","line":"{"},
{"lineNum":" 1741","line":"protected:"},
{"lineNum":" 1742","line":"    typedef basic_string<_CharT> string_type;"},
{"lineNum":" 1743","line":""},
{"lineNum":" 1744","line":"    virtual const string_type* __weeks() const;"},
{"lineNum":" 1745","line":"    virtual const string_type* __months() const;"},
{"lineNum":" 1746","line":"    virtual const string_type* __am_pm() const;"},
{"lineNum":" 1747","line":"    virtual const string_type& __c() const;"},
{"lineNum":" 1748","line":"    virtual const string_type& __r() const;"},
{"lineNum":" 1749","line":"    virtual const string_type& __x() const;"},
{"lineNum":" 1750","line":"    virtual const string_type& __X() const;"},
{"lineNum":" 1751","line":""},
{"lineNum":" 1752","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1753","line":"    ~__time_get_c_storage() {}"},
{"lineNum":" 1754","line":"};"},
{"lineNum":" 1755","line":""},
{"lineNum":" 1756","line":"template <> _LIBCPP_FUNC_VIS const string* __time_get_c_storage<char>::__weeks() const;"},
{"lineNum":" 1757","line":"template <> _LIBCPP_FUNC_VIS const string* __time_get_c_storage<char>::__months() const;"},
{"lineNum":" 1758","line":"template <> _LIBCPP_FUNC_VIS const string* __time_get_c_storage<char>::__am_pm() const;"},
{"lineNum":" 1759","line":"template <> _LIBCPP_FUNC_VIS const string& __time_get_c_storage<char>::__c() const;"},
{"lineNum":" 1760","line":"template <> _LIBCPP_FUNC_VIS const string& __time_get_c_storage<char>::__r() const;"},
{"lineNum":" 1761","line":"template <> _LIBCPP_FUNC_VIS const string& __time_get_c_storage<char>::__x() const;"},
{"lineNum":" 1762","line":"template <> _LIBCPP_FUNC_VIS const string& __time_get_c_storage<char>::__X() const;"},
{"lineNum":" 1763","line":""},
{"lineNum":" 1764","line":"template <> _LIBCPP_FUNC_VIS const wstring* __time_get_c_storage<wchar_t>::__weeks() const;"},
{"lineNum":" 1765","line":"template <> _LIBCPP_FUNC_VIS const wstring* __time_get_c_storage<wchar_t>::__months() const;"},
{"lineNum":" 1766","line":"template <> _LIBCPP_FUNC_VIS const wstring* __time_get_c_storage<wchar_t>::__am_pm() const;"},
{"lineNum":" 1767","line":"template <> _LIBCPP_FUNC_VIS const wstring& __time_get_c_storage<wchar_t>::__c() const;"},
{"lineNum":" 1768","line":"template <> _LIBCPP_FUNC_VIS const wstring& __time_get_c_storage<wchar_t>::__r() const;"},
{"lineNum":" 1769","line":"template <> _LIBCPP_FUNC_VIS const wstring& __time_get_c_storage<wchar_t>::__x() const;"},
{"lineNum":" 1770","line":"template <> _LIBCPP_FUNC_VIS const wstring& __time_get_c_storage<wchar_t>::__X() const;"},
{"lineNum":" 1771","line":""},
{"lineNum":" 1772","line":"template <class _CharT, class _InputIterator = istreambuf_iterator<_CharT> >"},
{"lineNum":" 1773","line":"class _LIBCPP_TEMPLATE_VIS time_get"},
{"lineNum":" 1774","line":"    : public locale::facet,"},
{"lineNum":" 1775","line":"      public time_base,"},
{"lineNum":" 1776","line":"      private __time_get_c_storage<_CharT>"},
{"lineNum":" 1777","line":"{"},
{"lineNum":" 1778","line":"public:"},
{"lineNum":" 1779","line":"    typedef _CharT                  char_type;"},
{"lineNum":" 1780","line":"    typedef _InputIterator          iter_type;"},
{"lineNum":" 1781","line":"    typedef time_base::dateorder    dateorder;"},
{"lineNum":" 1782","line":"    typedef basic_string<char_type> string_type;"},
{"lineNum":" 1783","line":""},
{"lineNum":" 1784","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1785","line":"    explicit time_get(size_t __refs = 0)"},
{"lineNum":" 1786","line":"        : locale::facet(__refs) {}"},
{"lineNum":" 1787","line":""},
{"lineNum":" 1788","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1789","line":"    dateorder date_order() const"},
{"lineNum":" 1790","line":"    {"},
{"lineNum":" 1791","line":"        return this->do_date_order();"},
{"lineNum":" 1792","line":"    }"},
{"lineNum":" 1793","line":""},
{"lineNum":" 1794","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1795","line":"    iter_type get_time(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":" 1796","line":"                       ios_base::iostate& __err, tm* __tm) const"},
{"lineNum":" 1797","line":"    {"},
{"lineNum":" 1798","line":"        return do_get_time(__b, __e, __iob, __err, __tm);"},
{"lineNum":" 1799","line":"    }"},
{"lineNum":" 1800","line":""},
{"lineNum":" 1801","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1802","line":"    iter_type get_date(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":" 1803","line":"                       ios_base::iostate& __err, tm* __tm) const"},
{"lineNum":" 1804","line":"    {"},
{"lineNum":" 1805","line":"        return do_get_date(__b, __e, __iob, __err, __tm);"},
{"lineNum":" 1806","line":"    }"},
{"lineNum":" 1807","line":""},
{"lineNum":" 1808","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1809","line":"    iter_type get_weekday(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":" 1810","line":"                          ios_base::iostate& __err, tm* __tm) const"},
{"lineNum":" 1811","line":"    {"},
{"lineNum":" 1812","line":"        return do_get_weekday(__b, __e, __iob, __err, __tm);"},
{"lineNum":" 1813","line":"    }"},
{"lineNum":" 1814","line":""},
{"lineNum":" 1815","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1816","line":"    iter_type get_monthname(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":" 1817","line":"                            ios_base::iostate& __err, tm* __tm) const"},
{"lineNum":" 1818","line":"    {"},
{"lineNum":" 1819","line":"        return do_get_monthname(__b, __e, __iob, __err, __tm);"},
{"lineNum":" 1820","line":"    }"},
{"lineNum":" 1821","line":""},
{"lineNum":" 1822","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1823","line":"    iter_type get_year(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":" 1824","line":"                       ios_base::iostate& __err, tm* __tm) const"},
{"lineNum":" 1825","line":"    {"},
{"lineNum":" 1826","line":"        return do_get_year(__b, __e, __iob, __err, __tm);"},
{"lineNum":" 1827","line":"    }"},
{"lineNum":" 1828","line":""},
{"lineNum":" 1829","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1830","line":"    iter_type get(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":" 1831","line":"                  ios_base::iostate& __err, tm *__tm,"},
{"lineNum":" 1832","line":"                  char __fmt, char __mod = 0) const"},
{"lineNum":" 1833","line":"    {"},
{"lineNum":" 1834","line":"        return do_get(__b, __e, __iob, __err, __tm, __fmt, __mod);"},
{"lineNum":" 1835","line":"    }"},
{"lineNum":" 1836","line":""},
{"lineNum":" 1837","line":"    iter_type get(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":" 1838","line":"                  ios_base::iostate& __err, tm* __tm,"},
{"lineNum":" 1839","line":"                  const char_type* __fmtb, const char_type* __fmte) const;"},
{"lineNum":" 1840","line":""},
{"lineNum":" 1841","line":"    static locale::id id;"},
{"lineNum":" 1842","line":""},
{"lineNum":" 1843","line":"protected:"},
{"lineNum":" 1844","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1845","line":"    ~time_get() {}"},
{"lineNum":" 1846","line":""},
{"lineNum":" 1847","line":"    virtual dateorder do_date_order() const;"},
{"lineNum":" 1848","line":"    virtual iter_type do_get_time(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":" 1849","line":"                                  ios_base::iostate& __err, tm* __tm) const;"},
{"lineNum":" 1850","line":"    virtual iter_type do_get_date(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":" 1851","line":"                                  ios_base::iostate& __err, tm* __tm) const;"},
{"lineNum":" 1852","line":"    virtual iter_type do_get_weekday(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":" 1853","line":"                                     ios_base::iostate& __err, tm* __tm) const;"},
{"lineNum":" 1854","line":"    virtual iter_type do_get_monthname(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":" 1855","line":"                                       ios_base::iostate& __err, tm* __tm) const;"},
{"lineNum":" 1856","line":"    virtual iter_type do_get_year(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":" 1857","line":"                                  ios_base::iostate& __err, tm* __tm) const;"},
{"lineNum":" 1858","line":"    virtual iter_type do_get(iter_type __b, iter_type __e, ios_base& __iob,"},
{"lineNum":" 1859","line":"                             ios_base::iostate& __err, tm* __tm,"},
{"lineNum":" 1860","line":"                             char __fmt, char __mod) const;"},
{"lineNum":" 1861","line":"private:"},
{"lineNum":" 1862","line":"    void __get_white_space(iter_type& __b, iter_type __e,"},
{"lineNum":" 1863","line":"                           ios_base::iostate& __err, const ctype<char_type>& __ct) const;"},
{"lineNum":" 1864","line":"    void __get_percent(iter_type& __b, iter_type __e, ios_base::iostate& __err,"},
{"lineNum":" 1865","line":"                       const ctype<char_type>& __ct) const;"},
{"lineNum":" 1866","line":""},
{"lineNum":" 1867","line":"    void __get_weekdayname(int& __m,"},
{"lineNum":" 1868","line":"                           iter_type& __b, iter_type __e,"},
{"lineNum":" 1869","line":"                           ios_base::iostate& __err,"},
{"lineNum":" 1870","line":"                           const ctype<char_type>& __ct) const;"},
{"lineNum":" 1871","line":"    void __get_monthname(int& __m,"},
{"lineNum":" 1872","line":"                         iter_type& __b, iter_type __e,"},
{"lineNum":" 1873","line":"                         ios_base::iostate& __err,"},
{"lineNum":" 1874","line":"                         const ctype<char_type>& __ct) const;"},
{"lineNum":" 1875","line":"    void __get_day(int& __d,"},
{"lineNum":" 1876","line":"                   iter_type& __b, iter_type __e,"},
{"lineNum":" 1877","line":"                   ios_base::iostate& __err,"},
{"lineNum":" 1878","line":"                   const ctype<char_type>& __ct) const;"},
{"lineNum":" 1879","line":"    void __get_month(int& __m,"},
{"lineNum":" 1880","line":"                     iter_type& __b, iter_type __e,"},
{"lineNum":" 1881","line":"                     ios_base::iostate& __err,"},
{"lineNum":" 1882","line":"                     const ctype<char_type>& __ct) const;"},
{"lineNum":" 1883","line":"    void __get_year(int& __y,"},
{"lineNum":" 1884","line":"                   iter_type& __b, iter_type __e,"},
{"lineNum":" 1885","line":"                   ios_base::iostate& __err,"},
{"lineNum":" 1886","line":"                   const ctype<char_type>& __ct) const;"},
{"lineNum":" 1887","line":"    void __get_year4(int& __y,"},
{"lineNum":" 1888","line":"                    iter_type& __b, iter_type __e,"},
{"lineNum":" 1889","line":"                    ios_base::iostate& __err,"},
{"lineNum":" 1890","line":"                    const ctype<char_type>& __ct) const;"},
{"lineNum":" 1891","line":"    void __get_hour(int& __d,"},
{"lineNum":" 1892","line":"                    iter_type& __b, iter_type __e,"},
{"lineNum":" 1893","line":"                    ios_base::iostate& __err,"},
{"lineNum":" 1894","line":"                    const ctype<char_type>& __ct) const;"},
{"lineNum":" 1895","line":"    void __get_12_hour(int& __h,"},
{"lineNum":" 1896","line":"                       iter_type& __b, iter_type __e,"},
{"lineNum":" 1897","line":"                       ios_base::iostate& __err,"},
{"lineNum":" 1898","line":"                       const ctype<char_type>& __ct) const;"},
{"lineNum":" 1899","line":"    void __get_am_pm(int& __h,"},
{"lineNum":" 1900","line":"                     iter_type& __b, iter_type __e,"},
{"lineNum":" 1901","line":"                     ios_base::iostate& __err,"},
{"lineNum":" 1902","line":"                     const ctype<char_type>& __ct) const;"},
{"lineNum":" 1903","line":"    void __get_minute(int& __m,"},
{"lineNum":" 1904","line":"                      iter_type& __b, iter_type __e,"},
{"lineNum":" 1905","line":"                      ios_base::iostate& __err,"},
{"lineNum":" 1906","line":"                      const ctype<char_type>& __ct) const;"},
{"lineNum":" 1907","line":"    void __get_second(int& __s,"},
{"lineNum":" 1908","line":"                      iter_type& __b, iter_type __e,"},
{"lineNum":" 1909","line":"                      ios_base::iostate& __err,"},
{"lineNum":" 1910","line":"                      const ctype<char_type>& __ct) const;"},
{"lineNum":" 1911","line":"    void __get_weekday(int& __w,"},
{"lineNum":" 1912","line":"                       iter_type& __b, iter_type __e,"},
{"lineNum":" 1913","line":"                       ios_base::iostate& __err,"},
{"lineNum":" 1914","line":"                       const ctype<char_type>& __ct) const;"},
{"lineNum":" 1915","line":"    void __get_day_year_num(int& __w,"},
{"lineNum":" 1916","line":"                            iter_type& __b, iter_type __e,"},
{"lineNum":" 1917","line":"                            ios_base::iostate& __err,"},
{"lineNum":" 1918","line":"                            const ctype<char_type>& __ct) const;"},
{"lineNum":" 1919","line":"};"},
{"lineNum":" 1920","line":""},
{"lineNum":" 1921","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":" 1922","line":"locale::id"},
{"lineNum":" 1923","line":"time_get<_CharT, _InputIterator>::id;"},
{"lineNum":" 1924","line":""},
{"lineNum":" 1925","line":"// time_get primitives"},
{"lineNum":" 1926","line":""},
{"lineNum":" 1927","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":" 1928","line":"void"},
{"lineNum":" 1929","line":"time_get<_CharT, _InputIterator>::__get_weekdayname(int& __w,"},
{"lineNum":" 1930","line":"                                                    iter_type& __b, iter_type __e,"},
{"lineNum":" 1931","line":"                                                    ios_base::iostate& __err,"},
{"lineNum":" 1932","line":"                                                    const ctype<char_type>& __ct) const"},
{"lineNum":" 1933","line":"{"},
{"lineNum":" 1934","line":"    // Note:  ignoring case comes from the POSIX strptime spec"},
{"lineNum":" 1935","line":"    const string_type* __wk = this->__weeks();"},
{"lineNum":" 1936","line":"    ptrdiff_t __i = _VSTD::__scan_keyword(__b, __e, __wk, __wk+14, __ct, __err, false) - __wk;"},
{"lineNum":" 1937","line":"    if (__i < 14)"},
{"lineNum":" 1938","line":"        __w = __i % 7;"},
{"lineNum":" 1939","line":"}"},
{"lineNum":" 1940","line":""},
{"lineNum":" 1941","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":" 1942","line":"void"},
{"lineNum":" 1943","line":"time_get<_CharT, _InputIterator>::__get_monthname(int& __m,"},
{"lineNum":" 1944","line":"                                                  iter_type& __b, iter_type __e,"},
{"lineNum":" 1945","line":"                                                  ios_base::iostate& __err,"},
{"lineNum":" 1946","line":"                                                  const ctype<char_type>& __ct) const"},
{"lineNum":" 1947","line":"{"},
{"lineNum":" 1948","line":"    // Note:  ignoring case comes from the POSIX strptime spec"},
{"lineNum":" 1949","line":"    const string_type* __month = this->__months();"},
{"lineNum":" 1950","line":"    ptrdiff_t __i = _VSTD::__scan_keyword(__b, __e, __month, __month+24, __ct, __err, false) - __month;"},
{"lineNum":" 1951","line":"    if (__i < 24)"},
{"lineNum":" 1952","line":"        __m = __i % 12;"},
{"lineNum":" 1953","line":"}"},
{"lineNum":" 1954","line":""},
{"lineNum":" 1955","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":" 1956","line":"void"},
{"lineNum":" 1957","line":"time_get<_CharT, _InputIterator>::__get_day(int& __d,"},
{"lineNum":" 1958","line":"                                            iter_type& __b, iter_type __e,"},
{"lineNum":" 1959","line":"                                            ios_base::iostate& __err,"},
{"lineNum":" 1960","line":"                                            const ctype<char_type>& __ct) const"},
{"lineNum":" 1961","line":"{"},
{"lineNum":" 1962","line":"    int __t = _VSTD::__get_up_to_n_digits(__b, __e, __err, __ct, 2);"},
{"lineNum":" 1963","line":"    if (!(__err & ios_base::failbit) && 1 <= __t && __t <= 31)"},
{"lineNum":" 1964","line":"        __d = __t;"},
{"lineNum":" 1965","line":"    else"},
{"lineNum":" 1966","line":"        __err |= ios_base::failbit;"},
{"lineNum":" 1967","line":"}"},
{"lineNum":" 1968","line":""},
{"lineNum":" 1969","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":" 1970","line":"void"},
{"lineNum":" 1971","line":"time_get<_CharT, _InputIterator>::__get_month(int& __m,"},
{"lineNum":" 1972","line":"                                              iter_type& __b, iter_type __e,"},
{"lineNum":" 1973","line":"                                              ios_base::iostate& __err,"},
{"lineNum":" 1974","line":"                                              const ctype<char_type>& __ct) const"},
{"lineNum":" 1975","line":"{"},
{"lineNum":" 1976","line":"    int __t = __get_up_to_n_digits(__b, __e, __err, __ct, 2) - 1;"},
{"lineNum":" 1977","line":"    if (!(__err & ios_base::failbit) && __t <= 11)"},
{"lineNum":" 1978","line":"        __m = __t;"},
{"lineNum":" 1979","line":"    else"},
{"lineNum":" 1980","line":"        __err |= ios_base::failbit;"},
{"lineNum":" 1981","line":"}"},
{"lineNum":" 1982","line":""},
{"lineNum":" 1983","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":" 1984","line":"void"},
{"lineNum":" 1985","line":"time_get<_CharT, _InputIterator>::__get_year(int& __y,"},
{"lineNum":" 1986","line":"                                             iter_type& __b, iter_type __e,"},
{"lineNum":" 1987","line":"                                             ios_base::iostate& __err,"},
{"lineNum":" 1988","line":"                                             const ctype<char_type>& __ct) const"},
{"lineNum":" 1989","line":"{"},
{"lineNum":" 1990","line":"    int __t = __get_up_to_n_digits(__b, __e, __err, __ct, 4);"},
{"lineNum":" 1991","line":"    if (!(__err & ios_base::failbit))"},
{"lineNum":" 1992","line":"    {"},
{"lineNum":" 1993","line":"        if (__t < 69)"},
{"lineNum":" 1994","line":"            __t += 2000;"},
{"lineNum":" 1995","line":"        else if (69 <= __t && __t <= 99)"},
{"lineNum":" 1996","line":"            __t += 1900;"},
{"lineNum":" 1997","line":"        __y = __t - 1900;"},
{"lineNum":" 1998","line":"    }"},
{"lineNum":" 1999","line":"}"},
{"lineNum":" 2000","line":""},
{"lineNum":" 2001","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":" 2002","line":"void"},
{"lineNum":" 2003","line":"time_get<_CharT, _InputIterator>::__get_year4(int& __y,"},
{"lineNum":" 2004","line":"                                              iter_type& __b, iter_type __e,"},
{"lineNum":" 2005","line":"                                              ios_base::iostate& __err,"},
{"lineNum":" 2006","line":"                                              const ctype<char_type>& __ct) const"},
{"lineNum":" 2007","line":"{"},
{"lineNum":" 2008","line":"    int __t = __get_up_to_n_digits(__b, __e, __err, __ct, 4);"},
{"lineNum":" 2009","line":"    if (!(__err & ios_base::failbit))"},
{"lineNum":" 2010","line":"        __y = __t - 1900;"},
{"lineNum":" 2011","line":"}"},
{"lineNum":" 2012","line":""},
{"lineNum":" 2013","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":" 2014","line":"void"},
{"lineNum":" 2015","line":"time_get<_CharT, _InputIterator>::__get_hour(int& __h,"},
{"lineNum":" 2016","line":"                                             iter_type& __b, iter_type __e,"},
{"lineNum":" 2017","line":"                                             ios_base::iostate& __err,"},
{"lineNum":" 2018","line":"                                             const ctype<char_type>& __ct) const"},
{"lineNum":" 2019","line":"{"},
{"lineNum":" 2020","line":"    int __t = __get_up_to_n_digits(__b, __e, __err, __ct, 2);"},
{"lineNum":" 2021","line":"    if (!(__err & ios_base::failbit) && __t <= 23)"},
{"lineNum":" 2022","line":"        __h = __t;"},
{"lineNum":" 2023","line":"    else"},
{"lineNum":" 2024","line":"        __err |= ios_base::failbit;"},
{"lineNum":" 2025","line":"}"},
{"lineNum":" 2026","line":""},
{"lineNum":" 2027","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":" 2028","line":"void"},
{"lineNum":" 2029","line":"time_get<_CharT, _InputIterator>::__get_12_hour(int& __h,"},
{"lineNum":" 2030","line":"                                                iter_type& __b, iter_type __e,"},
{"lineNum":" 2031","line":"                                                ios_base::iostate& __err,"},
{"lineNum":" 2032","line":"                                                const ctype<char_type>& __ct) const"},
{"lineNum":" 2033","line":"{"},
{"lineNum":" 2034","line":"    int __t = __get_up_to_n_digits(__b, __e, __err, __ct, 2);"},
{"lineNum":" 2035","line":"    if (!(__err & ios_base::failbit) && 1 <= __t && __t <= 12)"},
{"lineNum":" 2036","line":"        __h = __t;"},
{"lineNum":" 2037","line":"    else"},
{"lineNum":" 2038","line":"        __err |= ios_base::failbit;"},
{"lineNum":" 2039","line":"}"},
{"lineNum":" 2040","line":""},
{"lineNum":" 2041","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":" 2042","line":"void"},
{"lineNum":" 2043","line":"time_get<_CharT, _InputIterator>::__get_minute(int& __m,"},
{"lineNum":" 2044","line":"                                               iter_type& __b, iter_type __e,"},
{"lineNum":" 2045","line":"                                               ios_base::iostate& __err,"},
{"lineNum":" 2046","line":"                                               const ctype<char_type>& __ct) const"},
{"lineNum":" 2047","line":"{"},
{"lineNum":" 2048","line":"    int __t = __get_up_to_n_digits(__b, __e, __err, __ct, 2);"},
{"lineNum":" 2049","line":"    if (!(__err & ios_base::failbit) && __t <= 59)"},
{"lineNum":" 2050","line":"        __m = __t;"},
{"lineNum":" 2051","line":"    else"},
{"lineNum":" 2052","line":"        __err |= ios_base::failbit;"},
{"lineNum":" 2053","line":"}"},
{"lineNum":" 2054","line":""},
{"lineNum":" 2055","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":" 2056","line":"void"},
{"lineNum":" 2057","line":"time_get<_CharT, _InputIterator>::__get_second(int& __s,"},
{"lineNum":" 2058","line":"                                               iter_type& __b, iter_type __e,"},
{"lineNum":" 2059","line":"                                               ios_base::iostate& __err,"},
{"lineNum":" 2060","line":"                                               const ctype<char_type>& __ct) const"},
{"lineNum":" 2061","line":"{"},
{"lineNum":" 2062","line":"    int __t = __get_up_to_n_digits(__b, __e, __err, __ct, 2);"},
{"lineNum":" 2063","line":"    if (!(__err & ios_base::failbit) && __t <= 60)"},
{"lineNum":" 2064","line":"        __s = __t;"},
{"lineNum":" 2065","line":"    else"},
{"lineNum":" 2066","line":"        __err |= ios_base::failbit;"},
{"lineNum":" 2067","line":"}"},
{"lineNum":" 2068","line":""},
{"lineNum":" 2069","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":" 2070","line":"void"},
{"lineNum":" 2071","line":"time_get<_CharT, _InputIterator>::__get_weekday(int& __w,"},
{"lineNum":" 2072","line":"                                                iter_type& __b, iter_type __e,"},
{"lineNum":" 2073","line":"                                                ios_base::iostate& __err,"},
{"lineNum":" 2074","line":"                                                const ctype<char_type>& __ct) const"},
{"lineNum":" 2075","line":"{"},
{"lineNum":" 2076","line":"    int __t = __get_up_to_n_digits(__b, __e, __err, __ct, 1);"},
{"lineNum":" 2077","line":"    if (!(__err & ios_base::failbit) && __t <= 6)"},
{"lineNum":" 2078","line":"        __w = __t;"},
{"lineNum":" 2079","line":"    else"},
{"lineNum":" 2080","line":"        __err |= ios_base::failbit;"},
{"lineNum":" 2081","line":"}"},
{"lineNum":" 2082","line":""},
{"lineNum":" 2083","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":" 2084","line":"void"},
{"lineNum":" 2085","line":"time_get<_CharT, _InputIterator>::__get_day_year_num(int& __d,"},
{"lineNum":" 2086","line":"                                                     iter_type& __b, iter_type __e,"},
{"lineNum":" 2087","line":"                                                     ios_base::iostate& __err,"},
{"lineNum":" 2088","line":"                                                     const ctype<char_type>& __ct) const"},
{"lineNum":" 2089","line":"{"},
{"lineNum":" 2090","line":"    int __t = __get_up_to_n_digits(__b, __e, __err, __ct, 3);"},
{"lineNum":" 2091","line":"    if (!(__err & ios_base::failbit) && __t <= 365)"},
{"lineNum":" 2092","line":"        __d = __t;"},
{"lineNum":" 2093","line":"    else"},
{"lineNum":" 2094","line":"        __err |= ios_base::failbit;"},
{"lineNum":" 2095","line":"}"},
{"lineNum":" 2096","line":""},
{"lineNum":" 2097","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":" 2098","line":"void"},
{"lineNum":" 2099","line":"time_get<_CharT, _InputIterator>::__get_white_space(iter_type& __b, iter_type __e,"},
{"lineNum":" 2100","line":"                                                    ios_base::iostate& __err,"},
{"lineNum":" 2101","line":"                                                    const ctype<char_type>& __ct) const"},
{"lineNum":" 2102","line":"{"},
{"lineNum":" 2103","line":"    for (; __b != __e && __ct.is(ctype_base::space, *__b); ++__b)"},
{"lineNum":" 2104","line":"        ;"},
{"lineNum":" 2105","line":"    if (__b == __e)"},
{"lineNum":" 2106","line":"        __err |= ios_base::eofbit;"},
{"lineNum":" 2107","line":"}"},
{"lineNum":" 2108","line":""},
{"lineNum":" 2109","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":" 2110","line":"void"},
{"lineNum":" 2111","line":"time_get<_CharT, _InputIterator>::__get_am_pm(int& __h,"},
{"lineNum":" 2112","line":"                                              iter_type& __b, iter_type __e,"},
{"lineNum":" 2113","line":"                                              ios_base::iostate& __err,"},
{"lineNum":" 2114","line":"                                              const ctype<char_type>& __ct) const"},
{"lineNum":" 2115","line":"{"},
{"lineNum":" 2116","line":"    const string_type* __ap = this->__am_pm();"},
{"lineNum":" 2117","line":"    if (__ap[0].size() + __ap[1].size() == 0)"},
{"lineNum":" 2118","line":"    {"},
{"lineNum":" 2119","line":"        __err |= ios_base::failbit;"},
{"lineNum":" 2120","line":"        return;"},
{"lineNum":" 2121","line":"    }"},
{"lineNum":" 2122","line":"    ptrdiff_t __i = _VSTD::__scan_keyword(__b, __e, __ap, __ap+2, __ct, __err, false) - __ap;"},
{"lineNum":" 2123","line":"    if (__i == 0 && __h == 12)"},
{"lineNum":" 2124","line":"        __h = 0;"},
{"lineNum":" 2125","line":"    else if (__i == 1 && __h < 12)"},
{"lineNum":" 2126","line":"        __h += 12;"},
{"lineNum":" 2127","line":"}"},
{"lineNum":" 2128","line":""},
{"lineNum":" 2129","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":" 2130","line":"void"},
{"lineNum":" 2131","line":"time_get<_CharT, _InputIterator>::__get_percent(iter_type& __b, iter_type __e,"},
{"lineNum":" 2132","line":"                                                ios_base::iostate& __err,"},
{"lineNum":" 2133","line":"                                                const ctype<char_type>& __ct) const"},
{"lineNum":" 2134","line":"{"},
{"lineNum":" 2135","line":"    if (__b == __e)"},
{"lineNum":" 2136","line":"    {"},
{"lineNum":" 2137","line":"        __err |= ios_base::eofbit | ios_base::failbit;"},
{"lineNum":" 2138","line":"        return;"},
{"lineNum":" 2139","line":"    }"},
{"lineNum":" 2140","line":"    if (__ct.narrow(*__b, 0) != \'%\')"},
{"lineNum":" 2141","line":"        __err |= ios_base::failbit;"},
{"lineNum":" 2142","line":"    else if(++__b == __e)"},
{"lineNum":" 2143","line":"        __err |= ios_base::eofbit;"},
{"lineNum":" 2144","line":"}"},
{"lineNum":" 2145","line":""},
{"lineNum":" 2146","line":"// time_get end primitives"},
{"lineNum":" 2147","line":""},
{"lineNum":" 2148","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":" 2149","line":"_InputIterator"},
{"lineNum":" 2150","line":"time_get<_CharT, _InputIterator>::get(iter_type __b, iter_type __e,"},
{"lineNum":" 2151","line":"                                      ios_base& __iob,"},
{"lineNum":" 2152","line":"                                      ios_base::iostate& __err, tm* __tm,"},
{"lineNum":" 2153","line":"                                      const char_type* __fmtb, const char_type* __fmte) const"},
{"lineNum":" 2154","line":"{"},
{"lineNum":" 2155","line":"    const ctype<char_type>& __ct = use_facet<ctype<char_type> >(__iob.getloc());"},
{"lineNum":" 2156","line":"    __err = ios_base::goodbit;"},
{"lineNum":" 2157","line":"    while (__fmtb != __fmte && __err == ios_base::goodbit)"},
{"lineNum":" 2158","line":"    {"},
{"lineNum":" 2159","line":"        if (__b == __e)"},
{"lineNum":" 2160","line":"        {"},
{"lineNum":" 2161","line":"            __err = ios_base::failbit;"},
{"lineNum":" 2162","line":"            break;"},
{"lineNum":" 2163","line":"        }"},
{"lineNum":" 2164","line":"        if (__ct.narrow(*__fmtb, 0) == \'%\')"},
{"lineNum":" 2165","line":"        {"},
{"lineNum":" 2166","line":"            if (++__fmtb == __fmte)"},
{"lineNum":" 2167","line":"            {"},
{"lineNum":" 2168","line":"                __err = ios_base::failbit;"},
{"lineNum":" 2169","line":"                break;"},
{"lineNum":" 2170","line":"            }"},
{"lineNum":" 2171","line":"            char __cmd = __ct.narrow(*__fmtb, 0);"},
{"lineNum":" 2172","line":"            char __opt = \'\\0\';"},
{"lineNum":" 2173","line":"            if (__cmd == \'E\' || __cmd == \'0\')"},
{"lineNum":" 2174","line":"            {"},
{"lineNum":" 2175","line":"                if (++__fmtb == __fmte)"},
{"lineNum":" 2176","line":"                {"},
{"lineNum":" 2177","line":"                    __err = ios_base::failbit;"},
{"lineNum":" 2178","line":"                    break;"},
{"lineNum":" 2179","line":"                }"},
{"lineNum":" 2180","line":"                __opt = __cmd;"},
{"lineNum":" 2181","line":"                __cmd = __ct.narrow(*__fmtb, 0);"},
{"lineNum":" 2182","line":"            }"},
{"lineNum":" 2183","line":"            __b = do_get(__b, __e, __iob, __err, __tm, __cmd, __opt);"},
{"lineNum":" 2184","line":"            ++__fmtb;"},
{"lineNum":" 2185","line":"        }"},
{"lineNum":" 2186","line":"        else if (__ct.is(ctype_base::space, *__fmtb))"},
{"lineNum":" 2187","line":"        {"},
{"lineNum":" 2188","line":"            for (++__fmtb; __fmtb != __fmte && __ct.is(ctype_base::space, *__fmtb); ++__fmtb)"},
{"lineNum":" 2189","line":"                ;"},
{"lineNum":" 2190","line":"            for (        ;    __b != __e    && __ct.is(ctype_base::space, *__b);    ++__b)"},
{"lineNum":" 2191","line":"                ;"},
{"lineNum":" 2192","line":"        }"},
{"lineNum":" 2193","line":"        else if (__ct.toupper(*__b) == __ct.toupper(*__fmtb))"},
{"lineNum":" 2194","line":"        {"},
{"lineNum":" 2195","line":"            ++__b;"},
{"lineNum":" 2196","line":"            ++__fmtb;"},
{"lineNum":" 2197","line":"        }"},
{"lineNum":" 2198","line":"        else"},
{"lineNum":" 2199","line":"            __err = ios_base::failbit;"},
{"lineNum":" 2200","line":"    }"},
{"lineNum":" 2201","line":"    if (__b == __e)"},
{"lineNum":" 2202","line":"        __err |= ios_base::eofbit;"},
{"lineNum":" 2203","line":"    return __b;"},
{"lineNum":" 2204","line":"}"},
{"lineNum":" 2205","line":""},
{"lineNum":" 2206","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":" 2207","line":"typename time_get<_CharT, _InputIterator>::dateorder"},
{"lineNum":" 2208","line":"time_get<_CharT, _InputIterator>::do_date_order() const"},
{"lineNum":" 2209","line":"{"},
{"lineNum":" 2210","line":"    return mdy;"},
{"lineNum":" 2211","line":"}"},
{"lineNum":" 2212","line":""},
{"lineNum":" 2213","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":" 2214","line":"_InputIterator"},
{"lineNum":" 2215","line":"time_get<_CharT, _InputIterator>::do_get_time(iter_type __b, iter_type __e,"},
{"lineNum":" 2216","line":"                                              ios_base& __iob,"},
{"lineNum":" 2217","line":"                                              ios_base::iostate& __err,"},
{"lineNum":" 2218","line":"                                              tm* __tm) const"},
{"lineNum":" 2219","line":"{"},
{"lineNum":" 2220","line":"    const char_type __fmt[] = {\'%\', \'H\', \':\', \'%\', \'M\', \':\', \'%\', \'S\'};"},
{"lineNum":" 2221","line":"    return get(__b, __e, __iob, __err, __tm, __fmt, __fmt + sizeof(__fmt)/sizeof(__fmt[0]));"},
{"lineNum":" 2222","line":"}"},
{"lineNum":" 2223","line":""},
{"lineNum":" 2224","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":" 2225","line":"_InputIterator"},
{"lineNum":" 2226","line":"time_get<_CharT, _InputIterator>::do_get_date(iter_type __b, iter_type __e,"},
{"lineNum":" 2227","line":"                                              ios_base& __iob,"},
{"lineNum":" 2228","line":"                                              ios_base::iostate& __err,"},
{"lineNum":" 2229","line":"                                              tm* __tm) const"},
{"lineNum":" 2230","line":"{"},
{"lineNum":" 2231","line":"    const string_type& __fmt = this->__x();"},
{"lineNum":" 2232","line":"    return get(__b, __e, __iob, __err, __tm, __fmt.data(), __fmt.data() + __fmt.size());"},
{"lineNum":" 2233","line":"}"},
{"lineNum":" 2234","line":""},
{"lineNum":" 2235","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":" 2236","line":"_InputIterator"},
{"lineNum":" 2237","line":"time_get<_CharT, _InputIterator>::do_get_weekday(iter_type __b, iter_type __e,"},
{"lineNum":" 2238","line":"                                                 ios_base& __iob,"},
{"lineNum":" 2239","line":"                                                 ios_base::iostate& __err,"},
{"lineNum":" 2240","line":"                                                 tm* __tm) const"},
{"lineNum":" 2241","line":"{"},
{"lineNum":" 2242","line":"    const ctype<char_type>& __ct = use_facet<ctype<char_type> >(__iob.getloc());"},
{"lineNum":" 2243","line":"    __get_weekdayname(__tm->tm_wday, __b, __e, __err, __ct);"},
{"lineNum":" 2244","line":"    return __b;"},
{"lineNum":" 2245","line":"}"},
{"lineNum":" 2246","line":""},
{"lineNum":" 2247","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":" 2248","line":"_InputIterator"},
{"lineNum":" 2249","line":"time_get<_CharT, _InputIterator>::do_get_monthname(iter_type __b, iter_type __e,"},
{"lineNum":" 2250","line":"                                                   ios_base& __iob,"},
{"lineNum":" 2251","line":"                                                   ios_base::iostate& __err,"},
{"lineNum":" 2252","line":"                                                   tm* __tm) const"},
{"lineNum":" 2253","line":"{"},
{"lineNum":" 2254","line":"    const ctype<char_type>& __ct = use_facet<ctype<char_type> >(__iob.getloc());"},
{"lineNum":" 2255","line":"    __get_monthname(__tm->tm_mon, __b, __e, __err, __ct);"},
{"lineNum":" 2256","line":"    return __b;"},
{"lineNum":" 2257","line":"}"},
{"lineNum":" 2258","line":""},
{"lineNum":" 2259","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":" 2260","line":"_InputIterator"},
{"lineNum":" 2261","line":"time_get<_CharT, _InputIterator>::do_get_year(iter_type __b, iter_type __e,"},
{"lineNum":" 2262","line":"                                              ios_base& __iob,"},
{"lineNum":" 2263","line":"                                              ios_base::iostate& __err,"},
{"lineNum":" 2264","line":"                                              tm* __tm) const"},
{"lineNum":" 2265","line":"{"},
{"lineNum":" 2266","line":"    const ctype<char_type>& __ct = use_facet<ctype<char_type> >(__iob.getloc());"},
{"lineNum":" 2267","line":"    __get_year(__tm->tm_year, __b, __e, __err, __ct);"},
{"lineNum":" 2268","line":"    return __b;"},
{"lineNum":" 2269","line":"}"},
{"lineNum":" 2270","line":""},
{"lineNum":" 2271","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":" 2272","line":"_InputIterator"},
{"lineNum":" 2273","line":"time_get<_CharT, _InputIterator>::do_get(iter_type __b, iter_type __e,"},
{"lineNum":" 2274","line":"                                         ios_base& __iob,"},
{"lineNum":" 2275","line":"                                         ios_base::iostate& __err, tm* __tm,"},
{"lineNum":" 2276","line":"                                         char __fmt, char) const"},
{"lineNum":" 2277","line":"{"},
{"lineNum":" 2278","line":"    __err = ios_base::goodbit;"},
{"lineNum":" 2279","line":"    const ctype<char_type>& __ct = use_facet<ctype<char_type> >(__iob.getloc());"},
{"lineNum":" 2280","line":"    switch (__fmt)"},
{"lineNum":" 2281","line":"    {"},
{"lineNum":" 2282","line":"    case \'a\':"},
{"lineNum":" 2283","line":"    case \'A\':"},
{"lineNum":" 2284","line":"        __get_weekdayname(__tm->tm_wday, __b, __e, __err, __ct);"},
{"lineNum":" 2285","line":"        break;"},
{"lineNum":" 2286","line":"    case \'b\':"},
{"lineNum":" 2287","line":"    case \'B\':"},
{"lineNum":" 2288","line":"    case \'h\':"},
{"lineNum":" 2289","line":"        __get_monthname(__tm->tm_mon, __b, __e, __err, __ct);"},
{"lineNum":" 2290","line":"        break;"},
{"lineNum":" 2291","line":"    case \'c\':"},
{"lineNum":" 2292","line":"        {"},
{"lineNum":" 2293","line":"        const string_type& __fm = this->__c();"},
{"lineNum":" 2294","line":"        __b = get(__b, __e, __iob, __err, __tm, __fm.data(), __fm.data() + __fm.size());"},
{"lineNum":" 2295","line":"        }"},
{"lineNum":" 2296","line":"        break;"},
{"lineNum":" 2297","line":"    case \'d\':"},
{"lineNum":" 2298","line":"    case \'e\':"},
{"lineNum":" 2299","line":"        __get_day(__tm->tm_mday, __b, __e, __err, __ct);"},
{"lineNum":" 2300","line":"        break;"},
{"lineNum":" 2301","line":"    case \'D\':"},
{"lineNum":" 2302","line":"        {"},
{"lineNum":" 2303","line":"        const char_type __fm[] = {\'%\', \'m\', \'/\', \'%\', \'d\', \'/\', \'%\', \'y\'};"},
{"lineNum":" 2304","line":"        __b = get(__b, __e, __iob, __err, __tm, __fm, __fm + sizeof(__fm)/sizeof(__fm[0]));"},
{"lineNum":" 2305","line":"        }"},
{"lineNum":" 2306","line":"        break;"},
{"lineNum":" 2307","line":"    case \'F\':"},
{"lineNum":" 2308","line":"        {"},
{"lineNum":" 2309","line":"        const char_type __fm[] = {\'%\', \'Y\', \'-\', \'%\', \'m\', \'-\', \'%\', \'d\'};"},
{"lineNum":" 2310","line":"        __b = get(__b, __e, __iob, __err, __tm, __fm, __fm + sizeof(__fm)/sizeof(__fm[0]));"},
{"lineNum":" 2311","line":"        }"},
{"lineNum":" 2312","line":"        break;"},
{"lineNum":" 2313","line":"    case \'H\':"},
{"lineNum":" 2314","line":"        __get_hour(__tm->tm_hour, __b, __e, __err, __ct);"},
{"lineNum":" 2315","line":"        break;"},
{"lineNum":" 2316","line":"    case \'I\':"},
{"lineNum":" 2317","line":"        __get_12_hour(__tm->tm_hour, __b, __e, __err, __ct);"},
{"lineNum":" 2318","line":"        break;"},
{"lineNum":" 2319","line":"    case \'j\':"},
{"lineNum":" 2320","line":"        __get_day_year_num(__tm->tm_yday, __b, __e, __err, __ct);"},
{"lineNum":" 2321","line":"        break;"},
{"lineNum":" 2322","line":"    case \'m\':"},
{"lineNum":" 2323","line":"        __get_month(__tm->tm_mon, __b, __e, __err, __ct);"},
{"lineNum":" 2324","line":"        break;"},
{"lineNum":" 2325","line":"    case \'M\':"},
{"lineNum":" 2326","line":"        __get_minute(__tm->tm_min, __b, __e, __err, __ct);"},
{"lineNum":" 2327","line":"        break;"},
{"lineNum":" 2328","line":"    case \'n\':"},
{"lineNum":" 2329","line":"    case \'t\':"},
{"lineNum":" 2330","line":"        __get_white_space(__b, __e, __err, __ct);"},
{"lineNum":" 2331","line":"        break;"},
{"lineNum":" 2332","line":"    case \'p\':"},
{"lineNum":" 2333","line":"        __get_am_pm(__tm->tm_hour, __b, __e, __err, __ct);"},
{"lineNum":" 2334","line":"        break;"},
{"lineNum":" 2335","line":"    case \'r\':"},
{"lineNum":" 2336","line":"        {"},
{"lineNum":" 2337","line":"        const char_type __fm[] = {\'%\', \'I\', \':\', \'%\', \'M\', \':\', \'%\', \'S\', \' \', \'%\', \'p\'};"},
{"lineNum":" 2338","line":"        __b = get(__b, __e, __iob, __err, __tm, __fm, __fm + sizeof(__fm)/sizeof(__fm[0]));"},
{"lineNum":" 2339","line":"        }"},
{"lineNum":" 2340","line":"        break;"},
{"lineNum":" 2341","line":"    case \'R\':"},
{"lineNum":" 2342","line":"        {"},
{"lineNum":" 2343","line":"        const char_type __fm[] = {\'%\', \'H\', \':\', \'%\', \'M\'};"},
{"lineNum":" 2344","line":"        __b = get(__b, __e, __iob, __err, __tm, __fm, __fm + sizeof(__fm)/sizeof(__fm[0]));"},
{"lineNum":" 2345","line":"        }"},
{"lineNum":" 2346","line":"        break;"},
{"lineNum":" 2347","line":"    case \'S\':"},
{"lineNum":" 2348","line":"        __get_second(__tm->tm_sec, __b, __e, __err, __ct);"},
{"lineNum":" 2349","line":"        break;"},
{"lineNum":" 2350","line":"    case \'T\':"},
{"lineNum":" 2351","line":"        {"},
{"lineNum":" 2352","line":"        const char_type __fm[] = {\'%\', \'H\', \':\', \'%\', \'M\', \':\', \'%\', \'S\'};"},
{"lineNum":" 2353","line":"        __b = get(__b, __e, __iob, __err, __tm, __fm, __fm + sizeof(__fm)/sizeof(__fm[0]));"},
{"lineNum":" 2354","line":"        }"},
{"lineNum":" 2355","line":"        break;"},
{"lineNum":" 2356","line":"    case \'w\':"},
{"lineNum":" 2357","line":"        __get_weekday(__tm->tm_wday, __b, __e, __err, __ct);"},
{"lineNum":" 2358","line":"        break;"},
{"lineNum":" 2359","line":"    case \'x\':"},
{"lineNum":" 2360","line":"        return do_get_date(__b, __e, __iob, __err, __tm);"},
{"lineNum":" 2361","line":"    case \'X\':"},
{"lineNum":" 2362","line":"        {"},
{"lineNum":" 2363","line":"        const string_type& __fm = this->__X();"},
{"lineNum":" 2364","line":"        __b = get(__b, __e, __iob, __err, __tm, __fm.data(), __fm.data() + __fm.size());"},
{"lineNum":" 2365","line":"        }"},
{"lineNum":" 2366","line":"        break;"},
{"lineNum":" 2367","line":"    case \'y\':"},
{"lineNum":" 2368","line":"        __get_year(__tm->tm_year, __b, __e, __err, __ct);"},
{"lineNum":" 2369","line":"        break;"},
{"lineNum":" 2370","line":"    case \'Y\':"},
{"lineNum":" 2371","line":"        __get_year4(__tm->tm_year, __b, __e, __err, __ct);"},
{"lineNum":" 2372","line":"        break;"},
{"lineNum":" 2373","line":"    case \'%\':"},
{"lineNum":" 2374","line":"        __get_percent(__b, __e, __err, __ct);"},
{"lineNum":" 2375","line":"        break;"},
{"lineNum":" 2376","line":"    default:"},
{"lineNum":" 2377","line":"        __err |= ios_base::failbit;"},
{"lineNum":" 2378","line":"    }"},
{"lineNum":" 2379","line":"    return __b;"},
{"lineNum":" 2380","line":"}"},
{"lineNum":" 2381","line":""},
{"lineNum":" 2382","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS time_get<char>)"},
{"lineNum":" 2383","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS time_get<wchar_t>)"},
{"lineNum":" 2384","line":""},
{"lineNum":" 2385","line":"class _LIBCPP_TYPE_VIS __time_get"},
{"lineNum":" 2386","line":"{"},
{"lineNum":" 2387","line":"protected:"},
{"lineNum":" 2388","line":"    locale_t __loc_;"},
{"lineNum":" 2389","line":""},
{"lineNum":" 2390","line":"    __time_get(const char* __nm);"},
{"lineNum":" 2391","line":"    __time_get(const string& __nm);"},
{"lineNum":" 2392","line":"    ~__time_get();"},
{"lineNum":" 2393","line":"};"},
{"lineNum":" 2394","line":""},
{"lineNum":" 2395","line":"template <class _CharT>"},
{"lineNum":" 2396","line":"class _LIBCPP_TEMPLATE_VIS __time_get_storage"},
{"lineNum":" 2397","line":"    : public __time_get"},
{"lineNum":" 2398","line":"{"},
{"lineNum":" 2399","line":"protected:"},
{"lineNum":" 2400","line":"    typedef basic_string<_CharT> string_type;"},
{"lineNum":" 2401","line":""},
{"lineNum":" 2402","line":"    string_type __weeks_[14];"},
{"lineNum":" 2403","line":"    string_type __months_[24];"},
{"lineNum":" 2404","line":"    string_type __am_pm_[2];"},
{"lineNum":" 2405","line":"    string_type __c_;"},
{"lineNum":" 2406","line":"    string_type __r_;"},
{"lineNum":" 2407","line":"    string_type __x_;"},
{"lineNum":" 2408","line":"    string_type __X_;"},
{"lineNum":" 2409","line":""},
{"lineNum":" 2410","line":"    explicit __time_get_storage(const char* __nm);"},
{"lineNum":" 2411","line":"    explicit __time_get_storage(const string& __nm);"},
{"lineNum":" 2412","line":""},
{"lineNum":" 2413","line":"    _LIBCPP_INLINE_VISIBILITY ~__time_get_storage() {}"},
{"lineNum":" 2414","line":""},
{"lineNum":" 2415","line":"    time_base::dateorder __do_date_order() const;"},
{"lineNum":" 2416","line":""},
{"lineNum":" 2417","line":"private:"},
{"lineNum":" 2418","line":"    void init(const ctype<_CharT>&);"},
{"lineNum":" 2419","line":"    string_type __analyze(char __fmt, const ctype<_CharT>&);"},
{"lineNum":" 2420","line":"};"},
{"lineNum":" 2421","line":""},
{"lineNum":" 2422","line":"#define _LIBCPP_TIME_GET_STORAGE_EXPLICIT_INSTANTIATION(_CharT) \\"},
{"lineNum":" 2423","line":"template <> _LIBCPP_FUNC_VIS time_base::dateorder __time_get_storage<_CharT>::__do_date_order() const; \\"},
{"lineNum":" 2424","line":"template <> _LIBCPP_FUNC_VIS __time_get_storage<_CharT>::__time_get_storage(const char*); \\"},
{"lineNum":" 2425","line":"template <> _LIBCPP_FUNC_VIS __time_get_storage<_CharT>::__time_get_storage(const string&); \\"},
{"lineNum":" 2426","line":"template <> _LIBCPP_FUNC_VIS void __time_get_storage<_CharT>::init(const ctype<_CharT>&); \\"},
{"lineNum":" 2427","line":"template <> _LIBCPP_FUNC_VIS __time_get_storage<_CharT>::string_type __time_get_storage<_CharT>::__analyze(char, const ctype<_CharT>&); \\"},
{"lineNum":" 2428","line":"extern template _LIBCPP_FUNC_VIS time_base::dateorder __time_get_storage<_CharT>::__do_date_order() const; \\"},
{"lineNum":" 2429","line":"extern template _LIBCPP_FUNC_VIS __time_get_storage<_CharT>::__time_get_storage(const char*); \\"},
{"lineNum":" 2430","line":"extern template _LIBCPP_FUNC_VIS __time_get_storage<_CharT>::__time_get_storage(const string&); \\"},
{"lineNum":" 2431","line":"extern template _LIBCPP_FUNC_VIS void __time_get_storage<_CharT>::init(const ctype<_CharT>&); \\"},
{"lineNum":" 2432","line":"extern template _LIBCPP_FUNC_VIS __time_get_storage<_CharT>::string_type __time_get_storage<_CharT>::__analyze(char, const ctype<_CharT>&); \\"},
{"lineNum":" 2433","line":"/**/"},
{"lineNum":" 2434","line":""},
{"lineNum":" 2435","line":"_LIBCPP_TIME_GET_STORAGE_EXPLICIT_INSTANTIATION(char)"},
{"lineNum":" 2436","line":"_LIBCPP_TIME_GET_STORAGE_EXPLICIT_INSTANTIATION(wchar_t)"},
{"lineNum":" 2437","line":"#undef _LIBCPP_TIME_GET_STORAGE_EXPLICIT_INSTANTIATION"},
{"lineNum":" 2438","line":""},
{"lineNum":" 2439","line":"template <class _CharT, class _InputIterator = istreambuf_iterator<_CharT> >"},
{"lineNum":" 2440","line":"class _LIBCPP_TEMPLATE_VIS time_get_byname"},
{"lineNum":" 2441","line":"    : public time_get<_CharT, _InputIterator>,"},
{"lineNum":" 2442","line":"      private __time_get_storage<_CharT>"},
{"lineNum":" 2443","line":"{"},
{"lineNum":" 2444","line":"public:"},
{"lineNum":" 2445","line":"    typedef time_base::dateorder    dateorder;"},
{"lineNum":" 2446","line":"    typedef _InputIterator          iter_type;"},
{"lineNum":" 2447","line":"    typedef _CharT                  char_type;"},
{"lineNum":" 2448","line":"    typedef basic_string<char_type> string_type;"},
{"lineNum":" 2449","line":""},
{"lineNum":" 2450","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2451","line":"    explicit time_get_byname(const char* __nm, size_t __refs = 0)"},
{"lineNum":" 2452","line":"        : time_get<_CharT, _InputIterator>(__refs),"},
{"lineNum":" 2453","line":"          __time_get_storage<_CharT>(__nm) {}"},
{"lineNum":" 2454","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2455","line":"    explicit time_get_byname(const string& __nm, size_t __refs = 0)"},
{"lineNum":" 2456","line":"        : time_get<_CharT, _InputIterator>(__refs),"},
{"lineNum":" 2457","line":"          __time_get_storage<_CharT>(__nm) {}"},
{"lineNum":" 2458","line":""},
{"lineNum":" 2459","line":"protected:"},
{"lineNum":" 2460","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2461","line":"    ~time_get_byname() {}"},
{"lineNum":" 2462","line":""},
{"lineNum":" 2463","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2464","line":"    virtual dateorder do_date_order() const {return this->__do_date_order();}"},
{"lineNum":" 2465","line":"private:"},
{"lineNum":" 2466","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2467","line":"    virtual const string_type* __weeks() const  {return this->__weeks_;}"},
{"lineNum":" 2468","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2469","line":"    virtual const string_type* __months() const {return this->__months_;}"},
{"lineNum":" 2470","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2471","line":"    virtual const string_type* __am_pm() const  {return this->__am_pm_;}"},
{"lineNum":" 2472","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2473","line":"    virtual const string_type& __c() const      {return this->__c_;}"},
{"lineNum":" 2474","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2475","line":"    virtual const string_type& __r() const      {return this->__r_;}"},
{"lineNum":" 2476","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2477","line":"    virtual const string_type& __x() const      {return this->__x_;}"},
{"lineNum":" 2478","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2479","line":"    virtual const string_type& __X() const      {return this->__X_;}"},
{"lineNum":" 2480","line":"};"},
{"lineNum":" 2481","line":""},
{"lineNum":" 2482","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS time_get_byname<char>)"},
{"lineNum":" 2483","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS time_get_byname<wchar_t>)"},
{"lineNum":" 2484","line":""},
{"lineNum":" 2485","line":"class _LIBCPP_TYPE_VIS __time_put"},
{"lineNum":" 2486","line":"{"},
{"lineNum":" 2487","line":"    locale_t __loc_;"},
{"lineNum":" 2488","line":"protected:"},
{"lineNum":" 2489","line":"    _LIBCPP_INLINE_VISIBILITY __time_put() : __loc_(_LIBCPP_GET_C_LOCALE) {}"},
{"lineNum":" 2490","line":"    __time_put(const char* __nm);"},
{"lineNum":" 2491","line":"    __time_put(const string& __nm);"},
{"lineNum":" 2492","line":"    ~__time_put();"},
{"lineNum":" 2493","line":"    void __do_put(char* __nb, char*& __ne, const tm* __tm,"},
{"lineNum":" 2494","line":"                  char __fmt, char __mod) const;"},
{"lineNum":" 2495","line":"    void __do_put(wchar_t* __wb, wchar_t*& __we, const tm* __tm,"},
{"lineNum":" 2496","line":"                  char __fmt, char __mod) const;"},
{"lineNum":" 2497","line":"};"},
{"lineNum":" 2498","line":""},
{"lineNum":" 2499","line":"template <class _CharT, class _OutputIterator = ostreambuf_iterator<_CharT> >"},
{"lineNum":" 2500","line":"class _LIBCPP_TEMPLATE_VIS time_put"},
{"lineNum":" 2501","line":"    : public locale::facet,"},
{"lineNum":" 2502","line":"      private __time_put"},
{"lineNum":" 2503","line":"{"},
{"lineNum":" 2504","line":"public:"},
{"lineNum":" 2505","line":"    typedef _CharT char_type;"},
{"lineNum":" 2506","line":"    typedef _OutputIterator iter_type;"},
{"lineNum":" 2507","line":""},
{"lineNum":" 2508","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2509","line":"    explicit time_put(size_t __refs = 0)"},
{"lineNum":" 2510","line":"        : locale::facet(__refs) {}"},
{"lineNum":" 2511","line":""},
{"lineNum":" 2512","line":"    iter_type put(iter_type __s, ios_base& __iob, char_type __fl, const tm* __tm,"},
{"lineNum":" 2513","line":"                  const char_type* __pb, const char_type* __pe) const;"},
{"lineNum":" 2514","line":""},
{"lineNum":" 2515","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2516","line":"    iter_type put(iter_type __s, ios_base& __iob, char_type __fl,"},
{"lineNum":" 2517","line":"                  const tm* __tm, char __fmt, char __mod = 0) const"},
{"lineNum":" 2518","line":"    {"},
{"lineNum":" 2519","line":"        return do_put(__s, __iob, __fl, __tm, __fmt, __mod);"},
{"lineNum":" 2520","line":"    }"},
{"lineNum":" 2521","line":""},
{"lineNum":" 2522","line":"    static locale::id id;"},
{"lineNum":" 2523","line":""},
{"lineNum":" 2524","line":"protected:"},
{"lineNum":" 2525","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2526","line":"    ~time_put() {}"},
{"lineNum":" 2527","line":"    virtual iter_type do_put(iter_type __s, ios_base&, char_type, const tm* __tm,"},
{"lineNum":" 2528","line":"                             char __fmt, char __mod) const;"},
{"lineNum":" 2529","line":""},
{"lineNum":" 2530","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2531","line":"    explicit time_put(const char* __nm, size_t __refs)"},
{"lineNum":" 2532","line":"        : locale::facet(__refs),"},
{"lineNum":" 2533","line":"          __time_put(__nm) {}"},
{"lineNum":" 2534","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2535","line":"    explicit time_put(const string& __nm, size_t __refs)"},
{"lineNum":" 2536","line":"        : locale::facet(__refs),"},
{"lineNum":" 2537","line":"          __time_put(__nm) {}"},
{"lineNum":" 2538","line":"};"},
{"lineNum":" 2539","line":""},
{"lineNum":" 2540","line":"template <class _CharT, class _OutputIterator>"},
{"lineNum":" 2541","line":"locale::id"},
{"lineNum":" 2542","line":"time_put<_CharT, _OutputIterator>::id;"},
{"lineNum":" 2543","line":""},
{"lineNum":" 2544","line":"template <class _CharT, class _OutputIterator>"},
{"lineNum":" 2545","line":"_OutputIterator"},
{"lineNum":" 2546","line":"time_put<_CharT, _OutputIterator>::put(iter_type __s, ios_base& __iob,"},
{"lineNum":" 2547","line":"                                       char_type __fl, const tm* __tm,"},
{"lineNum":" 2548","line":"                                       const char_type* __pb,"},
{"lineNum":" 2549","line":"                                       const char_type* __pe) const"},
{"lineNum":" 2550","line":"{"},
{"lineNum":" 2551","line":"    const ctype<char_type>& __ct = use_facet<ctype<char_type> >(__iob.getloc());"},
{"lineNum":" 2552","line":"    for (; __pb != __pe; ++__pb)"},
{"lineNum":" 2553","line":"    {"},
{"lineNum":" 2554","line":"        if (__ct.narrow(*__pb, 0) == \'%\')"},
{"lineNum":" 2555","line":"        {"},
{"lineNum":" 2556","line":"            if (++__pb == __pe)"},
{"lineNum":" 2557","line":"            {"},
{"lineNum":" 2558","line":"                *__s++ = __pb[-1];"},
{"lineNum":" 2559","line":"                break;"},
{"lineNum":" 2560","line":"            }"},
{"lineNum":" 2561","line":"            char __mod = 0;"},
{"lineNum":" 2562","line":"            char __fmt = __ct.narrow(*__pb, 0);"},
{"lineNum":" 2563","line":"            if (__fmt == \'E\' || __fmt == \'O\')"},
{"lineNum":" 2564","line":"            {"},
{"lineNum":" 2565","line":"                if (++__pb == __pe)"},
{"lineNum":" 2566","line":"                {"},
{"lineNum":" 2567","line":"                    *__s++ = __pb[-2];"},
{"lineNum":" 2568","line":"                    *__s++ = __pb[-1];"},
{"lineNum":" 2569","line":"                    break;"},
{"lineNum":" 2570","line":"                }"},
{"lineNum":" 2571","line":"                __mod = __fmt;"},
{"lineNum":" 2572","line":"                __fmt = __ct.narrow(*__pb, 0);"},
{"lineNum":" 2573","line":"            }"},
{"lineNum":" 2574","line":"            __s = do_put(__s, __iob, __fl, __tm, __fmt, __mod);"},
{"lineNum":" 2575","line":"        }"},
{"lineNum":" 2576","line":"        else"},
{"lineNum":" 2577","line":"            *__s++ = *__pb;"},
{"lineNum":" 2578","line":"    }"},
{"lineNum":" 2579","line":"    return __s;"},
{"lineNum":" 2580","line":"}"},
{"lineNum":" 2581","line":""},
{"lineNum":" 2582","line":"template <class _CharT, class _OutputIterator>"},
{"lineNum":" 2583","line":"_OutputIterator"},
{"lineNum":" 2584","line":"time_put<_CharT, _OutputIterator>::do_put(iter_type __s, ios_base&,"},
{"lineNum":" 2585","line":"                                          char_type, const tm* __tm,"},
{"lineNum":" 2586","line":"                                          char __fmt, char __mod) const"},
{"lineNum":" 2587","line":"{"},
{"lineNum":" 2588","line":"    char_type __nar[100];"},
{"lineNum":" 2589","line":"    char_type* __nb = __nar;"},
{"lineNum":" 2590","line":"    char_type* __ne = __nb + 100;"},
{"lineNum":" 2591","line":"    __do_put(__nb, __ne, __tm, __fmt, __mod);"},
{"lineNum":" 2592","line":"    return _VSTD::copy(__nb, __ne, __s);"},
{"lineNum":" 2593","line":"}"},
{"lineNum":" 2594","line":""},
{"lineNum":" 2595","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS time_put<char>)"},
{"lineNum":" 2596","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS time_put<wchar_t>)"},
{"lineNum":" 2597","line":""},
{"lineNum":" 2598","line":"template <class _CharT, class _OutputIterator = ostreambuf_iterator<_CharT> >"},
{"lineNum":" 2599","line":"class _LIBCPP_TEMPLATE_VIS time_put_byname"},
{"lineNum":" 2600","line":"    : public time_put<_CharT, _OutputIterator>"},
{"lineNum":" 2601","line":"{"},
{"lineNum":" 2602","line":"public:"},
{"lineNum":" 2603","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2604","line":"    explicit time_put_byname(const char* __nm, size_t __refs = 0)"},
{"lineNum":" 2605","line":"        : time_put<_CharT, _OutputIterator>(__nm, __refs) {}"},
{"lineNum":" 2606","line":""},
{"lineNum":" 2607","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2608","line":"    explicit time_put_byname(const string& __nm, size_t __refs = 0)"},
{"lineNum":" 2609","line":"        : time_put<_CharT, _OutputIterator>(__nm, __refs) {}"},
{"lineNum":" 2610","line":""},
{"lineNum":" 2611","line":"protected:"},
{"lineNum":" 2612","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2613","line":"    ~time_put_byname() {}"},
{"lineNum":" 2614","line":"};"},
{"lineNum":" 2615","line":""},
{"lineNum":" 2616","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS time_put_byname<char>)"},
{"lineNum":" 2617","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS time_put_byname<wchar_t>)"},
{"lineNum":" 2618","line":""},
{"lineNum":" 2619","line":"// money_base"},
{"lineNum":" 2620","line":""},
{"lineNum":" 2621","line":"class _LIBCPP_TYPE_VIS money_base"},
{"lineNum":" 2622","line":"{"},
{"lineNum":" 2623","line":"public:"},
{"lineNum":" 2624","line":"    enum part {none, space, symbol, sign, value};"},
{"lineNum":" 2625","line":"    struct pattern {char field[4];};"},
{"lineNum":" 2626","line":""},
{"lineNum":" 2627","line":"    _LIBCPP_INLINE_VISIBILITY money_base() {}"},
{"lineNum":" 2628","line":"};"},
{"lineNum":" 2629","line":""},
{"lineNum":" 2630","line":"// moneypunct"},
{"lineNum":" 2631","line":""},
{"lineNum":" 2632","line":"template <class _CharT, bool _International = false>"},
{"lineNum":" 2633","line":"class _LIBCPP_TEMPLATE_VIS moneypunct"},
{"lineNum":" 2634","line":"    : public locale::facet,"},
{"lineNum":" 2635","line":"      public money_base"},
{"lineNum":" 2636","line":"{"},
{"lineNum":" 2637","line":"public:"},
{"lineNum":" 2638","line":"    typedef _CharT                  char_type;"},
{"lineNum":" 2639","line":"    typedef basic_string<char_type> string_type;"},
{"lineNum":" 2640","line":""},
{"lineNum":" 2641","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2642","line":"    explicit moneypunct(size_t __refs = 0)"},
{"lineNum":" 2643","line":"        : locale::facet(__refs) {}"},
{"lineNum":" 2644","line":""},
{"lineNum":" 2645","line":"    _LIBCPP_INLINE_VISIBILITY char_type   decimal_point() const {return do_decimal_point();}"},
{"lineNum":" 2646","line":"    _LIBCPP_INLINE_VISIBILITY char_type   thousands_sep() const {return do_thousands_sep();}"},
{"lineNum":" 2647","line":"    _LIBCPP_INLINE_VISIBILITY string      grouping()      const {return do_grouping();}"},
{"lineNum":" 2648","line":"    _LIBCPP_INLINE_VISIBILITY string_type curr_symbol()   const {return do_curr_symbol();}"},
{"lineNum":" 2649","line":"    _LIBCPP_INLINE_VISIBILITY string_type positive_sign() const {return do_positive_sign();}"},
{"lineNum":" 2650","line":"    _LIBCPP_INLINE_VISIBILITY string_type negative_sign() const {return do_negative_sign();}"},
{"lineNum":" 2651","line":"    _LIBCPP_INLINE_VISIBILITY int         frac_digits()   const {return do_frac_digits();}"},
{"lineNum":" 2652","line":"    _LIBCPP_INLINE_VISIBILITY pattern     pos_format()    const {return do_pos_format();}"},
{"lineNum":" 2653","line":"    _LIBCPP_INLINE_VISIBILITY pattern     neg_format()    const {return do_neg_format();}"},
{"lineNum":" 2654","line":""},
{"lineNum":" 2655","line":"    static locale::id id;"},
{"lineNum":" 2656","line":"    static const bool intl = _International;"},
{"lineNum":" 2657","line":""},
{"lineNum":" 2658","line":"protected:"},
{"lineNum":" 2659","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2660","line":"    ~moneypunct() {}"},
{"lineNum":" 2661","line":""},
{"lineNum":" 2662","line":"    virtual char_type   do_decimal_point() const {return numeric_limits<char_type>::max();}"},
{"lineNum":" 2663","line":"    virtual char_type   do_thousands_sep() const {return numeric_limits<char_type>::max();}"},
{"lineNum":" 2664","line":"    virtual string      do_grouping()      const {return string();}"},
{"lineNum":" 2665","line":"    virtual string_type do_curr_symbol()   const {return string_type();}"},
{"lineNum":" 2666","line":"    virtual string_type do_positive_sign() const {return string_type();}"},
{"lineNum":" 2667","line":"    virtual string_type do_negative_sign() const {return string_type(1, \'-\');}"},
{"lineNum":" 2668","line":"    virtual int         do_frac_digits()   const {return 0;}"},
{"lineNum":" 2669","line":"    virtual pattern     do_pos_format()    const"},
{"lineNum":" 2670","line":"        {pattern __p = {{symbol, sign, none, value}}; return __p;}"},
{"lineNum":" 2671","line":"    virtual pattern     do_neg_format()    const"},
{"lineNum":" 2672","line":"        {pattern __p = {{symbol, sign, none, value}}; return __p;}"},
{"lineNum":" 2673","line":"};"},
{"lineNum":" 2674","line":""},
{"lineNum":" 2675","line":"template <class _CharT, bool _International>"},
{"lineNum":" 2676","line":"locale::id"},
{"lineNum":" 2677","line":"moneypunct<_CharT, _International>::id;"},
{"lineNum":" 2678","line":""},
{"lineNum":" 2679","line":"template <class _CharT, bool _International>"},
{"lineNum":" 2680","line":"const bool"},
{"lineNum":" 2681","line":"moneypunct<_CharT, _International>::intl;"},
{"lineNum":" 2682","line":""},
{"lineNum":" 2683","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS moneypunct<char, false>)"},
{"lineNum":" 2684","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS moneypunct<char, true>)"},
{"lineNum":" 2685","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS moneypunct<wchar_t, false>)"},
{"lineNum":" 2686","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS moneypunct<wchar_t, true>)"},
{"lineNum":" 2687","line":""},
{"lineNum":" 2688","line":"// moneypunct_byname"},
{"lineNum":" 2689","line":""},
{"lineNum":" 2690","line":"template <class _CharT, bool _International = false>"},
{"lineNum":" 2691","line":"class _LIBCPP_TEMPLATE_VIS moneypunct_byname"},
{"lineNum":" 2692","line":"    : public moneypunct<_CharT, _International>"},
{"lineNum":" 2693","line":"{"},
{"lineNum":" 2694","line":"public:"},
{"lineNum":" 2695","line":"    typedef money_base::pattern  pattern;"},
{"lineNum":" 2696","line":"    typedef _CharT                  char_type;"},
{"lineNum":" 2697","line":"    typedef basic_string<char_type> string_type;"},
{"lineNum":" 2698","line":""},
{"lineNum":" 2699","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2700","line":"    explicit moneypunct_byname(const char* __nm, size_t __refs = 0)"},
{"lineNum":" 2701","line":"        : moneypunct<_CharT, _International>(__refs) {init(__nm);}"},
{"lineNum":" 2702","line":""},
{"lineNum":" 2703","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2704","line":"    explicit moneypunct_byname(const string& __nm, size_t __refs = 0)"},
{"lineNum":" 2705","line":"        : moneypunct<_CharT, _International>(__refs) {init(__nm.c_str());}"},
{"lineNum":" 2706","line":""},
{"lineNum":" 2707","line":"protected:"},
{"lineNum":" 2708","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2709","line":"    ~moneypunct_byname() {}"},
{"lineNum":" 2710","line":""},
{"lineNum":" 2711","line":"    virtual char_type   do_decimal_point() const {return __decimal_point_;}"},
{"lineNum":" 2712","line":"    virtual char_type   do_thousands_sep() const {return __thousands_sep_;}"},
{"lineNum":" 2713","line":"    virtual string      do_grouping()      const {return __grouping_;}"},
{"lineNum":" 2714","line":"    virtual string_type do_curr_symbol()   const {return __curr_symbol_;}"},
{"lineNum":" 2715","line":"    virtual string_type do_positive_sign() const {return __positive_sign_;}"},
{"lineNum":" 2716","line":"    virtual string_type do_negative_sign() const {return __negative_sign_;}"},
{"lineNum":" 2717","line":"    virtual int         do_frac_digits()   const {return __frac_digits_;}"},
{"lineNum":" 2718","line":"    virtual pattern     do_pos_format()    const {return __pos_format_;}"},
{"lineNum":" 2719","line":"    virtual pattern     do_neg_format()    const {return __neg_format_;}"},
{"lineNum":" 2720","line":""},
{"lineNum":" 2721","line":"private:"},
{"lineNum":" 2722","line":"    char_type   __decimal_point_;"},
{"lineNum":" 2723","line":"    char_type   __thousands_sep_;"},
{"lineNum":" 2724","line":"    string      __grouping_;"},
{"lineNum":" 2725","line":"    string_type __curr_symbol_;"},
{"lineNum":" 2726","line":"    string_type __positive_sign_;"},
{"lineNum":" 2727","line":"    string_type __negative_sign_;"},
{"lineNum":" 2728","line":"    int         __frac_digits_;"},
{"lineNum":" 2729","line":"    pattern     __pos_format_;"},
{"lineNum":" 2730","line":"    pattern     __neg_format_;"},
{"lineNum":" 2731","line":""},
{"lineNum":" 2732","line":"    void init(const char*);"},
{"lineNum":" 2733","line":"};"},
{"lineNum":" 2734","line":""},
{"lineNum":" 2735","line":"template<> _LIBCPP_FUNC_VIS void moneypunct_byname<char, false>::init(const char*);"},
{"lineNum":" 2736","line":"template<> _LIBCPP_FUNC_VIS void moneypunct_byname<char, true>::init(const char*);"},
{"lineNum":" 2737","line":"template<> _LIBCPP_FUNC_VIS void moneypunct_byname<wchar_t, false>::init(const char*);"},
{"lineNum":" 2738","line":"template<> _LIBCPP_FUNC_VIS void moneypunct_byname<wchar_t, true>::init(const char*);"},
{"lineNum":" 2739","line":""},
{"lineNum":" 2740","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS moneypunct_byname<char, false>)"},
{"lineNum":" 2741","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS moneypunct_byname<char, true>)"},
{"lineNum":" 2742","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS moneypunct_byname<wchar_t, false>)"},
{"lineNum":" 2743","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS moneypunct_byname<wchar_t, true>)"},
{"lineNum":" 2744","line":""},
{"lineNum":" 2745","line":"// money_get"},
{"lineNum":" 2746","line":""},
{"lineNum":" 2747","line":"template <class _CharT>"},
{"lineNum":" 2748","line":"class __money_get"},
{"lineNum":" 2749","line":"{"},
{"lineNum":" 2750","line":"protected:"},
{"lineNum":" 2751","line":"    typedef _CharT                  char_type;"},
{"lineNum":" 2752","line":"    typedef basic_string<char_type> string_type;"},
{"lineNum":" 2753","line":""},
{"lineNum":" 2754","line":"    _LIBCPP_INLINE_VISIBILITY __money_get() {}"},
{"lineNum":" 2755","line":""},
{"lineNum":" 2756","line":"    static void __gather_info(bool __intl, const locale& __loc,"},
{"lineNum":" 2757","line":"                              money_base::pattern& __pat, char_type& __dp,"},
{"lineNum":" 2758","line":"                              char_type& __ts, string& __grp,"},
{"lineNum":" 2759","line":"                              string_type& __sym, string_type& __psn,"},
{"lineNum":" 2760","line":"                              string_type& __nsn, int& __fd);"},
{"lineNum":" 2761","line":"};"},
{"lineNum":" 2762","line":""},
{"lineNum":" 2763","line":"template <class _CharT>"},
{"lineNum":" 2764","line":"void"},
{"lineNum":" 2765","line":"__money_get<_CharT>::__gather_info(bool __intl, const locale& __loc,"},
{"lineNum":" 2766","line":"                                   money_base::pattern& __pat, char_type& __dp,"},
{"lineNum":" 2767","line":"                                   char_type& __ts, string& __grp,"},
{"lineNum":" 2768","line":"                                   string_type& __sym, string_type& __psn,"},
{"lineNum":" 2769","line":"                                   string_type& __nsn, int& __fd)"},
{"lineNum":" 2770","line":"{"},
{"lineNum":" 2771","line":"    if (__intl)"},
{"lineNum":" 2772","line":"    {"},
{"lineNum":" 2773","line":"        const moneypunct<char_type, true>& __mp ="},
{"lineNum":" 2774","line":"            use_facet<moneypunct<char_type, true> >(__loc);"},
{"lineNum":" 2775","line":"        __pat = __mp.neg_format();"},
{"lineNum":" 2776","line":"        __nsn = __mp.negative_sign();"},
{"lineNum":" 2777","line":"        __psn = __mp.positive_sign();"},
{"lineNum":" 2778","line":"        __dp = __mp.decimal_point();"},
{"lineNum":" 2779","line":"        __ts = __mp.thousands_sep();"},
{"lineNum":" 2780","line":"        __grp = __mp.grouping();"},
{"lineNum":" 2781","line":"        __sym = __mp.curr_symbol();"},
{"lineNum":" 2782","line":"        __fd = __mp.frac_digits();"},
{"lineNum":" 2783","line":"    }"},
{"lineNum":" 2784","line":"    else"},
{"lineNum":" 2785","line":"    {"},
{"lineNum":" 2786","line":"        const moneypunct<char_type, false>& __mp ="},
{"lineNum":" 2787","line":"            use_facet<moneypunct<char_type, false> >(__loc);"},
{"lineNum":" 2788","line":"        __pat = __mp.neg_format();"},
{"lineNum":" 2789","line":"        __nsn = __mp.negative_sign();"},
{"lineNum":" 2790","line":"        __psn = __mp.positive_sign();"},
{"lineNum":" 2791","line":"        __dp = __mp.decimal_point();"},
{"lineNum":" 2792","line":"        __ts = __mp.thousands_sep();"},
{"lineNum":" 2793","line":"        __grp = __mp.grouping();"},
{"lineNum":" 2794","line":"        __sym = __mp.curr_symbol();"},
{"lineNum":" 2795","line":"        __fd = __mp.frac_digits();"},
{"lineNum":" 2796","line":"    }"},
{"lineNum":" 2797","line":"}"},
{"lineNum":" 2798","line":""},
{"lineNum":" 2799","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS __money_get<char>)"},
{"lineNum":" 2800","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS __money_get<wchar_t>)"},
{"lineNum":" 2801","line":""},
{"lineNum":" 2802","line":"template <class _CharT, class _InputIterator = istreambuf_iterator<_CharT> >"},
{"lineNum":" 2803","line":"class _LIBCPP_TEMPLATE_VIS money_get"},
{"lineNum":" 2804","line":"    : public locale::facet,"},
{"lineNum":" 2805","line":"      private __money_get<_CharT>"},
{"lineNum":" 2806","line":"{"},
{"lineNum":" 2807","line":"public:"},
{"lineNum":" 2808","line":"    typedef _CharT                  char_type;"},
{"lineNum":" 2809","line":"    typedef _InputIterator          iter_type;"},
{"lineNum":" 2810","line":"    typedef basic_string<char_type> string_type;"},
{"lineNum":" 2811","line":""},
{"lineNum":" 2812","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2813","line":"    explicit money_get(size_t __refs = 0)"},
{"lineNum":" 2814","line":"        : locale::facet(__refs) {}"},
{"lineNum":" 2815","line":""},
{"lineNum":" 2816","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2817","line":"    iter_type get(iter_type __b, iter_type __e, bool __intl, ios_base& __iob,"},
{"lineNum":" 2818","line":"                  ios_base::iostate& __err, long double& __v) const"},
{"lineNum":" 2819","line":"    {"},
{"lineNum":" 2820","line":"        return do_get(__b, __e, __intl, __iob, __err, __v);"},
{"lineNum":" 2821","line":"    }"},
{"lineNum":" 2822","line":""},
{"lineNum":" 2823","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2824","line":"    iter_type get(iter_type __b, iter_type __e, bool __intl, ios_base& __iob,"},
{"lineNum":" 2825","line":"                  ios_base::iostate& __err, string_type& __v) const"},
{"lineNum":" 2826","line":"    {"},
{"lineNum":" 2827","line":"        return do_get(__b, __e, __intl, __iob, __err, __v);"},
{"lineNum":" 2828","line":"    }"},
{"lineNum":" 2829","line":""},
{"lineNum":" 2830","line":"    static locale::id id;"},
{"lineNum":" 2831","line":""},
{"lineNum":" 2832","line":"protected:"},
{"lineNum":" 2833","line":""},
{"lineNum":" 2834","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2835","line":"    ~money_get() {}"},
{"lineNum":" 2836","line":""},
{"lineNum":" 2837","line":"    virtual iter_type do_get(iter_type __b, iter_type __e, bool __intl,"},
{"lineNum":" 2838","line":"                             ios_base& __iob, ios_base::iostate& __err,"},
{"lineNum":" 2839","line":"                             long double& __v) const;"},
{"lineNum":" 2840","line":"    virtual iter_type do_get(iter_type __b, iter_type __e, bool __intl,"},
{"lineNum":" 2841","line":"                             ios_base& __iob, ios_base::iostate& __err,"},
{"lineNum":" 2842","line":"                             string_type& __v) const;"},
{"lineNum":" 2843","line":""},
{"lineNum":" 2844","line":"private:"},
{"lineNum":" 2845","line":"    static bool __do_get(iter_type& __b, iter_type __e,"},
{"lineNum":" 2846","line":"                         bool __intl, const locale& __loc,"},
{"lineNum":" 2847","line":"                         ios_base::fmtflags __flags, ios_base::iostate& __err,"},
{"lineNum":" 2848","line":"                         bool& __neg, const ctype<char_type>& __ct,"},
{"lineNum":" 2849","line":"                         unique_ptr<char_type, void(*)(void*)>& __wb,"},
{"lineNum":" 2850","line":"                         char_type*& __wn, char_type* __we);"},
{"lineNum":" 2851","line":"};"},
{"lineNum":" 2852","line":""},
{"lineNum":" 2853","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":" 2854","line":"locale::id"},
{"lineNum":" 2855","line":"money_get<_CharT, _InputIterator>::id;"},
{"lineNum":" 2856","line":""},
{"lineNum":" 2857","line":"_LIBCPP_FUNC_VIS void __do_nothing(void*);"},
{"lineNum":" 2858","line":""},
{"lineNum":" 2859","line":"template <class _Tp>"},
{"lineNum":" 2860","line":"_LIBCPP_HIDDEN"},
{"lineNum":" 2861","line":"void"},
{"lineNum":" 2862","line":"__double_or_nothing(unique_ptr<_Tp, void(*)(void*)>& __b, _Tp*& __n, _Tp*& __e)"},
{"lineNum":" 2863","line":"{"},
{"lineNum":" 2864","line":"    bool __owns = __b.get_deleter() != __do_nothing;"},
{"lineNum":" 2865","line":"    size_t __cur_cap = static_cast<size_t>(__e-__b.get()) * sizeof(_Tp);"},
{"lineNum":" 2866","line":"    size_t __new_cap = __cur_cap < numeric_limits<size_t>::max() / 2 ?"},
{"lineNum":" 2867","line":"                       2 * __cur_cap : numeric_limits<size_t>::max();"},
{"lineNum":" 2868","line":"    if (__new_cap == 0)"},
{"lineNum":" 2869","line":"        __new_cap = sizeof(_Tp);"},
{"lineNum":" 2870","line":"    size_t __n_off = static_cast<size_t>(__n - __b.get());"},
{"lineNum":" 2871","line":"    _Tp* __t = (_Tp*)realloc(__owns ? __b.get() : 0, __new_cap);"},
{"lineNum":" 2872","line":"    if (__t == 0)"},
{"lineNum":" 2873","line":"        __throw_bad_alloc();"},
{"lineNum":" 2874","line":"    if (__owns)"},
{"lineNum":" 2875","line":"        __b.release();"},
{"lineNum":" 2876","line":"    __b = unique_ptr<_Tp, void(*)(void*)>(__t, free);"},
{"lineNum":" 2877","line":"    __new_cap /= sizeof(_Tp);"},
{"lineNum":" 2878","line":"    __n = __b.get() + __n_off;"},
{"lineNum":" 2879","line":"    __e = __b.get() + __new_cap;"},
{"lineNum":" 2880","line":"}"},
{"lineNum":" 2881","line":""},
{"lineNum":" 2882","line":"// true == success"},
{"lineNum":" 2883","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":" 2884","line":"bool"},
{"lineNum":" 2885","line":"money_get<_CharT, _InputIterator>::__do_get(iter_type& __b, iter_type __e,"},
{"lineNum":" 2886","line":"                                            bool __intl, const locale& __loc,"},
{"lineNum":" 2887","line":"                                            ios_base::fmtflags __flags,"},
{"lineNum":" 2888","line":"                                            ios_base::iostate& __err,"},
{"lineNum":" 2889","line":"                                            bool& __neg,"},
{"lineNum":" 2890","line":"                                            const ctype<char_type>& __ct,"},
{"lineNum":" 2891","line":"                                            unique_ptr<char_type, void(*)(void*)>& __wb,"},
{"lineNum":" 2892","line":"                                            char_type*& __wn, char_type* __we)"},
{"lineNum":" 2893","line":"{"},
{"lineNum":" 2894","line":"    const unsigned __bz = 100;"},
{"lineNum":" 2895","line":"    unsigned __gbuf[__bz];"},
{"lineNum":" 2896","line":"    unique_ptr<unsigned, void(*)(void*)> __gb(__gbuf, __do_nothing);"},
{"lineNum":" 2897","line":"    unsigned* __gn = __gb.get();"},
{"lineNum":" 2898","line":"    unsigned* __ge = __gn + __bz;"},
{"lineNum":" 2899","line":"    money_base::pattern __pat;"},
{"lineNum":" 2900","line":"    char_type __dp;"},
{"lineNum":" 2901","line":"    char_type __ts;"},
{"lineNum":" 2902","line":"    string __grp;"},
{"lineNum":" 2903","line":"    string_type __sym;"},
{"lineNum":" 2904","line":"    string_type __psn;"},
{"lineNum":" 2905","line":"    string_type __nsn;"},
{"lineNum":" 2906","line":"    // Capture the spaces read into money_base::{space,none} so they"},
{"lineNum":" 2907","line":"    // can be compared to initial spaces in __sym."},
{"lineNum":" 2908","line":"    string_type __spaces;"},
{"lineNum":" 2909","line":"    int __fd;"},
{"lineNum":" 2910","line":"    __money_get<_CharT>::__gather_info(__intl, __loc, __pat, __dp, __ts, __grp,"},
{"lineNum":" 2911","line":"                                       __sym, __psn, __nsn, __fd);"},
{"lineNum":" 2912","line":"    const string_type* __trailing_sign = 0;"},
{"lineNum":" 2913","line":"    __wn = __wb.get();"},
{"lineNum":" 2914","line":"    for (unsigned __p = 0; __p < 4 && __b != __e; ++__p)"},
{"lineNum":" 2915","line":"    {"},
{"lineNum":" 2916","line":"        switch (__pat.field[__p])"},
{"lineNum":" 2917","line":"        {"},
{"lineNum":" 2918","line":"        case money_base::space:"},
{"lineNum":" 2919","line":"            if (__p != 3)"},
{"lineNum":" 2920","line":"            {"},
{"lineNum":" 2921","line":"                if (__ct.is(ctype_base::space, *__b))"},
{"lineNum":" 2922","line":"                    __spaces.push_back(*__b++);"},
{"lineNum":" 2923","line":"                else"},
{"lineNum":" 2924","line":"                {"},
{"lineNum":" 2925","line":"                    __err |= ios_base::failbit;"},
{"lineNum":" 2926","line":"                    return false;"},
{"lineNum":" 2927","line":"                }"},
{"lineNum":" 2928","line":"            }"},
{"lineNum":" 2929","line":"            _LIBCPP_FALLTHROUGH();"},
{"lineNum":" 2930","line":"        case money_base::none:"},
{"lineNum":" 2931","line":"            if (__p != 3)"},
{"lineNum":" 2932","line":"            {"},
{"lineNum":" 2933","line":"                while (__b != __e && __ct.is(ctype_base::space, *__b))"},
{"lineNum":" 2934","line":"                    __spaces.push_back(*__b++);"},
{"lineNum":" 2935","line":"            }"},
{"lineNum":" 2936","line":"            break;"},
{"lineNum":" 2937","line":"        case money_base::sign:"},
{"lineNum":" 2938","line":"            if (__psn.size() + __nsn.size() > 0)"},
{"lineNum":" 2939","line":"            {"},
{"lineNum":" 2940","line":"                if (__psn.size() == 0 || __nsn.size() == 0)"},
{"lineNum":" 2941","line":"                {   // sign is optional"},
{"lineNum":" 2942","line":"                    if (__psn.size() > 0)"},
{"lineNum":" 2943","line":"                    {   // __nsn.size() == 0"},
{"lineNum":" 2944","line":"                        if (*__b == __psn[0])"},
{"lineNum":" 2945","line":"                        {"},
{"lineNum":" 2946","line":"                            ++__b;"},
{"lineNum":" 2947","line":"                            if (__psn.size() > 1)"},
{"lineNum":" 2948","line":"                                __trailing_sign = &__psn;"},
{"lineNum":" 2949","line":"                        }"},
{"lineNum":" 2950","line":"                        else"},
{"lineNum":" 2951","line":"                            __neg = true;"},
{"lineNum":" 2952","line":"                    }"},
{"lineNum":" 2953","line":"                    else if (*__b == __nsn[0])  // __nsn.size() > 0 &&  __psn.size() == 0"},
{"lineNum":" 2954","line":"                    {"},
{"lineNum":" 2955","line":"                        ++__b;"},
{"lineNum":" 2956","line":"                        __neg = true;"},
{"lineNum":" 2957","line":"                        if (__nsn.size() > 1)"},
{"lineNum":" 2958","line":"                            __trailing_sign = &__nsn;"},
{"lineNum":" 2959","line":"                    }"},
{"lineNum":" 2960","line":"                }"},
{"lineNum":" 2961","line":"                else  // sign is required"},
{"lineNum":" 2962","line":"                {"},
{"lineNum":" 2963","line":"                    if (*__b == __psn[0])"},
{"lineNum":" 2964","line":"                    {"},
{"lineNum":" 2965","line":"                        ++__b;"},
{"lineNum":" 2966","line":"                        if (__psn.size() > 1)"},
{"lineNum":" 2967","line":"                            __trailing_sign = &__psn;"},
{"lineNum":" 2968","line":"                    }"},
{"lineNum":" 2969","line":"                    else if (*__b == __nsn[0])"},
{"lineNum":" 2970","line":"                    {"},
{"lineNum":" 2971","line":"                        ++__b;"},
{"lineNum":" 2972","line":"                        __neg = true;"},
{"lineNum":" 2973","line":"                        if (__nsn.size() > 1)"},
{"lineNum":" 2974","line":"                            __trailing_sign = &__nsn;"},
{"lineNum":" 2975","line":"                    }"},
{"lineNum":" 2976","line":"                    else"},
{"lineNum":" 2977","line":"                    {"},
{"lineNum":" 2978","line":"                        __err |= ios_base::failbit;"},
{"lineNum":" 2979","line":"                        return false;"},
{"lineNum":" 2980","line":"                    }"},
{"lineNum":" 2981","line":"                }"},
{"lineNum":" 2982","line":"            }"},
{"lineNum":" 2983","line":"            break;"},
{"lineNum":" 2984","line":"        case money_base::symbol:"},
{"lineNum":" 2985","line":"            {"},
{"lineNum":" 2986","line":"            bool __more_needed = __trailing_sign ||"},
{"lineNum":" 2987","line":"                                 (__p < 2)       ||"},
{"lineNum":" 2988","line":"                                 (__p == 2 && __pat.field[3] != static_cast<char>(money_base::none));"},
{"lineNum":" 2989","line":"            bool __sb = (__flags & ios_base::showbase) != 0;"},
{"lineNum":" 2990","line":"            if (__sb || __more_needed)"},
{"lineNum":" 2991","line":"            {"},
{"lineNum":" 2992","line":"                typename string_type::const_iterator __sym_space_end = __sym.begin();"},
{"lineNum":" 2993","line":"                if (__p > 0 && (__pat.field[__p - 1] == money_base::none ||"},
{"lineNum":" 2994","line":"                                __pat.field[__p - 1] == money_base::space)) {"},
{"lineNum":" 2995","line":"                    // Match spaces we\'ve already read against spaces at"},
{"lineNum":" 2996","line":"                    // the beginning of __sym."},
{"lineNum":" 2997","line":"                    while (__sym_space_end != __sym.end() &&"},
{"lineNum":" 2998","line":"                           __ct.is(ctype_base::space, *__sym_space_end))"},
{"lineNum":" 2999","line":"                        ++__sym_space_end;"},
{"lineNum":" 3000","line":"                    const size_t __num_spaces = __sym_space_end - __sym.begin();"},
{"lineNum":" 3001","line":"                    if (__num_spaces > __spaces.size() ||"},
{"lineNum":" 3002","line":"                        !equal(__spaces.end() - __num_spaces, __spaces.end(),"},
{"lineNum":" 3003","line":"                               __sym.begin())) {"},
{"lineNum":" 3004","line":"                        // No match. Put __sym_space_end back at the"},
{"lineNum":" 3005","line":"                        // beginning of __sym, which will prevent a"},
{"lineNum":" 3006","line":"                        // match in the next loop."},
{"lineNum":" 3007","line":"                        __sym_space_end = __sym.begin();"},
{"lineNum":" 3008","line":"                    }"},
{"lineNum":" 3009","line":"                }"},
{"lineNum":" 3010","line":"                typename string_type::const_iterator __sym_curr_char = __sym_space_end;"},
{"lineNum":" 3011","line":"                while (__sym_curr_char != __sym.end() && __b != __e &&"},
{"lineNum":" 3012","line":"                       *__b == *__sym_curr_char) {"},
{"lineNum":" 3013","line":"                    ++__b;"},
{"lineNum":" 3014","line":"                    ++__sym_curr_char;"},
{"lineNum":" 3015","line":"                }"},
{"lineNum":" 3016","line":"                if (__sb && __sym_curr_char != __sym.end())"},
{"lineNum":" 3017","line":"                {"},
{"lineNum":" 3018","line":"                    __err |= ios_base::failbit;"},
{"lineNum":" 3019","line":"                    return false;"},
{"lineNum":" 3020","line":"                }"},
{"lineNum":" 3021","line":"            }"},
{"lineNum":" 3022","line":"            }"},
{"lineNum":" 3023","line":"            break;"},
{"lineNum":" 3024","line":"        case money_base::value:"},
{"lineNum":" 3025","line":"            {"},
{"lineNum":" 3026","line":"            unsigned __ng = 0;"},
{"lineNum":" 3027","line":"            for (; __b != __e; ++__b)"},
{"lineNum":" 3028","line":"            {"},
{"lineNum":" 3029","line":"                char_type __c = *__b;"},
{"lineNum":" 3030","line":"                if (__ct.is(ctype_base::digit, __c))"},
{"lineNum":" 3031","line":"                {"},
{"lineNum":" 3032","line":"                    if (__wn == __we)"},
{"lineNum":" 3033","line":"                        __double_or_nothing(__wb, __wn, __we);"},
{"lineNum":" 3034","line":"                    *__wn++ = __c;"},
{"lineNum":" 3035","line":"                    ++__ng;"},
{"lineNum":" 3036","line":"                }"},
{"lineNum":" 3037","line":"                else if (__grp.size() > 0 && __ng > 0 && __c == __ts)"},
{"lineNum":" 3038","line":"                {"},
{"lineNum":" 3039","line":"                    if (__gn == __ge)"},
{"lineNum":" 3040","line":"                        __double_or_nothing(__gb, __gn, __ge);"},
{"lineNum":" 3041","line":"                    *__gn++ = __ng;"},
{"lineNum":" 3042","line":"                    __ng = 0;"},
{"lineNum":" 3043","line":"                }"},
{"lineNum":" 3044","line":"                else"},
{"lineNum":" 3045","line":"                    break;"},
{"lineNum":" 3046","line":"            }"},
{"lineNum":" 3047","line":"            if (__gb.get() != __gn && __ng > 0)"},
{"lineNum":" 3048","line":"            {"},
{"lineNum":" 3049","line":"                if (__gn == __ge)"},
{"lineNum":" 3050","line":"                    __double_or_nothing(__gb, __gn, __ge);"},
{"lineNum":" 3051","line":"                *__gn++ = __ng;"},
{"lineNum":" 3052","line":"            }"},
{"lineNum":" 3053","line":"            if (__fd > 0)"},
{"lineNum":" 3054","line":"            {"},
{"lineNum":" 3055","line":"                if (__b == __e || *__b != __dp)"},
{"lineNum":" 3056","line":"                {"},
{"lineNum":" 3057","line":"                    __err |= ios_base::failbit;"},
{"lineNum":" 3058","line":"                    return false;"},
{"lineNum":" 3059","line":"                }"},
{"lineNum":" 3060","line":"                for (++__b; __fd > 0; --__fd, ++__b)"},
{"lineNum":" 3061","line":"                {"},
{"lineNum":" 3062","line":"                    if (__b == __e || !__ct.is(ctype_base::digit, *__b))"},
{"lineNum":" 3063","line":"                    {"},
{"lineNum":" 3064","line":"                        __err |= ios_base::failbit;"},
{"lineNum":" 3065","line":"                        return false;"},
{"lineNum":" 3066","line":"                    }"},
{"lineNum":" 3067","line":"                    if (__wn == __we)"},
{"lineNum":" 3068","line":"                        __double_or_nothing(__wb, __wn, __we);"},
{"lineNum":" 3069","line":"                    *__wn++ = *__b;"},
{"lineNum":" 3070","line":"                }"},
{"lineNum":" 3071","line":"            }"},
{"lineNum":" 3072","line":"            if (__wn == __wb.get())"},
{"lineNum":" 3073","line":"            {"},
{"lineNum":" 3074","line":"                __err |= ios_base::failbit;"},
{"lineNum":" 3075","line":"                return false;"},
{"lineNum":" 3076","line":"            }"},
{"lineNum":" 3077","line":"            }"},
{"lineNum":" 3078","line":"            break;"},
{"lineNum":" 3079","line":"        }"},
{"lineNum":" 3080","line":"    }"},
{"lineNum":" 3081","line":"    if (__trailing_sign)"},
{"lineNum":" 3082","line":"    {"},
{"lineNum":" 3083","line":"        for (unsigned __i = 1; __i < __trailing_sign->size(); ++__i, ++__b)"},
{"lineNum":" 3084","line":"        {"},
{"lineNum":" 3085","line":"            if (__b == __e || *__b != (*__trailing_sign)[__i])"},
{"lineNum":" 3086","line":"            {"},
{"lineNum":" 3087","line":"                __err |= ios_base::failbit;"},
{"lineNum":" 3088","line":"                return false;"},
{"lineNum":" 3089","line":"            }"},
{"lineNum":" 3090","line":"        }"},
{"lineNum":" 3091","line":"    }"},
{"lineNum":" 3092","line":"    if (__gb.get() != __gn)"},
{"lineNum":" 3093","line":"    {"},
{"lineNum":" 3094","line":"        ios_base::iostate __et = ios_base::goodbit;"},
{"lineNum":" 3095","line":"        __check_grouping(__grp, __gb.get(), __gn, __et);"},
{"lineNum":" 3096","line":"        if (__et)"},
{"lineNum":" 3097","line":"        {"},
{"lineNum":" 3098","line":"            __err |= ios_base::failbit;"},
{"lineNum":" 3099","line":"            return false;"},
{"lineNum":" 3100","line":"        }"},
{"lineNum":" 3101","line":"    }"},
{"lineNum":" 3102","line":"    return true;"},
{"lineNum":" 3103","line":"}"},
{"lineNum":" 3104","line":""},
{"lineNum":" 3105","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":" 3106","line":"_InputIterator"},
{"lineNum":" 3107","line":"money_get<_CharT, _InputIterator>::do_get(iter_type __b, iter_type __e,"},
{"lineNum":" 3108","line":"                                          bool __intl, ios_base& __iob,"},
{"lineNum":" 3109","line":"                                          ios_base::iostate& __err,"},
{"lineNum":" 3110","line":"                                          long double& __v) const"},
{"lineNum":" 3111","line":"{"},
{"lineNum":" 3112","line":"    const int __bz = 100;"},
{"lineNum":" 3113","line":"    char_type __wbuf[__bz];"},
{"lineNum":" 3114","line":"    unique_ptr<char_type, void(*)(void*)> __wb(__wbuf, __do_nothing);"},
{"lineNum":" 3115","line":"    char_type* __wn;"},
{"lineNum":" 3116","line":"    char_type* __we = __wbuf + __bz;"},
{"lineNum":" 3117","line":"    locale __loc = __iob.getloc();"},
{"lineNum":" 3118","line":"    const ctype<char_type>& __ct = use_facet<ctype<char_type> >(__loc);"},
{"lineNum":" 3119","line":"    bool __neg = false;"},
{"lineNum":" 3120","line":"    if (__do_get(__b, __e, __intl, __loc, __iob.flags(), __err, __neg, __ct,"},
{"lineNum":" 3121","line":"                 __wb, __wn, __we))"},
{"lineNum":" 3122","line":"    {"},
{"lineNum":" 3123","line":"        const char __src[] = \"0123456789\";"},
{"lineNum":" 3124","line":"        char_type __atoms[sizeof(__src)-1];"},
{"lineNum":" 3125","line":"        __ct.widen(__src, __src + (sizeof(__src)-1), __atoms);"},
{"lineNum":" 3126","line":"        char __nbuf[__bz];"},
{"lineNum":" 3127","line":"        char* __nc = __nbuf;"},
{"lineNum":" 3128","line":"        unique_ptr<char, void(*)(void*)> __h(nullptr, free);"},
{"lineNum":" 3129","line":"        if (__wn - __wb.get() > __bz-2)"},
{"lineNum":" 3130","line":"        {"},
{"lineNum":" 3131","line":"            __h.reset((char*)malloc(static_cast<size_t>(__wn - __wb.get() + 2)));"},
{"lineNum":" 3132","line":"            if (__h.get() == nullptr)"},
{"lineNum":" 3133","line":"                __throw_bad_alloc();"},
{"lineNum":" 3134","line":"            __nc = __h.get();"},
{"lineNum":" 3135","line":"        }"},
{"lineNum":" 3136","line":"        if (__neg)"},
{"lineNum":" 3137","line":"            *__nc++ = \'-\';"},
{"lineNum":" 3138","line":"        for (const char_type* __w = __wb.get(); __w < __wn; ++__w, ++__nc)"},
{"lineNum":" 3139","line":"            *__nc = __src[find(__atoms, _VSTD::end(__atoms), *__w) - __atoms];"},
{"lineNum":" 3140","line":"        *__nc = char();"},
{"lineNum":" 3141","line":"        if (sscanf(__nbuf, \"%Lf\", &__v) != 1)"},
{"lineNum":" 3142","line":"            __throw_runtime_error(\"money_get error\");"},
{"lineNum":" 3143","line":"    }"},
{"lineNum":" 3144","line":"    if (__b == __e)"},
{"lineNum":" 3145","line":"        __err |= ios_base::eofbit;"},
{"lineNum":" 3146","line":"    return __b;"},
{"lineNum":" 3147","line":"}"},
{"lineNum":" 3148","line":""},
{"lineNum":" 3149","line":"template <class _CharT, class _InputIterator>"},
{"lineNum":" 3150","line":"_InputIterator"},
{"lineNum":" 3151","line":"money_get<_CharT, _InputIterator>::do_get(iter_type __b, iter_type __e,"},
{"lineNum":" 3152","line":"                                          bool __intl, ios_base& __iob,"},
{"lineNum":" 3153","line":"                                          ios_base::iostate& __err,"},
{"lineNum":" 3154","line":"                                          string_type& __v) const"},
{"lineNum":" 3155","line":"{"},
{"lineNum":" 3156","line":"    const int __bz = 100;"},
{"lineNum":" 3157","line":"    char_type __wbuf[__bz];"},
{"lineNum":" 3158","line":"    unique_ptr<char_type, void(*)(void*)> __wb(__wbuf, __do_nothing);"},
{"lineNum":" 3159","line":"    char_type* __wn;"},
{"lineNum":" 3160","line":"    char_type* __we = __wbuf + __bz;"},
{"lineNum":" 3161","line":"    locale __loc = __iob.getloc();"},
{"lineNum":" 3162","line":"    const ctype<char_type>& __ct = use_facet<ctype<char_type> >(__loc);"},
{"lineNum":" 3163","line":"    bool __neg = false;"},
{"lineNum":" 3164","line":"    if (__do_get(__b, __e, __intl, __loc, __iob.flags(), __err, __neg, __ct,"},
{"lineNum":" 3165","line":"                 __wb, __wn, __we))"},
{"lineNum":" 3166","line":"    {"},
{"lineNum":" 3167","line":"        __v.clear();"},
{"lineNum":" 3168","line":"        if (__neg)"},
{"lineNum":" 3169","line":"            __v.push_back(__ct.widen(\'-\'));"},
{"lineNum":" 3170","line":"        char_type __z = __ct.widen(\'0\');"},
{"lineNum":" 3171","line":"        char_type* __w;"},
{"lineNum":" 3172","line":"        for (__w = __wb.get(); __w < __wn-1; ++__w)"},
{"lineNum":" 3173","line":"            if (*__w != __z)"},
{"lineNum":" 3174","line":"                break;"},
{"lineNum":" 3175","line":"        __v.append(__w, __wn);"},
{"lineNum":" 3176","line":"    }"},
{"lineNum":" 3177","line":"    if (__b == __e)"},
{"lineNum":" 3178","line":"        __err |= ios_base::eofbit;"},
{"lineNum":" 3179","line":"    return __b;"},
{"lineNum":" 3180","line":"}"},
{"lineNum":" 3181","line":""},
{"lineNum":" 3182","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS money_get<char>)"},
{"lineNum":" 3183","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS money_get<wchar_t>)"},
{"lineNum":" 3184","line":""},
{"lineNum":" 3185","line":"// money_put"},
{"lineNum":" 3186","line":""},
{"lineNum":" 3187","line":"template <class _CharT>"},
{"lineNum":" 3188","line":"class __money_put"},
{"lineNum":" 3189","line":"{"},
{"lineNum":" 3190","line":"protected:"},
{"lineNum":" 3191","line":"    typedef _CharT                  char_type;"},
{"lineNum":" 3192","line":"    typedef basic_string<char_type> string_type;"},
{"lineNum":" 3193","line":""},
{"lineNum":" 3194","line":"    _LIBCPP_INLINE_VISIBILITY __money_put() {}"},
{"lineNum":" 3195","line":""},
{"lineNum":" 3196","line":"    static void __gather_info(bool __intl, bool __neg, const locale& __loc,"},
{"lineNum":" 3197","line":"                              money_base::pattern& __pat, char_type& __dp,"},
{"lineNum":" 3198","line":"                              char_type& __ts, string& __grp,"},
{"lineNum":" 3199","line":"                              string_type& __sym, string_type& __sn,"},
{"lineNum":" 3200","line":"                              int& __fd);"},
{"lineNum":" 3201","line":"    static void __format(char_type* __mb, char_type*& __mi, char_type*& __me,"},
{"lineNum":" 3202","line":"                         ios_base::fmtflags __flags,"},
{"lineNum":" 3203","line":"                         const char_type* __db, const char_type* __de,"},
{"lineNum":" 3204","line":"                         const ctype<char_type>& __ct, bool __neg,"},
{"lineNum":" 3205","line":"                         const money_base::pattern& __pat, char_type __dp,"},
{"lineNum":" 3206","line":"                         char_type __ts, const string& __grp,"},
{"lineNum":" 3207","line":"                         const string_type& __sym, const string_type& __sn,"},
{"lineNum":" 3208","line":"                         int __fd);"},
{"lineNum":" 3209","line":"};"},
{"lineNum":" 3210","line":""},
{"lineNum":" 3211","line":"template <class _CharT>"},
{"lineNum":" 3212","line":"void"},
{"lineNum":" 3213","line":"__money_put<_CharT>::__gather_info(bool __intl, bool __neg, const locale& __loc,"},
{"lineNum":" 3214","line":"                                   money_base::pattern& __pat, char_type& __dp,"},
{"lineNum":" 3215","line":"                                   char_type& __ts, string& __grp,"},
{"lineNum":" 3216","line":"                                   string_type& __sym, string_type& __sn,"},
{"lineNum":" 3217","line":"                                   int& __fd)"},
{"lineNum":" 3218","line":"{"},
{"lineNum":" 3219","line":"    if (__intl)"},
{"lineNum":" 3220","line":"    {"},
{"lineNum":" 3221","line":"        const moneypunct<char_type, true>& __mp ="},
{"lineNum":" 3222","line":"            use_facet<moneypunct<char_type, true> >(__loc);"},
{"lineNum":" 3223","line":"        if (__neg)"},
{"lineNum":" 3224","line":"        {"},
{"lineNum":" 3225","line":"            __pat = __mp.neg_format();"},
{"lineNum":" 3226","line":"            __sn = __mp.negative_sign();"},
{"lineNum":" 3227","line":"        }"},
{"lineNum":" 3228","line":"        else"},
{"lineNum":" 3229","line":"        {"},
{"lineNum":" 3230","line":"            __pat = __mp.pos_format();"},
{"lineNum":" 3231","line":"            __sn = __mp.positive_sign();"},
{"lineNum":" 3232","line":"        }"},
{"lineNum":" 3233","line":"        __dp = __mp.decimal_point();"},
{"lineNum":" 3234","line":"        __ts = __mp.thousands_sep();"},
{"lineNum":" 3235","line":"        __grp = __mp.grouping();"},
{"lineNum":" 3236","line":"        __sym = __mp.curr_symbol();"},
{"lineNum":" 3237","line":"        __fd = __mp.frac_digits();"},
{"lineNum":" 3238","line":"    }"},
{"lineNum":" 3239","line":"    else"},
{"lineNum":" 3240","line":"    {"},
{"lineNum":" 3241","line":"        const moneypunct<char_type, false>& __mp ="},
{"lineNum":" 3242","line":"            use_facet<moneypunct<char_type, false> >(__loc);"},
{"lineNum":" 3243","line":"        if (__neg)"},
{"lineNum":" 3244","line":"        {"},
{"lineNum":" 3245","line":"            __pat = __mp.neg_format();"},
{"lineNum":" 3246","line":"            __sn = __mp.negative_sign();"},
{"lineNum":" 3247","line":"        }"},
{"lineNum":" 3248","line":"        else"},
{"lineNum":" 3249","line":"        {"},
{"lineNum":" 3250","line":"            __pat = __mp.pos_format();"},
{"lineNum":" 3251","line":"            __sn = __mp.positive_sign();"},
{"lineNum":" 3252","line":"        }"},
{"lineNum":" 3253","line":"        __dp = __mp.decimal_point();"},
{"lineNum":" 3254","line":"        __ts = __mp.thousands_sep();"},
{"lineNum":" 3255","line":"        __grp = __mp.grouping();"},
{"lineNum":" 3256","line":"        __sym = __mp.curr_symbol();"},
{"lineNum":" 3257","line":"        __fd = __mp.frac_digits();"},
{"lineNum":" 3258","line":"    }"},
{"lineNum":" 3259","line":"}"},
{"lineNum":" 3260","line":""},
{"lineNum":" 3261","line":"template <class _CharT>"},
{"lineNum":" 3262","line":"void"},
{"lineNum":" 3263","line":"__money_put<_CharT>::__format(char_type* __mb, char_type*& __mi, char_type*& __me,"},
{"lineNum":" 3264","line":"                              ios_base::fmtflags __flags,"},
{"lineNum":" 3265","line":"                              const char_type* __db, const char_type* __de,"},
{"lineNum":" 3266","line":"                              const ctype<char_type>& __ct, bool __neg,"},
{"lineNum":" 3267","line":"                              const money_base::pattern& __pat, char_type __dp,"},
{"lineNum":" 3268","line":"                              char_type __ts, const string& __grp,"},
{"lineNum":" 3269","line":"                              const string_type& __sym, const string_type& __sn,"},
{"lineNum":" 3270","line":"                              int __fd)"},
{"lineNum":" 3271","line":"{"},
{"lineNum":" 3272","line":"    __me = __mb;"},
{"lineNum":" 3273","line":"    for (unsigned __p = 0; __p < 4; ++__p)"},
{"lineNum":" 3274","line":"    {"},
{"lineNum":" 3275","line":"        switch (__pat.field[__p])"},
{"lineNum":" 3276","line":"        {"},
{"lineNum":" 3277","line":"        case money_base::none:"},
{"lineNum":" 3278","line":"            __mi = __me;"},
{"lineNum":" 3279","line":"            break;"},
{"lineNum":" 3280","line":"        case money_base::space:"},
{"lineNum":" 3281","line":"            __mi = __me;"},
{"lineNum":" 3282","line":"            *__me++ = __ct.widen(\' \');"},
{"lineNum":" 3283","line":"            break;"},
{"lineNum":" 3284","line":"        case money_base::sign:"},
{"lineNum":" 3285","line":"            if (!__sn.empty())"},
{"lineNum":" 3286","line":"                *__me++ = __sn[0];"},
{"lineNum":" 3287","line":"            break;"},
{"lineNum":" 3288","line":"        case money_base::symbol:"},
{"lineNum":" 3289","line":"            if (!__sym.empty() && (__flags & ios_base::showbase))"},
{"lineNum":" 3290","line":"                __me = _VSTD::copy(__sym.begin(), __sym.end(), __me);"},
{"lineNum":" 3291","line":"            break;"},
{"lineNum":" 3292","line":"        case money_base::value:"},
{"lineNum":" 3293","line":"            {"},
{"lineNum":" 3294","line":"            // remember start of value so we can reverse it"},
{"lineNum":" 3295","line":"            char_type* __t = __me;"},
{"lineNum":" 3296","line":"            // find beginning of digits"},
{"lineNum":" 3297","line":"            if (__neg)"},
{"lineNum":" 3298","line":"                ++__db;"},
{"lineNum":" 3299","line":"            // find end of digits"},
{"lineNum":" 3300","line":"            const char_type* __d;"},
{"lineNum":" 3301","line":"            for (__d = __db; __d < __de; ++__d)"},
{"lineNum":" 3302","line":"                if (!__ct.is(ctype_base::digit, *__d))"},
{"lineNum":" 3303","line":"                    break;"},
{"lineNum":" 3304","line":"            // print fractional part"},
{"lineNum":" 3305","line":"            if (__fd > 0)"},
{"lineNum":" 3306","line":"            {"},
{"lineNum":" 3307","line":"                int __f;"},
{"lineNum":" 3308","line":"                for (__f = __fd; __d > __db && __f > 0; --__f)"},
{"lineNum":" 3309","line":"                    *__me++ = *--__d;"},
{"lineNum":" 3310","line":"                char_type __z = __f > 0 ? __ct.widen(\'0\') : char_type();"},
{"lineNum":" 3311","line":"                for (; __f > 0; --__f)"},
{"lineNum":" 3312","line":"                    *__me++ = __z;"},
{"lineNum":" 3313","line":"                *__me++ = __dp;"},
{"lineNum":" 3314","line":"            }"},
{"lineNum":" 3315","line":"            // print units part"},
{"lineNum":" 3316","line":"            if (__d == __db)"},
{"lineNum":" 3317","line":"            {"},
{"lineNum":" 3318","line":"                *__me++ = __ct.widen(\'0\');"},
{"lineNum":" 3319","line":"            }"},
{"lineNum":" 3320","line":"            else"},
{"lineNum":" 3321","line":"            {"},
{"lineNum":" 3322","line":"                unsigned __ng = 0;"},
{"lineNum":" 3323","line":"                unsigned __ig = 0;"},
{"lineNum":" 3324","line":"                unsigned __gl = __grp.empty() ? numeric_limits<unsigned>::max()"},
{"lineNum":" 3325","line":"                                              : static_cast<unsigned>(__grp[__ig]);"},
{"lineNum":" 3326","line":"                while (__d != __db)"},
{"lineNum":" 3327","line":"                {"},
{"lineNum":" 3328","line":"                    if (__ng == __gl)"},
{"lineNum":" 3329","line":"                    {"},
{"lineNum":" 3330","line":"                        *__me++ = __ts;"},
{"lineNum":" 3331","line":"                        __ng = 0;"},
{"lineNum":" 3332","line":"                        if (++__ig < __grp.size())"},
{"lineNum":" 3333","line":"                            __gl = __grp[__ig] == numeric_limits<char>::max() ?"},
{"lineNum":" 3334","line":"                                        numeric_limits<unsigned>::max() :"},
{"lineNum":" 3335","line":"                                        static_cast<unsigned>(__grp[__ig]);"},
{"lineNum":" 3336","line":"                    }"},
{"lineNum":" 3337","line":"                    *__me++ = *--__d;"},
{"lineNum":" 3338","line":"                    ++__ng;"},
{"lineNum":" 3339","line":"                }"},
{"lineNum":" 3340","line":"            }"},
{"lineNum":" 3341","line":"            // reverse it"},
{"lineNum":" 3342","line":"            reverse(__t, __me);"},
{"lineNum":" 3343","line":"            }"},
{"lineNum":" 3344","line":"            break;"},
{"lineNum":" 3345","line":"        }"},
{"lineNum":" 3346","line":"    }"},
{"lineNum":" 3347","line":"    // print rest of sign, if any"},
{"lineNum":" 3348","line":"    if (__sn.size() > 1)"},
{"lineNum":" 3349","line":"        __me = _VSTD::copy(__sn.begin()+1, __sn.end(), __me);"},
{"lineNum":" 3350","line":"    // set alignment"},
{"lineNum":" 3351","line":"    if ((__flags & ios_base::adjustfield) == ios_base::left)"},
{"lineNum":" 3352","line":"        __mi = __me;"},
{"lineNum":" 3353","line":"    else if ((__flags & ios_base::adjustfield) != ios_base::internal)"},
{"lineNum":" 3354","line":"        __mi = __mb;"},
{"lineNum":" 3355","line":"}"},
{"lineNum":" 3356","line":""},
{"lineNum":" 3357","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS __money_put<char>)"},
{"lineNum":" 3358","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS __money_put<wchar_t>)"},
{"lineNum":" 3359","line":""},
{"lineNum":" 3360","line":"template <class _CharT, class _OutputIterator = ostreambuf_iterator<_CharT> >"},
{"lineNum":" 3361","line":"class _LIBCPP_TEMPLATE_VIS money_put"},
{"lineNum":" 3362","line":"    : public locale::facet,"},
{"lineNum":" 3363","line":"      private __money_put<_CharT>"},
{"lineNum":" 3364","line":"{"},
{"lineNum":" 3365","line":"public:"},
{"lineNum":" 3366","line":"    typedef _CharT                  char_type;"},
{"lineNum":" 3367","line":"    typedef _OutputIterator         iter_type;"},
{"lineNum":" 3368","line":"    typedef basic_string<char_type> string_type;"},
{"lineNum":" 3369","line":""},
{"lineNum":" 3370","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3371","line":"    explicit money_put(size_t __refs = 0)"},
{"lineNum":" 3372","line":"        : locale::facet(__refs) {}"},
{"lineNum":" 3373","line":""},
{"lineNum":" 3374","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3375","line":"    iter_type put(iter_type __s, bool __intl, ios_base& __iob, char_type __fl,"},
{"lineNum":" 3376","line":"                  long double __units) const"},
{"lineNum":" 3377","line":"    {"},
{"lineNum":" 3378","line":"        return do_put(__s, __intl, __iob, __fl, __units);"},
{"lineNum":" 3379","line":"    }"},
{"lineNum":" 3380","line":""},
{"lineNum":" 3381","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3382","line":"    iter_type put(iter_type __s, bool __intl, ios_base& __iob, char_type __fl,"},
{"lineNum":" 3383","line":"                  const string_type& __digits) const"},
{"lineNum":" 3384","line":"    {"},
{"lineNum":" 3385","line":"        return do_put(__s, __intl, __iob, __fl, __digits);"},
{"lineNum":" 3386","line":"    }"},
{"lineNum":" 3387","line":""},
{"lineNum":" 3388","line":"    static locale::id id;"},
{"lineNum":" 3389","line":""},
{"lineNum":" 3390","line":"protected:"},
{"lineNum":" 3391","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3392","line":"    ~money_put() {}"},
{"lineNum":" 3393","line":""},
{"lineNum":" 3394","line":"    virtual iter_type do_put(iter_type __s, bool __intl, ios_base& __iob,"},
{"lineNum":" 3395","line":"                             char_type __fl, long double __units) const;"},
{"lineNum":" 3396","line":"    virtual iter_type do_put(iter_type __s, bool __intl, ios_base& __iob,"},
{"lineNum":" 3397","line":"                             char_type __fl, const string_type& __digits) const;"},
{"lineNum":" 3398","line":"};"},
{"lineNum":" 3399","line":""},
{"lineNum":" 3400","line":"template <class _CharT, class _OutputIterator>"},
{"lineNum":" 3401","line":"locale::id"},
{"lineNum":" 3402","line":"money_put<_CharT, _OutputIterator>::id;"},
{"lineNum":" 3403","line":""},
{"lineNum":" 3404","line":"template <class _CharT, class _OutputIterator>"},
{"lineNum":" 3405","line":"_OutputIterator"},
{"lineNum":" 3406","line":"money_put<_CharT, _OutputIterator>::do_put(iter_type __s, bool __intl,"},
{"lineNum":" 3407","line":"                                           ios_base& __iob, char_type __fl,"},
{"lineNum":" 3408","line":"                                           long double __units) const"},
{"lineNum":" 3409","line":"{"},
{"lineNum":" 3410","line":"    // convert to char"},
{"lineNum":" 3411","line":"    const size_t __bs = 100;"},
{"lineNum":" 3412","line":"    char __buf[__bs];"},
{"lineNum":" 3413","line":"    char* __bb = __buf;"},
{"lineNum":" 3414","line":"    char_type __digits[__bs];"},
{"lineNum":" 3415","line":"    char_type* __db = __digits;"},
{"lineNum":" 3416","line":"    int __n = snprintf(__bb, __bs, \"%.0Lf\", __units);"},
{"lineNum":" 3417","line":"    unique_ptr<char, void(*)(void*)> __hn(nullptr, free);"},
{"lineNum":" 3418","line":"    unique_ptr<char_type, void(*)(void*)> __hd(0, free);"},
{"lineNum":" 3419","line":"    // secure memory for digit storage"},
{"lineNum":" 3420","line":"    if (static_cast<size_t>(__n) > __bs-1)"},
{"lineNum":" 3421","line":"    {"},
{"lineNum":" 3422","line":"        __n = __libcpp_asprintf_l(&__bb, _LIBCPP_GET_C_LOCALE, \"%.0Lf\", __units);"},
{"lineNum":" 3423","line":"        if (__n == -1)"},
{"lineNum":" 3424","line":"            __throw_bad_alloc();"},
{"lineNum":" 3425","line":"        __hn.reset(__bb);"},
{"lineNum":" 3426","line":"        __hd.reset((char_type*)malloc(static_cast<size_t>(__n) * sizeof(char_type)));"},
{"lineNum":" 3427","line":"        if (__hd == nullptr)"},
{"lineNum":" 3428","line":"            __throw_bad_alloc();"},
{"lineNum":" 3429","line":"        __db = __hd.get();"},
{"lineNum":" 3430","line":"    }"},
{"lineNum":" 3431","line":"    // gather info"},
{"lineNum":" 3432","line":"    locale __loc = __iob.getloc();"},
{"lineNum":" 3433","line":"    const ctype<char_type>& __ct = use_facet<ctype<char_type> >(__loc);"},
{"lineNum":" 3434","line":"    __ct.widen(__bb, __bb + __n, __db);"},
{"lineNum":" 3435","line":"    bool __neg = __n > 0 && __bb[0] == \'-\';"},
{"lineNum":" 3436","line":"    money_base::pattern __pat;"},
{"lineNum":" 3437","line":"    char_type __dp;"},
{"lineNum":" 3438","line":"    char_type __ts;"},
{"lineNum":" 3439","line":"    string __grp;"},
{"lineNum":" 3440","line":"    string_type __sym;"},
{"lineNum":" 3441","line":"    string_type __sn;"},
{"lineNum":" 3442","line":"    int __fd;"},
{"lineNum":" 3443","line":"    this->__gather_info(__intl, __neg, __loc, __pat, __dp, __ts, __grp, __sym, __sn, __fd);"},
{"lineNum":" 3444","line":"    // secure memory for formatting"},
{"lineNum":" 3445","line":"    char_type __mbuf[__bs];"},
{"lineNum":" 3446","line":"    char_type* __mb = __mbuf;"},
{"lineNum":" 3447","line":"    unique_ptr<char_type, void(*)(void*)> __hw(0, free);"},
{"lineNum":" 3448","line":"    size_t __exn = __n > __fd ?"},
{"lineNum":" 3449","line":"                   (static_cast<size_t>(__n) - static_cast<size_t>(__fd)) * 2 +"},
{"lineNum":" 3450","line":"                    __sn.size() + __sym.size() + static_cast<size_t>(__fd) + 1"},
{"lineNum":" 3451","line":"                 : __sn.size() + __sym.size() + static_cast<size_t>(__fd) + 2;"},
{"lineNum":" 3452","line":"    if (__exn > __bs)"},
{"lineNum":" 3453","line":"    {"},
{"lineNum":" 3454","line":"        __hw.reset((char_type*)malloc(__exn * sizeof(char_type)));"},
{"lineNum":" 3455","line":"        __mb = __hw.get();"},
{"lineNum":" 3456","line":"        if (__mb == 0)"},
{"lineNum":" 3457","line":"            __throw_bad_alloc();"},
{"lineNum":" 3458","line":"    }"},
{"lineNum":" 3459","line":"    // format"},
{"lineNum":" 3460","line":"    char_type* __mi;"},
{"lineNum":" 3461","line":"    char_type* __me;"},
{"lineNum":" 3462","line":"    this->__format(__mb, __mi, __me, __iob.flags(),"},
{"lineNum":" 3463","line":"                   __db, __db + __n, __ct,"},
{"lineNum":" 3464","line":"                   __neg, __pat, __dp, __ts, __grp, __sym, __sn, __fd);"},
{"lineNum":" 3465","line":"    return __pad_and_output(__s, __mb, __mi, __me, __iob, __fl);"},
{"lineNum":" 3466","line":"}"},
{"lineNum":" 3467","line":""},
{"lineNum":" 3468","line":"template <class _CharT, class _OutputIterator>"},
{"lineNum":" 3469","line":"_OutputIterator"},
{"lineNum":" 3470","line":"money_put<_CharT, _OutputIterator>::do_put(iter_type __s, bool __intl,"},
{"lineNum":" 3471","line":"                                           ios_base& __iob, char_type __fl,"},
{"lineNum":" 3472","line":"                                           const string_type& __digits) const"},
{"lineNum":" 3473","line":"{"},
{"lineNum":" 3474","line":"    // gather info"},
{"lineNum":" 3475","line":"    locale __loc = __iob.getloc();"},
{"lineNum":" 3476","line":"    const ctype<char_type>& __ct = use_facet<ctype<char_type> >(__loc);"},
{"lineNum":" 3477","line":"    bool __neg = __digits.size() > 0 && __digits[0] == __ct.widen(\'-\');"},
{"lineNum":" 3478","line":"    money_base::pattern __pat;"},
{"lineNum":" 3479","line":"    char_type __dp;"},
{"lineNum":" 3480","line":"    char_type __ts;"},
{"lineNum":" 3481","line":"    string __grp;"},
{"lineNum":" 3482","line":"    string_type __sym;"},
{"lineNum":" 3483","line":"    string_type __sn;"},
{"lineNum":" 3484","line":"    int __fd;"},
{"lineNum":" 3485","line":"    this->__gather_info(__intl, __neg, __loc, __pat, __dp, __ts, __grp, __sym, __sn, __fd);"},
{"lineNum":" 3486","line":"    // secure memory for formatting"},
{"lineNum":" 3487","line":"    char_type __mbuf[100];"},
{"lineNum":" 3488","line":"    char_type* __mb = __mbuf;"},
{"lineNum":" 3489","line":"    unique_ptr<char_type, void(*)(void*)> __h(0, free);"},
{"lineNum":" 3490","line":"    size_t __exn = static_cast<int>(__digits.size()) > __fd ?"},
{"lineNum":" 3491","line":"                   (__digits.size() - static_cast<size_t>(__fd)) * 2 +"},
{"lineNum":" 3492","line":"                    __sn.size() + __sym.size() + static_cast<size_t>(__fd) + 1"},
{"lineNum":" 3493","line":"                 : __sn.size() + __sym.size() + static_cast<size_t>(__fd) + 2;"},
{"lineNum":" 3494","line":"    if (__exn > 100)"},
{"lineNum":" 3495","line":"    {"},
{"lineNum":" 3496","line":"        __h.reset((char_type*)malloc(__exn * sizeof(char_type)));"},
{"lineNum":" 3497","line":"        __mb = __h.get();"},
{"lineNum":" 3498","line":"        if (__mb == 0)"},
{"lineNum":" 3499","line":"            __throw_bad_alloc();"},
{"lineNum":" 3500","line":"    }"},
{"lineNum":" 3501","line":"    // format"},
{"lineNum":" 3502","line":"    char_type* __mi;"},
{"lineNum":" 3503","line":"    char_type* __me;"},
{"lineNum":" 3504","line":"    this->__format(__mb, __mi, __me, __iob.flags(),"},
{"lineNum":" 3505","line":"                   __digits.data(), __digits.data() + __digits.size(), __ct,"},
{"lineNum":" 3506","line":"                   __neg, __pat, __dp, __ts, __grp, __sym, __sn, __fd);"},
{"lineNum":" 3507","line":"    return __pad_and_output(__s, __mb, __mi, __me, __iob, __fl);"},
{"lineNum":" 3508","line":"}"},
{"lineNum":" 3509","line":""},
{"lineNum":" 3510","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS money_put<char>)"},
{"lineNum":" 3511","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS money_put<wchar_t>)"},
{"lineNum":" 3512","line":""},
{"lineNum":" 3513","line":"// messages"},
{"lineNum":" 3514","line":""},
{"lineNum":" 3515","line":"class _LIBCPP_TYPE_VIS messages_base"},
{"lineNum":" 3516","line":"{"},
{"lineNum":" 3517","line":"public:"},
{"lineNum":" 3518","line":"    typedef ptrdiff_t catalog;"},
{"lineNum":" 3519","line":""},
{"lineNum":" 3520","line":"    _LIBCPP_INLINE_VISIBILITY messages_base() {}"},
{"lineNum":" 3521","line":"};"},
{"lineNum":" 3522","line":""},
{"lineNum":" 3523","line":"template <class _CharT>"},
{"lineNum":" 3524","line":"class _LIBCPP_TEMPLATE_VIS messages"},
{"lineNum":" 3525","line":"    : public locale::facet,"},
{"lineNum":" 3526","line":"      public messages_base"},
{"lineNum":" 3527","line":"{"},
{"lineNum":" 3528","line":"public:"},
{"lineNum":" 3529","line":"    typedef _CharT               char_type;"},
{"lineNum":" 3530","line":"    typedef basic_string<_CharT> string_type;"},
{"lineNum":" 3531","line":""},
{"lineNum":" 3532","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3533","line":"    explicit messages(size_t __refs = 0)"},
{"lineNum":" 3534","line":"        : locale::facet(__refs) {}"},
{"lineNum":" 3535","line":""},
{"lineNum":" 3536","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3537","line":"    catalog open(const basic_string<char>& __nm, const locale& __loc) const"},
{"lineNum":" 3538","line":"    {"},
{"lineNum":" 3539","line":"        return do_open(__nm, __loc);"},
{"lineNum":" 3540","line":"    }"},
{"lineNum":" 3541","line":""},
{"lineNum":" 3542","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3543","line":"    string_type get(catalog __c, int __set, int __msgid,"},
{"lineNum":" 3544","line":"                    const string_type& __dflt) const"},
{"lineNum":" 3545","line":"    {"},
{"lineNum":" 3546","line":"        return do_get(__c, __set, __msgid, __dflt);"},
{"lineNum":" 3547","line":"    }"},
{"lineNum":" 3548","line":""},
{"lineNum":" 3549","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3550","line":"    void close(catalog __c) const"},
{"lineNum":" 3551","line":"    {"},
{"lineNum":" 3552","line":"        do_close(__c);"},
{"lineNum":" 3553","line":"    }"},
{"lineNum":" 3554","line":""},
{"lineNum":" 3555","line":"    static locale::id id;"},
{"lineNum":" 3556","line":""},
{"lineNum":" 3557","line":"protected:"},
{"lineNum":" 3558","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3559","line":"    ~messages() {}"},
{"lineNum":" 3560","line":""},
{"lineNum":" 3561","line":"    virtual catalog do_open(const basic_string<char>&, const locale&) const;"},
{"lineNum":" 3562","line":"    virtual string_type do_get(catalog, int __set, int __msgid,"},
{"lineNum":" 3563","line":"                               const string_type& __dflt) const;"},
{"lineNum":" 3564","line":"    virtual void do_close(catalog) const;"},
{"lineNum":" 3565","line":"};"},
{"lineNum":" 3566","line":""},
{"lineNum":" 3567","line":"template <class _CharT>"},
{"lineNum":" 3568","line":"locale::id"},
{"lineNum":" 3569","line":"messages<_CharT>::id;"},
{"lineNum":" 3570","line":""},
{"lineNum":" 3571","line":"template <class _CharT>"},
{"lineNum":" 3572","line":"typename messages<_CharT>::catalog"},
{"lineNum":" 3573","line":"messages<_CharT>::do_open(const basic_string<char>& __nm, const locale&) const"},
{"lineNum":" 3574","line":"{"},
{"lineNum":" 3575","line":"#ifdef _LIBCPP_HAS_CATOPEN"},
{"lineNum":" 3576","line":"    catalog __cat = (catalog)catopen(__nm.c_str(), NL_CAT_LOCALE);"},
{"lineNum":" 3577","line":"    if (__cat != -1)"},
{"lineNum":" 3578","line":"        __cat = static_cast<catalog>((static_cast<size_t>(__cat) >> 1));"},
{"lineNum":" 3579","line":"    return __cat;"},
{"lineNum":" 3580","line":"#else // !_LIBCPP_HAS_CATOPEN"},
{"lineNum":" 3581","line":"    (void)__nm;"},
{"lineNum":" 3582","line":"    return -1;"},
{"lineNum":" 3583","line":"#endif // _LIBCPP_HAS_CATOPEN"},
{"lineNum":" 3584","line":"}"},
{"lineNum":" 3585","line":""},
{"lineNum":" 3586","line":"template <class _CharT>"},
{"lineNum":" 3587","line":"typename messages<_CharT>::string_type"},
{"lineNum":" 3588","line":"messages<_CharT>::do_get(catalog __c, int __set, int __msgid,"},
{"lineNum":" 3589","line":"                         const string_type& __dflt) const"},
{"lineNum":" 3590","line":"{"},
{"lineNum":" 3591","line":"#ifdef _LIBCPP_HAS_CATOPEN"},
{"lineNum":" 3592","line":"    string __ndflt;"},
{"lineNum":" 3593","line":"    __narrow_to_utf8<sizeof(char_type)*__CHAR_BIT__>()(back_inserter(__ndflt),"},
{"lineNum":" 3594","line":"                                                       __dflt.c_str(),"},
{"lineNum":" 3595","line":"                                                       __dflt.c_str() + __dflt.size());"},
{"lineNum":" 3596","line":"    if (__c != -1)"},
{"lineNum":" 3597","line":"        __c <<= 1;"},
{"lineNum":" 3598","line":"    nl_catd __cat = (nl_catd)__c;"},
{"lineNum":" 3599","line":"    char* __n = catgets(__cat, __set, __msgid, __ndflt.c_str());"},
{"lineNum":" 3600","line":"    string_type __w;"},
{"lineNum":" 3601","line":"    __widen_from_utf8<sizeof(char_type)*__CHAR_BIT__>()(back_inserter(__w),"},
{"lineNum":" 3602","line":"                                                        __n, __n + _VSTD::strlen(__n));"},
{"lineNum":" 3603","line":"    return __w;"},
{"lineNum":" 3604","line":"#else // !_LIBCPP_HAS_CATOPEN"},
{"lineNum":" 3605","line":"    (void)__c;"},
{"lineNum":" 3606","line":"    (void)__set;"},
{"lineNum":" 3607","line":"    (void)__msgid;"},
{"lineNum":" 3608","line":"    return __dflt;"},
{"lineNum":" 3609","line":"#endif // _LIBCPP_HAS_CATOPEN"},
{"lineNum":" 3610","line":"}"},
{"lineNum":" 3611","line":""},
{"lineNum":" 3612","line":"template <class _CharT>"},
{"lineNum":" 3613","line":"void"},
{"lineNum":" 3614","line":"messages<_CharT>::do_close(catalog __c) const"},
{"lineNum":" 3615","line":"{"},
{"lineNum":" 3616","line":"#ifdef _LIBCPP_HAS_CATOPEN"},
{"lineNum":" 3617","line":"    if (__c != -1)"},
{"lineNum":" 3618","line":"        __c <<= 1;"},
{"lineNum":" 3619","line":"    nl_catd __cat = (nl_catd)__c;"},
{"lineNum":" 3620","line":"    catclose(__cat);"},
{"lineNum":" 3621","line":"#else // !_LIBCPP_HAS_CATOPEN"},
{"lineNum":" 3622","line":"    (void)__c;"},
{"lineNum":" 3623","line":"#endif // _LIBCPP_HAS_CATOPEN"},
{"lineNum":" 3624","line":"}"},
{"lineNum":" 3625","line":""},
{"lineNum":" 3626","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS messages<char>)"},
{"lineNum":" 3627","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS messages<wchar_t>)"},
{"lineNum":" 3628","line":""},
{"lineNum":" 3629","line":"template <class _CharT>"},
{"lineNum":" 3630","line":"class _LIBCPP_TEMPLATE_VIS messages_byname"},
{"lineNum":" 3631","line":"    : public messages<_CharT>"},
{"lineNum":" 3632","line":"{"},
{"lineNum":" 3633","line":"public:"},
{"lineNum":" 3634","line":"    typedef messages_base::catalog catalog;"},
{"lineNum":" 3635","line":"    typedef basic_string<_CharT> string_type;"},
{"lineNum":" 3636","line":""},
{"lineNum":" 3637","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3638","line":"    explicit messages_byname(const char*, size_t __refs = 0)"},
{"lineNum":" 3639","line":"        : messages<_CharT>(__refs) {}"},
{"lineNum":" 3640","line":""},
{"lineNum":" 3641","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3642","line":"    explicit messages_byname(const string&, size_t __refs = 0)"},
{"lineNum":" 3643","line":"        : messages<_CharT>(__refs) {}"},
{"lineNum":" 3644","line":""},
{"lineNum":" 3645","line":"protected:"},
{"lineNum":" 3646","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3647","line":"    ~messages_byname() {}"},
{"lineNum":" 3648","line":"};"},
{"lineNum":" 3649","line":""},
{"lineNum":" 3650","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS messages_byname<char>)"},
{"lineNum":" 3651","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS messages_byname<wchar_t>)"},
{"lineNum":" 3652","line":""},
{"lineNum":" 3653","line":"template<class _Codecvt, class _Elem = wchar_t,"},
{"lineNum":" 3654","line":"         class _Wide_alloc = allocator<_Elem>,"},
{"lineNum":" 3655","line":"         class _Byte_alloc = allocator<char> >"},
{"lineNum":" 3656","line":"class _LIBCPP_TEMPLATE_VIS wstring_convert"},
{"lineNum":" 3657","line":"{"},
{"lineNum":" 3658","line":"public:"},
{"lineNum":" 3659","line":"    typedef basic_string<char, char_traits<char>, _Byte_alloc>   byte_string;"},
{"lineNum":" 3660","line":"    typedef basic_string<_Elem, char_traits<_Elem>, _Wide_alloc> wide_string;"},
{"lineNum":" 3661","line":"    typedef typename _Codecvt::state_type                        state_type;"},
{"lineNum":" 3662","line":"    typedef typename wide_string::traits_type::int_type          int_type;"},
{"lineNum":" 3663","line":""},
{"lineNum":" 3664","line":"private:"},
{"lineNum":" 3665","line":"    byte_string __byte_err_string_;"},
{"lineNum":" 3666","line":"    wide_string __wide_err_string_;"},
{"lineNum":" 3667","line":"    _Codecvt* __cvtptr_;"},
{"lineNum":" 3668","line":"    state_type __cvtstate_;"},
{"lineNum":" 3669","line":"    size_t __cvtcount_;"},
{"lineNum":" 3670","line":""},
{"lineNum":" 3671","line":"    wstring_convert(const wstring_convert& __wc);"},
{"lineNum":" 3672","line":"    wstring_convert& operator=(const wstring_convert& __wc);"},
{"lineNum":" 3673","line":"public:"},
{"lineNum":" 3674","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 3675","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3676","line":"    wstring_convert() : wstring_convert(new _Codecvt) {}"},
{"lineNum":" 3677","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3678","line":"    explicit wstring_convert(_Codecvt* __pcvt);"},
{"lineNum":" 3679","line":"#else"},
{"lineNum":" 3680","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3681","line":"    _LIBCPP_EXPLICIT_AFTER_CXX11"},
{"lineNum":" 3682","line":"    wstring_convert(_Codecvt* __pcvt = new _Codecvt);"},
{"lineNum":" 3683","line":"#endif"},
{"lineNum":" 3684","line":""},
{"lineNum":" 3685","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3686","line":"    wstring_convert(_Codecvt* __pcvt, state_type __state);"},
{"lineNum":" 3687","line":"    _LIBCPP_EXPLICIT_AFTER_CXX11 wstring_convert(const byte_string& __byte_err,"},
{"lineNum":" 3688","line":"                    const wide_string& __wide_err = wide_string());"},
{"lineNum":" 3689","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 3690","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3691","line":"    wstring_convert(wstring_convert&& __wc);"},
{"lineNum":" 3692","line":"#endif"},
{"lineNum":" 3693","line":"    ~wstring_convert();"},
{"lineNum":" 3694","line":""},
{"lineNum":" 3695","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3696","line":"    wide_string from_bytes(char __byte)"},
{"lineNum":" 3697","line":"        {return from_bytes(&__byte, &__byte+1);}"},
{"lineNum":" 3698","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3699","line":"    wide_string from_bytes(const char* __ptr)"},
{"lineNum":" 3700","line":"        {return from_bytes(__ptr, __ptr + char_traits<char>::length(__ptr));}"},
{"lineNum":" 3701","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3702","line":"    wide_string from_bytes(const byte_string& __str)"},
{"lineNum":" 3703","line":"        {return from_bytes(__str.data(), __str.data() + __str.size());}"},
{"lineNum":" 3704","line":"    wide_string from_bytes(const char* __first, const char* __last);"},
{"lineNum":" 3705","line":""},
{"lineNum":" 3706","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3707","line":"    byte_string to_bytes(_Elem __wchar)"},
{"lineNum":" 3708","line":"        {return to_bytes(&__wchar, &__wchar+1);}"},
{"lineNum":" 3709","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3710","line":"    byte_string to_bytes(const _Elem* __wptr)"},
{"lineNum":" 3711","line":"        {return to_bytes(__wptr, __wptr + char_traits<_Elem>::length(__wptr));}"},
{"lineNum":" 3712","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3713","line":"    byte_string to_bytes(const wide_string& __wstr)"},
{"lineNum":" 3714","line":"        {return to_bytes(__wstr.data(), __wstr.data() + __wstr.size());}"},
{"lineNum":" 3715","line":"    byte_string to_bytes(const _Elem* __first, const _Elem* __last);"},
{"lineNum":" 3716","line":""},
{"lineNum":" 3717","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3718","line":"    size_t converted() const _NOEXCEPT {return __cvtcount_;}"},
{"lineNum":" 3719","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3720","line":"    state_type state() const {return __cvtstate_;}"},
{"lineNum":" 3721","line":"};"},
{"lineNum":" 3722","line":""},
{"lineNum":" 3723","line":"template<class _Codecvt, class _Elem, class _Wide_alloc, class _Byte_alloc>"},
{"lineNum":" 3724","line":"inline"},
{"lineNum":" 3725","line":"wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc>::"},
{"lineNum":" 3726","line":"    wstring_convert(_Codecvt* __pcvt)"},
{"lineNum":" 3727","line":"        : __cvtptr_(__pcvt), __cvtstate_(), __cvtcount_(0)"},
{"lineNum":" 3728","line":"{"},
{"lineNum":" 3729","line":"}"},
{"lineNum":" 3730","line":""},
{"lineNum":" 3731","line":"template<class _Codecvt, class _Elem, class _Wide_alloc, class _Byte_alloc>"},
{"lineNum":" 3732","line":"inline"},
{"lineNum":" 3733","line":"wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc>::"},
{"lineNum":" 3734","line":"    wstring_convert(_Codecvt* __pcvt, state_type __state)"},
{"lineNum":" 3735","line":"        : __cvtptr_(__pcvt), __cvtstate_(__state), __cvtcount_(0)"},
{"lineNum":" 3736","line":"{"},
{"lineNum":" 3737","line":"}"},
{"lineNum":" 3738","line":""},
{"lineNum":" 3739","line":"template<class _Codecvt, class _Elem, class _Wide_alloc, class _Byte_alloc>"},
{"lineNum":" 3740","line":"wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc>::"},
{"lineNum":" 3741","line":"    wstring_convert(const byte_string& __byte_err, const wide_string& __wide_err)"},
{"lineNum":" 3742","line":"        : __byte_err_string_(__byte_err), __wide_err_string_(__wide_err),"},
{"lineNum":" 3743","line":"          __cvtstate_(), __cvtcount_(0)"},
{"lineNum":" 3744","line":"{"},
{"lineNum":" 3745","line":"    __cvtptr_ = new _Codecvt;"},
{"lineNum":" 3746","line":"}"},
{"lineNum":" 3747","line":""},
{"lineNum":" 3748","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 3749","line":""},
{"lineNum":" 3750","line":"template<class _Codecvt, class _Elem, class _Wide_alloc, class _Byte_alloc>"},
{"lineNum":" 3751","line":"inline"},
{"lineNum":" 3752","line":"wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc>::"},
{"lineNum":" 3753","line":"    wstring_convert(wstring_convert&& __wc)"},
{"lineNum":" 3754","line":"        : __byte_err_string_(_VSTD::move(__wc.__byte_err_string_)),"},
{"lineNum":" 3755","line":"          __wide_err_string_(_VSTD::move(__wc.__wide_err_string_)),"},
{"lineNum":" 3756","line":"          __cvtptr_(__wc.__cvtptr_),"},
{"lineNum":" 3757","line":"          __cvtstate_(__wc.__cvtstate_), __cvtcount_(__wc.__cvtcount_)"},
{"lineNum":" 3758","line":"{"},
{"lineNum":" 3759","line":"    __wc.__cvtptr_ = nullptr;"},
{"lineNum":" 3760","line":"}"},
{"lineNum":" 3761","line":""},
{"lineNum":" 3762","line":"#endif // _LIBCPP_CXX03_LANG"},
{"lineNum":" 3763","line":""},
{"lineNum":" 3764","line":"template<class _Codecvt, class _Elem, class _Wide_alloc, class _Byte_alloc>"},
{"lineNum":" 3765","line":"wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc>::~wstring_convert()"},
{"lineNum":" 3766","line":"{"},
{"lineNum":" 3767","line":"    delete __cvtptr_;"},
{"lineNum":" 3768","line":"}"},
{"lineNum":" 3769","line":""},
{"lineNum":" 3770","line":"template<class _Codecvt, class _Elem, class _Wide_alloc, class _Byte_alloc>"},
{"lineNum":" 3771","line":"typename wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc>::wide_string"},
{"lineNum":" 3772","line":"wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc>::"},
{"lineNum":" 3773","line":"    from_bytes(const char* __frm, const char* __frm_end)"},
{"lineNum":" 3774","line":"{"},
{"lineNum":" 3775","line":"    __cvtcount_ = 0;"},
{"lineNum":" 3776","line":"    if (__cvtptr_ != nullptr)"},
{"lineNum":" 3777","line":"    {"},
{"lineNum":" 3778","line":"        wide_string __ws(2*(__frm_end - __frm), _Elem());"},
{"lineNum":" 3779","line":"        if (__frm != __frm_end)"},
{"lineNum":" 3780","line":"            __ws.resize(__ws.capacity());"},
{"lineNum":" 3781","line":"        codecvt_base::result __r = codecvt_base::ok;"},
{"lineNum":" 3782","line":"        state_type __st = __cvtstate_;"},
{"lineNum":" 3783","line":"        if (__frm != __frm_end)"},
{"lineNum":" 3784","line":"        {"},
{"lineNum":" 3785","line":"            _Elem* __to = &__ws[0];"},
{"lineNum":" 3786","line":"            _Elem* __to_end = __to + __ws.size();"},
{"lineNum":" 3787","line":"            const char* __frm_nxt;"},
{"lineNum":" 3788","line":"            do"},
{"lineNum":" 3789","line":"            {"},
{"lineNum":" 3790","line":"                _Elem* __to_nxt;"},
{"lineNum":" 3791","line":"                __r = __cvtptr_->in(__st, __frm, __frm_end, __frm_nxt,"},
{"lineNum":" 3792","line":"                                          __to, __to_end, __to_nxt);"},
{"lineNum":" 3793","line":"                __cvtcount_ += __frm_nxt - __frm;"},
{"lineNum":" 3794","line":"                if (__frm_nxt == __frm)"},
{"lineNum":" 3795","line":"                {"},
{"lineNum":" 3796","line":"                    __r = codecvt_base::error;"},
{"lineNum":" 3797","line":"                }"},
{"lineNum":" 3798","line":"                else if (__r == codecvt_base::noconv)"},
{"lineNum":" 3799","line":"                {"},
{"lineNum":" 3800","line":"                    __ws.resize(__to - &__ws[0]);"},
{"lineNum":" 3801","line":"                    // This only gets executed if _Elem is char"},
{"lineNum":" 3802","line":"                    __ws.append((const _Elem*)__frm, (const _Elem*)__frm_end);"},
{"lineNum":" 3803","line":"                    __frm = __frm_nxt;"},
{"lineNum":" 3804","line":"                    __r = codecvt_base::ok;"},
{"lineNum":" 3805","line":"                }"},
{"lineNum":" 3806","line":"                else if (__r == codecvt_base::ok)"},
{"lineNum":" 3807","line":"                {"},
{"lineNum":" 3808","line":"                    __ws.resize(__to_nxt - &__ws[0]);"},
{"lineNum":" 3809","line":"                    __frm = __frm_nxt;"},
{"lineNum":" 3810","line":"                }"},
{"lineNum":" 3811","line":"                else if (__r == codecvt_base::partial)"},
{"lineNum":" 3812","line":"                {"},
{"lineNum":" 3813","line":"                    ptrdiff_t __s = __to_nxt - &__ws[0];"},
{"lineNum":" 3814","line":"                    __ws.resize(2 * __s);"},
{"lineNum":" 3815","line":"                    __to = &__ws[0] + __s;"},
{"lineNum":" 3816","line":"                    __to_end = &__ws[0] + __ws.size();"},
{"lineNum":" 3817","line":"                    __frm = __frm_nxt;"},
{"lineNum":" 3818","line":"                }"},
{"lineNum":" 3819","line":"            } while (__r == codecvt_base::partial && __frm_nxt < __frm_end);"},
{"lineNum":" 3820","line":"        }"},
{"lineNum":" 3821","line":"        if (__r == codecvt_base::ok)"},
{"lineNum":" 3822","line":"            return __ws;"},
{"lineNum":" 3823","line":"    }"},
{"lineNum":" 3824","line":""},
{"lineNum":" 3825","line":"    if (__wide_err_string_.empty())"},
{"lineNum":" 3826","line":"        __throw_range_error(\"wstring_convert: from_bytes error\");"},
{"lineNum":" 3827","line":""},
{"lineNum":" 3828","line":"    return __wide_err_string_;"},
{"lineNum":" 3829","line":"}"},
{"lineNum":" 3830","line":""},
{"lineNum":" 3831","line":"template<class _Codecvt, class _Elem, class _Wide_alloc, class _Byte_alloc>"},
{"lineNum":" 3832","line":"typename wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc>::byte_string"},
{"lineNum":" 3833","line":"wstring_convert<_Codecvt, _Elem, _Wide_alloc, _Byte_alloc>::"},
{"lineNum":" 3834","line":"    to_bytes(const _Elem* __frm, const _Elem* __frm_end)"},
{"lineNum":" 3835","line":"{"},
{"lineNum":" 3836","line":"    __cvtcount_ = 0;"},
{"lineNum":" 3837","line":"    if (__cvtptr_ != nullptr)"},
{"lineNum":" 3838","line":"    {"},
{"lineNum":" 3839","line":"        byte_string __bs(2*(__frm_end - __frm), char());"},
{"lineNum":" 3840","line":"        if (__frm != __frm_end)"},
{"lineNum":" 3841","line":"            __bs.resize(__bs.capacity());"},
{"lineNum":" 3842","line":"        codecvt_base::result __r = codecvt_base::ok;"},
{"lineNum":" 3843","line":"        state_type __st = __cvtstate_;"},
{"lineNum":" 3844","line":"        if (__frm != __frm_end)"},
{"lineNum":" 3845","line":"        {"},
{"lineNum":" 3846","line":"            char* __to = &__bs[0];"},
{"lineNum":" 3847","line":"            char* __to_end = __to + __bs.size();"},
{"lineNum":" 3848","line":"            const _Elem* __frm_nxt;"},
{"lineNum":" 3849","line":"            do"},
{"lineNum":" 3850","line":"            {"},
{"lineNum":" 3851","line":"                char* __to_nxt;"},
{"lineNum":" 3852","line":"                __r = __cvtptr_->out(__st, __frm, __frm_end, __frm_nxt,"},
{"lineNum":" 3853","line":"                                           __to, __to_end, __to_nxt);"},
{"lineNum":" 3854","line":"                __cvtcount_ += __frm_nxt - __frm;"},
{"lineNum":" 3855","line":"                if (__frm_nxt == __frm)"},
{"lineNum":" 3856","line":"                {"},
{"lineNum":" 3857","line":"                    __r = codecvt_base::error;"},
{"lineNum":" 3858","line":"                }"},
{"lineNum":" 3859","line":"                else if (__r == codecvt_base::noconv)"},
{"lineNum":" 3860","line":"                {"},
{"lineNum":" 3861","line":"                    __bs.resize(__to - &__bs[0]);"},
{"lineNum":" 3862","line":"                    // This only gets executed if _Elem is char"},
{"lineNum":" 3863","line":"                    __bs.append((const char*)__frm, (const char*)__frm_end);"},
{"lineNum":" 3864","line":"                    __frm = __frm_nxt;"},
{"lineNum":" 3865","line":"                    __r = codecvt_base::ok;"},
{"lineNum":" 3866","line":"                }"},
{"lineNum":" 3867","line":"                else if (__r == codecvt_base::ok)"},
{"lineNum":" 3868","line":"                {"},
{"lineNum":" 3869","line":"                    __bs.resize(__to_nxt - &__bs[0]);"},
{"lineNum":" 3870","line":"                    __frm = __frm_nxt;"},
{"lineNum":" 3871","line":"                }"},
{"lineNum":" 3872","line":"                else if (__r == codecvt_base::partial)"},
{"lineNum":" 3873","line":"                {"},
{"lineNum":" 3874","line":"                    ptrdiff_t __s = __to_nxt - &__bs[0];"},
{"lineNum":" 3875","line":"                    __bs.resize(2 * __s);"},
{"lineNum":" 3876","line":"                    __to = &__bs[0] + __s;"},
{"lineNum":" 3877","line":"                    __to_end = &__bs[0] + __bs.size();"},
{"lineNum":" 3878","line":"                    __frm = __frm_nxt;"},
{"lineNum":" 3879","line":"                }"},
{"lineNum":" 3880","line":"            } while (__r == codecvt_base::partial && __frm_nxt < __frm_end);"},
{"lineNum":" 3881","line":"        }"},
{"lineNum":" 3882","line":"        if (__r == codecvt_base::ok)"},
{"lineNum":" 3883","line":"        {"},
{"lineNum":" 3884","line":"            size_t __s = __bs.size();"},
{"lineNum":" 3885","line":"            __bs.resize(__bs.capacity());"},
{"lineNum":" 3886","line":"            char* __to = &__bs[0] + __s;"},
{"lineNum":" 3887","line":"            char* __to_end = __to + __bs.size();"},
{"lineNum":" 3888","line":"            do"},
{"lineNum":" 3889","line":"            {"},
{"lineNum":" 3890","line":"                char* __to_nxt;"},
{"lineNum":" 3891","line":"                __r = __cvtptr_->unshift(__st, __to, __to_end, __to_nxt);"},
{"lineNum":" 3892","line":"                if (__r == codecvt_base::noconv)"},
{"lineNum":" 3893","line":"                {"},
{"lineNum":" 3894","line":"                    __bs.resize(__to - &__bs[0]);"},
{"lineNum":" 3895","line":"                    __r = codecvt_base::ok;"},
{"lineNum":" 3896","line":"                }"},
{"lineNum":" 3897","line":"                else if (__r == codecvt_base::ok)"},
{"lineNum":" 3898","line":"                {"},
{"lineNum":" 3899","line":"                    __bs.resize(__to_nxt - &__bs[0]);"},
{"lineNum":" 3900","line":"                }"},
{"lineNum":" 3901","line":"                else if (__r == codecvt_base::partial)"},
{"lineNum":" 3902","line":"                {"},
{"lineNum":" 3903","line":"                    ptrdiff_t __sp = __to_nxt - &__bs[0];"},
{"lineNum":" 3904","line":"                    __bs.resize(2 * __sp);"},
{"lineNum":" 3905","line":"                    __to = &__bs[0] + __sp;"},
{"lineNum":" 3906","line":"                    __to_end = &__bs[0] + __bs.size();"},
{"lineNum":" 3907","line":"                }"},
{"lineNum":" 3908","line":"            } while (__r == codecvt_base::partial);"},
{"lineNum":" 3909","line":"            if (__r == codecvt_base::ok)"},
{"lineNum":" 3910","line":"                return __bs;"},
{"lineNum":" 3911","line":"        }"},
{"lineNum":" 3912","line":"    }"},
{"lineNum":" 3913","line":""},
{"lineNum":" 3914","line":"    if (__byte_err_string_.empty())"},
{"lineNum":" 3915","line":"        __throw_range_error(\"wstring_convert: to_bytes error\");"},
{"lineNum":" 3916","line":""},
{"lineNum":" 3917","line":"    return __byte_err_string_;"},
{"lineNum":" 3918","line":"}"},
{"lineNum":" 3919","line":""},
{"lineNum":" 3920","line":"template <class _Codecvt, class _Elem = wchar_t, class _Tr = char_traits<_Elem> >"},
{"lineNum":" 3921","line":"class _LIBCPP_TEMPLATE_VIS wbuffer_convert"},
{"lineNum":" 3922","line":"    : public basic_streambuf<_Elem, _Tr>"},
{"lineNum":" 3923","line":"{"},
{"lineNum":" 3924","line":"public:"},
{"lineNum":" 3925","line":"    // types:"},
{"lineNum":" 3926","line":"    typedef _Elem                          char_type;"},
{"lineNum":" 3927","line":"    typedef _Tr                            traits_type;"},
{"lineNum":" 3928","line":"    typedef typename traits_type::int_type int_type;"},
{"lineNum":" 3929","line":"    typedef typename traits_type::pos_type pos_type;"},
{"lineNum":" 3930","line":"    typedef typename traits_type::off_type off_type;"},
{"lineNum":" 3931","line":"    typedef typename _Codecvt::state_type  state_type;"},
{"lineNum":" 3932","line":""},
{"lineNum":" 3933","line":"private:"},
{"lineNum":" 3934","line":"    char*       __extbuf_;"},
{"lineNum":" 3935","line":"    const char* __extbufnext_;"},
{"lineNum":" 3936","line":"    const char* __extbufend_;"},
{"lineNum":" 3937","line":"    char __extbuf_min_[8];"},
{"lineNum":" 3938","line":"    size_t __ebs_;"},
{"lineNum":" 3939","line":"    char_type* __intbuf_;"},
{"lineNum":" 3940","line":"    size_t __ibs_;"},
{"lineNum":" 3941","line":"    streambuf* __bufptr_;"},
{"lineNum":" 3942","line":"    _Codecvt* __cv_;"},
{"lineNum":" 3943","line":"    state_type __st_;"},
{"lineNum":" 3944","line":"    ios_base::openmode __cm_;"},
{"lineNum":" 3945","line":"    bool __owns_eb_;"},
{"lineNum":" 3946","line":"    bool __owns_ib_;"},
{"lineNum":" 3947","line":"    bool __always_noconv_;"},
{"lineNum":" 3948","line":""},
{"lineNum":" 3949","line":"    wbuffer_convert(const wbuffer_convert&);"},
{"lineNum":" 3950","line":"    wbuffer_convert& operator=(const wbuffer_convert&);"},
{"lineNum":" 3951","line":""},
{"lineNum":" 3952","line":"public:"},
{"lineNum":" 3953","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 3954","line":"    wbuffer_convert() : wbuffer_convert(nullptr) {}"},
{"lineNum":" 3955","line":"    explicit wbuffer_convert(streambuf* __bytebuf,"},
{"lineNum":" 3956","line":"                             _Codecvt* __pcvt = new _Codecvt,"},
{"lineNum":" 3957","line":"                             state_type __state = state_type());"},
{"lineNum":" 3958","line":"#else"},
{"lineNum":" 3959","line":"    _LIBCPP_EXPLICIT_AFTER_CXX11"},
{"lineNum":" 3960","line":"    wbuffer_convert(streambuf* __bytebuf = nullptr,"},
{"lineNum":" 3961","line":"                    _Codecvt* __pcvt = new _Codecvt,"},
{"lineNum":" 3962","line":"                    state_type __state = state_type());"},
{"lineNum":" 3963","line":"#endif"},
{"lineNum":" 3964","line":""},
{"lineNum":" 3965","line":"    ~wbuffer_convert();"},
{"lineNum":" 3966","line":""},
{"lineNum":" 3967","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3968","line":"    streambuf* rdbuf() const {return __bufptr_;}"},
{"lineNum":" 3969","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3970","line":"    streambuf* rdbuf(streambuf* __bytebuf)"},
{"lineNum":" 3971","line":"    {"},
{"lineNum":" 3972","line":"        streambuf* __r = __bufptr_;"},
{"lineNum":" 3973","line":"        __bufptr_ = __bytebuf;"},
{"lineNum":" 3974","line":"        return __r;"},
{"lineNum":" 3975","line":"    }"},
{"lineNum":" 3976","line":""},
{"lineNum":" 3977","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3978","line":"    state_type state() const {return __st_;}"},
{"lineNum":" 3979","line":""},
{"lineNum":" 3980","line":"protected:"},
{"lineNum":" 3981","line":"    virtual int_type underflow();"},
{"lineNum":" 3982","line":"    virtual int_type pbackfail(int_type __c = traits_type::eof());"},
{"lineNum":" 3983","line":"    virtual int_type overflow (int_type __c = traits_type::eof());"},
{"lineNum":" 3984","line":"    virtual basic_streambuf<char_type, traits_type>* setbuf(char_type* __s,"},
{"lineNum":" 3985","line":"                                                            streamsize __n);"},
{"lineNum":" 3986","line":"    virtual pos_type seekoff(off_type __off, ios_base::seekdir __way,"},
{"lineNum":" 3987","line":"                             ios_base::openmode __wch = ios_base::in | ios_base::out);"},
{"lineNum":" 3988","line":"    virtual pos_type seekpos(pos_type __sp,"},
{"lineNum":" 3989","line":"                             ios_base::openmode __wch = ios_base::in | ios_base::out);"},
{"lineNum":" 3990","line":"    virtual int sync();"},
{"lineNum":" 3991","line":""},
{"lineNum":" 3992","line":"private:"},
{"lineNum":" 3993","line":"    bool __read_mode();"},
{"lineNum":" 3994","line":"    void __write_mode();"},
{"lineNum":" 3995","line":"    wbuffer_convert* __close();"},
{"lineNum":" 3996","line":"};"},
{"lineNum":" 3997","line":""},
{"lineNum":" 3998","line":"template <class _Codecvt, class _Elem, class _Tr>"},
{"lineNum":" 3999","line":"wbuffer_convert<_Codecvt, _Elem, _Tr>::"},
{"lineNum":" 4000","line":"    wbuffer_convert(streambuf* __bytebuf, _Codecvt* __pcvt, state_type __state)"},
{"lineNum":" 4001","line":"    : __extbuf_(nullptr),"},
{"lineNum":" 4002","line":"      __extbufnext_(nullptr),"},
{"lineNum":" 4003","line":"      __extbufend_(nullptr),"},
{"lineNum":" 4004","line":"      __ebs_(0),"},
{"lineNum":" 4005","line":"      __intbuf_(0),"},
{"lineNum":" 4006","line":"      __ibs_(0),"},
{"lineNum":" 4007","line":"      __bufptr_(__bytebuf),"},
{"lineNum":" 4008","line":"      __cv_(__pcvt),"},
{"lineNum":" 4009","line":"      __st_(__state),"},
{"lineNum":" 4010","line":"      __cm_(0),"},
{"lineNum":" 4011","line":"      __owns_eb_(false),"},
{"lineNum":" 4012","line":"      __owns_ib_(false),"},
{"lineNum":" 4013","line":"      __always_noconv_(__cv_ ? __cv_->always_noconv() : false)"},
{"lineNum":" 4014","line":"{"},
{"lineNum":" 4015","line":"    setbuf(0, 4096);"},
{"lineNum":" 4016","line":"}"},
{"lineNum":" 4017","line":""},
{"lineNum":" 4018","line":"template <class _Codecvt, class _Elem, class _Tr>"},
{"lineNum":" 4019","line":"wbuffer_convert<_Codecvt, _Elem, _Tr>::~wbuffer_convert()"},
{"lineNum":" 4020","line":"{"},
{"lineNum":" 4021","line":"    __close();"},
{"lineNum":" 4022","line":"    delete __cv_;"},
{"lineNum":" 4023","line":"    if (__owns_eb_)"},
{"lineNum":" 4024","line":"        delete [] __extbuf_;"},
{"lineNum":" 4025","line":"    if (__owns_ib_)"},
{"lineNum":" 4026","line":"        delete [] __intbuf_;"},
{"lineNum":" 4027","line":"}"},
{"lineNum":" 4028","line":""},
{"lineNum":" 4029","line":"template <class _Codecvt, class _Elem, class _Tr>"},
{"lineNum":" 4030","line":"typename wbuffer_convert<_Codecvt, _Elem, _Tr>::int_type"},
{"lineNum":" 4031","line":"wbuffer_convert<_Codecvt, _Elem, _Tr>::underflow()"},
{"lineNum":" 4032","line":"{"},
{"lineNum":" 4033","line":"    if (__cv_ == 0 || __bufptr_ == 0)"},
{"lineNum":" 4034","line":"        return traits_type::eof();"},
{"lineNum":" 4035","line":"    bool __initial = __read_mode();"},
{"lineNum":" 4036","line":"    char_type __1buf;"},
{"lineNum":" 4037","line":"    if (this->gptr() == 0)"},
{"lineNum":" 4038","line":"        this->setg(&__1buf, &__1buf+1, &__1buf+1);"},
{"lineNum":" 4039","line":"    const size_t __unget_sz = __initial ? 0 : min<size_t>((this->egptr() - this->eback()) / 2, 4);"},
{"lineNum":" 4040","line":"    int_type __c = traits_type::eof();"},
{"lineNum":" 4041","line":"    if (this->gptr() == this->egptr())"},
{"lineNum":" 4042","line":"    {"},
{"lineNum":" 4043","line":"        _VSTD::memmove(this->eback(), this->egptr() - __unget_sz, __unget_sz * sizeof(char_type));"},
{"lineNum":" 4044","line":"        if (__always_noconv_)"},
{"lineNum":" 4045","line":"        {"},
{"lineNum":" 4046","line":"            streamsize __nmemb = static_cast<streamsize>(this->egptr() - this->eback() - __unget_sz);"},
{"lineNum":" 4047","line":"            __nmemb = __bufptr_->sgetn((char*)this->eback() + __unget_sz, __nmemb);"},
{"lineNum":" 4048","line":"            if (__nmemb != 0)"},
{"lineNum":" 4049","line":"            {"},
{"lineNum":" 4050","line":"                this->setg(this->eback(),"},
{"lineNum":" 4051","line":"                           this->eback() + __unget_sz,"},
{"lineNum":" 4052","line":"                           this->eback() + __unget_sz + __nmemb);"},
{"lineNum":" 4053","line":"                __c = *this->gptr();"},
{"lineNum":" 4054","line":"            }"},
{"lineNum":" 4055","line":"        }"},
{"lineNum":" 4056","line":"        else"},
{"lineNum":" 4057","line":"        {"},
{"lineNum":" 4058","line":"             _LIBCPP_ASSERT(!(__extbufnext_ == NULL && (__extbufend_ != __extbufnext_)), \"underflow moving from NULL\" );"},
{"lineNum":" 4059","line":"             if (__extbufend_ != __extbufnext_)"},
{"lineNum":" 4060","line":"                _VSTD::memmove(__extbuf_, __extbufnext_, __extbufend_ - __extbufnext_);"},
{"lineNum":" 4061","line":"            __extbufnext_ = __extbuf_ + (__extbufend_ - __extbufnext_);"},
{"lineNum":" 4062","line":"            __extbufend_ = __extbuf_ + (__extbuf_ == __extbuf_min_ ? sizeof(__extbuf_min_) : __ebs_);"},
{"lineNum":" 4063","line":"            streamsize __nmemb = _VSTD::min(static_cast<streamsize>(this->egptr() - this->eback() - __unget_sz),"},
{"lineNum":" 4064","line":"                                 static_cast<streamsize>(__extbufend_ - __extbufnext_));"},
{"lineNum":" 4065","line":"            codecvt_base::result __r;"},
{"lineNum":" 4066","line":"            // FIXME: Do we ever need to restore the state here?"},
{"lineNum":" 4067","line":"            //state_type __svs = __st_;"},
{"lineNum":" 4068","line":"            streamsize __nr = __bufptr_->sgetn(const_cast<char*>(__extbufnext_), __nmemb);"},
{"lineNum":" 4069","line":"            if (__nr != 0)"},
{"lineNum":" 4070","line":"            {"},
{"lineNum":" 4071","line":"                __extbufend_ = __extbufnext_ + __nr;"},
{"lineNum":" 4072","line":"                char_type*  __inext;"},
{"lineNum":" 4073","line":"                __r = __cv_->in(__st_, __extbuf_, __extbufend_, __extbufnext_,"},
{"lineNum":" 4074","line":"                                       this->eback() + __unget_sz,"},
{"lineNum":" 4075","line":"                                       this->egptr(), __inext);"},
{"lineNum":" 4076","line":"                if (__r == codecvt_base::noconv)"},
{"lineNum":" 4077","line":"                {"},
{"lineNum":" 4078","line":"                    this->setg((char_type*)__extbuf_, (char_type*)__extbuf_,"},
{"lineNum":" 4079","line":"                               (char_type*) const_cast<char *>(__extbufend_));"},
{"lineNum":" 4080","line":"                    __c = *this->gptr();"},
{"lineNum":" 4081","line":"                }"},
{"lineNum":" 4082","line":"                else if (__inext != this->eback() + __unget_sz)"},
{"lineNum":" 4083","line":"                {"},
{"lineNum":" 4084","line":"                    this->setg(this->eback(), this->eback() + __unget_sz, __inext);"},
{"lineNum":" 4085","line":"                    __c = *this->gptr();"},
{"lineNum":" 4086","line":"                }"},
{"lineNum":" 4087","line":"            }"},
{"lineNum":" 4088","line":"        }"},
{"lineNum":" 4089","line":"    }"},
{"lineNum":" 4090","line":"    else"},
{"lineNum":" 4091","line":"        __c = *this->gptr();"},
{"lineNum":" 4092","line":"    if (this->eback() == &__1buf)"},
{"lineNum":" 4093","line":"        this->setg(0, 0, 0);"},
{"lineNum":" 4094","line":"    return __c;"},
{"lineNum":" 4095","line":"}"},
{"lineNum":" 4096","line":""},
{"lineNum":" 4097","line":"template <class _Codecvt, class _Elem, class _Tr>"},
{"lineNum":" 4098","line":"typename wbuffer_convert<_Codecvt, _Elem, _Tr>::int_type"},
{"lineNum":" 4099","line":"wbuffer_convert<_Codecvt, _Elem, _Tr>::pbackfail(int_type __c)"},
{"lineNum":" 4100","line":"{"},
{"lineNum":" 4101","line":"    if (__cv_ != 0 && __bufptr_ != 0 && this->eback() < this->gptr())"},
{"lineNum":" 4102","line":"    {"},
{"lineNum":" 4103","line":"        if (traits_type::eq_int_type(__c, traits_type::eof()))"},
{"lineNum":" 4104","line":"        {"},
{"lineNum":" 4105","line":"            this->gbump(-1);"},
{"lineNum":" 4106","line":"            return traits_type::not_eof(__c);"},
{"lineNum":" 4107","line":"        }"},
{"lineNum":" 4108","line":"        if (traits_type::eq(traits_type::to_char_type(__c), this->gptr()[-1]))"},
{"lineNum":" 4109","line":"        {"},
{"lineNum":" 4110","line":"            this->gbump(-1);"},
{"lineNum":" 4111","line":"            *this->gptr() = traits_type::to_char_type(__c);"},
{"lineNum":" 4112","line":"            return __c;"},
{"lineNum":" 4113","line":"        }"},
{"lineNum":" 4114","line":"    }"},
{"lineNum":" 4115","line":"    return traits_type::eof();"},
{"lineNum":" 4116","line":"}"},
{"lineNum":" 4117","line":""},
{"lineNum":" 4118","line":"template <class _Codecvt, class _Elem, class _Tr>"},
{"lineNum":" 4119","line":"typename wbuffer_convert<_Codecvt, _Elem, _Tr>::int_type"},
{"lineNum":" 4120","line":"wbuffer_convert<_Codecvt, _Elem, _Tr>::overflow(int_type __c)"},
{"lineNum":" 4121","line":"{"},
{"lineNum":" 4122","line":"    if (__cv_ == 0 || __bufptr_ == 0)"},
{"lineNum":" 4123","line":"        return traits_type::eof();"},
{"lineNum":" 4124","line":"    __write_mode();"},
{"lineNum":" 4125","line":"    char_type __1buf;"},
{"lineNum":" 4126","line":"    char_type* __pb_save = this->pbase();"},
{"lineNum":" 4127","line":"    char_type* __epb_save = this->epptr();"},
{"lineNum":" 4128","line":"    if (!traits_type::eq_int_type(__c, traits_type::eof()))"},
{"lineNum":" 4129","line":"    {"},
{"lineNum":" 4130","line":"        if (this->pptr() == 0)"},
{"lineNum":" 4131","line":"            this->setp(&__1buf, &__1buf+1);"},
{"lineNum":" 4132","line":"        *this->pptr() = traits_type::to_char_type(__c);"},
{"lineNum":" 4133","line":"        this->pbump(1);"},
{"lineNum":" 4134","line":"    }"},
{"lineNum":" 4135","line":"    if (this->pptr() != this->pbase())"},
{"lineNum":" 4136","line":"    {"},
{"lineNum":" 4137","line":"        if (__always_noconv_)"},
{"lineNum":" 4138","line":"        {"},
{"lineNum":" 4139","line":"            streamsize __nmemb = static_cast<streamsize>(this->pptr() - this->pbase());"},
{"lineNum":" 4140","line":"            if (__bufptr_->sputn((const char*)this->pbase(), __nmemb) != __nmemb)"},
{"lineNum":" 4141","line":"                return traits_type::eof();"},
{"lineNum":" 4142","line":"        }"},
{"lineNum":" 4143","line":"        else"},
{"lineNum":" 4144","line":"        {"},
{"lineNum":" 4145","line":"            char* __extbe = __extbuf_;"},
{"lineNum":" 4146","line":"            codecvt_base::result __r;"},
{"lineNum":" 4147","line":"            do"},
{"lineNum":" 4148","line":"            {"},
{"lineNum":" 4149","line":"                const char_type* __e;"},
{"lineNum":" 4150","line":"                __r = __cv_->out(__st_, this->pbase(), this->pptr(), __e,"},
{"lineNum":" 4151","line":"                                        __extbuf_, __extbuf_ + __ebs_, __extbe);"},
{"lineNum":" 4152","line":"                if (__e == this->pbase())"},
{"lineNum":" 4153","line":"                    return traits_type::eof();"},
{"lineNum":" 4154","line":"                if (__r == codecvt_base::noconv)"},
{"lineNum":" 4155","line":"                {"},
{"lineNum":" 4156","line":"                    streamsize __nmemb = static_cast<size_t>(this->pptr() - this->pbase());"},
{"lineNum":" 4157","line":"                    if (__bufptr_->sputn((const char*)this->pbase(), __nmemb) != __nmemb)"},
{"lineNum":" 4158","line":"                        return traits_type::eof();"},
{"lineNum":" 4159","line":"                }"},
{"lineNum":" 4160","line":"                else if (__r == codecvt_base::ok || __r == codecvt_base::partial)"},
{"lineNum":" 4161","line":"                {"},
{"lineNum":" 4162","line":"                    streamsize __nmemb = static_cast<size_t>(__extbe - __extbuf_);"},
{"lineNum":" 4163","line":"                    if (__bufptr_->sputn(__extbuf_, __nmemb) != __nmemb)"},
{"lineNum":" 4164","line":"                        return traits_type::eof();"},
{"lineNum":" 4165","line":"                    if (__r == codecvt_base::partial)"},
{"lineNum":" 4166","line":"                    {"},
{"lineNum":" 4167","line":"                        this->setp(const_cast<char_type *>(__e), this->pptr());"},
{"lineNum":" 4168","line":"                        this->__pbump(this->epptr() - this->pbase());"},
{"lineNum":" 4169","line":"                    }"},
{"lineNum":" 4170","line":"                }"},
{"lineNum":" 4171","line":"                else"},
{"lineNum":" 4172","line":"                    return traits_type::eof();"},
{"lineNum":" 4173","line":"            } while (__r == codecvt_base::partial);"},
{"lineNum":" 4174","line":"        }"},
{"lineNum":" 4175","line":"        this->setp(__pb_save, __epb_save);"},
{"lineNum":" 4176","line":"    }"},
{"lineNum":" 4177","line":"    return traits_type::not_eof(__c);"},
{"lineNum":" 4178","line":"}"},
{"lineNum":" 4179","line":""},
{"lineNum":" 4180","line":"template <class _Codecvt, class _Elem, class _Tr>"},
{"lineNum":" 4181","line":"basic_streambuf<_Elem, _Tr>*"},
{"lineNum":" 4182","line":"wbuffer_convert<_Codecvt, _Elem, _Tr>::setbuf(char_type* __s, streamsize __n)"},
{"lineNum":" 4183","line":"{"},
{"lineNum":" 4184","line":"    this->setg(0, 0, 0);"},
{"lineNum":" 4185","line":"    this->setp(0, 0);"},
{"lineNum":" 4186","line":"    if (__owns_eb_)"},
{"lineNum":" 4187","line":"        delete [] __extbuf_;"},
{"lineNum":" 4188","line":"    if (__owns_ib_)"},
{"lineNum":" 4189","line":"        delete [] __intbuf_;"},
{"lineNum":" 4190","line":"    __ebs_ = __n;"},
{"lineNum":" 4191","line":"    if (__ebs_ > sizeof(__extbuf_min_))"},
{"lineNum":" 4192","line":"    {"},
{"lineNum":" 4193","line":"        if (__always_noconv_ && __s)"},
{"lineNum":" 4194","line":"        {"},
{"lineNum":" 4195","line":"            __extbuf_ = (char*)__s;"},
{"lineNum":" 4196","line":"            __owns_eb_ = false;"},
{"lineNum":" 4197","line":"        }"},
{"lineNum":" 4198","line":"        else"},
{"lineNum":" 4199","line":"        {"},
{"lineNum":" 4200","line":"            __extbuf_ = new char[__ebs_];"},
{"lineNum":" 4201","line":"            __owns_eb_ = true;"},
{"lineNum":" 4202","line":"        }"},
{"lineNum":" 4203","line":"    }"},
{"lineNum":" 4204","line":"    else"},
{"lineNum":" 4205","line":"    {"},
{"lineNum":" 4206","line":"        __extbuf_ = __extbuf_min_;"},
{"lineNum":" 4207","line":"        __ebs_ = sizeof(__extbuf_min_);"},
{"lineNum":" 4208","line":"        __owns_eb_ = false;"},
{"lineNum":" 4209","line":"    }"},
{"lineNum":" 4210","line":"    if (!__always_noconv_)"},
{"lineNum":" 4211","line":"    {"},
{"lineNum":" 4212","line":"        __ibs_ = max<streamsize>(__n, sizeof(__extbuf_min_));"},
{"lineNum":" 4213","line":"        if (__s && __ibs_ >= sizeof(__extbuf_min_))"},
{"lineNum":" 4214","line":"        {"},
{"lineNum":" 4215","line":"            __intbuf_ = __s;"},
{"lineNum":" 4216","line":"            __owns_ib_ = false;"},
{"lineNum":" 4217","line":"        }"},
{"lineNum":" 4218","line":"        else"},
{"lineNum":" 4219","line":"        {"},
{"lineNum":" 4220","line":"            __intbuf_ = new char_type[__ibs_];"},
{"lineNum":" 4221","line":"            __owns_ib_ = true;"},
{"lineNum":" 4222","line":"        }"},
{"lineNum":" 4223","line":"    }"},
{"lineNum":" 4224","line":"    else"},
{"lineNum":" 4225","line":"    {"},
{"lineNum":" 4226","line":"        __ibs_ = 0;"},
{"lineNum":" 4227","line":"        __intbuf_ = 0;"},
{"lineNum":" 4228","line":"        __owns_ib_ = false;"},
{"lineNum":" 4229","line":"    }"},
{"lineNum":" 4230","line":"    return this;"},
{"lineNum":" 4231","line":"}"},
{"lineNum":" 4232","line":""},
{"lineNum":" 4233","line":"template <class _Codecvt, class _Elem, class _Tr>"},
{"lineNum":" 4234","line":"typename wbuffer_convert<_Codecvt, _Elem, _Tr>::pos_type"},
{"lineNum":" 4235","line":"wbuffer_convert<_Codecvt, _Elem, _Tr>::seekoff(off_type __off, ios_base::seekdir __way,"},
{"lineNum":" 4236","line":"                                        ios_base::openmode __om)"},
{"lineNum":" 4237","line":"{"},
{"lineNum":" 4238","line":"    int __width = __cv_->encoding();"},
{"lineNum":" 4239","line":"    if (__cv_ == 0 || __bufptr_ == 0 || (__width <= 0 && __off != 0) || sync())"},
{"lineNum":" 4240","line":"        return pos_type(off_type(-1));"},
{"lineNum":" 4241","line":"    // __width > 0 || __off == 0, now check __way"},
{"lineNum":" 4242","line":"    if (__way != ios_base::beg && __way != ios_base::cur && __way != ios_base::end)"},
{"lineNum":" 4243","line":"        return pos_type(off_type(-1));"},
{"lineNum":" 4244","line":"    pos_type __r = __bufptr_->pubseekoff(__width * __off, __way, __om);"},
{"lineNum":" 4245","line":"    __r.state(__st_);"},
{"lineNum":" 4246","line":"    return __r;"},
{"lineNum":" 4247","line":"}"},
{"lineNum":" 4248","line":""},
{"lineNum":" 4249","line":"template <class _Codecvt, class _Elem, class _Tr>"},
{"lineNum":" 4250","line":"typename wbuffer_convert<_Codecvt, _Elem, _Tr>::pos_type"},
{"lineNum":" 4251","line":"wbuffer_convert<_Codecvt, _Elem, _Tr>::seekpos(pos_type __sp, ios_base::openmode __wch)"},
{"lineNum":" 4252","line":"{"},
{"lineNum":" 4253","line":"    if (__cv_ == 0 || __bufptr_ == 0 || sync())"},
{"lineNum":" 4254","line":"        return pos_type(off_type(-1));"},
{"lineNum":" 4255","line":"    if (__bufptr_->pubseekpos(__sp, __wch) == pos_type(off_type(-1)))"},
{"lineNum":" 4256","line":"        return pos_type(off_type(-1));"},
{"lineNum":" 4257","line":"    return __sp;"},
{"lineNum":" 4258","line":"}"},
{"lineNum":" 4259","line":""},
{"lineNum":" 4260","line":"template <class _Codecvt, class _Elem, class _Tr>"},
{"lineNum":" 4261","line":"int"},
{"lineNum":" 4262","line":"wbuffer_convert<_Codecvt, _Elem, _Tr>::sync()"},
{"lineNum":" 4263","line":"{"},
{"lineNum":" 4264","line":"    if (__cv_ == 0 || __bufptr_ == 0)"},
{"lineNum":" 4265","line":"        return 0;"},
{"lineNum":" 4266","line":"    if (__cm_ & ios_base::out)"},
{"lineNum":" 4267","line":"    {"},
{"lineNum":" 4268","line":"        if (this->pptr() != this->pbase())"},
{"lineNum":" 4269","line":"            if (overflow() == traits_type::eof())"},
{"lineNum":" 4270","line":"                return -1;"},
{"lineNum":" 4271","line":"        codecvt_base::result __r;"},
{"lineNum":" 4272","line":"        do"},
{"lineNum":" 4273","line":"        {"},
{"lineNum":" 4274","line":"            char* __extbe;"},
{"lineNum":" 4275","line":"            __r = __cv_->unshift(__st_, __extbuf_, __extbuf_ + __ebs_, __extbe);"},
{"lineNum":" 4276","line":"            streamsize __nmemb = static_cast<streamsize>(__extbe - __extbuf_);"},
{"lineNum":" 4277","line":"            if (__bufptr_->sputn(__extbuf_, __nmemb) != __nmemb)"},
{"lineNum":" 4278","line":"                return -1;"},
{"lineNum":" 4279","line":"        } while (__r == codecvt_base::partial);"},
{"lineNum":" 4280","line":"        if (__r == codecvt_base::error)"},
{"lineNum":" 4281","line":"            return -1;"},
{"lineNum":" 4282","line":"        if (__bufptr_->pubsync())"},
{"lineNum":" 4283","line":"            return -1;"},
{"lineNum":" 4284","line":"    }"},
{"lineNum":" 4285","line":"    else if (__cm_ & ios_base::in)"},
{"lineNum":" 4286","line":"    {"},
{"lineNum":" 4287","line":"        off_type __c;"},
{"lineNum":" 4288","line":"        if (__always_noconv_)"},
{"lineNum":" 4289","line":"            __c = this->egptr() - this->gptr();"},
{"lineNum":" 4290","line":"        else"},
{"lineNum":" 4291","line":"        {"},
{"lineNum":" 4292","line":"            int __width = __cv_->encoding();"},
{"lineNum":" 4293","line":"            __c = __extbufend_ - __extbufnext_;"},
{"lineNum":" 4294","line":"            if (__width > 0)"},
{"lineNum":" 4295","line":"                __c += __width * (this->egptr() - this->gptr());"},
{"lineNum":" 4296","line":"            else"},
{"lineNum":" 4297","line":"            {"},
{"lineNum":" 4298","line":"                if (this->gptr() != this->egptr())"},
{"lineNum":" 4299","line":"                {"},
{"lineNum":" 4300","line":"                    reverse(this->gptr(), this->egptr());"},
{"lineNum":" 4301","line":"                    codecvt_base::result __r;"},
{"lineNum":" 4302","line":"                    const char_type* __e = this->gptr();"},
{"lineNum":" 4303","line":"                    char* __extbe;"},
{"lineNum":" 4304","line":"                    do"},
{"lineNum":" 4305","line":"                    {"},
{"lineNum":" 4306","line":"                        __r = __cv_->out(__st_, __e, this->egptr(), __e,"},
{"lineNum":" 4307","line":"                                         __extbuf_, __extbuf_ + __ebs_, __extbe);"},
{"lineNum":" 4308","line":"                        switch (__r)"},
{"lineNum":" 4309","line":"                        {"},
{"lineNum":" 4310","line":"                        case codecvt_base::noconv:"},
{"lineNum":" 4311","line":"                            __c += this->egptr() - this->gptr();"},
{"lineNum":" 4312","line":"                            break;"},
{"lineNum":" 4313","line":"                        case codecvt_base::ok:"},
{"lineNum":" 4314","line":"                        case codecvt_base::partial:"},
{"lineNum":" 4315","line":"                            __c += __extbe - __extbuf_;"},
{"lineNum":" 4316","line":"                            break;"},
{"lineNum":" 4317","line":"                        default:"},
{"lineNum":" 4318","line":"                            return -1;"},
{"lineNum":" 4319","line":"                        }"},
{"lineNum":" 4320","line":"                    } while (__r == codecvt_base::partial);"},
{"lineNum":" 4321","line":"                }"},
{"lineNum":" 4322","line":"            }"},
{"lineNum":" 4323","line":"        }"},
{"lineNum":" 4324","line":"        if (__bufptr_->pubseekoff(-__c, ios_base::cur, __cm_) == pos_type(off_type(-1)))"},
{"lineNum":" 4325","line":"            return -1;"},
{"lineNum":" 4326","line":"        this->setg(0, 0, 0);"},
{"lineNum":" 4327","line":"        __cm_ = 0;"},
{"lineNum":" 4328","line":"    }"},
{"lineNum":" 4329","line":"    return 0;"},
{"lineNum":" 4330","line":"}"},
{"lineNum":" 4331","line":""},
{"lineNum":" 4332","line":"template <class _Codecvt, class _Elem, class _Tr>"},
{"lineNum":" 4333","line":"bool"},
{"lineNum":" 4334","line":"wbuffer_convert<_Codecvt, _Elem, _Tr>::__read_mode()"},
{"lineNum":" 4335","line":"{"},
{"lineNum":" 4336","line":"    if (!(__cm_ & ios_base::in))"},
{"lineNum":" 4337","line":"    {"},
{"lineNum":" 4338","line":"        this->setp(0, 0);"},
{"lineNum":" 4339","line":"        if (__always_noconv_)"},
{"lineNum":" 4340","line":"            this->setg((char_type*)__extbuf_,"},
{"lineNum":" 4341","line":"                       (char_type*)__extbuf_ + __ebs_,"},
{"lineNum":" 4342","line":"                       (char_type*)__extbuf_ + __ebs_);"},
{"lineNum":" 4343","line":"        else"},
{"lineNum":" 4344","line":"            this->setg(__intbuf_, __intbuf_ + __ibs_, __intbuf_ + __ibs_);"},
{"lineNum":" 4345","line":"        __cm_ = ios_base::in;"},
{"lineNum":" 4346","line":"        return true;"},
{"lineNum":" 4347","line":"    }"},
{"lineNum":" 4348","line":"    return false;"},
{"lineNum":" 4349","line":"}"},
{"lineNum":" 4350","line":""},
{"lineNum":" 4351","line":"template <class _Codecvt, class _Elem, class _Tr>"},
{"lineNum":" 4352","line":"void"},
{"lineNum":" 4353","line":"wbuffer_convert<_Codecvt, _Elem, _Tr>::__write_mode()"},
{"lineNum":" 4354","line":"{"},
{"lineNum":" 4355","line":"    if (!(__cm_ & ios_base::out))"},
{"lineNum":" 4356","line":"    {"},
{"lineNum":" 4357","line":"        this->setg(0, 0, 0);"},
{"lineNum":" 4358","line":"        if (__ebs_ > sizeof(__extbuf_min_))"},
{"lineNum":" 4359","line":"        {"},
{"lineNum":" 4360","line":"            if (__always_noconv_)"},
{"lineNum":" 4361","line":"                this->setp((char_type*)__extbuf_,"},
{"lineNum":" 4362","line":"                           (char_type*)__extbuf_ + (__ebs_ - 1));"},
{"lineNum":" 4363","line":"            else"},
{"lineNum":" 4364","line":"                this->setp(__intbuf_, __intbuf_ + (__ibs_ - 1));"},
{"lineNum":" 4365","line":"        }"},
{"lineNum":" 4366","line":"        else"},
{"lineNum":" 4367","line":"            this->setp(0, 0);"},
{"lineNum":" 4368","line":"        __cm_ = ios_base::out;"},
{"lineNum":" 4369","line":"    }"},
{"lineNum":" 4370","line":"}"},
{"lineNum":" 4371","line":""},
{"lineNum":" 4372","line":"template <class _Codecvt, class _Elem, class _Tr>"},
{"lineNum":" 4373","line":"wbuffer_convert<_Codecvt, _Elem, _Tr>*"},
{"lineNum":" 4374","line":"wbuffer_convert<_Codecvt, _Elem, _Tr>::__close()"},
{"lineNum":" 4375","line":"{"},
{"lineNum":" 4376","line":"    wbuffer_convert* __rt = nullptr;"},
{"lineNum":" 4377","line":"    if (__cv_ != nullptr && __bufptr_ != nullptr)"},
{"lineNum":" 4378","line":"    {"},
{"lineNum":" 4379","line":"        __rt = this;"},
{"lineNum":" 4380","line":"        if ((__cm_ & ios_base::out) && sync())"},
{"lineNum":" 4381","line":"            __rt = nullptr;"},
{"lineNum":" 4382","line":"    }"},
{"lineNum":" 4383","line":"    return __rt;"},
{"lineNum":" 4384","line":"}"},
{"lineNum":" 4385","line":""},
{"lineNum":" 4386","line":"_LIBCPP_END_NAMESPACE_STD"},
{"lineNum":" 4387","line":""},
{"lineNum":" 4388","line":"_LIBCPP_POP_MACROS"},
{"lineNum":" 4389","line":""},
{"lineNum":" 4390","line":"#endif // _LIBCPP_LOCALE"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 22, "covered" : 0,};
var merged_data = [];
