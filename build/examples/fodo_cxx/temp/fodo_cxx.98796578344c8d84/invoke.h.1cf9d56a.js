var data = {lines:[
{"lineNum":"    1","line":"// -*- C++ -*-"},
{"lineNum":"    2","line":"//===----------------------------------------------------------------------===//"},
{"lineNum":"    3","line":"//"},
{"lineNum":"    4","line":"// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions."},
{"lineNum":"    5","line":"// See https://llvm.org/LICENSE.txt for license information."},
{"lineNum":"    6","line":"// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception"},
{"lineNum":"    7","line":"//"},
{"lineNum":"    8","line":"//===----------------------------------------------------------------------===//"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"#ifndef _LIBCPP___FUNCTIONAL_INVOKE_H"},
{"lineNum":"   11","line":"#define _LIBCPP___FUNCTIONAL_INVOKE_H"},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"#include <__config>"},
{"lineNum":"   14","line":"#include <__functional/weak_result_type.h>"},
{"lineNum":"   15","line":"#include <__utility/forward.h>"},
{"lineNum":"   16","line":"#include <type_traits>"},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)"},
{"lineNum":"   19","line":"#pragma GCC system_header"},
{"lineNum":"   20","line":"#endif"},
{"lineNum":"   21","line":""},
{"lineNum":"   22","line":"_LIBCPP_BEGIN_NAMESPACE_STD"},
{"lineNum":"   23","line":""},
{"lineNum":"   24","line":"template <class _Ret, bool = is_void<_Ret>::value>"},
{"lineNum":"   25","line":"struct __invoke_void_return_wrapper"},
{"lineNum":"   26","line":"{"},
{"lineNum":"   27","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":"   28","line":"    template <class ..._Args>"},
{"lineNum":"   29","line":"    static _Ret __call(_Args&&... __args) {"},
{"lineNum":"   30","line":"        return _VSTD::__invoke(_VSTD::forward<_Args>(__args)...);"},
{"lineNum":"   31","line":"    }"},
{"lineNum":"   32","line":"#else"},
{"lineNum":"   33","line":"    template <class _Fn>"},
{"lineNum":"   34","line":"    static _Ret __call(_Fn __f) {"},
{"lineNum":"   35","line":"        return _VSTD::__invoke(__f);"},
{"lineNum":"   36","line":"    }"},
{"lineNum":"   37","line":""},
{"lineNum":"   38","line":"    template <class _Fn, class _A0>"},
{"lineNum":"   39","line":"    static _Ret __call(_Fn __f, _A0& __a0) {"},
{"lineNum":"   40","line":"        return _VSTD::__invoke(__f, __a0);"},
{"lineNum":"   41","line":"    }"},
{"lineNum":"   42","line":""},
{"lineNum":"   43","line":"    template <class _Fn, class _A0, class _A1>"},
{"lineNum":"   44","line":"    static _Ret __call(_Fn __f, _A0& __a0, _A1& __a1) {"},
{"lineNum":"   45","line":"        return _VSTD::__invoke(__f, __a0, __a1);"},
{"lineNum":"   46","line":"    }"},
{"lineNum":"   47","line":""},
{"lineNum":"   48","line":"    template <class _Fn, class _A0, class _A1, class _A2>"},
{"lineNum":"   49","line":"    static _Ret __call(_Fn __f, _A0& __a0, _A1& __a1, _A2& __a2){"},
{"lineNum":"   50","line":"        return _VSTD::__invoke(__f, __a0, __a1, __a2);"},
{"lineNum":"   51","line":"    }"},
{"lineNum":"   52","line":"#endif"},
{"lineNum":"   53","line":"};"},
{"lineNum":"   54","line":""},
{"lineNum":"   55","line":"template <class _Ret>"},
{"lineNum":"   56","line":"struct __invoke_void_return_wrapper<_Ret, true>"},
{"lineNum":"   57","line":"{"},
{"lineNum":"   58","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":"   59","line":"    template <class ..._Args>"},
{"lineNum":"   60","line":"    static void __call(_Args&&... __args) {","class":"lineNoCov","hits":"0","possible_hits":"67",},
{"lineNum":"   61","line":"        _VSTD::__invoke(_VSTD::forward<_Args>(__args)...);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   62","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"103",},
{"lineNum":"   63","line":"#else"},
{"lineNum":"   64","line":"    template <class _Fn>"},
{"lineNum":"   65","line":"    static void __call(_Fn __f) {"},
{"lineNum":"   66","line":"        _VSTD::__invoke(__f);"},
{"lineNum":"   67","line":"    }"},
{"lineNum":"   68","line":""},
{"lineNum":"   69","line":"    template <class _Fn, class _A0>"},
{"lineNum":"   70","line":"    static void __call(_Fn __f, _A0& __a0) {"},
{"lineNum":"   71","line":"        _VSTD::__invoke(__f, __a0);"},
{"lineNum":"   72","line":"    }"},
{"lineNum":"   73","line":""},
{"lineNum":"   74","line":"    template <class _Fn, class _A0, class _A1>"},
{"lineNum":"   75","line":"    static void __call(_Fn __f, _A0& __a0, _A1& __a1) {"},
{"lineNum":"   76","line":"        _VSTD::__invoke(__f, __a0, __a1);"},
{"lineNum":"   77","line":"    }"},
{"lineNum":"   78","line":""},
{"lineNum":"   79","line":"    template <class _Fn, class _A0, class _A1, class _A2>"},
{"lineNum":"   80","line":"    static void __call(_Fn __f, _A0& __a0, _A1& __a1, _A2& __a2) {"},
{"lineNum":"   81","line":"        _VSTD::__invoke(__f, __a0, __a1, __a2);"},
{"lineNum":"   82","line":"    }"},
{"lineNum":"   83","line":"#endif"},
{"lineNum":"   84","line":"};"},
{"lineNum":"   85","line":""},
{"lineNum":"   86","line":"#if _LIBCPP_STD_VER > 14"},
{"lineNum":"   87","line":""},
{"lineNum":"   88","line":"template <class _Fn, class ..._Args>"},
{"lineNum":"   89","line":"_LIBCPP_CONSTEXPR_AFTER_CXX17 invoke_result_t<_Fn, _Args...>"},
{"lineNum":"   90","line":"invoke(_Fn&& __f, _Args&&... __args)"},
{"lineNum":"   91","line":"    noexcept(is_nothrow_invocable_v<_Fn, _Args...>)"},
{"lineNum":"   92","line":"{"},
{"lineNum":"   93","line":"    return _VSTD::__invoke(_VSTD::forward<_Fn>(__f), _VSTD::forward<_Args>(__args)...);"},
{"lineNum":"   94","line":"}"},
{"lineNum":"   95","line":""},
{"lineNum":"   96","line":"#endif // _LIBCPP_STD_VER > 14"},
{"lineNum":"   97","line":""},
{"lineNum":"   98","line":"_LIBCPP_END_NAMESPACE_STD"},
{"lineNum":"   99","line":""},
{"lineNum":"  100","line":"#endif // _LIBCPP___FUNCTIONAL_INVOKE_H"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 3, "covered" : 0,};
var merged_data = [];
