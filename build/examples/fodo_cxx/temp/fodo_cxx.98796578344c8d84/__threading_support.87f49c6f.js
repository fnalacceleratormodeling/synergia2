var data = {lines:[
{"lineNum":"    1","line":"// -*- C++ -*-"},
{"lineNum":"    2","line":"//===----------------------------------------------------------------------===//"},
{"lineNum":"    3","line":"//"},
{"lineNum":"    4","line":"// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions."},
{"lineNum":"    5","line":"// See https://llvm.org/LICENSE.txt for license information."},
{"lineNum":"    6","line":"// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception"},
{"lineNum":"    7","line":"//"},
{"lineNum":"    8","line":"//===----------------------------------------------------------------------===//"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"#ifndef _LIBCPP_THREADING_SUPPORT"},
{"lineNum":"   11","line":"#define _LIBCPP_THREADING_SUPPORT"},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"#include <__availability>"},
{"lineNum":"   14","line":"#include <__config>"},
{"lineNum":"   15","line":"#include <chrono>"},
{"lineNum":"   16","line":"#include <errno.h>"},
{"lineNum":"   17","line":"#include <iosfwd>"},
{"lineNum":"   18","line":"#include <limits>"},
{"lineNum":"   19","line":""},
{"lineNum":"   20","line":"#ifdef __MVS__"},
{"lineNum":"   21","line":"# include <__support/ibm/nanosleep.h>"},
{"lineNum":"   22","line":"#endif"},
{"lineNum":"   23","line":""},
{"lineNum":"   24","line":"#ifndef _LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER"},
{"lineNum":"   25","line":"#pragma GCC system_header"},
{"lineNum":"   26","line":"#endif"},
{"lineNum":"   27","line":""},
{"lineNum":"   28","line":"#if defined(_LIBCPP_HAS_THREAD_API_EXTERNAL)"},
{"lineNum":"   29","line":"# include <__external_threading>"},
{"lineNum":"   30","line":"#elif !defined(_LIBCPP_HAS_NO_THREADS)"},
{"lineNum":"   31","line":""},
{"lineNum":"   32","line":"#if defined(__APPLE__) || defined(__MVS__)"},
{"lineNum":"   33","line":"# define _LIBCPP_NO_NATIVE_SEMAPHORES"},
{"lineNum":"   34","line":"#endif"},
{"lineNum":"   35","line":""},
{"lineNum":"   36","line":"#if defined(_LIBCPP_HAS_THREAD_API_PTHREAD)"},
{"lineNum":"   37","line":"# include <pthread.h>"},
{"lineNum":"   38","line":"# include <sched.h>"},
{"lineNum":"   39","line":"# ifndef _LIBCPP_NO_NATIVE_SEMAPHORES"},
{"lineNum":"   40","line":"#   include <semaphore.h>"},
{"lineNum":"   41","line":"# endif"},
{"lineNum":"   42","line":"#elif defined(_LIBCPP_HAS_THREAD_API_C11)"},
{"lineNum":"   43","line":"# include <threads.h>"},
{"lineNum":"   44","line":"#endif"},
{"lineNum":"   45","line":""},
{"lineNum":"   46","line":"#if defined(_LIBCPP_HAS_THREAD_LIBRARY_EXTERNAL) || \\"},
{"lineNum":"   47","line":"    defined(_LIBCPP_BUILDING_THREAD_LIBRARY_EXTERNAL) || \\"},
{"lineNum":"   48","line":"    defined(_LIBCPP_HAS_THREAD_API_WIN32)"},
{"lineNum":"   49","line":"#define _LIBCPP_THREAD_ABI_VISIBILITY _LIBCPP_FUNC_VIS"},
{"lineNum":"   50","line":"#else"},
{"lineNum":"   51","line":"#define _LIBCPP_THREAD_ABI_VISIBILITY inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"   52","line":"#endif"},
{"lineNum":"   53","line":""},
{"lineNum":"   54","line":"#if defined(__FreeBSD__) && defined(__clang__) && __has_attribute(no_thread_safety_analysis)"},
{"lineNum":"   55","line":"#define _LIBCPP_NO_THREAD_SAFETY_ANALYSIS __attribute__((no_thread_safety_analysis))"},
{"lineNum":"   56","line":"#else"},
{"lineNum":"   57","line":"#define _LIBCPP_NO_THREAD_SAFETY_ANALYSIS"},
{"lineNum":"   58","line":"#endif"},
{"lineNum":"   59","line":""},
{"lineNum":"   60","line":"typedef ::timespec __libcpp_timespec_t;"},
{"lineNum":"   61","line":"#endif // !defined(_LIBCPP_HAS_NO_THREADS)"},
{"lineNum":"   62","line":""},
{"lineNum":"   63","line":"_LIBCPP_PUSH_MACROS"},
{"lineNum":"   64","line":"#include <__undef_macros>"},
{"lineNum":"   65","line":""},
{"lineNum":"   66","line":"_LIBCPP_BEGIN_NAMESPACE_STD"},
{"lineNum":"   67","line":""},
{"lineNum":"   68","line":"#if !defined(_LIBCPP_HAS_NO_THREADS)"},
{"lineNum":"   69","line":""},
{"lineNum":"   70","line":"#if defined(_LIBCPP_HAS_THREAD_API_PTHREAD)"},
{"lineNum":"   71","line":"// Mutex"},
{"lineNum":"   72","line":"typedef pthread_mutex_t __libcpp_mutex_t;"},
{"lineNum":"   73","line":"#define _LIBCPP_MUTEX_INITIALIZER PTHREAD_MUTEX_INITIALIZER"},
{"lineNum":"   74","line":""},
{"lineNum":"   75","line":"typedef pthread_mutex_t __libcpp_recursive_mutex_t;"},
{"lineNum":"   76","line":""},
{"lineNum":"   77","line":"// Condition Variable"},
{"lineNum":"   78","line":"typedef pthread_cond_t __libcpp_condvar_t;"},
{"lineNum":"   79","line":"#define _LIBCPP_CONDVAR_INITIALIZER PTHREAD_COND_INITIALIZER"},
{"lineNum":"   80","line":""},
{"lineNum":"   81","line":"#ifndef _LIBCPP_NO_NATIVE_SEMAPHORES"},
{"lineNum":"   82","line":"// Semaphore"},
{"lineNum":"   83","line":"typedef sem_t __libcpp_semaphore_t;"},
{"lineNum":"   84","line":"# define _LIBCPP_SEMAPHORE_MAX SEM_VALUE_MAX"},
{"lineNum":"   85","line":"#endif"},
{"lineNum":"   86","line":""},
{"lineNum":"   87","line":"// Execute once"},
{"lineNum":"   88","line":"typedef pthread_once_t __libcpp_exec_once_flag;"},
{"lineNum":"   89","line":"#define _LIBCPP_EXEC_ONCE_INITIALIZER PTHREAD_ONCE_INIT"},
{"lineNum":"   90","line":""},
{"lineNum":"   91","line":"// Thread id"},
{"lineNum":"   92","line":"#if defined(__MVS__)"},
{"lineNum":"   93","line":"  typedef unsigned long long __libcpp_thread_id;"},
{"lineNum":"   94","line":"#else"},
{"lineNum":"   95","line":"  typedef pthread_t __libcpp_thread_id;"},
{"lineNum":"   96","line":"#endif"},
{"lineNum":"   97","line":""},
{"lineNum":"   98","line":"// Thread"},
{"lineNum":"   99","line":"#define _LIBCPP_NULL_THREAD ((__libcpp_thread_t()))"},
{"lineNum":"  100","line":"typedef pthread_t __libcpp_thread_t;"},
{"lineNum":"  101","line":""},
{"lineNum":"  102","line":"// Thread Local Storage"},
{"lineNum":"  103","line":"typedef pthread_key_t __libcpp_tls_key;"},
{"lineNum":"  104","line":""},
{"lineNum":"  105","line":"#define _LIBCPP_TLS_DESTRUCTOR_CC"},
{"lineNum":"  106","line":"#elif defined(_LIBCPP_HAS_THREAD_API_C11)"},
{"lineNum":"  107","line":"// Mutex"},
{"lineNum":"  108","line":"typedef mtx_t __libcpp_mutex_t;"},
{"lineNum":"  109","line":"// mtx_t is a struct so using {} for initialization is valid."},
{"lineNum":"  110","line":"#define _LIBCPP_MUTEX_INITIALIZER {}"},
{"lineNum":"  111","line":""},
{"lineNum":"  112","line":"typedef mtx_t __libcpp_recursive_mutex_t;"},
{"lineNum":"  113","line":""},
{"lineNum":"  114","line":"// Condition Variable"},
{"lineNum":"  115","line":"typedef cnd_t __libcpp_condvar_t;"},
{"lineNum":"  116","line":"// cnd_t is a struct so using {} for initialization is valid."},
{"lineNum":"  117","line":"#define _LIBCPP_CONDVAR_INITIALIZER {}"},
{"lineNum":"  118","line":""},
{"lineNum":"  119","line":"// Execute once"},
{"lineNum":"  120","line":"typedef once_flag __libcpp_exec_once_flag;"},
{"lineNum":"  121","line":"#define _LIBCPP_EXEC_ONCE_INITIALIZER ONCE_FLAG_INIT"},
{"lineNum":"  122","line":""},
{"lineNum":"  123","line":"// Thread id"},
{"lineNum":"  124","line":"typedef thrd_t __libcpp_thread_id;"},
{"lineNum":"  125","line":""},
{"lineNum":"  126","line":"// Thread"},
{"lineNum":"  127","line":"#define _LIBCPP_NULL_THREAD 0U"},
{"lineNum":"  128","line":""},
{"lineNum":"  129","line":"typedef thrd_t __libcpp_thread_t;"},
{"lineNum":"  130","line":""},
{"lineNum":"  131","line":"// Thread Local Storage"},
{"lineNum":"  132","line":"typedef tss_t __libcpp_tls_key;"},
{"lineNum":"  133","line":""},
{"lineNum":"  134","line":"#define _LIBCPP_TLS_DESTRUCTOR_CC"},
{"lineNum":"  135","line":"#elif !defined(_LIBCPP_HAS_THREAD_API_EXTERNAL)"},
{"lineNum":"  136","line":"// Mutex"},
{"lineNum":"  137","line":"typedef void* __libcpp_mutex_t;"},
{"lineNum":"  138","line":"#define _LIBCPP_MUTEX_INITIALIZER 0"},
{"lineNum":"  139","line":""},
{"lineNum":"  140","line":"#if defined(_M_IX86) || defined(__i386__) || defined(_M_ARM) || defined(__arm__)"},
{"lineNum":"  141","line":"typedef void* __libcpp_recursive_mutex_t[6];"},
{"lineNum":"  142","line":"#elif defined(_M_AMD64) || defined(__x86_64__) || defined(_M_ARM64) || defined(__aarch64__)"},
{"lineNum":"  143","line":"typedef void* __libcpp_recursive_mutex_t[5];"},
{"lineNum":"  144","line":"#else"},
{"lineNum":"  145","line":"# error Unsupported architecture"},
{"lineNum":"  146","line":"#endif"},
{"lineNum":"  147","line":""},
{"lineNum":"  148","line":"// Condition Variable"},
{"lineNum":"  149","line":"typedef void* __libcpp_condvar_t;"},
{"lineNum":"  150","line":"#define _LIBCPP_CONDVAR_INITIALIZER 0"},
{"lineNum":"  151","line":""},
{"lineNum":"  152","line":"// Semaphore"},
{"lineNum":"  153","line":"typedef void* __libcpp_semaphore_t;"},
{"lineNum":"  154","line":"#if defined(_LIBCPP_HAS_THREAD_API_WIN32)"},
{"lineNum":"  155","line":"# define _LIBCPP_SEMAPHORE_MAX (::std::numeric_limits<long>::max())"},
{"lineNum":"  156","line":"#endif"},
{"lineNum":"  157","line":""},
{"lineNum":"  158","line":"// Execute Once"},
{"lineNum":"  159","line":"typedef void* __libcpp_exec_once_flag;"},
{"lineNum":"  160","line":"#define _LIBCPP_EXEC_ONCE_INITIALIZER 0"},
{"lineNum":"  161","line":""},
{"lineNum":"  162","line":"// Thread ID"},
{"lineNum":"  163","line":"typedef long __libcpp_thread_id;"},
{"lineNum":"  164","line":""},
{"lineNum":"  165","line":"// Thread"},
{"lineNum":"  166","line":"#define _LIBCPP_NULL_THREAD 0U"},
{"lineNum":"  167","line":""},
{"lineNum":"  168","line":"typedef void* __libcpp_thread_t;"},
{"lineNum":"  169","line":""},
{"lineNum":"  170","line":"// Thread Local Storage"},
{"lineNum":"  171","line":"typedef long __libcpp_tls_key;"},
{"lineNum":"  172","line":""},
{"lineNum":"  173","line":"#define _LIBCPP_TLS_DESTRUCTOR_CC __stdcall"},
{"lineNum":"  174","line":"#endif // !defined(_LIBCPP_HAS_THREAD_API_PTHREAD) && !defined(_LIBCPP_HAS_THREAD_API_EXTERNAL)"},
{"lineNum":"  175","line":""},
{"lineNum":"  176","line":"#if !defined(_LIBCPP_HAS_THREAD_API_EXTERNAL)"},
{"lineNum":"  177","line":"// Mutex"},
{"lineNum":"  178","line":"_LIBCPP_THREAD_ABI_VISIBILITY"},
{"lineNum":"  179","line":"int __libcpp_recursive_mutex_init(__libcpp_recursive_mutex_t *__m);"},
{"lineNum":"  180","line":""},
{"lineNum":"  181","line":"_LIBCPP_THREAD_ABI_VISIBILITY _LIBCPP_NO_THREAD_SAFETY_ANALYSIS"},
{"lineNum":"  182","line":"int __libcpp_recursive_mutex_lock(__libcpp_recursive_mutex_t *__m);"},
{"lineNum":"  183","line":""},
{"lineNum":"  184","line":"_LIBCPP_THREAD_ABI_VISIBILITY _LIBCPP_NO_THREAD_SAFETY_ANALYSIS"},
{"lineNum":"  185","line":"bool __libcpp_recursive_mutex_trylock(__libcpp_recursive_mutex_t *__m);"},
{"lineNum":"  186","line":""},
{"lineNum":"  187","line":"_LIBCPP_THREAD_ABI_VISIBILITY _LIBCPP_NO_THREAD_SAFETY_ANALYSIS"},
{"lineNum":"  188","line":"int __libcpp_recursive_mutex_unlock(__libcpp_recursive_mutex_t *__m);"},
{"lineNum":"  189","line":""},
{"lineNum":"  190","line":"_LIBCPP_THREAD_ABI_VISIBILITY"},
{"lineNum":"  191","line":"int __libcpp_recursive_mutex_destroy(__libcpp_recursive_mutex_t *__m);"},
{"lineNum":"  192","line":""},
{"lineNum":"  193","line":"_LIBCPP_THREAD_ABI_VISIBILITY _LIBCPP_NO_THREAD_SAFETY_ANALYSIS"},
{"lineNum":"  194","line":"int __libcpp_mutex_lock(__libcpp_mutex_t *__m);"},
{"lineNum":"  195","line":""},
{"lineNum":"  196","line":"_LIBCPP_THREAD_ABI_VISIBILITY _LIBCPP_NO_THREAD_SAFETY_ANALYSIS"},
{"lineNum":"  197","line":"bool __libcpp_mutex_trylock(__libcpp_mutex_t *__m);"},
{"lineNum":"  198","line":""},
{"lineNum":"  199","line":"_LIBCPP_THREAD_ABI_VISIBILITY _LIBCPP_NO_THREAD_SAFETY_ANALYSIS"},
{"lineNum":"  200","line":"int __libcpp_mutex_unlock(__libcpp_mutex_t *__m);"},
{"lineNum":"  201","line":""},
{"lineNum":"  202","line":"_LIBCPP_THREAD_ABI_VISIBILITY"},
{"lineNum":"  203","line":"int __libcpp_mutex_destroy(__libcpp_mutex_t *__m);"},
{"lineNum":"  204","line":""},
{"lineNum":"  205","line":"// Condition variable"},
{"lineNum":"  206","line":"_LIBCPP_THREAD_ABI_VISIBILITY"},
{"lineNum":"  207","line":"int __libcpp_condvar_signal(__libcpp_condvar_t* __cv);"},
{"lineNum":"  208","line":""},
{"lineNum":"  209","line":"_LIBCPP_THREAD_ABI_VISIBILITY"},
{"lineNum":"  210","line":"int __libcpp_condvar_broadcast(__libcpp_condvar_t* __cv);"},
{"lineNum":"  211","line":""},
{"lineNum":"  212","line":"_LIBCPP_THREAD_ABI_VISIBILITY _LIBCPP_NO_THREAD_SAFETY_ANALYSIS"},
{"lineNum":"  213","line":"int __libcpp_condvar_wait(__libcpp_condvar_t* __cv, __libcpp_mutex_t* __m);"},
{"lineNum":"  214","line":""},
{"lineNum":"  215","line":"_LIBCPP_THREAD_ABI_VISIBILITY _LIBCPP_NO_THREAD_SAFETY_ANALYSIS"},
{"lineNum":"  216","line":"int __libcpp_condvar_timedwait(__libcpp_condvar_t *__cv, __libcpp_mutex_t *__m,"},
{"lineNum":"  217","line":"                               __libcpp_timespec_t *__ts);"},
{"lineNum":"  218","line":""},
{"lineNum":"  219","line":"_LIBCPP_THREAD_ABI_VISIBILITY"},
{"lineNum":"  220","line":"int __libcpp_condvar_destroy(__libcpp_condvar_t* __cv);"},
{"lineNum":"  221","line":""},
{"lineNum":"  222","line":"#ifndef _LIBCPP_NO_NATIVE_SEMAPHORES"},
{"lineNum":"  223","line":""},
{"lineNum":"  224","line":"// Semaphore"},
{"lineNum":"  225","line":"_LIBCPP_THREAD_ABI_VISIBILITY"},
{"lineNum":"  226","line":"bool __libcpp_semaphore_init(__libcpp_semaphore_t* __sem, int __init);"},
{"lineNum":"  227","line":""},
{"lineNum":"  228","line":"_LIBCPP_THREAD_ABI_VISIBILITY"},
{"lineNum":"  229","line":"bool __libcpp_semaphore_destroy(__libcpp_semaphore_t* __sem);"},
{"lineNum":"  230","line":""},
{"lineNum":"  231","line":"_LIBCPP_THREAD_ABI_VISIBILITY"},
{"lineNum":"  232","line":"bool __libcpp_semaphore_post(__libcpp_semaphore_t* __sem);"},
{"lineNum":"  233","line":""},
{"lineNum":"  234","line":"_LIBCPP_THREAD_ABI_VISIBILITY"},
{"lineNum":"  235","line":"bool __libcpp_semaphore_wait(__libcpp_semaphore_t* __sem);"},
{"lineNum":"  236","line":""},
{"lineNum":"  237","line":"_LIBCPP_THREAD_ABI_VISIBILITY"},
{"lineNum":"  238","line":"bool __libcpp_semaphore_wait_timed(__libcpp_semaphore_t* __sem, chrono::nanoseconds const& __ns);"},
{"lineNum":"  239","line":""},
{"lineNum":"  240","line":"#endif // _LIBCPP_NO_NATIVE_SEMAPHORES"},
{"lineNum":"  241","line":""},
{"lineNum":"  242","line":"// Execute once"},
{"lineNum":"  243","line":"_LIBCPP_THREAD_ABI_VISIBILITY"},
{"lineNum":"  244","line":"int __libcpp_execute_once(__libcpp_exec_once_flag *flag,"},
{"lineNum":"  245","line":"                          void (*init_routine)());"},
{"lineNum":"  246","line":""},
{"lineNum":"  247","line":"// Thread id"},
{"lineNum":"  248","line":"_LIBCPP_THREAD_ABI_VISIBILITY"},
{"lineNum":"  249","line":"bool __libcpp_thread_id_equal(__libcpp_thread_id t1, __libcpp_thread_id t2);"},
{"lineNum":"  250","line":""},
{"lineNum":"  251","line":"_LIBCPP_THREAD_ABI_VISIBILITY"},
{"lineNum":"  252","line":"bool __libcpp_thread_id_less(__libcpp_thread_id t1, __libcpp_thread_id t2);"},
{"lineNum":"  253","line":""},
{"lineNum":"  254","line":"// Thread"},
{"lineNum":"  255","line":"_LIBCPP_THREAD_ABI_VISIBILITY"},
{"lineNum":"  256","line":"bool __libcpp_thread_isnull(const __libcpp_thread_t *__t);"},
{"lineNum":"  257","line":""},
{"lineNum":"  258","line":"_LIBCPP_THREAD_ABI_VISIBILITY"},
{"lineNum":"  259","line":"int __libcpp_thread_create(__libcpp_thread_t *__t, void *(*__func)(void *),"},
{"lineNum":"  260","line":"                           void *__arg);"},
{"lineNum":"  261","line":""},
{"lineNum":"  262","line":"_LIBCPP_THREAD_ABI_VISIBILITY"},
{"lineNum":"  263","line":"__libcpp_thread_id __libcpp_thread_get_current_id();"},
{"lineNum":"  264","line":""},
{"lineNum":"  265","line":"_LIBCPP_THREAD_ABI_VISIBILITY"},
{"lineNum":"  266","line":"__libcpp_thread_id __libcpp_thread_get_id(const __libcpp_thread_t *__t);"},
{"lineNum":"  267","line":""},
{"lineNum":"  268","line":"_LIBCPP_THREAD_ABI_VISIBILITY"},
{"lineNum":"  269","line":"int __libcpp_thread_join(__libcpp_thread_t *__t);"},
{"lineNum":"  270","line":""},
{"lineNum":"  271","line":"_LIBCPP_THREAD_ABI_VISIBILITY"},
{"lineNum":"  272","line":"int __libcpp_thread_detach(__libcpp_thread_t *__t);"},
{"lineNum":"  273","line":""},
{"lineNum":"  274","line":"_LIBCPP_THREAD_ABI_VISIBILITY"},
{"lineNum":"  275","line":"void __libcpp_thread_yield();"},
{"lineNum":"  276","line":""},
{"lineNum":"  277","line":"_LIBCPP_THREAD_ABI_VISIBILITY"},
{"lineNum":"  278","line":"void __libcpp_thread_sleep_for(const chrono::nanoseconds& __ns);"},
{"lineNum":"  279","line":""},
{"lineNum":"  280","line":"// Thread local storage"},
{"lineNum":"  281","line":"_LIBCPP_THREAD_ABI_VISIBILITY"},
{"lineNum":"  282","line":"int __libcpp_tls_create(__libcpp_tls_key* __key,"},
{"lineNum":"  283","line":"                        void(_LIBCPP_TLS_DESTRUCTOR_CC* __at_exit)(void*));"},
{"lineNum":"  284","line":""},
{"lineNum":"  285","line":"_LIBCPP_THREAD_ABI_VISIBILITY"},
{"lineNum":"  286","line":"void *__libcpp_tls_get(__libcpp_tls_key __key);"},
{"lineNum":"  287","line":""},
{"lineNum":"  288","line":"_LIBCPP_THREAD_ABI_VISIBILITY"},
{"lineNum":"  289","line":"int __libcpp_tls_set(__libcpp_tls_key __key, void *__p);"},
{"lineNum":"  290","line":""},
{"lineNum":"  291","line":"#endif // !defined(_LIBCPP_HAS_THREAD_API_EXTERNAL)"},
{"lineNum":"  292","line":""},
{"lineNum":"  293","line":"struct __libcpp_timed_backoff_policy {"},
{"lineNum":"  294","line":"  _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  295","line":"  bool operator()(chrono::nanoseconds __elapsed) const"},
{"lineNum":"  296","line":"  {"},
{"lineNum":"  297","line":"      if(__elapsed > chrono::milliseconds(128))"},
{"lineNum":"  298","line":"          __libcpp_thread_sleep_for(chrono::milliseconds(8));"},
{"lineNum":"  299","line":"      else if(__elapsed > chrono::microseconds(64))"},
{"lineNum":"  300","line":"          __libcpp_thread_sleep_for(__elapsed / 2);"},
{"lineNum":"  301","line":"      else if(__elapsed > chrono::microseconds(4))"},
{"lineNum":"  302","line":"        __libcpp_thread_yield();"},
{"lineNum":"  303","line":"      else"},
{"lineNum":"  304","line":"        {} // poll"},
{"lineNum":"  305","line":"      return false;"},
{"lineNum":"  306","line":"  }"},
{"lineNum":"  307","line":"};"},
{"lineNum":"  308","line":""},
{"lineNum":"  309","line":"static _LIBCPP_CONSTEXPR const int __libcpp_polling_count = 64;"},
{"lineNum":"  310","line":""},
{"lineNum":"  311","line":"template<class _Fn, class _BFn>"},
{"lineNum":"  312","line":"_LIBCPP_AVAILABILITY_SYNC _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  313","line":"bool __libcpp_thread_poll_with_backoff("},
{"lineNum":"  314","line":"  _Fn && __f, _BFn && __bf, chrono::nanoseconds __max_elapsed = chrono::nanoseconds::zero())"},
{"lineNum":"  315","line":"{"},
{"lineNum":"  316","line":"    auto const __start = chrono::high_resolution_clock::now();"},
{"lineNum":"  317","line":"    for(int __count = 0;;) {"},
{"lineNum":"  318","line":"      if(__f())"},
{"lineNum":"  319","line":"        return true; // _Fn completion means success"},
{"lineNum":"  320","line":"      if(__count < __libcpp_polling_count) {"},
{"lineNum":"  321","line":"        __count += 1;"},
{"lineNum":"  322","line":"        continue;"},
{"lineNum":"  323","line":"      }"},
{"lineNum":"  324","line":"      chrono::nanoseconds const __elapsed = chrono::high_resolution_clock::now() - __start;"},
{"lineNum":"  325","line":"      if(__max_elapsed != chrono::nanoseconds::zero() && __max_elapsed < __elapsed)"},
{"lineNum":"  326","line":"          return false; // timeout failure"},
{"lineNum":"  327","line":"      if(__bf(__elapsed))"},
{"lineNum":"  328","line":"        return false; // _BFn completion means failure"},
{"lineNum":"  329","line":"    }"},
{"lineNum":"  330","line":"}"},
{"lineNum":"  331","line":""},
{"lineNum":"  332","line":"#if (!defined(_LIBCPP_HAS_THREAD_LIBRARY_EXTERNAL) || \\"},
{"lineNum":"  333","line":"     defined(_LIBCPP_BUILDING_THREAD_LIBRARY_EXTERNAL))"},
{"lineNum":"  334","line":""},
{"lineNum":"  335","line":""},
{"lineNum":"  336","line":"namespace __thread_detail {"},
{"lineNum":"  337","line":""},
{"lineNum":"  338","line":"inline __libcpp_timespec_t __convert_to_timespec(const chrono::nanoseconds& __ns)"},
{"lineNum":"  339","line":"{"},
{"lineNum":"  340","line":"  using namespace chrono;"},
{"lineNum":"  341","line":"  seconds __s = duration_cast<seconds>(__ns);"},
{"lineNum":"  342","line":"  __libcpp_timespec_t __ts;"},
{"lineNum":"  343","line":"  typedef decltype(__ts.tv_sec) __ts_sec;"},
{"lineNum":"  344","line":"  const __ts_sec __ts_sec_max = numeric_limits<__ts_sec>::max();"},
{"lineNum":"  345","line":""},
{"lineNum":"  346","line":"  if (__s.count() < __ts_sec_max)"},
{"lineNum":"  347","line":"  {"},
{"lineNum":"  348","line":"    __ts.tv_sec = static_cast<__ts_sec>(__s.count());"},
{"lineNum":"  349","line":"    __ts.tv_nsec = static_cast<decltype(__ts.tv_nsec)>((__ns - __s).count());"},
{"lineNum":"  350","line":"  }"},
{"lineNum":"  351","line":"  else"},
{"lineNum":"  352","line":"  {"},
{"lineNum":"  353","line":"    __ts.tv_sec = __ts_sec_max;"},
{"lineNum":"  354","line":"    __ts.tv_nsec = 999999999; // (10^9 - 1)"},
{"lineNum":"  355","line":"  }"},
{"lineNum":"  356","line":""},
{"lineNum":"  357","line":"  return __ts;"},
{"lineNum":"  358","line":"}"},
{"lineNum":"  359","line":""},
{"lineNum":"  360","line":"}"},
{"lineNum":"  361","line":""},
{"lineNum":"  362","line":"#if defined(_LIBCPP_HAS_THREAD_API_PTHREAD)"},
{"lineNum":"  363","line":""},
{"lineNum":"  364","line":"int __libcpp_recursive_mutex_init(__libcpp_recursive_mutex_t *__m)"},
{"lineNum":"  365","line":"{"},
{"lineNum":"  366","line":"  pthread_mutexattr_t attr;"},
{"lineNum":"  367","line":"  int __ec = pthread_mutexattr_init(&attr);"},
{"lineNum":"  368","line":"  if (__ec)"},
{"lineNum":"  369","line":"    return __ec;"},
{"lineNum":"  370","line":"  __ec = pthread_mutexattr_settype(&attr, PTHREAD_MUTEX_RECURSIVE);"},
{"lineNum":"  371","line":"  if (__ec) {"},
{"lineNum":"  372","line":"    pthread_mutexattr_destroy(&attr);"},
{"lineNum":"  373","line":"    return __ec;"},
{"lineNum":"  374","line":"  }"},
{"lineNum":"  375","line":"  __ec = pthread_mutex_init(__m, &attr);"},
{"lineNum":"  376","line":"  if (__ec) {"},
{"lineNum":"  377","line":"    pthread_mutexattr_destroy(&attr);"},
{"lineNum":"  378","line":"    return __ec;"},
{"lineNum":"  379","line":"  }"},
{"lineNum":"  380","line":"  __ec = pthread_mutexattr_destroy(&attr);"},
{"lineNum":"  381","line":"  if (__ec) {"},
{"lineNum":"  382","line":"    pthread_mutex_destroy(__m);"},
{"lineNum":"  383","line":"    return __ec;"},
{"lineNum":"  384","line":"  }"},
{"lineNum":"  385","line":"  return 0;"},
{"lineNum":"  386","line":"}"},
{"lineNum":"  387","line":""},
{"lineNum":"  388","line":"int __libcpp_recursive_mutex_lock(__libcpp_recursive_mutex_t *__m)"},
{"lineNum":"  389","line":"{"},
{"lineNum":"  390","line":"  return pthread_mutex_lock(__m);"},
{"lineNum":"  391","line":"}"},
{"lineNum":"  392","line":""},
{"lineNum":"  393","line":"bool __libcpp_recursive_mutex_trylock(__libcpp_recursive_mutex_t *__m)"},
{"lineNum":"  394","line":"{"},
{"lineNum":"  395","line":"  return pthread_mutex_trylock(__m) == 0;"},
{"lineNum":"  396","line":"}"},
{"lineNum":"  397","line":""},
{"lineNum":"  398","line":"int __libcpp_recursive_mutex_unlock(__libcpp_recursive_mutex_t *__m)"},
{"lineNum":"  399","line":"{"},
{"lineNum":"  400","line":"  return pthread_mutex_unlock(__m);"},
{"lineNum":"  401","line":"}"},
{"lineNum":"  402","line":""},
{"lineNum":"  403","line":"int __libcpp_recursive_mutex_destroy(__libcpp_recursive_mutex_t *__m)"},
{"lineNum":"  404","line":"{"},
{"lineNum":"  405","line":"  return pthread_mutex_destroy(__m);"},
{"lineNum":"  406","line":"}"},
{"lineNum":"  407","line":""},
{"lineNum":"  408","line":"int __libcpp_mutex_lock(__libcpp_mutex_t *__m)"},
{"lineNum":"  409","line":"{"},
{"lineNum":"  410","line":"  return pthread_mutex_lock(__m);"},
{"lineNum":"  411","line":"}"},
{"lineNum":"  412","line":""},
{"lineNum":"  413","line":"bool __libcpp_mutex_trylock(__libcpp_mutex_t *__m)"},
{"lineNum":"  414","line":"{"},
{"lineNum":"  415","line":"  return pthread_mutex_trylock(__m) == 0;"},
{"lineNum":"  416","line":"}"},
{"lineNum":"  417","line":""},
{"lineNum":"  418","line":"int __libcpp_mutex_unlock(__libcpp_mutex_t *__m)"},
{"lineNum":"  419","line":"{"},
{"lineNum":"  420","line":"  return pthread_mutex_unlock(__m);"},
{"lineNum":"  421","line":"}"},
{"lineNum":"  422","line":""},
{"lineNum":"  423","line":"int __libcpp_mutex_destroy(__libcpp_mutex_t *__m)"},
{"lineNum":"  424","line":"{"},
{"lineNum":"  425","line":"  return pthread_mutex_destroy(__m);"},
{"lineNum":"  426","line":"}"},
{"lineNum":"  427","line":""},
{"lineNum":"  428","line":"// Condition Variable"},
{"lineNum":"  429","line":"int __libcpp_condvar_signal(__libcpp_condvar_t *__cv)"},
{"lineNum":"  430","line":"{"},
{"lineNum":"  431","line":"  return pthread_cond_signal(__cv);"},
{"lineNum":"  432","line":"}"},
{"lineNum":"  433","line":""},
{"lineNum":"  434","line":"int __libcpp_condvar_broadcast(__libcpp_condvar_t *__cv)"},
{"lineNum":"  435","line":"{"},
{"lineNum":"  436","line":"  return pthread_cond_broadcast(__cv);"},
{"lineNum":"  437","line":"}"},
{"lineNum":"  438","line":""},
{"lineNum":"  439","line":"int __libcpp_condvar_wait(__libcpp_condvar_t *__cv, __libcpp_mutex_t *__m)"},
{"lineNum":"  440","line":"{"},
{"lineNum":"  441","line":"  return pthread_cond_wait(__cv, __m);"},
{"lineNum":"  442","line":"}"},
{"lineNum":"  443","line":""},
{"lineNum":"  444","line":"int __libcpp_condvar_timedwait(__libcpp_condvar_t *__cv, __libcpp_mutex_t *__m,"},
{"lineNum":"  445","line":"                               __libcpp_timespec_t *__ts)"},
{"lineNum":"  446","line":"{"},
{"lineNum":"  447","line":"  return pthread_cond_timedwait(__cv, __m, __ts);"},
{"lineNum":"  448","line":"}"},
{"lineNum":"  449","line":""},
{"lineNum":"  450","line":"int __libcpp_condvar_destroy(__libcpp_condvar_t *__cv)"},
{"lineNum":"  451","line":"{"},
{"lineNum":"  452","line":"  return pthread_cond_destroy(__cv);"},
{"lineNum":"  453","line":"}"},
{"lineNum":"  454","line":""},
{"lineNum":"  455","line":"#ifndef _LIBCPP_NO_NATIVE_SEMAPHORES"},
{"lineNum":"  456","line":""},
{"lineNum":"  457","line":"// Semaphore"},
{"lineNum":"  458","line":"bool __libcpp_semaphore_init(__libcpp_semaphore_t* __sem, int __init)"},
{"lineNum":"  459","line":"{"},
{"lineNum":"  460","line":"    return sem_init(__sem, 0, __init) == 0;"},
{"lineNum":"  461","line":"}"},
{"lineNum":"  462","line":""},
{"lineNum":"  463","line":"bool __libcpp_semaphore_destroy(__libcpp_semaphore_t* __sem)"},
{"lineNum":"  464","line":"{"},
{"lineNum":"  465","line":"    return sem_destroy(__sem) == 0;"},
{"lineNum":"  466","line":"}"},
{"lineNum":"  467","line":""},
{"lineNum":"  468","line":"bool __libcpp_semaphore_post(__libcpp_semaphore_t* __sem)"},
{"lineNum":"  469","line":"{"},
{"lineNum":"  470","line":"    return sem_post(__sem) == 0;"},
{"lineNum":"  471","line":"}"},
{"lineNum":"  472","line":""},
{"lineNum":"  473","line":"bool __libcpp_semaphore_wait(__libcpp_semaphore_t* __sem)"},
{"lineNum":"  474","line":"{"},
{"lineNum":"  475","line":"    return sem_wait(__sem) == 0;"},
{"lineNum":"  476","line":"}"},
{"lineNum":"  477","line":""},
{"lineNum":"  478","line":"bool __libcpp_semaphore_wait_timed(__libcpp_semaphore_t* __sem, chrono::nanoseconds const& __ns)"},
{"lineNum":"  479","line":"{"},
{"lineNum":"  480","line":"    auto const __abs_time = chrono::system_clock::now().time_since_epoch() + __ns;"},
{"lineNum":"  481","line":"    __libcpp_timespec_t __ts = __thread_detail::__convert_to_timespec(__abs_time);"},
{"lineNum":"  482","line":"    return sem_timedwait(__sem, &__ts) == 0;"},
{"lineNum":"  483","line":"}"},
{"lineNum":"  484","line":""},
{"lineNum":"  485","line":"#endif //_LIBCPP_NO_NATIVE_SEMAPHORES"},
{"lineNum":"  486","line":""},
{"lineNum":"  487","line":"// Execute once"},
{"lineNum":"  488","line":"int __libcpp_execute_once(__libcpp_exec_once_flag *flag,"},
{"lineNum":"  489","line":"                          void (*init_routine)()) {"},
{"lineNum":"  490","line":"  return pthread_once(flag, init_routine);"},
{"lineNum":"  491","line":"}"},
{"lineNum":"  492","line":""},
{"lineNum":"  493","line":"// Thread id"},
{"lineNum":"  494","line":"// Returns non-zero if the thread ids are equal, otherwise 0"},
{"lineNum":"  495","line":"bool __libcpp_thread_id_equal(__libcpp_thread_id t1, __libcpp_thread_id t2)"},
{"lineNum":"  496","line":"{"},
{"lineNum":"  497","line":"  return t1 == t2;"},
{"lineNum":"  498","line":"}"},
{"lineNum":"  499","line":""},
{"lineNum":"  500","line":"// Returns non-zero if t1 < t2, otherwise 0"},
{"lineNum":"  501","line":"bool __libcpp_thread_id_less(__libcpp_thread_id t1, __libcpp_thread_id t2)"},
{"lineNum":"  502","line":"{"},
{"lineNum":"  503","line":"  return t1 < t2;"},
{"lineNum":"  504","line":"}"},
{"lineNum":"  505","line":""},
{"lineNum":"  506","line":"// Thread"},
{"lineNum":"  507","line":"bool __libcpp_thread_isnull(const __libcpp_thread_t *__t) {"},
{"lineNum":"  508","line":"  return __libcpp_thread_get_id(__t) == 0;"},
{"lineNum":"  509","line":"}"},
{"lineNum":"  510","line":""},
{"lineNum":"  511","line":"int __libcpp_thread_create(__libcpp_thread_t *__t, void *(*__func)(void *),"},
{"lineNum":"  512","line":"                           void *__arg)"},
{"lineNum":"  513","line":"{"},
{"lineNum":"  514","line":"  return pthread_create(__t, nullptr, __func, __arg);"},
{"lineNum":"  515","line":"}"},
{"lineNum":"  516","line":""},
{"lineNum":"  517","line":"__libcpp_thread_id __libcpp_thread_get_current_id()"},
{"lineNum":"  518","line":"{"},
{"lineNum":"  519","line":"  const __libcpp_thread_t thread = pthread_self();"},
{"lineNum":"  520","line":"  return __libcpp_thread_get_id(&thread);"},
{"lineNum":"  521","line":"}"},
{"lineNum":"  522","line":""},
{"lineNum":"  523","line":"__libcpp_thread_id __libcpp_thread_get_id(const __libcpp_thread_t *__t)"},
{"lineNum":"  524","line":"{"},
{"lineNum":"  525","line":"#if defined(__MVS__)"},
{"lineNum":"  526","line":"  return __t->__;"},
{"lineNum":"  527","line":"#else"},
{"lineNum":"  528","line":"  return *__t;"},
{"lineNum":"  529","line":"#endif"},
{"lineNum":"  530","line":"}"},
{"lineNum":"  531","line":""},
{"lineNum":"  532","line":"int __libcpp_thread_join(__libcpp_thread_t *__t)"},
{"lineNum":"  533","line":"{"},
{"lineNum":"  534","line":"  return pthread_join(*__t, nullptr);"},
{"lineNum":"  535","line":"}"},
{"lineNum":"  536","line":""},
{"lineNum":"  537","line":"int __libcpp_thread_detach(__libcpp_thread_t *__t)"},
{"lineNum":"  538","line":"{"},
{"lineNum":"  539","line":"  return pthread_detach(*__t);"},
{"lineNum":"  540","line":"}"},
{"lineNum":"  541","line":""},
{"lineNum":"  542","line":"void __libcpp_thread_yield()"},
{"lineNum":"  543","line":"{"},
{"lineNum":"  544","line":"  sched_yield();","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  545","line":"}"},
{"lineNum":"  546","line":""},
{"lineNum":"  547","line":"void __libcpp_thread_sleep_for(const chrono::nanoseconds& __ns)"},
{"lineNum":"  548","line":"{"},
{"lineNum":"  549","line":"   __libcpp_timespec_t __ts = __thread_detail::__convert_to_timespec(__ns);"},
{"lineNum":"  550","line":"   while (nanosleep(&__ts, &__ts) == -1 && errno == EINTR);"},
{"lineNum":"  551","line":"}"},
{"lineNum":"  552","line":""},
{"lineNum":"  553","line":"// Thread local storage"},
{"lineNum":"  554","line":"int __libcpp_tls_create(__libcpp_tls_key *__key, void (*__at_exit)(void *))"},
{"lineNum":"  555","line":"{"},
{"lineNum":"  556","line":"  return pthread_key_create(__key, __at_exit);"},
{"lineNum":"  557","line":"}"},
{"lineNum":"  558","line":""},
{"lineNum":"  559","line":"void *__libcpp_tls_get(__libcpp_tls_key __key)"},
{"lineNum":"  560","line":"{"},
{"lineNum":"  561","line":"  return pthread_getspecific(__key);"},
{"lineNum":"  562","line":"}"},
{"lineNum":"  563","line":""},
{"lineNum":"  564","line":"int __libcpp_tls_set(__libcpp_tls_key __key, void *__p)"},
{"lineNum":"  565","line":"{"},
{"lineNum":"  566","line":"    return pthread_setspecific(__key, __p);"},
{"lineNum":"  567","line":"}"},
{"lineNum":"  568","line":""},
{"lineNum":"  569","line":"#elif defined(_LIBCPP_HAS_THREAD_API_C11)"},
{"lineNum":"  570","line":""},
{"lineNum":"  571","line":"int __libcpp_recursive_mutex_init(__libcpp_recursive_mutex_t *__m)"},
{"lineNum":"  572","line":"{"},
{"lineNum":"  573","line":"  return mtx_init(__m, mtx_plain | mtx_recursive) == thrd_success ? 0 : EINVAL;"},
{"lineNum":"  574","line":"}"},
{"lineNum":"  575","line":""},
{"lineNum":"  576","line":"int __libcpp_recursive_mutex_lock(__libcpp_recursive_mutex_t *__m)"},
{"lineNum":"  577","line":"{"},
{"lineNum":"  578","line":"  return mtx_lock(__m) == thrd_success ? 0 : EINVAL;"},
{"lineNum":"  579","line":"}"},
{"lineNum":"  580","line":""},
{"lineNum":"  581","line":"bool __libcpp_recursive_mutex_trylock(__libcpp_recursive_mutex_t *__m)"},
{"lineNum":"  582","line":"{"},
{"lineNum":"  583","line":"  return mtx_trylock(__m) == thrd_success;"},
{"lineNum":"  584","line":"}"},
{"lineNum":"  585","line":""},
{"lineNum":"  586","line":"int __libcpp_recursive_mutex_unlock(__libcpp_recursive_mutex_t *__m)"},
{"lineNum":"  587","line":"{"},
{"lineNum":"  588","line":"  return mtx_unlock(__m) == thrd_success ? 0 : EINVAL;"},
{"lineNum":"  589","line":"}"},
{"lineNum":"  590","line":""},
{"lineNum":"  591","line":"int __libcpp_recursive_mutex_destroy(__libcpp_recursive_mutex_t *__m)"},
{"lineNum":"  592","line":"{"},
{"lineNum":"  593","line":"  mtx_destroy(__m);"},
{"lineNum":"  594","line":"  return 0;"},
{"lineNum":"  595","line":"}"},
{"lineNum":"  596","line":""},
{"lineNum":"  597","line":"int __libcpp_mutex_lock(__libcpp_mutex_t *__m)"},
{"lineNum":"  598","line":"{"},
{"lineNum":"  599","line":"  return mtx_lock(__m) == thrd_success ? 0 : EINVAL;"},
{"lineNum":"  600","line":"}"},
{"lineNum":"  601","line":""},
{"lineNum":"  602","line":"bool __libcpp_mutex_trylock(__libcpp_mutex_t *__m)"},
{"lineNum":"  603","line":"{"},
{"lineNum":"  604","line":"  return mtx_trylock(__m) == thrd_success;"},
{"lineNum":"  605","line":"}"},
{"lineNum":"  606","line":""},
{"lineNum":"  607","line":"int __libcpp_mutex_unlock(__libcpp_mutex_t *__m)"},
{"lineNum":"  608","line":"{"},
{"lineNum":"  609","line":"  return mtx_unlock(__m) == thrd_success ? 0 : EINVAL;"},
{"lineNum":"  610","line":"}"},
{"lineNum":"  611","line":""},
{"lineNum":"  612","line":"int __libcpp_mutex_destroy(__libcpp_mutex_t *__m)"},
{"lineNum":"  613","line":"{"},
{"lineNum":"  614","line":"  mtx_destroy(__m);"},
{"lineNum":"  615","line":"  return 0;"},
{"lineNum":"  616","line":"}"},
{"lineNum":"  617","line":""},
{"lineNum":"  618","line":"// Condition Variable"},
{"lineNum":"  619","line":"int __libcpp_condvar_signal(__libcpp_condvar_t *__cv)"},
{"lineNum":"  620","line":"{"},
{"lineNum":"  621","line":"  return cnd_signal(__cv) == thrd_success ? 0 : EINVAL;"},
{"lineNum":"  622","line":"}"},
{"lineNum":"  623","line":""},
{"lineNum":"  624","line":"int __libcpp_condvar_broadcast(__libcpp_condvar_t *__cv)"},
{"lineNum":"  625","line":"{"},
{"lineNum":"  626","line":"  return cnd_broadcast(__cv) == thrd_success ? 0 : EINVAL;"},
{"lineNum":"  627","line":"}"},
{"lineNum":"  628","line":""},
{"lineNum":"  629","line":"int __libcpp_condvar_wait(__libcpp_condvar_t *__cv, __libcpp_mutex_t *__m)"},
{"lineNum":"  630","line":"{"},
{"lineNum":"  631","line":"  return cnd_wait(__cv, __m) == thrd_success ? 0 : EINVAL;"},
{"lineNum":"  632","line":"}"},
{"lineNum":"  633","line":""},
{"lineNum":"  634","line":"int __libcpp_condvar_timedwait(__libcpp_condvar_t *__cv, __libcpp_mutex_t *__m,"},
{"lineNum":"  635","line":"                               timespec *__ts)"},
{"lineNum":"  636","line":"{"},
{"lineNum":"  637","line":"  int __ec = cnd_timedwait(__cv, __m, __ts);"},
{"lineNum":"  638","line":"  return __ec == thrd_timedout ? ETIMEDOUT : __ec;"},
{"lineNum":"  639","line":"}"},
{"lineNum":"  640","line":""},
{"lineNum":"  641","line":"int __libcpp_condvar_destroy(__libcpp_condvar_t *__cv)"},
{"lineNum":"  642","line":"{"},
{"lineNum":"  643","line":"  cnd_destroy(__cv);"},
{"lineNum":"  644","line":"  return 0;"},
{"lineNum":"  645","line":"}"},
{"lineNum":"  646","line":""},
{"lineNum":"  647","line":"// Execute once"},
{"lineNum":"  648","line":"int __libcpp_execute_once(__libcpp_exec_once_flag *flag,"},
{"lineNum":"  649","line":"                          void (*init_routine)(void)) {"},
{"lineNum":"  650","line":"  ::call_once(flag, init_routine);"},
{"lineNum":"  651","line":"  return 0;"},
{"lineNum":"  652","line":"}"},
{"lineNum":"  653","line":""},
{"lineNum":"  654","line":"// Thread id"},
{"lineNum":"  655","line":"// Returns non-zero if the thread ids are equal, otherwise 0"},
{"lineNum":"  656","line":"bool __libcpp_thread_id_equal(__libcpp_thread_id t1, __libcpp_thread_id t2)"},
{"lineNum":"  657","line":"{"},
{"lineNum":"  658","line":"  return thrd_equal(t1, t2) != 0;"},
{"lineNum":"  659","line":"}"},
{"lineNum":"  660","line":""},
{"lineNum":"  661","line":"// Returns non-zero if t1 < t2, otherwise 0"},
{"lineNum":"  662","line":"bool __libcpp_thread_id_less(__libcpp_thread_id t1, __libcpp_thread_id t2)"},
{"lineNum":"  663","line":"{"},
{"lineNum":"  664","line":"  return t1 < t2;"},
{"lineNum":"  665","line":"}"},
{"lineNum":"  666","line":""},
{"lineNum":"  667","line":"// Thread"},
{"lineNum":"  668","line":"bool __libcpp_thread_isnull(const __libcpp_thread_t *__t) {"},
{"lineNum":"  669","line":"  return __libcpp_thread_get_id(__t) == 0;"},
{"lineNum":"  670","line":"}"},
{"lineNum":"  671","line":""},
{"lineNum":"  672","line":"int __libcpp_thread_create(__libcpp_thread_t *__t, void *(*__func)(void *),"},
{"lineNum":"  673","line":"                           void *__arg)"},
{"lineNum":"  674","line":"{"},
{"lineNum":"  675","line":"  int __ec = thrd_create(__t, reinterpret_cast<thrd_start_t>(__func), __arg);"},
{"lineNum":"  676","line":"  return __ec == thrd_nomem ? ENOMEM : __ec;"},
{"lineNum":"  677","line":"}"},
{"lineNum":"  678","line":""},
{"lineNum":"  679","line":"__libcpp_thread_id __libcpp_thread_get_current_id()"},
{"lineNum":"  680","line":"{"},
{"lineNum":"  681","line":"  return thrd_current();"},
{"lineNum":"  682","line":"}"},
{"lineNum":"  683","line":""},
{"lineNum":"  684","line":"__libcpp_thread_id __libcpp_thread_get_id(const __libcpp_thread_t *__t)"},
{"lineNum":"  685","line":"{"},
{"lineNum":"  686","line":"  return *__t;"},
{"lineNum":"  687","line":"}"},
{"lineNum":"  688","line":""},
{"lineNum":"  689","line":"int __libcpp_thread_join(__libcpp_thread_t *__t)"},
{"lineNum":"  690","line":"{"},
{"lineNum":"  691","line":"  return thrd_join(*__t, nullptr) == thrd_success ? 0 : EINVAL;"},
{"lineNum":"  692","line":"}"},
{"lineNum":"  693","line":""},
{"lineNum":"  694","line":"int __libcpp_thread_detach(__libcpp_thread_t *__t)"},
{"lineNum":"  695","line":"{"},
{"lineNum":"  696","line":"  return thrd_detach(*__t) == thrd_success ? 0 : EINVAL;"},
{"lineNum":"  697","line":"}"},
{"lineNum":"  698","line":""},
{"lineNum":"  699","line":"void __libcpp_thread_yield()"},
{"lineNum":"  700","line":"{"},
{"lineNum":"  701","line":"  thrd_yield();"},
{"lineNum":"  702","line":"}"},
{"lineNum":"  703","line":""},
{"lineNum":"  704","line":"void __libcpp_thread_sleep_for(const chrono::nanoseconds& __ns)"},
{"lineNum":"  705","line":"{"},
{"lineNum":"  706","line":"   __libcpp_timespec_t __ts = __thread_detail::__convert_to_timespec(__ns);"},
{"lineNum":"  707","line":"  thrd_sleep(&__ts, nullptr);"},
{"lineNum":"  708","line":"}"},
{"lineNum":"  709","line":""},
{"lineNum":"  710","line":"// Thread local storage"},
{"lineNum":"  711","line":"int __libcpp_tls_create(__libcpp_tls_key *__key, void (*__at_exit)(void *))"},
{"lineNum":"  712","line":"{"},
{"lineNum":"  713","line":"  return tss_create(__key, __at_exit) == thrd_success ? 0 : EINVAL;"},
{"lineNum":"  714","line":"}"},
{"lineNum":"  715","line":""},
{"lineNum":"  716","line":"void *__libcpp_tls_get(__libcpp_tls_key __key)"},
{"lineNum":"  717","line":"{"},
{"lineNum":"  718","line":"  return tss_get(__key);"},
{"lineNum":"  719","line":"}"},
{"lineNum":"  720","line":""},
{"lineNum":"  721","line":"int __libcpp_tls_set(__libcpp_tls_key __key, void *__p)"},
{"lineNum":"  722","line":"{"},
{"lineNum":"  723","line":"  return tss_set(__key, __p) == thrd_success ? 0 : EINVAL;"},
{"lineNum":"  724","line":"}"},
{"lineNum":"  725","line":""},
{"lineNum":"  726","line":"#endif"},
{"lineNum":"  727","line":""},
{"lineNum":"  728","line":""},
{"lineNum":"  729","line":"#endif // !_LIBCPP_HAS_THREAD_LIBRARY_EXTERNAL || _LIBCPP_BUILDING_THREAD_LIBRARY_EXTERNAL"},
{"lineNum":"  730","line":""},
{"lineNum":"  731","line":"class _LIBCPP_TYPE_VIS thread;"},
{"lineNum":"  732","line":"class _LIBCPP_TYPE_VIS __thread_id;"},
{"lineNum":"  733","line":""},
{"lineNum":"  734","line":"namespace this_thread"},
{"lineNum":"  735","line":"{"},
{"lineNum":"  736","line":""},
{"lineNum":"  737","line":"_LIBCPP_INLINE_VISIBILITY __thread_id get_id() _NOEXCEPT;"},
{"lineNum":"  738","line":""},
{"lineNum":"  739","line":"}  // this_thread"},
{"lineNum":"  740","line":""},
{"lineNum":"  741","line":"template<> struct hash<__thread_id>;"},
{"lineNum":"  742","line":""},
{"lineNum":"  743","line":"class _LIBCPP_TEMPLATE_VIS __thread_id"},
{"lineNum":"  744","line":"{"},
{"lineNum":"  745","line":"    // FIXME: pthread_t is a pointer on Darwin but a long on Linux."},
{"lineNum":"  746","line":"    // NULL is the no-thread value on Darwin.  Someone needs to check"},
{"lineNum":"  747","line":"    // on other platforms.  We assume 0 works everywhere for now."},
{"lineNum":"  748","line":"    __libcpp_thread_id __id_;"},
{"lineNum":"  749","line":""},
{"lineNum":"  750","line":"public:"},
{"lineNum":"  751","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  752","line":"    __thread_id() _NOEXCEPT : __id_(0) {}"},
{"lineNum":"  753","line":""},
{"lineNum":"  754","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  755","line":"        bool operator==(__thread_id __x, __thread_id __y) _NOEXCEPT"},
{"lineNum":"  756","line":"        { // don\'t pass id==0 to underlying routines"},
{"lineNum":"  757","line":"        if (__x.__id_ == 0) return __y.__id_ == 0;"},
{"lineNum":"  758","line":"        if (__y.__id_ == 0) return false;"},
{"lineNum":"  759","line":"        return __libcpp_thread_id_equal(__x.__id_, __y.__id_);"},
{"lineNum":"  760","line":"        }"},
{"lineNum":"  761","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  762","line":"        bool operator!=(__thread_id __x, __thread_id __y) _NOEXCEPT"},
{"lineNum":"  763","line":"        {return !(__x == __y);}"},
{"lineNum":"  764","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  765","line":"        bool operator< (__thread_id __x, __thread_id __y) _NOEXCEPT"},
{"lineNum":"  766","line":"        { // id==0 is always less than any other thread_id"},
{"lineNum":"  767","line":"        if (__x.__id_ == 0) return __y.__id_ != 0;"},
{"lineNum":"  768","line":"        if (__y.__id_ == 0) return false;"},
{"lineNum":"  769","line":"        return  __libcpp_thread_id_less(__x.__id_, __y.__id_);"},
{"lineNum":"  770","line":"        }"},
{"lineNum":"  771","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  772","line":"        bool operator<=(__thread_id __x, __thread_id __y) _NOEXCEPT"},
{"lineNum":"  773","line":"        {return !(__y < __x);}"},
{"lineNum":"  774","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  775","line":"        bool operator> (__thread_id __x, __thread_id __y) _NOEXCEPT"},
{"lineNum":"  776","line":"        {return   __y < __x ;}"},
{"lineNum":"  777","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  778","line":"        bool operator>=(__thread_id __x, __thread_id __y) _NOEXCEPT"},
{"lineNum":"  779","line":"        {return !(__x < __y);}"},
{"lineNum":"  780","line":""},
{"lineNum":"  781","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  782","line":"    void __reset() { __id_ = 0; }"},
{"lineNum":"  783","line":""},
{"lineNum":"  784","line":"    template<class _CharT, class _Traits>"},
{"lineNum":"  785","line":"    friend"},
{"lineNum":"  786","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  787","line":"    basic_ostream<_CharT, _Traits>&"},
{"lineNum":"  788","line":"    operator<<(basic_ostream<_CharT, _Traits>& __os, __thread_id __id);"},
{"lineNum":"  789","line":""},
{"lineNum":"  790","line":"private:"},
{"lineNum":"  791","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  792","line":"    __thread_id(__libcpp_thread_id __id) : __id_(__id) {}"},
{"lineNum":"  793","line":""},
{"lineNum":"  794","line":"    friend __thread_id this_thread::get_id() _NOEXCEPT;"},
{"lineNum":"  795","line":"    friend class _LIBCPP_TYPE_VIS thread;"},
{"lineNum":"  796","line":"    friend struct _LIBCPP_TEMPLATE_VIS hash<__thread_id>;"},
{"lineNum":"  797","line":"};"},
{"lineNum":"  798","line":""},
{"lineNum":"  799","line":"namespace this_thread"},
{"lineNum":"  800","line":"{"},
{"lineNum":"  801","line":""},
{"lineNum":"  802","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  803","line":"__thread_id"},
{"lineNum":"  804","line":"get_id() _NOEXCEPT"},
{"lineNum":"  805","line":"{"},
{"lineNum":"  806","line":"    return __libcpp_thread_get_current_id();"},
{"lineNum":"  807","line":"}"},
{"lineNum":"  808","line":""},
{"lineNum":"  809","line":"}  // this_thread"},
{"lineNum":"  810","line":""},
{"lineNum":"  811","line":"#endif // !_LIBCPP_HAS_NO_THREADS"},
{"lineNum":"  812","line":""},
{"lineNum":"  813","line":"_LIBCPP_END_NAMESPACE_STD"},
{"lineNum":"  814","line":""},
{"lineNum":"  815","line":"_LIBCPP_POP_MACROS"},
{"lineNum":"  816","line":""},
{"lineNum":"  817","line":"#endif // _LIBCPP_THREADING_SUPPORT"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:41", "instrumented" : 1, "covered" : 0,};
var merged_data = [];
