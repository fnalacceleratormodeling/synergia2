var data = {lines:[
{"lineNum":"    1","line":""},
{"lineNum":"    2","line":"#include \"synergia/simulation/operation_extractor.h\""},
{"lineNum":"    3","line":""},
{"lineNum":"    4","line":"#include \"synergia/simulation/independent_operation.h\""},
{"lineNum":"    5","line":"#include \"synergia/simulation/aperture_operation.h\""},
{"lineNum":"    6","line":""},
{"lineNum":"    7","line":"namespace"},
{"lineNum":"    8","line":"{"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"#if 0"},
{"lineNum":"   11","line":"// extract_fast_mapping is a local function"},
{"lineNum":"   12","line":"Fast_mapping_operation_sptr"},
{"lineNum":"   13","line":"extract_fast_mapping(Reference_particle const& reference_particle,"},
{"lineNum":"   14","line":"        Chef_lattice_section & lattice_section, int map_order)"},
{"lineNum":"   15","line":"{"},
{"lineNum":"   16","line":"    JetParticle jet_particle = reference_particle_to_chef_jet_particle("},
{"lineNum":"   17","line":"            reference_particle, map_order);"},
{"lineNum":"   18","line":"    Particle particle = reference_particle_to_chef_particle(reference_particle);"},
{"lineNum":"   19","line":"    double mapping_length = 0.0;"},
{"lineNum":"   20","line":"    for (Chef_lattice_section::const_iterator cls_it = lattice_section.begin(); cls_it"},
{"lineNum":"   21","line":"            != lattice_section.end(); ++cls_it) {"},
{"lineNum":"   22","line":"        (*cls_it)->propagate(jet_particle);"},
{"lineNum":"   23","line":"        mapping_length += (*cls_it)->OrbitLength(particle);"},
{"lineNum":"   24","line":"        (*cls_it)->propagate(particle);"},
{"lineNum":"   25","line":"    }"},
{"lineNum":"   26","line":"    Fast_mapping fast_mapping(jet_particle.State(),"},
{"lineNum":"   27","line":"            mapping_length);"},
{"lineNum":"   28","line":"    Fast_mapping_operation_sptr fast_mapping_operation_sptr("},
{"lineNum":"   29","line":"            new Fast_mapping_operation(fast_mapping));"},
{"lineNum":"   30","line":"    return fast_mapping_operation_sptr;"},
{"lineNum":"   31","line":"}"},
{"lineNum":"   32","line":""},
{"lineNum":"   33","line":"Independent_operations"},
{"lineNum":"   34","line":"Chef_map_operation_extractor::extract("},
{"lineNum":"   35","line":"        Reference_particle const& reference_particle,"},
{"lineNum":"   36","line":"        Lattice_element_slices const& slices)"},
{"lineNum":"   37","line":"{"},
{"lineNum":"   38","line":"    Chef_lattice_section entire_section(get_chef_lattice_sptr());"},
{"lineNum":"   39","line":"    for (Lattice_element_slices::const_iterator les_it = slices.begin(); les_it"},
{"lineNum":"   40","line":"            != slices.end(); ++les_it) {"},
{"lineNum":"   41","line":"        Chef_lattice_section slice_section("},
{"lineNum":"   42","line":"                *(get_chef_lattice_sptr()->get_chef_section_sptr(get_chef_lattice_sptr(),"},
{"lineNum":"   43","line":"                        *(*les_it))));"},
{"lineNum":"   44","line":"        entire_section.extend(slice_section);"},
{"lineNum":"   45","line":"    }"},
{"lineNum":"   46","line":"    Fast_mapping_operation_sptr fast_mapping_operation_sptr ="},
{"lineNum":"   47","line":"            extract_fast_mapping(reference_particle, entire_section,"},
{"lineNum":"   48","line":"                    get_map_order());"},
{"lineNum":"   49","line":"    Independent_operations retval;"},
{"lineNum":"   50","line":"    retval.push_back(fast_mapping_operation_sptr);"},
{"lineNum":"   51","line":"    return retval;"},
{"lineNum":"   52","line":"}"},
{"lineNum":"   53","line":""},
{"lineNum":"   54","line":""},
{"lineNum":"   55","line":""},
{"lineNum":"   56","line":"Independent_operations"},
{"lineNum":"   57","line":"Chef_propagate_operation_extractor::extract("},
{"lineNum":"   58","line":"        Reference_particle const& reference_particle,"},
{"lineNum":"   59","line":"        Lattice_element_slices const& slices)"},
{"lineNum":"   60","line":"{"},
{"lineNum":"   61","line":"    Chef_lattice_section entire_section(get_chef_lattice_sptr());"},
{"lineNum":"   62","line":"    for (Lattice_element_slices::const_iterator les_it = slices.begin(); les_it"},
{"lineNum":"   63","line":"            != slices.end(); ++les_it) {"},
{"lineNum":"   64","line":"        Chef_lattice_section slice_section("},
{"lineNum":"   65","line":"                *(get_chef_lattice_sptr()->get_chef_section_sptr(get_chef_lattice_sptr(),"},
{"lineNum":"   66","line":"                        *(*les_it))));"},
{"lineNum":"   67","line":"        entire_section.extend(slice_section);"},
{"lineNum":"   68","line":"    }"},
{"lineNum":"   69","line":"    Chef_propagate_operation_sptr chef_propagate_operation_sptr("},
{"lineNum":"   70","line":"            new Chef_propagate_operation(entire_section));"},
{"lineNum":"   71","line":"    Independent_operations retval;"},
{"lineNum":"   72","line":"    retval.push_back(chef_propagate_operation_sptr);"},
{"lineNum":"   73","line":"    return retval;"},
{"lineNum":"   74","line":"}"},
{"lineNum":"   75","line":""},
{"lineNum":"   76","line":""},
{"lineNum":"   77","line":"// handle_subsection is a local function"},
{"lineNum":"   78","line":"void"},
{"lineNum":"   79","line":"handle_subsection(bool is_rf, Reference_particle const& reference_particle,"},
{"lineNum":"   80","line":"        Chef_lattice_section & section,"},
{"lineNum":"   81","line":"        Independent_operations & independent_operations, int map_order)"},
{"lineNum":"   82","line":"{"},
{"lineNum":"   83","line":"    if (is_rf) {"},
{"lineNum":"   84","line":"        Chef_propagate_operation_sptr chef_propagate_operation_sptr("},
{"lineNum":"   85","line":"                new Chef_propagate_operation(section));"},
{"lineNum":"   86","line":"        independent_operations.push_back(chef_propagate_operation_sptr);"},
{"lineNum":"   87","line":"    } else {"},
{"lineNum":"   88","line":"        Fast_mapping_operation_sptr fast_mapping_operation_sptr ="},
{"lineNum":"   89","line":"                extract_fast_mapping(reference_particle, section,"},
{"lineNum":"   90","line":"                        map_order);"},
{"lineNum":"   91","line":"        independent_operations.push_back(fast_mapping_operation_sptr);"},
{"lineNum":"   92","line":"    }"},
{"lineNum":"   93","line":"}"},
{"lineNum":"   94","line":""},
{"lineNum":"   95","line":"Independent_operations"},
{"lineNum":"   96","line":"Chef_mixed_operation_extractor::extract("},
{"lineNum":"   97","line":"        Reference_particle const& reference_particle,"},
{"lineNum":"   98","line":"        Lattice_element_slices const& slices)"},
{"lineNum":"   99","line":"{"},
{"lineNum":"  100","line":"    Independent_operations retval;"},
{"lineNum":"  101","line":"    Chef_lattice_section subsection(get_chef_lattice_sptr());"},
{"lineNum":"  102","line":"    bool is_rf(false), last_is_rf(false);"},
{"lineNum":"  103","line":"    for (Lattice_element_slices::const_iterator les_it = slices.begin(); les_it"},
{"lineNum":"  104","line":"            != slices.end(); ++les_it) {"},
{"lineNum":"  105","line":"        Chef_lattice_section slice_section("},
{"lineNum":"  106","line":"                *(get_chef_lattice_sptr()->get_chef_section_sptr(get_chef_lattice_sptr(),"},
{"lineNum":"  107","line":"                        *(*les_it))));"},
{"lineNum":"  108","line":"        int index = slice_section.get_begin_index();"},
{"lineNum":"  109","line":"        for (Chef_lattice_section::const_iterator cls_it ="},
{"lineNum":"  110","line":"                slice_section.begin(); cls_it"},
{"lineNum":"  111","line":"                != slice_section.end(); ++cls_it) {"},
{"lineNum":"  112","line":"            is_rf = ((std::strcmp((*cls_it)->Type(), \"rfcavity\") == 0)"},
{"lineNum":"  113","line":"                    || (std::strcmp((*cls_it)->Type(), \"thinrfcavity\") == 0));"},
{"lineNum":"  114","line":"            if ((is_rf != last_is_rf) && (!subsection.empty())) {"},
{"lineNum":"  115","line":"                handle_subsection(last_is_rf, reference_particle,"},
{"lineNum":"  116","line":"                        subsection, retval, get_map_order());"},
{"lineNum":"  117","line":"                subsection.clear();"},
{"lineNum":"  118","line":"            }"},
{"lineNum":"  119","line":"            subsection.extend(index,index+1);"},
{"lineNum":"  120","line":"            last_is_rf = is_rf;"},
{"lineNum":"  121","line":"            ++index;"},
{"lineNum":"  122","line":"        }"},
{"lineNum":"  123","line":"    }"},
{"lineNum":"  124","line":"    if (!subsection.empty()) {"},
{"lineNum":"  125","line":"        handle_subsection(is_rf, reference_particle, subsection, retval,"},
{"lineNum":"  126","line":"                get_map_order());"},
{"lineNum":"  127","line":"    }"},
{"lineNum":"  128","line":""},
{"lineNum":"  129","line":"    return retval;"},
{"lineNum":"  130","line":"}"},
{"lineNum":"  131","line":""},
{"lineNum":"  132","line":"#endif"},
{"lineNum":"  133","line":""},
{"lineNum":"  134","line":"    void"},
{"lineNum":"  135","line":"    chef_map_operation_extract("},
{"lineNum":"  136","line":"            Lattice const & lattice,"},
{"lineNum":"  137","line":"            std::vector<Lattice_element_slice> const & slices,"},
{"lineNum":"  138","line":"            std::vector<std::unique_ptr<Independent_operation>> & operations )"},
{"lineNum":"  139","line":"    {"},
{"lineNum":"  140","line":"    }"},
{"lineNum":"  141","line":""},
{"lineNum":"  142","line":"    void"},
{"lineNum":"  143","line":"    chef_propagator_operation_extract("},
{"lineNum":"  144","line":"            Lattice const & lattice,"},
{"lineNum":"  145","line":"            std::vector<Lattice_element_slice> const & slices,"},
{"lineNum":"  146","line":"            std::vector<std::unique_ptr<Independent_operation>> & operations )"},
{"lineNum":"  147","line":"    {"},
{"lineNum":"  148","line":"    }"},
{"lineNum":"  149","line":""},
{"lineNum":"  150","line":""},
{"lineNum":"  151","line":"    void"},
{"lineNum":"  152","line":"    libff_operation_extract("},
{"lineNum":"  153","line":"            Lattice const & lattice,"},
{"lineNum":"  154","line":"            std::vector<Lattice_element_slice> const & slices,"},
{"lineNum":"  155","line":"            std::vector<std::unique_ptr<Independent_operation>> & operations )"},
{"lineNum":"  156","line":"    {"},
{"lineNum":"  157","line":"        operations.push_back(std::make_unique<LibFF_operation>(slices));"},
{"lineNum":"  158","line":"    }"},
{"lineNum":"  159","line":""},
{"lineNum":"  160","line":"} // namespace"},
{"lineNum":"  161","line":""},
{"lineNum":"  162","line":""},
{"lineNum":"  163","line":""},
{"lineNum":"  164","line":""},
{"lineNum":"  165","line":""},
{"lineNum":"  166","line":"void"},
{"lineNum":"  167","line":"extract_independent_operations("},
{"lineNum":"  168","line":"        std::string const & extractor_type,"},
{"lineNum":"  169","line":"        Lattice const & lattice,"},
{"lineNum":"  170","line":"        std::vector<Lattice_element_slice> const & slices,"},
{"lineNum":"  171","line":"        std::vector<std::unique_ptr<Independent_operation>> & operations )"},
{"lineNum":"  172","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  173","line":"    if (extractor_type == \"chef_map\")","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  174","line":"    {"},
{"lineNum":"  175","line":"        chef_map_operation_extract(lattice, slices, operations);"},
{"lineNum":"  176","line":"    }"},
{"lineNum":"  177","line":"    else if (extractor_type == \"chef_propagator\")","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  178","line":"    {"},
{"lineNum":"  179","line":"        chef_propagator_operation_extract(lattice, slices, operations);"},
{"lineNum":"  180","line":"    }"},
{"lineNum":"  181","line":"#if 0"},
{"lineNum":"  182","line":"    else if (extractor_type == \"chef_mixed\")"},
{"lineNum":"  183","line":"    {"},
{"lineNum":"  184","line":"        return chef_mixed_operation_extract(lattice, slices);"},
{"lineNum":"  185","line":"    }"},
{"lineNum":"  186","line":"#endif"},
{"lineNum":"  187","line":"    else if (extractor_type == \"libff\" || extractor_type == \"default\")","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  188","line":"    {"},
{"lineNum":"  189","line":"        libff_operation_extract(lattice, slices, operations);"},
{"lineNum":"  190","line":"    }"},
{"lineNum":"  191","line":"    else"},
{"lineNum":"  192","line":"    {"},
{"lineNum":"  193","line":"        throw std::runtime_error(\"unknown extractor_type: \" + extractor_type);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  194","line":"    }"},
{"lineNum":"  195","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  196","line":""},
{"lineNum":"  197","line":""},
{"lineNum":"  198","line":"std::unique_ptr<Independent_operation>"},
{"lineNum":"  199","line":"extract_aperture_operation("},
{"lineNum":"  200","line":"        std::string const & aperture_type,"},
{"lineNum":"  201","line":"        Lattice_element_slice const & slice)"},
{"lineNum":"  202","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  203","line":"    if (aperture_type == Finite_aperture::type)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  204","line":"    {"},
{"lineNum":"  205","line":"        return std::make_unique<Aperture_operation<Finite_aperture>>(slice);"},
{"lineNum":"  206","line":"    }"},
{"lineNum":"  207","line":"    else if (aperture_type == Circular_aperture::type)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  208","line":"    {"},
{"lineNum":"  209","line":"        return std::make_unique<Aperture_operation<Circular_aperture>>(slice);"},
{"lineNum":"  210","line":"    }"},
{"lineNum":"  211","line":"    else if (aperture_type == Elliptical_aperture::type)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  212","line":"    {"},
{"lineNum":"  213","line":"        return std::make_unique<Aperture_operation<Elliptical_aperture>>(slice);"},
{"lineNum":"  214","line":"    }"},
{"lineNum":"  215","line":"    else"},
{"lineNum":"  216","line":"    {"},
{"lineNum":"  217","line":"        //return std::make_unique<Aperture_operation<Dummy_aperture>>(slice);"},
{"lineNum":"  218","line":"        throw std::runtime_error(\"unknown aperture_type \" + aperture_type);","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  219","line":"    }"},
{"lineNum":"  220","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  221","line":""},
{"lineNum":"  222","line":""},
{"lineNum":"  223","line":""},
{"lineNum":"  224","line":""},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 12, "covered" : 0,};
var merged_data = [];
