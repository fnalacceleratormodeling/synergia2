var data = {lines:[
{"lineNum":"    1","line":"// -*- C++ -*-"},
{"lineNum":"    2","line":"//===----------------------------------------------------------------------===//"},
{"lineNum":"    3","line":"//"},
{"lineNum":"    4","line":"// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions."},
{"lineNum":"    5","line":"// See https://llvm.org/LICENSE.txt for license information."},
{"lineNum":"    6","line":"// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception"},
{"lineNum":"    7","line":"//"},
{"lineNum":"    8","line":"//===----------------------------------------------------------------------===//"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"#ifndef _LIBCPP___ALGORITHM_FIND_FIRST_OF_H"},
{"lineNum":"   11","line":"#define _LIBCPP___ALGORITHM_FIND_FIRST_OF_H"},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"#include <__config>"},
{"lineNum":"   14","line":"#include <__algorithm/comp.h>"},
{"lineNum":"   15","line":"#include <__iterator/iterator_traits.h>"},
{"lineNum":"   16","line":""},
{"lineNum":"   17","line":"#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)"},
{"lineNum":"   18","line":"#pragma GCC system_header"},
{"lineNum":"   19","line":"#endif"},
{"lineNum":"   20","line":""},
{"lineNum":"   21","line":"_LIBCPP_PUSH_MACROS"},
{"lineNum":"   22","line":"#include <__undef_macros>"},
{"lineNum":"   23","line":""},
{"lineNum":"   24","line":"_LIBCPP_BEGIN_NAMESPACE_STD"},
{"lineNum":"   25","line":""},
{"lineNum":"   26","line":"template <class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate>"},
{"lineNum":"   27","line":"_LIBCPP_CONSTEXPR_AFTER_CXX11 _ForwardIterator1 __find_first_of_ce(_ForwardIterator1 __first1,"},
{"lineNum":"   28","line":"                                                                   _ForwardIterator1 __last1,"},
{"lineNum":"   29","line":"                                                                   _ForwardIterator2 __first2,"},
{"lineNum":"   30","line":"                                                                   _ForwardIterator2 __last2, _BinaryPredicate __pred) {"},
{"lineNum":"   31","line":"  for (; __first1 != __last1; ++__first1)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   32","line":"    for (_ForwardIterator2 __j = __first2; __j != __last2; ++__j)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   33","line":"      if (__pred(*__first1, *__j))","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   34","line":"        return __first1;"},
{"lineNum":"   35","line":"  return __last1;"},
{"lineNum":"   36","line":"}"},
{"lineNum":"   37","line":""},
{"lineNum":"   38","line":"template <class _ForwardIterator1, class _ForwardIterator2, class _BinaryPredicate>"},
{"lineNum":"   39","line":"_LIBCPP_NODISCARD_EXT inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17 _ForwardIterator1"},
{"lineNum":"   40","line":"find_first_of(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2,"},
{"lineNum":"   41","line":"              _ForwardIterator2 __last2, _BinaryPredicate __pred) {"},
{"lineNum":"   42","line":"  return _VSTD::__find_first_of_ce(__first1, __last1, __first2, __last2, __pred);"},
{"lineNum":"   43","line":"}"},
{"lineNum":"   44","line":""},
{"lineNum":"   45","line":"template <class _ForwardIterator1, class _ForwardIterator2>"},
{"lineNum":"   46","line":"_LIBCPP_NODISCARD_EXT inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17 _ForwardIterator1 find_first_of("},
{"lineNum":"   47","line":"    _ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2, _ForwardIterator2 __last2) {"},
{"lineNum":"   48","line":"  typedef typename iterator_traits<_ForwardIterator1>::value_type __v1;"},
{"lineNum":"   49","line":"  typedef typename iterator_traits<_ForwardIterator2>::value_type __v2;"},
{"lineNum":"   50","line":"  return _VSTD::__find_first_of_ce(__first1, __last1, __first2, __last2, __equal_to<__v1, __v2>());"},
{"lineNum":"   51","line":"}"},
{"lineNum":"   52","line":""},
{"lineNum":"   53","line":"_LIBCPP_END_NAMESPACE_STD"},
{"lineNum":"   54","line":""},
{"lineNum":"   55","line":"_LIBCPP_POP_MACROS"},
{"lineNum":"   56","line":""},
{"lineNum":"   57","line":"#endif // _LIBCPP___ALGORITHM_FIND_FIRST_OF_H"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 3, "covered" : 0,};
var merged_data = [];
