var data = {lines:[
{"lineNum":"    1","line":"/*============================================================================="},
{"lineNum":"    2","line":"    Copyright (c) 2016 Kohei Takahashi"},
{"lineNum":"    3","line":""},
{"lineNum":"    4","line":"    Distributed under the Boost Software License, Version 1.0. (See accompanying"},
{"lineNum":"    5","line":"    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)"},
{"lineNum":"    6","line":"==============================================================================*/"},
{"lineNum":"    7","line":""},
{"lineNum":"    8","line":"#ifndef PHOENIX_BIND_BIND_FUNCTION_HPP"},
{"lineNum":"    9","line":"#define PHOENIX_BIND_BIND_FUNCTION_HPP"},
{"lineNum":"   10","line":""},
{"lineNum":"   11","line":"#include <boost/phoenix/core/limits.hpp>"},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"#if defined(BOOST_PHOENIX_NO_VARIADIC_BIND)"},
{"lineNum":"   14","line":"# include <boost/phoenix/bind/detail/cpp03/bind_function.hpp>"},
{"lineNum":"   15","line":"#else"},
{"lineNum":"   16","line":""},
{"lineNum":"   17","line":"#include <boost/phoenix/core/expression.hpp>"},
{"lineNum":"   18","line":"#include <boost/phoenix/core/detail/function_eval.hpp>"},
{"lineNum":"   19","line":""},
{"lineNum":"   20","line":"namespace boost { namespace phoenix"},
{"lineNum":"   21","line":"{"},
{"lineNum":"   22","line":"    namespace detail"},
{"lineNum":"   23","line":"    {"},
{"lineNum":"   24","line":"        template <typename RT, typename FP>"},
{"lineNum":"   25","line":"        struct function_ptr"},
{"lineNum":"   26","line":"        {"},
{"lineNum":"   27","line":"            typedef RT result_type;"},
{"lineNum":"   28","line":""},
{"lineNum":"   29","line":"            function_ptr(FP fp_)"},
{"lineNum":"   30","line":"                : fp(fp_) {}","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   31","line":""},
{"lineNum":"   32","line":"            template <typename... A>"},
{"lineNum":"   33","line":"            result_type operator()(A&... a) const"},
{"lineNum":"   34","line":"            {"},
{"lineNum":"   35","line":"                return fp(a...);","class":"lineNoCov","hits":"0","possible_hits":"21",},
{"lineNum":"   36","line":"            }"},
{"lineNum":"   37","line":""},
{"lineNum":"   38","line":"            bool operator==(function_ptr const& rhs) const"},
{"lineNum":"   39","line":"            {"},
{"lineNum":"   40","line":"                return fp == rhs.fp;"},
{"lineNum":"   41","line":"            }"},
{"lineNum":"   42","line":""},
{"lineNum":"   43","line":"            template <typename RhsRT, typename RhsFP>"},
{"lineNum":"   44","line":"            bool operator==(function_ptr<RhsRT, RhsFP> const& /*rhs*/) const"},
{"lineNum":"   45","line":"            {"},
{"lineNum":"   46","line":"                return false;"},
{"lineNum":"   47","line":"            }"},
{"lineNum":"   48","line":""},
{"lineNum":"   49","line":"            FP fp;"},
{"lineNum":"   50","line":"        };"},
{"lineNum":"   51","line":"    } // namespace boost::phoenix::detail"},
{"lineNum":"   52","line":""},
{"lineNum":"   53","line":"    template <typename RT, typename... T, typename... A>"},
{"lineNum":"   54","line":"    inline typename detail::expression::function_eval<"},
{"lineNum":"   55","line":"        detail::function_ptr<RT, RT (*)(T...)>"},
{"lineNum":"   56","line":"      , A..."},
{"lineNum":"   57","line":"    >::type const"},
{"lineNum":"   58","line":"    bind(RT (*f)(T...), A const&... a)"},
{"lineNum":"   59","line":"    {"},
{"lineNum":"   60","line":"        typedef detail::function_ptr<RT, RT (*)(T...)> fp_type;"},
{"lineNum":"   61","line":"        return detail::expression::function_eval<fp_type, A...>::make(fp_type(f), a...);","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   62","line":"    }"},
{"lineNum":"   63","line":"}} // namespace boost::phoenix"},
{"lineNum":"   64","line":""},
{"lineNum":"   65","line":"#endif"},
{"lineNum":"   66","line":"#endif"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:41", "instrumented" : 3, "covered" : 0,};
var merged_data = [];
