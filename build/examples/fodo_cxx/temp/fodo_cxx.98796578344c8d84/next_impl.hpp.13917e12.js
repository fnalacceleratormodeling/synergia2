var data = {lines:[
{"lineNum":"    1","line":"/*============================================================================="},
{"lineNum":"    2","line":"    Copyright (c) 2001-2011 Joel de Guzman"},
{"lineNum":"    3","line":""},
{"lineNum":"    4","line":"    Distributed under the Boost Software License, Version 1.0. (See accompanying"},
{"lineNum":"    5","line":"    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)"},
{"lineNum":"    6","line":"==============================================================================*/"},
{"lineNum":"    7","line":"#if !defined(FUSION_NEXT_IMPL_05042005_1058)"},
{"lineNum":"    8","line":"#define FUSION_NEXT_IMPL_05042005_1058"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"#include <boost/fusion/support/config.hpp>"},
{"lineNum":"   11","line":"#include <boost/fusion/container/vector/vector_iterator.hpp>"},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"namespace boost { namespace fusion"},
{"lineNum":"   14","line":"{"},
{"lineNum":"   15","line":"    struct vector_iterator_tag;"},
{"lineNum":"   16","line":"    template <typename Vector, int N>"},
{"lineNum":"   17","line":"    struct vector_iterator;"},
{"lineNum":"   18","line":""},
{"lineNum":"   19","line":"    namespace extension"},
{"lineNum":"   20","line":"    {"},
{"lineNum":"   21","line":"        template <typename Tag>"},
{"lineNum":"   22","line":"        struct next_impl;"},
{"lineNum":"   23","line":""},
{"lineNum":"   24","line":"        template <>"},
{"lineNum":"   25","line":"        struct next_impl<vector_iterator_tag>"},
{"lineNum":"   26","line":"        {"},
{"lineNum":"   27","line":"            template <typename Iterator>"},
{"lineNum":"   28","line":"            struct apply"},
{"lineNum":"   29","line":"            {"},
{"lineNum":"   30","line":"                typedef typename Iterator::vector vector;"},
{"lineNum":"   31","line":"                typedef typename Iterator::index index;"},
{"lineNum":"   32","line":"                typedef vector_iterator<vector, index::value+1> type;"},
{"lineNum":"   33","line":""},
{"lineNum":"   34","line":"                BOOST_CONSTEXPR BOOST_FUSION_GPU_ENABLED"},
{"lineNum":"   35","line":"                static type"},
{"lineNum":"   36","line":"                call(Iterator const& i)"},
{"lineNum":"   37","line":"                {"},
{"lineNum":"   38","line":"                    return type(i.vec);","class":"lineNoCov","hits":"0","possible_hits":"7",},
{"lineNum":"   39","line":"                }"},
{"lineNum":"   40","line":"            };"},
{"lineNum":"   41","line":"        };"},
{"lineNum":"   42","line":"    }"},
{"lineNum":"   43","line":"}}"},
{"lineNum":"   44","line":""},
{"lineNum":"   45","line":"#endif"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 1, "covered" : 0,};
var merged_data = [];
