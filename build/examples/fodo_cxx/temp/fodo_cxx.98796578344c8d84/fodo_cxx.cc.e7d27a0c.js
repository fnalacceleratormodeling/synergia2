var data = {lines:[
{"lineNum":"    1","line":"// standalone c++ version of the fodo.py example"},
{"lineNum":"    2","line":""},
{"lineNum":"    3","line":"#include <iostream>"},
{"lineNum":"    4","line":"#include <iomanip>"},
{"lineNum":"    5","line":"#include <string>"},
{"lineNum":"    6","line":"#include \"synergia/simulation/propagator.h\""},
{"lineNum":"    7","line":"#include \"synergia/simulation/split_operator_stepper_elements.h\""},
{"lineNum":"    8","line":"#include \"synergia/foundation/physical_constants.h\""},
{"lineNum":"    9","line":"#include \"synergia/bunch/populate.h\""},
{"lineNum":"   10","line":"#include \"synergia/bunch/core_diagnostics.h\""},
{"lineNum":"   11","line":"#include \"synergia/bunch/diagnostics_particles.h\""},
{"lineNum":"   12","line":"#include \"synergia/bunch/diagnostics_bulk_track.h\""},
{"lineNum":"   13","line":"#include \"synergia/bunch/diagnostics_full2.h\""},
{"lineNum":"   14","line":"#include \"synergia/lattice/madx_reader.h\""},
{"lineNum":"   15","line":"#include \"synergia/utils/logger.h\""},
{"lineNum":"   16","line":"#include \"synergia/utils/simple_timer.h\""},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"#include \"synergia/collective/space_charge_3d_open_hockney.h\""},
{"lineNum":"   19","line":""},
{"lineNum":"   20","line":"// quick definitions"},
{"lineNum":"   21","line":"constexpr int gridx = 32;"},
{"lineNum":"   22","line":"constexpr int gridy = 32;"},
{"lineNum":"   23","line":"constexpr int gridz = 128;"},
{"lineNum":"   24","line":"constexpr int turns = 10;"},
{"lineNum":"   25","line":"constexpr int macroparticles = 1048576;"},
{"lineNum":"   26","line":"constexpr double real_particles = 2.94e12;"},
{"lineNum":"   27","line":""},
{"lineNum":"   28","line":"Lattice get_lattice()"},
{"lineNum":"   29","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   30","line":"    static std::string fodo_madx(R\"foo(","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   31","line":"beam, particle=proton,pc=3.0;"},
{"lineNum":"   32","line":""},
{"lineNum":"   33","line":"o: drift, l=8.0;"},
{"lineNum":"   34","line":"f: quadrupole, l=2.0, k1=0.071428571428571425;"},
{"lineNum":"   35","line":"d: quadrupole, l=2.0, k1=-0.071428571428571425;"},
{"lineNum":"   36","line":""},
{"lineNum":"   37","line":"fodo: sequence, l=20.0, refer=entry;"},
{"lineNum":"   38","line":"fodo_1: f, at=0.0;"},
{"lineNum":"   39","line":"fodo_2: o, at=2.0;"},
{"lineNum":"   40","line":"fodo_3: d, at=10.0;"},
{"lineNum":"   41","line":"fodo_4: o, at=12.0;"},
{"lineNum":"   42","line":"endsequence;"},
{"lineNum":"   43","line":")foo\");"},
{"lineNum":"   44","line":""},
{"lineNum":"   45","line":"    MadX_reader reader;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   46","line":"    reader.parse(fodo_madx);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   47","line":"    return reader.get_lattice(\"fodo\");","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   48","line":"}","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   49","line":""},
{"lineNum":"   50","line":"void print_bunch_statistics(Bunch const& bunch, Logger &logger)"},
{"lineNum":"   51","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   52","line":"    karray1d bunch_means(Core_diagnostics::calculate_mean(bunch));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   53","line":"    karray1d_row bunch_stds(Core_diagnostics::calculate_std(bunch, bunch_means));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   54","line":""},
{"lineNum":"   55","line":"    logger << \"bunch means\" << std::endl;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   56","line":"    for (int i=0; i<6; ++i) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   57","line":"        logger << i << \":  \" << std::setprecision(15) << bunch_means(i) << std::endl;","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   58","line":"    }"},
{"lineNum":"   59","line":"    logger << \"bunch stds\" << std::endl;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   60","line":"    for (int i=0; i<6; ++i) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   61","line":"        logger << i << \":  \" << std::setprecision(15) << bunch_stds(i) << std::endl;","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   62","line":"    }"},
{"lineNum":"   63","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   64","line":""},
{"lineNum":"   65","line":"int run()"},
{"lineNum":"   66","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   67","line":"    Logger screen(0, LoggerV::INFO);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   68","line":"    //Logger screen(0, LoggerV::DEBUG);"},
{"lineNum":"   69","line":""},
{"lineNum":"   70","line":"    Lattice lattice = get_lattice();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   71","line":"    screen << \"Read lattice, length: \" << lattice.get_length() << \", \" << lattice.get_elements().size() << \" elements\" << std::endl;","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   72","line":""},
{"lineNum":"   73","line":"    Four_momentum four_momentum(pconstants::mp);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   74","line":"    four_momentum.set_momentum(3.0);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   75","line":"    Reference_particle refpart(1, four_momentum);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   76","line":"    lattice.set_reference_particle(refpart);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   77","line":""},
{"lineNum":"   78","line":"    // space charge"},
{"lineNum":"   79","line":"    Space_charge_3d_open_hockney_options sc_ops(gridx, gridy, gridz);"},
{"lineNum":"   80","line":"    sc_ops.comm_group_size = 1;"},
{"lineNum":"   81","line":""},
{"lineNum":"   82","line":"    // stepper"},
{"lineNum":"   83","line":"    Split_operator_stepper_elements stepper(sc_ops, 1);"},
{"lineNum":"   84","line":""},
{"lineNum":"   85","line":"    // Propagator"},
{"lineNum":"   86","line":"    Propagator propagator(lattice, stepper);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   87","line":"    // propagator.print_steps(screen);"},
{"lineNum":"   88","line":""},
{"lineNum":"   89","line":"    // print slices"},
{"lineNum":"   90","line":"    for(auto const& slice : propagator.get_lattice_element_slices())","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   91","line":"        screen << slice.as_string() << \"\\n\";","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   92","line":""},
{"lineNum":"   93","line":"    // bunch simulator"},
{"lineNum":"   94","line":"    auto sim = Bunch_simulator::create_single_bunch_simulator(","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   95","line":"            lattice.get_reference_particle(), macroparticles, real_particles,"},
{"lineNum":"   96","line":"            Commxx() );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   97","line":""},
{"lineNum":"   98","line":"    karray1d means(\"means\", 6);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   99","line":"    for (int i=0; i<6; ++i) means(i) = 0.0;","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  100","line":""},
{"lineNum":"  101","line":"    static const double covariance_matrix[6][6] ="},
{"lineNum":"  102","line":"        {{3.0509743977035345e-05, 2.2014134466660509e-06, 0, 0, 0, 0},"},
{"lineNum":"  103","line":"         {2.2014134466660509e-06, 1.9161816525115869e-07, 0, 0, 0, 0},"},
{"lineNum":"  104","line":"         {0, 0, 7.5506914064526925e-06, -6.6846812465678249e-07, 0, 0},"},
{"lineNum":"  105","line":"         {0, 0, -6.6846812465678249e-07, 1.9161816525115867e-07, 0, 0},"},
{"lineNum":"  106","line":"         {0, 0, 0, 0, 0.00016427607645871527, 0},"},
{"lineNum":"  107","line":"         {0, 0, 0, 0, 0, 1e-08}};"},
{"lineNum":"  108","line":""},
{"lineNum":"  109","line":""},
{"lineNum":"  110","line":"    karray2d_row covariances(\"covariances\", 6, 6);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  111","line":"    for (int i=0; i<6; ++i)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  112","line":"        for (int j=0; j<6; ++j)","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  113","line":"            covariances(i, j) = covariance_matrix[i][j];","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  114","line":""},
{"lineNum":"  115","line":"    Random_distribution dist(1234567, Commxx());","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  116","line":""},
{"lineNum":"  117","line":"    auto & bunch = sim.get_bunch();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  118","line":"    populate_6d(dist, bunch, means, covariances);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  119","line":""},
{"lineNum":"  120","line":"    screen << \"Statistics before propagation\" << std::endl;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  121","line":""},
{"lineNum":"  122","line":"    bunch.checkout_particles();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  123","line":"    print_bunch_statistics(bunch, screen);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  124","line":""},
{"lineNum":"  125","line":"    // diagnostics"},
{"lineNum":"  126","line":"    Diagnostics_bulk_track diag_bulk_track(\"tracks.h5\", 100, 0);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  127","line":"    sim.reg_diag_per_turn(diag_bulk_track);"},
{"lineNum":"  128","line":""},
{"lineNum":"  129","line":"    Diagnostics_particles diag_particles(\"particles.h5\", 1000);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  130","line":"    sim.reg_diag_per_turn(diag_particles);"},
{"lineNum":"  131","line":""},
{"lineNum":"  132","line":"    Diagnostics_full2 diag_full2(\"diag.h5\");","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  133","line":"    sim.reg_diag_per_turn(diag_full2);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  134","line":""},
{"lineNum":"  135","line":"    screen << \"Statistics before propagation\" << std::endl;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  136","line":""},
{"lineNum":"  137","line":"    bunch.checkout_particles();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  138","line":"    print_bunch_statistics(bunch, screen);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  139","line":"    // propagate"},
{"lineNum":"  140","line":"    Logger proplogger = Logger(0, LoggerV::INFO_TURN);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  141","line":"    propagator.propagate(sim, proplogger , turns);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  142","line":""},
{"lineNum":"  143","line":"    bunch.checkout_particles();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  144","line":"    screen << \"Statistics after propagate\" << std::endl;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  145","line":"    print_bunch_statistics(bunch, screen);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  146","line":""},
{"lineNum":"  147","line":"    return 0;"},
{"lineNum":"  148","line":"}","class":"lineNoCov","hits":"0","possible_hits":"13",},
{"lineNum":"  149","line":""},
{"lineNum":"  150","line":"int main(int argc, char ** argv)"},
{"lineNum":"  151","line":"{","class":"lineCov","hits":"1","order":"709","possible_hits":"1",},
{"lineNum":"  152","line":"    MPI_Init(&argc, &argv);","class":"lineCov","hits":"1","order":"710","possible_hits":"1",},
{"lineNum":"  153","line":"    Kokkos::initialize(argc, argv);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  154","line":""},
{"lineNum":"  155","line":"    //layout_test();"},
{"lineNum":"  156","line":"    run();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  157","line":""},
{"lineNum":"  158","line":"#ifdef SIMPLE_TIMER"},
{"lineNum":"  159","line":"    Logger logger(0);"},
{"lineNum":"  160","line":"    simple_timer_print(logger);"},
{"lineNum":"  161","line":"#endif"},
{"lineNum":"  162","line":""},
{"lineNum":"  163","line":"    Kokkos::finalize();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  164","line":"    MPI_Finalize();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  165","line":"    return 0;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  166","line":"}"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 61, "covered" : 2,};
var merged_data = [];
