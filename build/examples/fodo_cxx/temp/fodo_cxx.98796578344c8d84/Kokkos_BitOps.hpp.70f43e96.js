var data = {lines:[
{"lineNum":"    1","line":"/*"},
{"lineNum":"    2","line":"//@HEADER"},
{"lineNum":"    3","line":"// ************************************************************************"},
{"lineNum":"    4","line":"//"},
{"lineNum":"    5","line":"//                        Kokkos v. 3.0"},
{"lineNum":"    6","line":"//       Copyright (2020) National Technology & Engineering"},
{"lineNum":"    7","line":"//               Solutions of Sandia, LLC (NTESS)."},
{"lineNum":"    8","line":"//"},
{"lineNum":"    9","line":"// Under the terms of Contract DE-NA0003525 with NTESS,"},
{"lineNum":"   10","line":"// the U.S. Government retains certain rights in this software."},
{"lineNum":"   11","line":"//"},
{"lineNum":"   12","line":"// Redistribution and use in source and binary forms, with or without"},
{"lineNum":"   13","line":"// modification, are permitted provided that the following conditions are"},
{"lineNum":"   14","line":"// met:"},
{"lineNum":"   15","line":"//"},
{"lineNum":"   16","line":"// 1. Redistributions of source code must retain the above copyright"},
{"lineNum":"   17","line":"// notice, this list of conditions and the following disclaimer."},
{"lineNum":"   18","line":"//"},
{"lineNum":"   19","line":"// 2. Redistributions in binary form must reproduce the above copyright"},
{"lineNum":"   20","line":"// notice, this list of conditions and the following disclaimer in the"},
{"lineNum":"   21","line":"// documentation and/or other materials provided with the distribution."},
{"lineNum":"   22","line":"//"},
{"lineNum":"   23","line":"// 3. Neither the name of the Corporation nor the names of the"},
{"lineNum":"   24","line":"// contributors may be used to endorse or promote products derived from"},
{"lineNum":"   25","line":"// this software without specific prior written permission."},
{"lineNum":"   26","line":"//"},
{"lineNum":"   27","line":"// THIS SOFTWARE IS PROVIDED BY NTESS \"AS IS\" AND ANY"},
{"lineNum":"   28","line":"// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE"},
{"lineNum":"   29","line":"// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR"},
{"lineNum":"   30","line":"// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL NTESS OR THE"},
{"lineNum":"   31","line":"// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,"},
{"lineNum":"   32","line":"// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,"},
{"lineNum":"   33","line":"// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR"},
{"lineNum":"   34","line":"// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF"},
{"lineNum":"   35","line":"// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING"},
{"lineNum":"   36","line":"// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS"},
{"lineNum":"   37","line":"// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."},
{"lineNum":"   38","line":"//"},
{"lineNum":"   39","line":"// Questions? Contact Christian R. Trott (crtrott@sandia.gov)"},
{"lineNum":"   40","line":"//"},
{"lineNum":"   41","line":"// ************************************************************************"},
{"lineNum":"   42","line":"//@HEADER"},
{"lineNum":"   43","line":"*/"},
{"lineNum":"   44","line":""},
{"lineNum":"   45","line":"#ifndef KOKKOS_BITOPS_HPP"},
{"lineNum":"   46","line":"#define KOKKOS_BITOPS_HPP"},
{"lineNum":"   47","line":""},
{"lineNum":"   48","line":"#include <Kokkos_Macros.hpp>"},
{"lineNum":"   49","line":"#include <cstdint>"},
{"lineNum":"   50","line":"#include <climits>"},
{"lineNum":"   51","line":""},
{"lineNum":"   52","line":"#ifdef KOKKOS_COMPILER_INTEL"},
{"lineNum":"   53","line":"#include <immintrin.h>"},
{"lineNum":"   54","line":"#endif"},
{"lineNum":"   55","line":""},
{"lineNum":"   56","line":"namespace Kokkos {"},
{"lineNum":"   57","line":""},
{"lineNum":"   58","line":"KOKKOS_FORCEINLINE_FUNCTION"},
{"lineNum":"   59","line":"int log2(unsigned i) {"},
{"lineNum":"   60","line":"  enum : int { shift = sizeof(unsigned) * CHAR_BIT - 1 };"},
{"lineNum":"   61","line":"#if defined(__CUDA_ARCH__) || defined(__HIP_DEVICE_COMPILE__)"},
{"lineNum":"   62","line":"  return shift - __clz(i);"},
{"lineNum":"   63","line":"#elif defined(KOKKOS_COMPILER_INTEL)"},
{"lineNum":"   64","line":"  return _bit_scan_reverse(i);"},
{"lineNum":"   65","line":"#elif defined(KOKKOS_COMPILER_CRAYC)"},
{"lineNum":"   66","line":"  return i ? shift - _leadz32(i) : 0;"},
{"lineNum":"   67","line":"#elif defined(__GNUC__) || defined(__GNUG__)"},
{"lineNum":"   68","line":"  return shift - __builtin_clz(i);","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   69","line":"#else"},
{"lineNum":"   70","line":"  int offset = 0;"},
{"lineNum":"   71","line":"  if (i) {"},
{"lineNum":"   72","line":"    for (offset = shift; (i & (1 << offset)) == 0; --offset)"},
{"lineNum":"   73","line":"      ;"},
{"lineNum":"   74","line":"  }"},
{"lineNum":"   75","line":"  return offset;"},
{"lineNum":"   76","line":"#endif"},
{"lineNum":"   77","line":"}"},
{"lineNum":"   78","line":""},
{"lineNum":"   79","line":"namespace Impl {"},
{"lineNum":"   80","line":""},
{"lineNum":"   81","line":"/**\\brief  Find first zero bit."},
{"lineNum":"   82","line":" *"},
{"lineNum":"   83","line":" *  If none then return -1 ;"},
{"lineNum":"   84","line":" */"},
{"lineNum":"   85","line":"KOKKOS_FORCEINLINE_FUNCTION"},
{"lineNum":"   86","line":"int bit_first_zero(unsigned i) noexcept {"},
{"lineNum":"   87","line":"  enum : unsigned { full = ~0u };"},
{"lineNum":"   88","line":""},
{"lineNum":"   89","line":"#if defined(__CUDA_ARCH__) || defined(__HIP_DEVICE_COMPILE__)"},
{"lineNum":"   90","line":"  return full != i ? __ffs(~i) - 1 : -1;"},
{"lineNum":"   91","line":"#elif defined(KOKKOS_COMPILER_INTEL)"},
{"lineNum":"   92","line":"  return full != i ? _bit_scan_forward(~i) : -1;"},
{"lineNum":"   93","line":"#elif defined(KOKKOS_COMPILER_CRAYC)"},
{"lineNum":"   94","line":"  return full != i ? _popcnt(i ^ (i + 1)) - 1 : -1;"},
{"lineNum":"   95","line":"#elif defined(KOKKOS_COMPILER_GNU) || defined(__GNUC__) || defined(__GNUG__)"},
{"lineNum":"   96","line":"  return full != i ? __builtin_ffs(~i) - 1 : -1;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   97","line":"#else"},
{"lineNum":"   98","line":"  int offset = -1;"},
{"lineNum":"   99","line":"  if (full != i) {"},
{"lineNum":"  100","line":"    for (offset = 0; i & (1 << offset); ++offset)"},
{"lineNum":"  101","line":"      ;"},
{"lineNum":"  102","line":"  }"},
{"lineNum":"  103","line":"  return offset;"},
{"lineNum":"  104","line":"#endif"},
{"lineNum":"  105","line":"}"},
{"lineNum":"  106","line":""},
{"lineNum":"  107","line":"KOKKOS_FORCEINLINE_FUNCTION"},
{"lineNum":"  108","line":"int bit_scan_forward(unsigned i) {"},
{"lineNum":"  109","line":"#if defined(__CUDA_ARCH__) || defined(__HIP_DEVICE_COMPILE__)"},
{"lineNum":"  110","line":"  return __ffs(i) - 1;"},
{"lineNum":"  111","line":"#elif defined(KOKKOS_COMPILER_INTEL)"},
{"lineNum":"  112","line":"  return _bit_scan_forward(i);"},
{"lineNum":"  113","line":"#elif defined(KOKKOS_COMPILER_CRAYC)"},
{"lineNum":"  114","line":"  return i ? _popcnt(~i & (i - 1)) : -1;"},
{"lineNum":"  115","line":"#elif defined(KOKKOS_COMPILER_GNU) || defined(__GNUC__) || defined(__GNUG__)"},
{"lineNum":"  116","line":"  return __builtin_ffs(i) - 1;"},
{"lineNum":"  117","line":"#else"},
{"lineNum":"  118","line":"  int offset = -1;"},
{"lineNum":"  119","line":"  if (i) {"},
{"lineNum":"  120","line":"    for (offset = 0; (i & (1 << offset)) == 0; ++offset)"},
{"lineNum":"  121","line":"      ;"},
{"lineNum":"  122","line":"  }"},
{"lineNum":"  123","line":"  return offset;"},
{"lineNum":"  124","line":"#endif"},
{"lineNum":"  125","line":"}"},
{"lineNum":"  126","line":""},
{"lineNum":"  127","line":"/// Count the number of bits set."},
{"lineNum":"  128","line":"KOKKOS_FORCEINLINE_FUNCTION"},
{"lineNum":"  129","line":"int bit_count(unsigned i) {"},
{"lineNum":"  130","line":"#if defined(__CUDA_ARCH__) || defined(__HIP_DEVICE_COMPILE__)"},
{"lineNum":"  131","line":"  return __popc(i);"},
{"lineNum":"  132","line":"#elif defined(__INTEL_COMPILER)"},
{"lineNum":"  133","line":"  return _popcnt32(i);"},
{"lineNum":"  134","line":"#elif defined(KOKKOS_COMPILER_CRAYC)"},
{"lineNum":"  135","line":"  return _popcnt(i);"},
{"lineNum":"  136","line":"#elif defined(__GNUC__) || defined(__GNUG__)"},
{"lineNum":"  137","line":"  return __builtin_popcount(i);"},
{"lineNum":"  138","line":"#else"},
{"lineNum":"  139","line":"  // http://graphics.stanford.edu/~seander/bithacks.html#CountBitsSetNaive"},
{"lineNum":"  140","line":"  i = i - ((i >> 1) & ~0u / 3u);                           // temp"},
{"lineNum":"  141","line":"  i = (i & ~0u / 15u * 3u) + ((i >> 2) & ~0u / 15u * 3u);  // temp"},
{"lineNum":"  142","line":"  i = (i + (i >> 4)) & ~0u / 255u * 15u;                   // temp"},
{"lineNum":"  143","line":""},
{"lineNum":"  144","line":"  // count"},
{"lineNum":"  145","line":"  return (int)((i * (~0u / 255u)) >> (sizeof(unsigned) - 1) * CHAR_BIT);"},
{"lineNum":"  146","line":"#endif"},
{"lineNum":"  147","line":"}"},
{"lineNum":"  148","line":""},
{"lineNum":"  149","line":"KOKKOS_INLINE_FUNCTION"},
{"lineNum":"  150","line":"unsigned integral_power_of_two_that_contains(const unsigned N) {"},
{"lineNum":"  151","line":"  const unsigned i = Kokkos::log2(N);"},
{"lineNum":"  152","line":"  return ((1u << i) < N) ? i + 1 : i;","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  153","line":"}"},
{"lineNum":"  154","line":""},
{"lineNum":"  155","line":"}  // namespace Impl"},
{"lineNum":"  156","line":"}  // namespace Kokkos"},
{"lineNum":"  157","line":""},
{"lineNum":"  158","line":"#endif  // KOKKOS_BITOPS_HPP"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:41", "instrumented" : 3, "covered" : 0,};
var merged_data = [];
