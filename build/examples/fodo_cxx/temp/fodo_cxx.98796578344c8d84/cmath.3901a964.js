var data = {lines:[
{"lineNum":"    1","line":"// -*- C++ -*-"},
{"lineNum":"    2","line":"//===---------------------------- cmath -----------------------------------===//"},
{"lineNum":"    3","line":"//"},
{"lineNum":"    4","line":"// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions."},
{"lineNum":"    5","line":"// See https://llvm.org/LICENSE.txt for license information."},
{"lineNum":"    6","line":"// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception"},
{"lineNum":"    7","line":"//"},
{"lineNum":"    8","line":"//===----------------------------------------------------------------------===//"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"#ifndef _LIBCPP_CMATH"},
{"lineNum":"   11","line":"#define _LIBCPP_CMATH"},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"/*"},
{"lineNum":"   14","line":"    cmath synopsis"},
{"lineNum":"   15","line":""},
{"lineNum":"   16","line":"Macros:"},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"    HUGE_VAL"},
{"lineNum":"   19","line":"    HUGE_VALF               // C99"},
{"lineNum":"   20","line":"    HUGE_VALL               // C99"},
{"lineNum":"   21","line":"    INFINITY                // C99"},
{"lineNum":"   22","line":"    NAN                     // C99"},
{"lineNum":"   23","line":"    FP_INFINITE             // C99"},
{"lineNum":"   24","line":"    FP_NAN                  // C99"},
{"lineNum":"   25","line":"    FP_NORMAL               // C99"},
{"lineNum":"   26","line":"    FP_SUBNORMAL            // C99"},
{"lineNum":"   27","line":"    FP_ZERO                 // C99"},
{"lineNum":"   28","line":"    FP_FAST_FMA             // C99"},
{"lineNum":"   29","line":"    FP_FAST_FMAF            // C99"},
{"lineNum":"   30","line":"    FP_FAST_FMAL            // C99"},
{"lineNum":"   31","line":"    FP_ILOGB0               // C99"},
{"lineNum":"   32","line":"    FP_ILOGBNAN             // C99"},
{"lineNum":"   33","line":"    MATH_ERRNO              // C99"},
{"lineNum":"   34","line":"    MATH_ERREXCEPT          // C99"},
{"lineNum":"   35","line":"    math_errhandling        // C99"},
{"lineNum":"   36","line":""},
{"lineNum":"   37","line":"namespace std"},
{"lineNum":"   38","line":"{"},
{"lineNum":"   39","line":""},
{"lineNum":"   40","line":"Types:"},
{"lineNum":"   41","line":""},
{"lineNum":"   42","line":"    float_t                 // C99"},
{"lineNum":"   43","line":"    double_t                // C99"},
{"lineNum":"   44","line":""},
{"lineNum":"   45","line":"// C90"},
{"lineNum":"   46","line":""},
{"lineNum":"   47","line":"floating_point abs(floating_point x);"},
{"lineNum":"   48","line":""},
{"lineNum":"   49","line":"floating_point acos (arithmetic x);"},
{"lineNum":"   50","line":"float          acosf(float x);"},
{"lineNum":"   51","line":"long double    acosl(long double x);"},
{"lineNum":"   52","line":""},
{"lineNum":"   53","line":"floating_point asin (arithmetic x);"},
{"lineNum":"   54","line":"float          asinf(float x);"},
{"lineNum":"   55","line":"long double    asinl(long double x);"},
{"lineNum":"   56","line":""},
{"lineNum":"   57","line":"floating_point atan (arithmetic x);"},
{"lineNum":"   58","line":"float          atanf(float x);"},
{"lineNum":"   59","line":"long double    atanl(long double x);"},
{"lineNum":"   60","line":""},
{"lineNum":"   61","line":"floating_point atan2 (arithmetic y, arithmetic x);"},
{"lineNum":"   62","line":"float          atan2f(float y, float x);"},
{"lineNum":"   63","line":"long double    atan2l(long double y, long double x);"},
{"lineNum":"   64","line":""},
{"lineNum":"   65","line":"floating_point ceil (arithmetic x);"},
{"lineNum":"   66","line":"float          ceilf(float x);"},
{"lineNum":"   67","line":"long double    ceill(long double x);"},
{"lineNum":"   68","line":""},
{"lineNum":"   69","line":"floating_point cos (arithmetic x);"},
{"lineNum":"   70","line":"float          cosf(float x);"},
{"lineNum":"   71","line":"long double    cosl(long double x);"},
{"lineNum":"   72","line":""},
{"lineNum":"   73","line":"floating_point cosh (arithmetic x);"},
{"lineNum":"   74","line":"float          coshf(float x);"},
{"lineNum":"   75","line":"long double    coshl(long double x);"},
{"lineNum":"   76","line":""},
{"lineNum":"   77","line":"floating_point exp (arithmetic x);"},
{"lineNum":"   78","line":"float          expf(float x);"},
{"lineNum":"   79","line":"long double    expl(long double x);"},
{"lineNum":"   80","line":""},
{"lineNum":"   81","line":"floating_point fabs (arithmetic x);"},
{"lineNum":"   82","line":"float          fabsf(float x);"},
{"lineNum":"   83","line":"long double    fabsl(long double x);"},
{"lineNum":"   84","line":""},
{"lineNum":"   85","line":"floating_point floor (arithmetic x);"},
{"lineNum":"   86","line":"float          floorf(float x);"},
{"lineNum":"   87","line":"long double    floorl(long double x);"},
{"lineNum":"   88","line":""},
{"lineNum":"   89","line":"floating_point fmod (arithmetic x, arithmetic y);"},
{"lineNum":"   90","line":"float          fmodf(float x, float y);"},
{"lineNum":"   91","line":"long double    fmodl(long double x, long double y);"},
{"lineNum":"   92","line":""},
{"lineNum":"   93","line":"floating_point frexp (arithmetic value, int* exp);"},
{"lineNum":"   94","line":"float          frexpf(float value, int* exp);"},
{"lineNum":"   95","line":"long double    frexpl(long double value, int* exp);"},
{"lineNum":"   96","line":""},
{"lineNum":"   97","line":"floating_point ldexp (arithmetic value, int exp);"},
{"lineNum":"   98","line":"float          ldexpf(float value, int exp);"},
{"lineNum":"   99","line":"long double    ldexpl(long double value, int exp);"},
{"lineNum":"  100","line":""},
{"lineNum":"  101","line":"floating_point log (arithmetic x);"},
{"lineNum":"  102","line":"float          logf(float x);"},
{"lineNum":"  103","line":"long double    logl(long double x);"},
{"lineNum":"  104","line":""},
{"lineNum":"  105","line":"floating_point log10 (arithmetic x);"},
{"lineNum":"  106","line":"float          log10f(float x);"},
{"lineNum":"  107","line":"long double    log10l(long double x);"},
{"lineNum":"  108","line":""},
{"lineNum":"  109","line":"floating_point modf (floating_point value, floating_point* iptr);"},
{"lineNum":"  110","line":"float          modff(float value, float* iptr);"},
{"lineNum":"  111","line":"long double    modfl(long double value, long double* iptr);"},
{"lineNum":"  112","line":""},
{"lineNum":"  113","line":"floating_point pow (arithmetic x, arithmetic y);"},
{"lineNum":"  114","line":"float          powf(float x, float y);"},
{"lineNum":"  115","line":"long double    powl(long double x, long double y);"},
{"lineNum":"  116","line":""},
{"lineNum":"  117","line":"floating_point sin (arithmetic x);"},
{"lineNum":"  118","line":"float          sinf(float x);"},
{"lineNum":"  119","line":"long double    sinl(long double x);"},
{"lineNum":"  120","line":""},
{"lineNum":"  121","line":"floating_point sinh (arithmetic x);"},
{"lineNum":"  122","line":"float          sinhf(float x);"},
{"lineNum":"  123","line":"long double    sinhl(long double x);"},
{"lineNum":"  124","line":""},
{"lineNum":"  125","line":"floating_point sqrt (arithmetic x);"},
{"lineNum":"  126","line":"float          sqrtf(float x);"},
{"lineNum":"  127","line":"long double    sqrtl(long double x);"},
{"lineNum":"  128","line":""},
{"lineNum":"  129","line":"floating_point tan (arithmetic x);"},
{"lineNum":"  130","line":"float          tanf(float x);"},
{"lineNum":"  131","line":"long double    tanl(long double x);"},
{"lineNum":"  132","line":""},
{"lineNum":"  133","line":"floating_point tanh (arithmetic x);"},
{"lineNum":"  134","line":"float          tanhf(float x);"},
{"lineNum":"  135","line":"long double    tanhl(long double x);"},
{"lineNum":"  136","line":""},
{"lineNum":"  137","line":"//  C99"},
{"lineNum":"  138","line":""},
{"lineNum":"  139","line":"bool signbit(arithmetic x);"},
{"lineNum":"  140","line":""},
{"lineNum":"  141","line":"int fpclassify(arithmetic x);"},
{"lineNum":"  142","line":""},
{"lineNum":"  143","line":"bool isfinite(arithmetic x);"},
{"lineNum":"  144","line":"bool isinf(arithmetic x);"},
{"lineNum":"  145","line":"bool isnan(arithmetic x);"},
{"lineNum":"  146","line":"bool isnormal(arithmetic x);"},
{"lineNum":"  147","line":""},
{"lineNum":"  148","line":"bool isgreater(arithmetic x, arithmetic y);"},
{"lineNum":"  149","line":"bool isgreaterequal(arithmetic x, arithmetic y);"},
{"lineNum":"  150","line":"bool isless(arithmetic x, arithmetic y);"},
{"lineNum":"  151","line":"bool islessequal(arithmetic x, arithmetic y);"},
{"lineNum":"  152","line":"bool islessgreater(arithmetic x, arithmetic y);"},
{"lineNum":"  153","line":"bool isunordered(arithmetic x, arithmetic y);"},
{"lineNum":"  154","line":""},
{"lineNum":"  155","line":"floating_point acosh (arithmetic x);"},
{"lineNum":"  156","line":"float          acoshf(float x);"},
{"lineNum":"  157","line":"long double    acoshl(long double x);"},
{"lineNum":"  158","line":""},
{"lineNum":"  159","line":"floating_point asinh (arithmetic x);"},
{"lineNum":"  160","line":"float          asinhf(float x);"},
{"lineNum":"  161","line":"long double    asinhl(long double x);"},
{"lineNum":"  162","line":""},
{"lineNum":"  163","line":"floating_point atanh (arithmetic x);"},
{"lineNum":"  164","line":"float          atanhf(float x);"},
{"lineNum":"  165","line":"long double    atanhl(long double x);"},
{"lineNum":"  166","line":""},
{"lineNum":"  167","line":"floating_point cbrt (arithmetic x);"},
{"lineNum":"  168","line":"float          cbrtf(float x);"},
{"lineNum":"  169","line":"long double    cbrtl(long double x);"},
{"lineNum":"  170","line":""},
{"lineNum":"  171","line":"floating_point copysign (arithmetic x, arithmetic y);"},
{"lineNum":"  172","line":"float          copysignf(float x, float y);"},
{"lineNum":"  173","line":"long double    copysignl(long double x, long double y);"},
{"lineNum":"  174","line":""},
{"lineNum":"  175","line":"floating_point erf (arithmetic x);"},
{"lineNum":"  176","line":"float          erff(float x);"},
{"lineNum":"  177","line":"long double    erfl(long double x);"},
{"lineNum":"  178","line":""},
{"lineNum":"  179","line":"floating_point erfc (arithmetic x);"},
{"lineNum":"  180","line":"float          erfcf(float x);"},
{"lineNum":"  181","line":"long double    erfcl(long double x);"},
{"lineNum":"  182","line":""},
{"lineNum":"  183","line":"floating_point exp2 (arithmetic x);"},
{"lineNum":"  184","line":"float          exp2f(float x);"},
{"lineNum":"  185","line":"long double    exp2l(long double x);"},
{"lineNum":"  186","line":""},
{"lineNum":"  187","line":"floating_point expm1 (arithmetic x);"},
{"lineNum":"  188","line":"float          expm1f(float x);"},
{"lineNum":"  189","line":"long double    expm1l(long double x);"},
{"lineNum":"  190","line":""},
{"lineNum":"  191","line":"floating_point fdim (arithmetic x, arithmetic y);"},
{"lineNum":"  192","line":"float          fdimf(float x, float y);"},
{"lineNum":"  193","line":"long double    fdiml(long double x, long double y);"},
{"lineNum":"  194","line":""},
{"lineNum":"  195","line":"floating_point fma (arithmetic x, arithmetic y, arithmetic z);"},
{"lineNum":"  196","line":"float          fmaf(float x, float y, float z);"},
{"lineNum":"  197","line":"long double    fmal(long double x, long double y, long double z);"},
{"lineNum":"  198","line":""},
{"lineNum":"  199","line":"floating_point fmax (arithmetic x, arithmetic y);"},
{"lineNum":"  200","line":"float          fmaxf(float x, float y);"},
{"lineNum":"  201","line":"long double    fmaxl(long double x, long double y);"},
{"lineNum":"  202","line":""},
{"lineNum":"  203","line":"floating_point fmin (arithmetic x, arithmetic y);"},
{"lineNum":"  204","line":"float          fminf(float x, float y);"},
{"lineNum":"  205","line":"long double    fminl(long double x, long double y);"},
{"lineNum":"  206","line":""},
{"lineNum":"  207","line":"floating_point hypot (arithmetic x, arithmetic y);"},
{"lineNum":"  208","line":"float          hypotf(float x, float y);"},
{"lineNum":"  209","line":"long double    hypotl(long double x, long double y);"},
{"lineNum":"  210","line":""},
{"lineNum":"  211","line":"double       hypot(double x, double y, double z);                // C++17"},
{"lineNum":"  212","line":"float        hypot(float x, float y, float z);                   // C++17"},
{"lineNum":"  213","line":"long double  hypot(long double x, long double y, long double z); // C++17"},
{"lineNum":"  214","line":""},
{"lineNum":"  215","line":"int ilogb (arithmetic x);"},
{"lineNum":"  216","line":"int ilogbf(float x);"},
{"lineNum":"  217","line":"int ilogbl(long double x);"},
{"lineNum":"  218","line":""},
{"lineNum":"  219","line":"floating_point lgamma (arithmetic x);"},
{"lineNum":"  220","line":"float          lgammaf(float x);"},
{"lineNum":"  221","line":"long double    lgammal(long double x);"},
{"lineNum":"  222","line":""},
{"lineNum":"  223","line":"long long llrint (arithmetic x);"},
{"lineNum":"  224","line":"long long llrintf(float x);"},
{"lineNum":"  225","line":"long long llrintl(long double x);"},
{"lineNum":"  226","line":""},
{"lineNum":"  227","line":"long long llround (arithmetic x);"},
{"lineNum":"  228","line":"long long llroundf(float x);"},
{"lineNum":"  229","line":"long long llroundl(long double x);"},
{"lineNum":"  230","line":""},
{"lineNum":"  231","line":"floating_point log1p (arithmetic x);"},
{"lineNum":"  232","line":"float          log1pf(float x);"},
{"lineNum":"  233","line":"long double    log1pl(long double x);"},
{"lineNum":"  234","line":""},
{"lineNum":"  235","line":"floating_point log2 (arithmetic x);"},
{"lineNum":"  236","line":"float          log2f(float x);"},
{"lineNum":"  237","line":"long double    log2l(long double x);"},
{"lineNum":"  238","line":""},
{"lineNum":"  239","line":"floating_point logb (arithmetic x);"},
{"lineNum":"  240","line":"float          logbf(float x);"},
{"lineNum":"  241","line":"long double    logbl(long double x);"},
{"lineNum":"  242","line":""},
{"lineNum":"  243","line":"long lrint (arithmetic x);"},
{"lineNum":"  244","line":"long lrintf(float x);"},
{"lineNum":"  245","line":"long lrintl(long double x);"},
{"lineNum":"  246","line":""},
{"lineNum":"  247","line":"long lround (arithmetic x);"},
{"lineNum":"  248","line":"long lroundf(float x);"},
{"lineNum":"  249","line":"long lroundl(long double x);"},
{"lineNum":"  250","line":""},
{"lineNum":"  251","line":"double      nan (const char* str);"},
{"lineNum":"  252","line":"float       nanf(const char* str);"},
{"lineNum":"  253","line":"long double nanl(const char* str);"},
{"lineNum":"  254","line":""},
{"lineNum":"  255","line":"floating_point nearbyint (arithmetic x);"},
{"lineNum":"  256","line":"float          nearbyintf(float x);"},
{"lineNum":"  257","line":"long double    nearbyintl(long double x);"},
{"lineNum":"  258","line":""},
{"lineNum":"  259","line":"floating_point nextafter (arithmetic x, arithmetic y);"},
{"lineNum":"  260","line":"float          nextafterf(float x, float y);"},
{"lineNum":"  261","line":"long double    nextafterl(long double x, long double y);"},
{"lineNum":"  262","line":""},
{"lineNum":"  263","line":"floating_point nexttoward (arithmetic x, long double y);"},
{"lineNum":"  264","line":"float          nexttowardf(float x, long double y);"},
{"lineNum":"  265","line":"long double    nexttowardl(long double x, long double y);"},
{"lineNum":"  266","line":""},
{"lineNum":"  267","line":"floating_point remainder (arithmetic x, arithmetic y);"},
{"lineNum":"  268","line":"float          remainderf(float x, float y);"},
{"lineNum":"  269","line":"long double    remainderl(long double x, long double y);"},
{"lineNum":"  270","line":""},
{"lineNum":"  271","line":"floating_point remquo (arithmetic x, arithmetic y, int* pquo);"},
{"lineNum":"  272","line":"float          remquof(float x, float y, int* pquo);"},
{"lineNum":"  273","line":"long double    remquol(long double x, long double y, int* pquo);"},
{"lineNum":"  274","line":""},
{"lineNum":"  275","line":"floating_point rint (arithmetic x);"},
{"lineNum":"  276","line":"float          rintf(float x);"},
{"lineNum":"  277","line":"long double    rintl(long double x);"},
{"lineNum":"  278","line":""},
{"lineNum":"  279","line":"floating_point round (arithmetic x);"},
{"lineNum":"  280","line":"float          roundf(float x);"},
{"lineNum":"  281","line":"long double    roundl(long double x);"},
{"lineNum":"  282","line":""},
{"lineNum":"  283","line":"floating_point scalbln (arithmetic x, long ex);"},
{"lineNum":"  284","line":"float          scalblnf(float x, long ex);"},
{"lineNum":"  285","line":"long double    scalblnl(long double x, long ex);"},
{"lineNum":"  286","line":""},
{"lineNum":"  287","line":"floating_point scalbn (arithmetic x, int ex);"},
{"lineNum":"  288","line":"float          scalbnf(float x, int ex);"},
{"lineNum":"  289","line":"long double    scalbnl(long double x, int ex);"},
{"lineNum":"  290","line":""},
{"lineNum":"  291","line":"floating_point tgamma (arithmetic x);"},
{"lineNum":"  292","line":"float          tgammaf(float x);"},
{"lineNum":"  293","line":"long double    tgammal(long double x);"},
{"lineNum":"  294","line":""},
{"lineNum":"  295","line":"floating_point trunc (arithmetic x);"},
{"lineNum":"  296","line":"float          truncf(float x);"},
{"lineNum":"  297","line":"long double    truncl(long double x);"},
{"lineNum":"  298","line":""},
{"lineNum":"  299","line":"constexpr float       lerp(float a, float b, float t) noexcept;                   // C++20"},
{"lineNum":"  300","line":"constexpr double      lerp(double a, double b, double t) noexcept;                // C++20"},
{"lineNum":"  301","line":"constexpr long double lerp(long double a, long double b, long double t) noexcept; // C++20"},
{"lineNum":"  302","line":""},
{"lineNum":"  303","line":"}  // std"},
{"lineNum":"  304","line":""},
{"lineNum":"  305","line":"*/"},
{"lineNum":"  306","line":""},
{"lineNum":"  307","line":"#include <__config>"},
{"lineNum":"  308","line":"#include <math.h>"},
{"lineNum":"  309","line":"#include <version>"},
{"lineNum":"  310","line":"#include <type_traits>"},
{"lineNum":"  311","line":""},
{"lineNum":"  312","line":"#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)"},
{"lineNum":"  313","line":"#pragma GCC system_header"},
{"lineNum":"  314","line":"#endif"},
{"lineNum":"  315","line":""},
{"lineNum":"  316","line":"_LIBCPP_PUSH_MACROS"},
{"lineNum":"  317","line":"#include <__undef_macros>"},
{"lineNum":"  318","line":""},
{"lineNum":"  319","line":"_LIBCPP_BEGIN_NAMESPACE_STD"},
{"lineNum":"  320","line":""},
{"lineNum":"  321","line":"using ::signbit _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  322","line":"using ::fpclassify _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  323","line":"using ::isfinite _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  324","line":"using ::isinf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  325","line":"using ::isnan _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  326","line":"using ::isnormal _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  327","line":"using ::isgreater _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  328","line":"using ::isgreaterequal _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  329","line":"using ::isless _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  330","line":"using ::islessequal _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  331","line":"using ::islessgreater _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  332","line":"using ::isunordered _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  333","line":"using ::isunordered _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  334","line":""},
{"lineNum":"  335","line":"using ::float_t _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  336","line":"using ::double_t _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  337","line":""},
{"lineNum":"  338","line":"using ::abs _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  339","line":""},
{"lineNum":"  340","line":"using ::acos _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  341","line":"using ::acosf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  342","line":"using ::asin _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  343","line":"using ::asinf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  344","line":"using ::atan _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  345","line":"using ::atanf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  346","line":"using ::atan2 _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  347","line":"using ::atan2f _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  348","line":"using ::ceil _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  349","line":"using ::ceilf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  350","line":"using ::cos _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  351","line":"using ::cosf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  352","line":"using ::cosh _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  353","line":"using ::coshf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  354","line":""},
{"lineNum":"  355","line":"using ::exp _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  356","line":"using ::expf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  357","line":""},
{"lineNum":"  358","line":"using ::fabs _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  359","line":"using ::fabsf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  360","line":"using ::floor _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  361","line":"using ::floorf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  362","line":""},
{"lineNum":"  363","line":"using ::fmod _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  364","line":"using ::fmodf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  365","line":""},
{"lineNum":"  366","line":"using ::frexp _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  367","line":"using ::frexpf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  368","line":"using ::ldexp _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  369","line":"using ::ldexpf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  370","line":""},
{"lineNum":"  371","line":"using ::log _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  372","line":"using ::logf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  373","line":""},
{"lineNum":"  374","line":"using ::log10 _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  375","line":"using ::log10f _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  376","line":"using ::modf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  377","line":"using ::modff _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  378","line":""},
{"lineNum":"  379","line":"using ::pow _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  380","line":"using ::powf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  381","line":""},
{"lineNum":"  382","line":"using ::sin _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  383","line":"using ::sinf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  384","line":"using ::sinh _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  385","line":"using ::sinhf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  386","line":""},
{"lineNum":"  387","line":"using ::sqrt _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  388","line":"using ::sqrtf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  389","line":"using ::tan _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  390","line":"using ::tanf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  391","line":""},
{"lineNum":"  392","line":"using ::tanh _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  393","line":"using ::tanhf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  394","line":""},
{"lineNum":"  395","line":"using ::acosh _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  396","line":"using ::acoshf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  397","line":"using ::asinh _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  398","line":"using ::asinhf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  399","line":"using ::atanh _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  400","line":"using ::atanhf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  401","line":"using ::cbrt _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  402","line":"using ::cbrtf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  403","line":""},
{"lineNum":"  404","line":"using ::copysign _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  405","line":"using ::copysignf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  406","line":""},
{"lineNum":"  407","line":"using ::erf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  408","line":"using ::erff _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  409","line":"using ::erfc _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  410","line":"using ::erfcf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  411","line":"using ::exp2 _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  412","line":"using ::exp2f _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  413","line":"using ::expm1 _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  414","line":"using ::expm1f _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  415","line":"using ::fdim _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  416","line":"using ::fdimf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  417","line":"using ::fmaf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  418","line":"using ::fma _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  419","line":"using ::fmax _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  420","line":"using ::fmaxf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  421","line":"using ::fmin _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  422","line":"using ::fminf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  423","line":"using ::hypot _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  424","line":"using ::hypotf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  425","line":"using ::ilogb _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  426","line":"using ::ilogbf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  427","line":"using ::lgamma _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  428","line":"using ::lgammaf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  429","line":"using ::llrint _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  430","line":"using ::llrintf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  431","line":"using ::llround _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  432","line":"using ::llroundf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  433","line":"using ::log1p _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  434","line":"using ::log1pf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  435","line":"using ::log2 _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  436","line":"using ::log2f _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  437","line":"using ::logb _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  438","line":"using ::logbf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  439","line":"using ::lrint _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  440","line":"using ::lrintf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  441","line":"using ::lround _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  442","line":"using ::lroundf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  443","line":""},
{"lineNum":"  444","line":"using ::nan _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  445","line":"using ::nanf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  446","line":""},
{"lineNum":"  447","line":"using ::nearbyint _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  448","line":"using ::nearbyintf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  449","line":"using ::nextafter _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  450","line":"using ::nextafterf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  451","line":"using ::nexttoward _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  452","line":"using ::nexttowardf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  453","line":"using ::remainder _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  454","line":"using ::remainderf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  455","line":"using ::remquo _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  456","line":"using ::remquof _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  457","line":"using ::rint _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  458","line":"using ::rintf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  459","line":"using ::round _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  460","line":"using ::roundf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  461","line":"using ::scalbln _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  462","line":"using ::scalblnf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  463","line":"using ::scalbn _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  464","line":"using ::scalbnf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  465","line":"using ::tgamma _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  466","line":"using ::tgammaf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  467","line":"using ::trunc _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  468","line":"using ::truncf _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  469","line":""},
{"lineNum":"  470","line":"using ::acosl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  471","line":"using ::asinl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  472","line":"using ::atanl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  473","line":"using ::atan2l _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  474","line":"using ::ceill _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  475","line":"using ::cosl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  476","line":"using ::coshl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  477","line":"using ::expl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  478","line":"using ::fabsl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  479","line":"using ::floorl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  480","line":"using ::fmodl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  481","line":"using ::frexpl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  482","line":"using ::ldexpl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  483","line":"using ::logl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  484","line":"using ::log10l _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  485","line":"using ::modfl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  486","line":"using ::powl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  487","line":"using ::sinl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  488","line":"using ::sinhl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  489","line":"using ::sqrtl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  490","line":"using ::tanl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  491","line":""},
{"lineNum":"  492","line":"using ::tanhl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  493","line":"using ::acoshl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  494","line":"using ::asinhl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  495","line":"using ::atanhl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  496","line":"using ::cbrtl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  497","line":""},
{"lineNum":"  498","line":"using ::copysignl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  499","line":""},
{"lineNum":"  500","line":"using ::erfl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  501","line":"using ::erfcl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  502","line":"using ::exp2l _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  503","line":"using ::expm1l _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  504","line":"using ::fdiml _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  505","line":"using ::fmal _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  506","line":"using ::fmaxl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  507","line":"using ::fminl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  508","line":"using ::hypotl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  509","line":"using ::ilogbl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  510","line":"using ::lgammal _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  511","line":"using ::llrintl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  512","line":"using ::llroundl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  513","line":"using ::log1pl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  514","line":"using ::log2l _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  515","line":"using ::logbl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  516","line":"using ::lrintl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  517","line":"using ::lroundl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  518","line":"using ::nanl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  519","line":"using ::nearbyintl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  520","line":"using ::nextafterl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  521","line":"using ::nexttowardl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  522","line":"using ::remainderl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  523","line":"using ::remquol _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  524","line":"using ::rintl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  525","line":"using ::roundl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  526","line":"using ::scalblnl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  527","line":"using ::scalbnl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  528","line":"using ::tgammal _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  529","line":"using ::truncl _LIBCPP_USING_IF_EXISTS;"},
{"lineNum":"  530","line":""},
{"lineNum":"  531","line":"#if _LIBCPP_STD_VER > 14"},
{"lineNum":"  532","line":"inline _LIBCPP_INLINE_VISIBILITY float       hypot(       float x,       float y,       float z ) { return sqrt(x*x + y*y + z*z); }"},
{"lineNum":"  533","line":"inline _LIBCPP_INLINE_VISIBILITY double      hypot(      double x,      double y,      double z ) { return sqrt(x*x + y*y + z*z); }"},
{"lineNum":"  534","line":"inline _LIBCPP_INLINE_VISIBILITY long double hypot( long double x, long double y, long double z ) { return sqrt(x*x + y*y + z*z); }"},
{"lineNum":"  535","line":""},
{"lineNum":"  536","line":"template <class _A1, class _A2, class _A3>"},
{"lineNum":"  537","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  538","line":"typename _EnableIf"},
{"lineNum":"  539","line":"<"},
{"lineNum":"  540","line":"    is_arithmetic<_A1>::value &&"},
{"lineNum":"  541","line":"    is_arithmetic<_A2>::value &&"},
{"lineNum":"  542","line":"    is_arithmetic<_A3>::value,"},
{"lineNum":"  543","line":"    __promote<_A1, _A2, _A3>"},
{"lineNum":"  544","line":">::type"},
{"lineNum":"  545","line":"hypot(_A1 __lcpp_x, _A2 __lcpp_y, _A3 __lcpp_z) _NOEXCEPT"},
{"lineNum":"  546","line":"{"},
{"lineNum":"  547","line":"    typedef typename __promote<_A1, _A2, _A3>::type __result_type;"},
{"lineNum":"  548","line":"    static_assert((!(is_same<_A1, __result_type>::value &&"},
{"lineNum":"  549","line":"                     is_same<_A2, __result_type>::value &&"},
{"lineNum":"  550","line":"                     is_same<_A3, __result_type>::value)), \"\");"},
{"lineNum":"  551","line":"    return hypot((__result_type)__lcpp_x, (__result_type)__lcpp_y, (__result_type)__lcpp_z);"},
{"lineNum":"  552","line":"}"},
{"lineNum":"  553","line":"#endif"},
{"lineNum":"  554","line":""},
{"lineNum":"  555","line":"template <class _A1>"},
{"lineNum":"  556","line":"_LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  557","line":"_LIBCPP_CONSTEXPR typename enable_if<is_floating_point<_A1>::value, bool>::type"},
{"lineNum":"  558","line":"__libcpp_isnan_or_builtin(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":"  559","line":"{"},
{"lineNum":"  560","line":"#if __has_builtin(__builtin_isnan)"},
{"lineNum":"  561","line":"    return __builtin_isnan(__lcpp_x);","class":"lineNoCov","hits":"0","possible_hits":"9",},
{"lineNum":"  562","line":"#else"},
{"lineNum":"  563","line":"    return isnan(__lcpp_x);"},
{"lineNum":"  564","line":"#endif"},
{"lineNum":"  565","line":"}"},
{"lineNum":"  566","line":""},
{"lineNum":"  567","line":"template <class _A1>"},
{"lineNum":"  568","line":"_LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  569","line":"_LIBCPP_CONSTEXPR typename enable_if<!is_floating_point<_A1>::value, bool>::type"},
{"lineNum":"  570","line":"__libcpp_isnan_or_builtin(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":"  571","line":"{"},
{"lineNum":"  572","line":"    return isnan(__lcpp_x);"},
{"lineNum":"  573","line":"}"},
{"lineNum":"  574","line":""},
{"lineNum":"  575","line":"template <class _A1>"},
{"lineNum":"  576","line":"_LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  577","line":"_LIBCPP_CONSTEXPR typename enable_if<is_floating_point<_A1>::value, bool>::type"},
{"lineNum":"  578","line":"__libcpp_isinf_or_builtin(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":"  579","line":"{"},
{"lineNum":"  580","line":"#if __has_builtin(__builtin_isinf)"},
{"lineNum":"  581","line":"    return __builtin_isinf(__lcpp_x);","class":"lineNoCov","hits":"0","possible_hits":"9",},
{"lineNum":"  582","line":"#else"},
{"lineNum":"  583","line":"    return isinf(__lcpp_x);"},
{"lineNum":"  584","line":"#endif"},
{"lineNum":"  585","line":"}"},
{"lineNum":"  586","line":""},
{"lineNum":"  587","line":"template <class _A1>"},
{"lineNum":"  588","line":"_LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  589","line":"_LIBCPP_CONSTEXPR typename enable_if<!is_floating_point<_A1>::value, bool>::type"},
{"lineNum":"  590","line":"__libcpp_isinf_or_builtin(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":"  591","line":"{"},
{"lineNum":"  592","line":"    return isinf(__lcpp_x);"},
{"lineNum":"  593","line":"}"},
{"lineNum":"  594","line":""},
{"lineNum":"  595","line":"template <class _A1>"},
{"lineNum":"  596","line":"_LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  597","line":"_LIBCPP_CONSTEXPR typename enable_if<is_floating_point<_A1>::value, bool>::type"},
{"lineNum":"  598","line":"__libcpp_isfinite_or_builtin(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":"  599","line":"{"},
{"lineNum":"  600","line":"#if __has_builtin(__builtin_isfinite)"},
{"lineNum":"  601","line":"    return __builtin_isfinite(__lcpp_x);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  602","line":"#else"},
{"lineNum":"  603","line":"    return isfinite(__lcpp_x);"},
{"lineNum":"  604","line":"#endif"},
{"lineNum":"  605","line":"}"},
{"lineNum":"  606","line":""},
{"lineNum":"  607","line":"template <class _A1>"},
{"lineNum":"  608","line":"_LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  609","line":"_LIBCPP_CONSTEXPR typename enable_if<!is_floating_point<_A1>::value, bool>::type"},
{"lineNum":"  610","line":"__libcpp_isfinite_or_builtin(_A1 __lcpp_x) _NOEXCEPT"},
{"lineNum":"  611","line":"{"},
{"lineNum":"  612","line":"    return isfinite(__lcpp_x);"},
{"lineNum":"  613","line":"}"},
{"lineNum":"  614","line":""},
{"lineNum":"  615","line":"#if _LIBCPP_STD_VER > 17"},
{"lineNum":"  616","line":"template <typename _Fp>"},
{"lineNum":"  617","line":"constexpr"},
{"lineNum":"  618","line":"_Fp __lerp(_Fp __a, _Fp __b, _Fp __t) noexcept {"},
{"lineNum":"  619","line":"    if ((__a <= 0 && __b >= 0) || (__a >= 0 && __b <= 0))"},
{"lineNum":"  620","line":"        return __t * __b + (1 - __t) * __a;"},
{"lineNum":"  621","line":""},
{"lineNum":"  622","line":"    if (__t == 1) return __b;"},
{"lineNum":"  623","line":"    const _Fp __x = __a + __t * (__b - __a);"},
{"lineNum":"  624","line":"    if ((__t > 1) == (__b > __a))"},
{"lineNum":"  625","line":"        return __b < __x ? __x : __b;"},
{"lineNum":"  626","line":"    else"},
{"lineNum":"  627","line":"        return __x < __b ? __x : __b;"},
{"lineNum":"  628","line":"}"},
{"lineNum":"  629","line":""},
{"lineNum":"  630","line":"constexpr float"},
{"lineNum":"  631","line":"lerp(float __a, float __b, float __t)                   _NOEXCEPT { return __lerp(__a, __b, __t); }"},
{"lineNum":"  632","line":""},
{"lineNum":"  633","line":"constexpr double"},
{"lineNum":"  634","line":"lerp(double __a, double __b, double __t)                _NOEXCEPT { return __lerp(__a, __b, __t); }"},
{"lineNum":"  635","line":""},
{"lineNum":"  636","line":"constexpr long double"},
{"lineNum":"  637","line":"lerp(long double __a, long double __b, long double __t) _NOEXCEPT { return __lerp(__a, __b, __t); }"},
{"lineNum":"  638","line":""},
{"lineNum":"  639","line":"#endif // _LIBCPP_STD_VER > 17"},
{"lineNum":"  640","line":""},
{"lineNum":"  641","line":"template <class _IntT, class _FloatT,"},
{"lineNum":"  642","line":"    bool _FloatBigger = (numeric_limits<_FloatT>::digits > numeric_limits<_IntT>::digits),"},
{"lineNum":"  643","line":"    int _Bits = (numeric_limits<_IntT>::digits - numeric_limits<_FloatT>::digits)>"},
{"lineNum":"  644","line":"_LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  645","line":"_LIBCPP_CONSTEXPR _IntT __max_representable_int_for_float() _NOEXCEPT {"},
{"lineNum":"  646","line":"  static_assert(is_floating_point<_FloatT>::value, \"must be a floating point type\");"},
{"lineNum":"  647","line":"  static_assert(is_integral<_IntT>::value, \"must be an integral type\");"},
{"lineNum":"  648","line":"  static_assert(numeric_limits<_FloatT>::radix == 2, \"FloatT has incorrect radix\");"},
{"lineNum":"  649","line":"  static_assert((_IsSame<_FloatT, float>::value || _IsSame<_FloatT, double>::value"},
{"lineNum":"  650","line":"                 || _IsSame<_FloatT,long double>::value), \"unsupported floating point type\");"},
{"lineNum":"  651","line":"  return _FloatBigger ? numeric_limits<_IntT>::max() :  (numeric_limits<_IntT>::max() >> _Bits << _Bits);"},
{"lineNum":"  652","line":"}"},
{"lineNum":"  653","line":""},
{"lineNum":"  654","line":"// Convert a floating point number to the specified integral type after"},
{"lineNum":"  655","line":"// clamping to the integral types representable range."},
{"lineNum":"  656","line":"//"},
{"lineNum":"  657","line":"// The behavior is undefined if `__r` is NaN."},
{"lineNum":"  658","line":"template <class _IntT, class _RealT>"},
{"lineNum":"  659","line":"_LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  660","line":"_IntT __clamp_to_integral(_RealT __r) _NOEXCEPT {"},
{"lineNum":"  661","line":"  using _Lim = numeric_limits<_IntT>;"},
{"lineNum":"  662","line":"  const _IntT _MaxVal = __max_representable_int_for_float<_IntT, _RealT>();"},
{"lineNum":"  663","line":"  if (__r >= ::nextafter(static_cast<_RealT>(_MaxVal), INFINITY)) {"},
{"lineNum":"  664","line":"    return _Lim::max();"},
{"lineNum":"  665","line":"  } else if (__r <= _Lim::lowest()) {"},
{"lineNum":"  666","line":"    return _Lim::min();"},
{"lineNum":"  667","line":"  }"},
{"lineNum":"  668","line":"  return static_cast<_IntT>(__r);"},
{"lineNum":"  669","line":"}"},
{"lineNum":"  670","line":""},
{"lineNum":"  671","line":"_LIBCPP_END_NAMESPACE_STD"},
{"lineNum":"  672","line":""},
{"lineNum":"  673","line":"_LIBCPP_POP_MACROS"},
{"lineNum":"  674","line":""},
{"lineNum":"  675","line":"#endif // _LIBCPP_CMATH"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 3, "covered" : 0,};
var merged_data = [];
