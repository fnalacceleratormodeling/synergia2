var data = {lines:[
{"lineNum":"    1","line":"// -*- C++ -*-"},
{"lineNum":"    2","line":"//===--------------------------- random -----------------------------------===//"},
{"lineNum":"    3","line":"//"},
{"lineNum":"    4","line":"// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions."},
{"lineNum":"    5","line":"// See https://llvm.org/LICENSE.txt for license information."},
{"lineNum":"    6","line":"// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception"},
{"lineNum":"    7","line":"//"},
{"lineNum":"    8","line":"//===----------------------------------------------------------------------===//"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"#ifndef _LIBCPP_RANDOM"},
{"lineNum":"   11","line":"#define _LIBCPP_RANDOM"},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"/*"},
{"lineNum":"   14","line":"    random synopsis"},
{"lineNum":"   15","line":""},
{"lineNum":"   16","line":"#include <initializer_list>"},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"namespace std"},
{"lineNum":"   19","line":"{"},
{"lineNum":"   20","line":"// [rand.req.urng], uniform random bit generator requirements"},
{"lineNum":"   21","line":"template<class G>"},
{"lineNum":"   22","line":"concept uniform_random_bit_generator = see below; // C++20"},
{"lineNum":"   23","line":""},
{"lineNum":"   24","line":"// Engines"},
{"lineNum":"   25","line":""},
{"lineNum":"   26","line":"template <class UIntType, UIntType a, UIntType c, UIntType m>"},
{"lineNum":"   27","line":"class linear_congruential_engine"},
{"lineNum":"   28","line":"{"},
{"lineNum":"   29","line":"public:"},
{"lineNum":"   30","line":"    // types"},
{"lineNum":"   31","line":"    typedef UIntType result_type;"},
{"lineNum":"   32","line":""},
{"lineNum":"   33","line":"    // engine characteristics"},
{"lineNum":"   34","line":"    static constexpr result_type multiplier = a;"},
{"lineNum":"   35","line":"    static constexpr result_type increment = c;"},
{"lineNum":"   36","line":"    static constexpr result_type modulus = m;"},
{"lineNum":"   37","line":"    static constexpr result_type min() { return c == 0u ? 1u: 0u;}"},
{"lineNum":"   38","line":"    static constexpr result_type max() { return m - 1u;}"},
{"lineNum":"   39","line":"    static constexpr result_type default_seed = 1u;"},
{"lineNum":"   40","line":""},
{"lineNum":"   41","line":"    // constructors and seeding functions"},
{"lineNum":"   42","line":"    explicit linear_congruential_engine(result_type s = default_seed);         // before C++20"},
{"lineNum":"   43","line":"    linear_congruential_engine() : linear_congruential_engine(default_seed) {} // C++20"},
{"lineNum":"   44","line":"    explicit linear_congruential_engine(result_type s);                        // C++20"},
{"lineNum":"   45","line":"    template<class Sseq> explicit linear_congruential_engine(Sseq& q);"},
{"lineNum":"   46","line":"    void seed(result_type s = default_seed);"},
{"lineNum":"   47","line":"    template<class Sseq> void seed(Sseq& q);"},
{"lineNum":"   48","line":""},
{"lineNum":"   49","line":"    // generating functions"},
{"lineNum":"   50","line":"    result_type operator()();"},
{"lineNum":"   51","line":"    void discard(unsigned long long z);"},
{"lineNum":"   52","line":"};"},
{"lineNum":"   53","line":""},
{"lineNum":"   54","line":"template <class UIntType, UIntType a, UIntType c, UIntType m>"},
{"lineNum":"   55","line":"bool"},
{"lineNum":"   56","line":"operator==(const linear_congruential_engine<UIntType, a, c, m>& x,"},
{"lineNum":"   57","line":"           const linear_congruential_engine<UIntType, a, c, m>& y);"},
{"lineNum":"   58","line":""},
{"lineNum":"   59","line":"template <class UIntType, UIntType a, UIntType c, UIntType m>"},
{"lineNum":"   60","line":"bool"},
{"lineNum":"   61","line":"operator!=(const linear_congruential_engine<UIntType, a, c, m>& x,"},
{"lineNum":"   62","line":"           const linear_congruential_engine<UIntType, a, c, m>& y);"},
{"lineNum":"   63","line":""},
{"lineNum":"   64","line":"template <class charT, class traits,"},
{"lineNum":"   65","line":"          class UIntType, UIntType a, UIntType c, UIntType m>"},
{"lineNum":"   66","line":"basic_ostream<charT, traits>&"},
{"lineNum":"   67","line":"operator<<(basic_ostream<charT, traits>& os,"},
{"lineNum":"   68","line":"           const linear_congruential_engine<UIntType, a, c, m>& x);"},
{"lineNum":"   69","line":""},
{"lineNum":"   70","line":"template <class charT, class traits,"},
{"lineNum":"   71","line":"          class UIntType, UIntType a, UIntType c, UIntType m>"},
{"lineNum":"   72","line":"basic_istream<charT, traits>&"},
{"lineNum":"   73","line":"operator>>(basic_istream<charT, traits>& is,"},
{"lineNum":"   74","line":"           linear_congruential_engine<UIntType, a, c, m>& x);"},
{"lineNum":"   75","line":""},
{"lineNum":"   76","line":"template <class UIntType, size_t w, size_t n, size_t m, size_t r,"},
{"lineNum":"   77","line":"          UIntType a, size_t u, UIntType d, size_t s,"},
{"lineNum":"   78","line":"          UIntType b, size_t t, UIntType c, size_t l, UIntType f>"},
{"lineNum":"   79","line":"class mersenne_twister_engine"},
{"lineNum":"   80","line":"{"},
{"lineNum":"   81","line":"public:"},
{"lineNum":"   82","line":"    // types"},
{"lineNum":"   83","line":"    typedef UIntType result_type;"},
{"lineNum":"   84","line":""},
{"lineNum":"   85","line":"    // engine characteristics"},
{"lineNum":"   86","line":"    static constexpr size_t word_size = w;"},
{"lineNum":"   87","line":"    static constexpr size_t state_size = n;"},
{"lineNum":"   88","line":"    static constexpr size_t shift_size = m;"},
{"lineNum":"   89","line":"    static constexpr size_t mask_bits = r;"},
{"lineNum":"   90","line":"    static constexpr result_type xor_mask = a;"},
{"lineNum":"   91","line":"    static constexpr size_t tempering_u = u;"},
{"lineNum":"   92","line":"    static constexpr result_type tempering_d = d;"},
{"lineNum":"   93","line":"    static constexpr size_t tempering_s = s;"},
{"lineNum":"   94","line":"    static constexpr result_type tempering_b = b;"},
{"lineNum":"   95","line":"    static constexpr size_t tempering_t = t;"},
{"lineNum":"   96","line":"    static constexpr result_type tempering_c = c;"},
{"lineNum":"   97","line":"    static constexpr size_t tempering_l = l;"},
{"lineNum":"   98","line":"    static constexpr result_type initialization_multiplier = f;"},
{"lineNum":"   99","line":"    static constexpr result_type min () { return 0; }"},
{"lineNum":"  100","line":"    static constexpr result_type max() { return 2^w - 1; }"},
{"lineNum":"  101","line":"    static constexpr result_type default_seed = 5489u;"},
{"lineNum":"  102","line":""},
{"lineNum":"  103","line":"    // constructors and seeding functions"},
{"lineNum":"  104","line":"    explicit mersenne_twister_engine(result_type s = default_seed);      // before C++20"},
{"lineNum":"  105","line":"    mersenne_twister_engine() : mersenne_twister_engine(default_seed) {} // C++20"},
{"lineNum":"  106","line":"    explicit mersenne_twister_engine(result_type s);                     // C++20"},
{"lineNum":"  107","line":"    template<class Sseq> explicit mersenne_twister_engine(Sseq& q);"},
{"lineNum":"  108","line":"    void seed(result_type value = default_seed);"},
{"lineNum":"  109","line":"    template<class Sseq> void seed(Sseq& q);"},
{"lineNum":"  110","line":""},
{"lineNum":"  111","line":"    // generating functions"},
{"lineNum":"  112","line":"    result_type operator()();"},
{"lineNum":"  113","line":"    void discard(unsigned long long z);"},
{"lineNum":"  114","line":"};"},
{"lineNum":"  115","line":""},
{"lineNum":"  116","line":"template <class UIntType, size_t w, size_t n, size_t m, size_t r,"},
{"lineNum":"  117","line":"          UIntType a, size_t u, UIntType d, size_t s,"},
{"lineNum":"  118","line":"          UIntType b, size_t t, UIntType c, size_t l, UIntType f>"},
{"lineNum":"  119","line":"bool"},
{"lineNum":"  120","line":"operator==("},
{"lineNum":"  121","line":"    const mersenne_twister_engine<UIntType, w, n, m, r, a, u, d, s, b, t, c, l, f>& x,"},
{"lineNum":"  122","line":"    const mersenne_twister_engine<UIntType, w, n, m, r, a, u, d, s, b, t, c, l, f>& y);"},
{"lineNum":"  123","line":""},
{"lineNum":"  124","line":"template <class UIntType, size_t w, size_t n, size_t m, size_t r,"},
{"lineNum":"  125","line":"          UIntType a, size_t u, UIntType d, size_t s,"},
{"lineNum":"  126","line":"          UIntType b, size_t t, UIntType c, size_t l, UIntType f>"},
{"lineNum":"  127","line":"bool"},
{"lineNum":"  128","line":"operator!=("},
{"lineNum":"  129","line":"    const mersenne_twister_engine<UIntType, w, n, m, r, a, u, d, s, b, t, c, l, f>& x,"},
{"lineNum":"  130","line":"    const mersenne_twister_engine<UIntType, w, n, m, r, a, u, d, s, b, t, c, l, f>& y);"},
{"lineNum":"  131","line":""},
{"lineNum":"  132","line":"template <class charT, class traits,"},
{"lineNum":"  133","line":"          class UIntType, size_t w, size_t n, size_t m, size_t r,"},
{"lineNum":"  134","line":"          UIntType a, size_t u, UIntType d, size_t s,"},
{"lineNum":"  135","line":"          UIntType b, size_t t, UIntType c, size_t l, UIntType f>"},
{"lineNum":"  136","line":"basic_ostream<charT, traits>&"},
{"lineNum":"  137","line":"operator<<(basic_ostream<charT, traits>& os,"},
{"lineNum":"  138","line":"           const mersenne_twister_engine<UIntType, w, n, m, r, a, u, d, s, b, t, c, l, f>& x);"},
{"lineNum":"  139","line":""},
{"lineNum":"  140","line":"template <class charT, class traits,"},
{"lineNum":"  141","line":"          class UIntType, size_t w, size_t n, size_t m, size_t r,"},
{"lineNum":"  142","line":"          UIntType a, size_t u, UIntType d, size_t s,"},
{"lineNum":"  143","line":"          UIntType b, size_t t, UIntType c, size_t l, UIntType f>"},
{"lineNum":"  144","line":"basic_istream<charT, traits>&"},
{"lineNum":"  145","line":"operator>>(basic_istream<charT, traits>& is,"},
{"lineNum":"  146","line":"           mersenne_twister_engine<UIntType, w, n, m, r, a, u, d, s, b, t, c, l, f>& x);"},
{"lineNum":"  147","line":""},
{"lineNum":"  148","line":"template<class UIntType, size_t w, size_t s, size_t r>"},
{"lineNum":"  149","line":"class subtract_with_carry_engine"},
{"lineNum":"  150","line":"{"},
{"lineNum":"  151","line":"public:"},
{"lineNum":"  152","line":"    // types"},
{"lineNum":"  153","line":"    typedef UIntType result_type;"},
{"lineNum":"  154","line":""},
{"lineNum":"  155","line":"    // engine characteristics"},
{"lineNum":"  156","line":"    static constexpr size_t word_size = w;"},
{"lineNum":"  157","line":"    static constexpr size_t short_lag = s;"},
{"lineNum":"  158","line":"    static constexpr size_t long_lag = r;"},
{"lineNum":"  159","line":"    static constexpr result_type min() { return 0; }"},
{"lineNum":"  160","line":"    static constexpr result_type max() { return m-1; }"},
{"lineNum":"  161","line":"    static constexpr result_type default_seed = 19780503u;"},
{"lineNum":"  162","line":""},
{"lineNum":"  163","line":"    // constructors and seeding functions"},
{"lineNum":"  164","line":"    explicit subtract_with_carry_engine(result_type value = default_seed);     // before C++20"},
{"lineNum":"  165","line":"    subtract_with_carry_engine() : subtract_with_carry_engine(default_seed) {} // C++20"},
{"lineNum":"  166","line":"    explicit subtract_with_carry_engine(result_type value);                    // C++20"},
{"lineNum":"  167","line":"    template<class Sseq> explicit subtract_with_carry_engine(Sseq& q);"},
{"lineNum":"  168","line":"    void seed(result_type value = default_seed);"},
{"lineNum":"  169","line":"    template<class Sseq> void seed(Sseq& q);"},
{"lineNum":"  170","line":""},
{"lineNum":"  171","line":"    // generating functions"},
{"lineNum":"  172","line":"    result_type operator()();"},
{"lineNum":"  173","line":"    void discard(unsigned long long z);"},
{"lineNum":"  174","line":"};"},
{"lineNum":"  175","line":""},
{"lineNum":"  176","line":"template<class UIntType, size_t w, size_t s, size_t r>"},
{"lineNum":"  177","line":"bool"},
{"lineNum":"  178","line":"operator==("},
{"lineNum":"  179","line":"    const subtract_with_carry_engine<UIntType, w, s, r>& x,"},
{"lineNum":"  180","line":"    const subtract_with_carry_engine<UIntType, w, s, r>& y);"},
{"lineNum":"  181","line":""},
{"lineNum":"  182","line":"template<class UIntType, size_t w, size_t s, size_t r>"},
{"lineNum":"  183","line":"bool"},
{"lineNum":"  184","line":"operator!=("},
{"lineNum":"  185","line":"    const subtract_with_carry_engine<UIntType, w, s, r>& x,"},
{"lineNum":"  186","line":"    const subtract_with_carry_engine<UIntType, w, s, r>& y);"},
{"lineNum":"  187","line":""},
{"lineNum":"  188","line":"template <class charT, class traits,"},
{"lineNum":"  189","line":"          class UIntType, size_t w, size_t s, size_t r>"},
{"lineNum":"  190","line":"basic_ostream<charT, traits>&"},
{"lineNum":"  191","line":"operator<<(basic_ostream<charT, traits>& os,"},
{"lineNum":"  192","line":"           const subtract_with_carry_engine<UIntType, w, s, r>& x);"},
{"lineNum":"  193","line":""},
{"lineNum":"  194","line":"template <class charT, class traits,"},
{"lineNum":"  195","line":"          class UIntType, size_t w, size_t s, size_t r>"},
{"lineNum":"  196","line":"basic_istream<charT, traits>&"},
{"lineNum":"  197","line":"operator>>(basic_istream<charT, traits>& is,"},
{"lineNum":"  198","line":"           subtract_with_carry_engine<UIntType, w, s, r>& x);"},
{"lineNum":"  199","line":""},
{"lineNum":"  200","line":"template<class Engine, size_t p, size_t r>"},
{"lineNum":"  201","line":"class discard_block_engine"},
{"lineNum":"  202","line":"{"},
{"lineNum":"  203","line":"public:"},
{"lineNum":"  204","line":"    // types"},
{"lineNum":"  205","line":"    typedef typename Engine::result_type result_type;"},
{"lineNum":"  206","line":""},
{"lineNum":"  207","line":"    // engine characteristics"},
{"lineNum":"  208","line":"    static constexpr size_t block_size = p;"},
{"lineNum":"  209","line":"    static constexpr size_t used_block = r;"},
{"lineNum":"  210","line":"    static constexpr result_type min() { return Engine::min(); }"},
{"lineNum":"  211","line":"    static constexpr result_type max() { return Engine::max(); }"},
{"lineNum":"  212","line":""},
{"lineNum":"  213","line":"    // constructors and seeding functions"},
{"lineNum":"  214","line":"    discard_block_engine();"},
{"lineNum":"  215","line":"    explicit discard_block_engine(const Engine& e);"},
{"lineNum":"  216","line":"    explicit discard_block_engine(Engine&& e);"},
{"lineNum":"  217","line":"    explicit discard_block_engine(result_type s);"},
{"lineNum":"  218","line":"    template<class Sseq> explicit discard_block_engine(Sseq& q);"},
{"lineNum":"  219","line":"    void seed();"},
{"lineNum":"  220","line":"    void seed(result_type s);"},
{"lineNum":"  221","line":"    template<class Sseq> void seed(Sseq& q);"},
{"lineNum":"  222","line":""},
{"lineNum":"  223","line":"    // generating functions"},
{"lineNum":"  224","line":"    result_type operator()();"},
{"lineNum":"  225","line":"    void discard(unsigned long long z);"},
{"lineNum":"  226","line":""},
{"lineNum":"  227","line":"    // property functions"},
{"lineNum":"  228","line":"    const Engine& base() const noexcept;"},
{"lineNum":"  229","line":"};"},
{"lineNum":"  230","line":""},
{"lineNum":"  231","line":"template<class Engine, size_t p, size_t r>"},
{"lineNum":"  232","line":"bool"},
{"lineNum":"  233","line":"operator==("},
{"lineNum":"  234","line":"    const discard_block_engine<Engine, p, r>& x,"},
{"lineNum":"  235","line":"    const discard_block_engine<Engine, p, r>& y);"},
{"lineNum":"  236","line":""},
{"lineNum":"  237","line":"template<class Engine, size_t p, size_t r>"},
{"lineNum":"  238","line":"bool"},
{"lineNum":"  239","line":"operator!=("},
{"lineNum":"  240","line":"    const discard_block_engine<Engine, p, r>& x,"},
{"lineNum":"  241","line":"    const discard_block_engine<Engine, p, r>& y);"},
{"lineNum":"  242","line":""},
{"lineNum":"  243","line":"template <class charT, class traits,"},
{"lineNum":"  244","line":"          class Engine, size_t p, size_t r>"},
{"lineNum":"  245","line":"basic_ostream<charT, traits>&"},
{"lineNum":"  246","line":"operator<<(basic_ostream<charT, traits>& os,"},
{"lineNum":"  247","line":"           const discard_block_engine<Engine, p, r>& x);"},
{"lineNum":"  248","line":""},
{"lineNum":"  249","line":"template <class charT, class traits,"},
{"lineNum":"  250","line":"          class Engine, size_t p, size_t r>"},
{"lineNum":"  251","line":"basic_istream<charT, traits>&"},
{"lineNum":"  252","line":"operator>>(basic_istream<charT, traits>& is,"},
{"lineNum":"  253","line":"           discard_block_engine<Engine, p, r>& x);"},
{"lineNum":"  254","line":""},
{"lineNum":"  255","line":"template<class Engine, size_t w, class UIntType>"},
{"lineNum":"  256","line":"class independent_bits_engine"},
{"lineNum":"  257","line":"{"},
{"lineNum":"  258","line":"public:"},
{"lineNum":"  259","line":"    // types"},
{"lineNum":"  260","line":"    typedef UIntType result_type;"},
{"lineNum":"  261","line":""},
{"lineNum":"  262","line":"    // engine characteristics"},
{"lineNum":"  263","line":"    static constexpr result_type min() { return 0; }"},
{"lineNum":"  264","line":"    static constexpr result_type max() { return 2^w - 1; }"},
{"lineNum":"  265","line":""},
{"lineNum":"  266","line":"    // constructors and seeding functions"},
{"lineNum":"  267","line":"    independent_bits_engine();"},
{"lineNum":"  268","line":"    explicit independent_bits_engine(const Engine& e);"},
{"lineNum":"  269","line":"    explicit independent_bits_engine(Engine&& e);"},
{"lineNum":"  270","line":"    explicit independent_bits_engine(result_type s);"},
{"lineNum":"  271","line":"    template<class Sseq> explicit independent_bits_engine(Sseq& q);"},
{"lineNum":"  272","line":"    void seed();"},
{"lineNum":"  273","line":"    void seed(result_type s);"},
{"lineNum":"  274","line":"    template<class Sseq> void seed(Sseq& q);"},
{"lineNum":"  275","line":""},
{"lineNum":"  276","line":"    // generating functions"},
{"lineNum":"  277","line":"    result_type operator()(); void discard(unsigned long long z);"},
{"lineNum":"  278","line":""},
{"lineNum":"  279","line":"    // property functions"},
{"lineNum":"  280","line":"    const Engine& base() const noexcept;"},
{"lineNum":"  281","line":"};"},
{"lineNum":"  282","line":""},
{"lineNum":"  283","line":"template<class Engine, size_t w, class UIntType>"},
{"lineNum":"  284","line":"bool"},
{"lineNum":"  285","line":"operator==("},
{"lineNum":"  286","line":"    const independent_bits_engine<Engine, w, UIntType>& x,"},
{"lineNum":"  287","line":"    const independent_bits_engine<Engine, w, UIntType>& y);"},
{"lineNum":"  288","line":""},
{"lineNum":"  289","line":"template<class Engine, size_t w, class UIntType>"},
{"lineNum":"  290","line":"bool"},
{"lineNum":"  291","line":"operator!=("},
{"lineNum":"  292","line":"    const independent_bits_engine<Engine, w, UIntType>& x,"},
{"lineNum":"  293","line":"    const independent_bits_engine<Engine, w, UIntType>& y);"},
{"lineNum":"  294","line":""},
{"lineNum":"  295","line":"template <class charT, class traits,"},
{"lineNum":"  296","line":"          class Engine, size_t w, class UIntType>"},
{"lineNum":"  297","line":"basic_ostream<charT, traits>&"},
{"lineNum":"  298","line":"operator<<(basic_ostream<charT, traits>& os,"},
{"lineNum":"  299","line":"           const independent_bits_engine<Engine, w, UIntType>& x);"},
{"lineNum":"  300","line":""},
{"lineNum":"  301","line":"template <class charT, class traits,"},
{"lineNum":"  302","line":"          class Engine, size_t w, class UIntType>"},
{"lineNum":"  303","line":"basic_istream<charT, traits>&"},
{"lineNum":"  304","line":"operator>>(basic_istream<charT, traits>& is,"},
{"lineNum":"  305","line":"           independent_bits_engine<Engine, w, UIntType>& x);"},
{"lineNum":"  306","line":""},
{"lineNum":"  307","line":"template<class Engine, size_t k>"},
{"lineNum":"  308","line":"class shuffle_order_engine"},
{"lineNum":"  309","line":"{"},
{"lineNum":"  310","line":"public:"},
{"lineNum":"  311","line":"    // types"},
{"lineNum":"  312","line":"    typedef typename Engine::result_type result_type;"},
{"lineNum":"  313","line":""},
{"lineNum":"  314","line":"    // engine characteristics"},
{"lineNum":"  315","line":"    static constexpr size_t table_size = k;"},
{"lineNum":"  316","line":"    static constexpr result_type min() { return Engine::min; }"},
{"lineNum":"  317","line":"    static constexpr result_type max() { return Engine::max; }"},
{"lineNum":"  318","line":""},
{"lineNum":"  319","line":"    // constructors and seeding functions"},
{"lineNum":"  320","line":"    shuffle_order_engine();"},
{"lineNum":"  321","line":"    explicit shuffle_order_engine(const Engine& e);"},
{"lineNum":"  322","line":"    explicit shuffle_order_engine(Engine&& e);"},
{"lineNum":"  323","line":"    explicit shuffle_order_engine(result_type s);"},
{"lineNum":"  324","line":"    template<class Sseq> explicit shuffle_order_engine(Sseq& q);"},
{"lineNum":"  325","line":"    void seed();"},
{"lineNum":"  326","line":"    void seed(result_type s);"},
{"lineNum":"  327","line":"    template<class Sseq> void seed(Sseq& q);"},
{"lineNum":"  328","line":""},
{"lineNum":"  329","line":"    // generating functions"},
{"lineNum":"  330","line":"    result_type operator()();"},
{"lineNum":"  331","line":"    void discard(unsigned long long z);"},
{"lineNum":"  332","line":""},
{"lineNum":"  333","line":"    // property functions"},
{"lineNum":"  334","line":"    const Engine& base() const noexcept;"},
{"lineNum":"  335","line":"};"},
{"lineNum":"  336","line":""},
{"lineNum":"  337","line":"template<class Engine, size_t k>"},
{"lineNum":"  338","line":"bool"},
{"lineNum":"  339","line":"operator==("},
{"lineNum":"  340","line":"    const shuffle_order_engine<Engine, k>& x,"},
{"lineNum":"  341","line":"    const shuffle_order_engine<Engine, k>& y);"},
{"lineNum":"  342","line":""},
{"lineNum":"  343","line":"template<class Engine, size_t k>"},
{"lineNum":"  344","line":"bool"},
{"lineNum":"  345","line":"operator!=("},
{"lineNum":"  346","line":"    const shuffle_order_engine<Engine, k>& x,"},
{"lineNum":"  347","line":"    const shuffle_order_engine<Engine, k>& y);"},
{"lineNum":"  348","line":""},
{"lineNum":"  349","line":"template <class charT, class traits,"},
{"lineNum":"  350","line":"          class Engine, size_t k>"},
{"lineNum":"  351","line":"basic_ostream<charT, traits>&"},
{"lineNum":"  352","line":"operator<<(basic_ostream<charT, traits>& os,"},
{"lineNum":"  353","line":"           const shuffle_order_engine<Engine, k>& x);"},
{"lineNum":"  354","line":""},
{"lineNum":"  355","line":"template <class charT, class traits,"},
{"lineNum":"  356","line":"          class Engine, size_t k>"},
{"lineNum":"  357","line":"basic_istream<charT, traits>&"},
{"lineNum":"  358","line":"operator>>(basic_istream<charT, traits>& is,"},
{"lineNum":"  359","line":"           shuffle_order_engine<Engine, k>& x);"},
{"lineNum":"  360","line":""},
{"lineNum":"  361","line":"typedef linear_congruential_engine<uint_fast32_t, 16807, 0, 2147483647>"},
{"lineNum":"  362","line":"                                                                   minstd_rand0;"},
{"lineNum":"  363","line":"typedef linear_congruential_engine<uint_fast32_t, 48271, 0, 2147483647>"},
{"lineNum":"  364","line":"                                                                    minstd_rand;"},
{"lineNum":"  365","line":"typedef mersenne_twister_engine<uint_fast32_t, 32, 624, 397, 31,"},
{"lineNum":"  366","line":"                                0x9908b0df,"},
{"lineNum":"  367","line":"                                11, 0xffffffff,"},
{"lineNum":"  368","line":"                                7,  0x9d2c5680,"},
{"lineNum":"  369","line":"                                15, 0xefc60000,"},
{"lineNum":"  370","line":"                                18, 1812433253>                         mt19937;"},
{"lineNum":"  371","line":"typedef mersenne_twister_engine<uint_fast64_t, 64, 312, 156, 31,"},
{"lineNum":"  372","line":"                                0xb5026f5aa96619e9,"},
{"lineNum":"  373","line":"                                29, 0x5555555555555555,"},
{"lineNum":"  374","line":"                                17, 0x71d67fffeda60000,"},
{"lineNum":"  375","line":"                                37, 0xfff7eee000000000,"},
{"lineNum":"  376","line":"                                43, 6364136223846793005>             mt19937_64;"},
{"lineNum":"  377","line":"typedef subtract_with_carry_engine<uint_fast32_t, 24, 10, 24>     ranlux24_base;"},
{"lineNum":"  378","line":"typedef subtract_with_carry_engine<uint_fast64_t, 48,  5, 12>     ranlux48_base;"},
{"lineNum":"  379","line":"typedef discard_block_engine<ranlux24_base, 223, 23>                   ranlux24;"},
{"lineNum":"  380","line":"typedef discard_block_engine<ranlux48_base, 389, 11>                   ranlux48;"},
{"lineNum":"  381","line":"typedef shuffle_order_engine<minstd_rand0, 256>                         knuth_b;"},
{"lineNum":"  382","line":"typedef minstd_rand                                       default_random_engine;"},
{"lineNum":"  383","line":""},
{"lineNum":"  384","line":"// Generators"},
{"lineNum":"  385","line":""},
{"lineNum":"  386","line":"class random_device"},
{"lineNum":"  387","line":"{"},
{"lineNum":"  388","line":"public:"},
{"lineNum":"  389","line":"    // types"},
{"lineNum":"  390","line":"    typedef unsigned int result_type;"},
{"lineNum":"  391","line":""},
{"lineNum":"  392","line":"    // generator characteristics"},
{"lineNum":"  393","line":"    static constexpr result_type min() { return numeric_limits<result_type>::min(); }"},
{"lineNum":"  394","line":"    static constexpr result_type max() { return numeric_limits<result_type>::max(); }"},
{"lineNum":"  395","line":""},
{"lineNum":"  396","line":"    // constructors"},
{"lineNum":"  397","line":"    explicit random_device(const string& token = implementation-defined); // before C++20"},
{"lineNum":"  398","line":"    random_device() : random_device(implementation-defined) {}            // C++20"},
{"lineNum":"  399","line":"    explicit random_device(const string& token);                          // C++20"},
{"lineNum":"  400","line":""},
{"lineNum":"  401","line":"    // generating functions"},
{"lineNum":"  402","line":"    result_type operator()();"},
{"lineNum":"  403","line":""},
{"lineNum":"  404","line":"    // property functions"},
{"lineNum":"  405","line":"    double entropy() const noexcept;"},
{"lineNum":"  406","line":""},
{"lineNum":"  407","line":"    // no copy functions"},
{"lineNum":"  408","line":"    random_device(const random_device& ) = delete;"},
{"lineNum":"  409","line":"    void operator=(const random_device& ) = delete;"},
{"lineNum":"  410","line":"};"},
{"lineNum":"  411","line":""},
{"lineNum":"  412","line":"// Utilities"},
{"lineNum":"  413","line":""},
{"lineNum":"  414","line":"class seed_seq"},
{"lineNum":"  415","line":"{"},
{"lineNum":"  416","line":"public:"},
{"lineNum":"  417","line":"    // types"},
{"lineNum":"  418","line":"    typedef uint_least32_t result_type;"},
{"lineNum":"  419","line":""},
{"lineNum":"  420","line":"    // constructors"},
{"lineNum":"  421","line":"    seed_seq();"},
{"lineNum":"  422","line":"    template<class T>"},
{"lineNum":"  423","line":"        seed_seq(initializer_list<T> il);"},
{"lineNum":"  424","line":"    template<class InputIterator>"},
{"lineNum":"  425","line":"        seed_seq(InputIterator begin, InputIterator end);"},
{"lineNum":"  426","line":""},
{"lineNum":"  427","line":"    // generating functions"},
{"lineNum":"  428","line":"    template<class RandomAccessIterator>"},
{"lineNum":"  429","line":"        void generate(RandomAccessIterator begin, RandomAccessIterator end);"},
{"lineNum":"  430","line":""},
{"lineNum":"  431","line":"    // property functions"},
{"lineNum":"  432","line":"    size_t size() const;"},
{"lineNum":"  433","line":"    template<class OutputIterator>"},
{"lineNum":"  434","line":"        void param(OutputIterator dest) const;"},
{"lineNum":"  435","line":""},
{"lineNum":"  436","line":"    // no copy functions"},
{"lineNum":"  437","line":"    seed_seq(const seed_seq&) = delete;"},
{"lineNum":"  438","line":"    void operator=(const seed_seq& ) = delete;"},
{"lineNum":"  439","line":"};"},
{"lineNum":"  440","line":""},
{"lineNum":"  441","line":"template<class RealType, size_t bits, class URNG>"},
{"lineNum":"  442","line":"    RealType generate_canonical(URNG& g);"},
{"lineNum":"  443","line":""},
{"lineNum":"  444","line":"// Distributions"},
{"lineNum":"  445","line":""},
{"lineNum":"  446","line":"template<class IntType = int>"},
{"lineNum":"  447","line":"class uniform_int_distribution"},
{"lineNum":"  448","line":"{"},
{"lineNum":"  449","line":"public:"},
{"lineNum":"  450","line":"    // types"},
{"lineNum":"  451","line":"    typedef IntType result_type;"},
{"lineNum":"  452","line":""},
{"lineNum":"  453","line":"    class param_type"},
{"lineNum":"  454","line":"    {"},
{"lineNum":"  455","line":"    public:"},
{"lineNum":"  456","line":"        typedef uniform_int_distribution distribution_type;"},
{"lineNum":"  457","line":""},
{"lineNum":"  458","line":"        explicit param_type(IntType a = 0,"},
{"lineNum":"  459","line":"                                    IntType b = numeric_limits<IntType>::max());"},
{"lineNum":"  460","line":""},
{"lineNum":"  461","line":"        result_type a() const;"},
{"lineNum":"  462","line":"        result_type b() const;"},
{"lineNum":"  463","line":""},
{"lineNum":"  464","line":"        friend bool operator==(const param_type& x, const param_type& y);"},
{"lineNum":"  465","line":"        friend bool operator!=(const param_type& x, const param_type& y);"},
{"lineNum":"  466","line":"    };"},
{"lineNum":"  467","line":""},
{"lineNum":"  468","line":"    // constructors and reset functions"},
{"lineNum":"  469","line":"    explicit uniform_int_distribution(IntType a = 0,"},
{"lineNum":"  470","line":"                                      IntType b = numeric_limits<IntType>::max()); // before C++20"},
{"lineNum":"  471","line":"    uniform_int_distribution() : uniform_int_distribution(0) {}                    // C++20"},
{"lineNum":"  472","line":"    explicit uniform_int_distribution(IntType a,"},
{"lineNum":"  473","line":"                                      IntType b = numeric_limits<IntType>::max()); // C++20"},
{"lineNum":"  474","line":"    explicit uniform_int_distribution(const param_type& parm);"},
{"lineNum":"  475","line":"    void reset();"},
{"lineNum":"  476","line":""},
{"lineNum":"  477","line":"    // generating functions"},
{"lineNum":"  478","line":"    template<class URNG> result_type operator()(URNG& g);"},
{"lineNum":"  479","line":"    template<class URNG> result_type operator()(URNG& g, const param_type& parm);"},
{"lineNum":"  480","line":""},
{"lineNum":"  481","line":"    // property functions"},
{"lineNum":"  482","line":"    result_type a() const;"},
{"lineNum":"  483","line":"    result_type b() const;"},
{"lineNum":"  484","line":""},
{"lineNum":"  485","line":"    param_type param() const;"},
{"lineNum":"  486","line":"    void param(const param_type& parm);"},
{"lineNum":"  487","line":""},
{"lineNum":"  488","line":"    result_type min() const;"},
{"lineNum":"  489","line":"    result_type max() const;"},
{"lineNum":"  490","line":""},
{"lineNum":"  491","line":"    friend bool operator==(const uniform_int_distribution& x,"},
{"lineNum":"  492","line":"                           const uniform_int_distribution& y);"},
{"lineNum":"  493","line":"    friend bool operator!=(const uniform_int_distribution& x,"},
{"lineNum":"  494","line":"                           const uniform_int_distribution& y);"},
{"lineNum":"  495","line":""},
{"lineNum":"  496","line":"    template <class charT, class traits>"},
{"lineNum":"  497","line":"    friend"},
{"lineNum":"  498","line":"    basic_ostream<charT, traits>&"},
{"lineNum":"  499","line":"    operator<<(basic_ostream<charT, traits>& os,"},
{"lineNum":"  500","line":"               const uniform_int_distribution& x);"},
{"lineNum":"  501","line":""},
{"lineNum":"  502","line":"    template <class charT, class traits>"},
{"lineNum":"  503","line":"    friend"},
{"lineNum":"  504","line":"    basic_istream<charT, traits>&"},
{"lineNum":"  505","line":"    operator>>(basic_istream<charT, traits>& is,"},
{"lineNum":"  506","line":"               uniform_int_distribution& x);"},
{"lineNum":"  507","line":"};"},
{"lineNum":"  508","line":""},
{"lineNum":"  509","line":"template<class RealType = double>"},
{"lineNum":"  510","line":"class uniform_real_distribution"},
{"lineNum":"  511","line":"{"},
{"lineNum":"  512","line":"public:"},
{"lineNum":"  513","line":"    // types"},
{"lineNum":"  514","line":"    typedef RealType result_type;"},
{"lineNum":"  515","line":""},
{"lineNum":"  516","line":"    class param_type"},
{"lineNum":"  517","line":"    {"},
{"lineNum":"  518","line":"    public:"},
{"lineNum":"  519","line":"        typedef uniform_real_distribution distribution_type;"},
{"lineNum":"  520","line":""},
{"lineNum":"  521","line":"        explicit param_type(RealType a = 0,"},
{"lineNum":"  522","line":"                            RealType b = 1);"},
{"lineNum":"  523","line":""},
{"lineNum":"  524","line":"        result_type a() const;"},
{"lineNum":"  525","line":"        result_type b() const;"},
{"lineNum":"  526","line":""},
{"lineNum":"  527","line":"        friend bool operator==(const param_type& x, const param_type& y);"},
{"lineNum":"  528","line":"        friend bool operator!=(const param_type& x, const param_type& y);"},
{"lineNum":"  529","line":"    };"},
{"lineNum":"  530","line":""},
{"lineNum":"  531","line":"    // constructors and reset functions"},
{"lineNum":"  532","line":"    explicit uniform_real_distribution(RealType a = 0.0, RealType b = 1.0); // before C++20"},
{"lineNum":"  533","line":"    uniform_real_distribution() : uniform_real_distribution(0.0) {}         // C++20"},
{"lineNum":"  534","line":"    explicit uniform_real_distribution(RealType a, RealType b = 1.0);       // C++20"},
{"lineNum":"  535","line":"    explicit uniform_real_distribution(const param_type& parm);"},
{"lineNum":"  536","line":"    void reset();"},
{"lineNum":"  537","line":""},
{"lineNum":"  538","line":"    // generating functions"},
{"lineNum":"  539","line":"    template<class URNG> result_type operator()(URNG& g);"},
{"lineNum":"  540","line":"    template<class URNG> result_type operator()(URNG& g, const param_type& parm);"},
{"lineNum":"  541","line":""},
{"lineNum":"  542","line":"    // property functions"},
{"lineNum":"  543","line":"    result_type a() const;"},
{"lineNum":"  544","line":"    result_type b() const;"},
{"lineNum":"  545","line":""},
{"lineNum":"  546","line":"    param_type param() const;"},
{"lineNum":"  547","line":"    void param(const param_type& parm);"},
{"lineNum":"  548","line":""},
{"lineNum":"  549","line":"    result_type min() const;"},
{"lineNum":"  550","line":"    result_type max() const;"},
{"lineNum":"  551","line":""},
{"lineNum":"  552","line":"    friend bool operator==(const uniform_real_distribution& x,"},
{"lineNum":"  553","line":"                           const uniform_real_distribution& y);"},
{"lineNum":"  554","line":"    friend bool operator!=(const uniform_real_distribution& x,"},
{"lineNum":"  555","line":"                           const uniform_real_distribution& y);"},
{"lineNum":"  556","line":""},
{"lineNum":"  557","line":"    template <class charT, class traits>"},
{"lineNum":"  558","line":"    friend"},
{"lineNum":"  559","line":"    basic_ostream<charT, traits>&"},
{"lineNum":"  560","line":"    operator<<(basic_ostream<charT, traits>& os,"},
{"lineNum":"  561","line":"               const uniform_real_distribution& x);"},
{"lineNum":"  562","line":""},
{"lineNum":"  563","line":"    template <class charT, class traits>"},
{"lineNum":"  564","line":"    friend"},
{"lineNum":"  565","line":"    basic_istream<charT, traits>&"},
{"lineNum":"  566","line":"    operator>>(basic_istream<charT, traits>& is,"},
{"lineNum":"  567","line":"               uniform_real_distribution& x);"},
{"lineNum":"  568","line":"};"},
{"lineNum":"  569","line":""},
{"lineNum":"  570","line":"class bernoulli_distribution"},
{"lineNum":"  571","line":"{"},
{"lineNum":"  572","line":"public:"},
{"lineNum":"  573","line":"    // types"},
{"lineNum":"  574","line":"    typedef bool result_type;"},
{"lineNum":"  575","line":""},
{"lineNum":"  576","line":"    class param_type"},
{"lineNum":"  577","line":"    {"},
{"lineNum":"  578","line":"    public:"},
{"lineNum":"  579","line":"        typedef bernoulli_distribution distribution_type;"},
{"lineNum":"  580","line":""},
{"lineNum":"  581","line":"        explicit param_type(double p = 0.5);"},
{"lineNum":"  582","line":""},
{"lineNum":"  583","line":"        double p() const;"},
{"lineNum":"  584","line":""},
{"lineNum":"  585","line":"        friend bool operator==(const param_type& x, const param_type& y);"},
{"lineNum":"  586","line":"        friend bool operator!=(const param_type& x, const param_type& y);"},
{"lineNum":"  587","line":"    };"},
{"lineNum":"  588","line":""},
{"lineNum":"  589","line":"    // constructors and reset functions"},
{"lineNum":"  590","line":"    explicit bernoulli_distribution(double p = 0.5);          // before C++20"},
{"lineNum":"  591","line":"    bernoulli_distribution() : bernoulli_distribution(0.5) {} // C++20"},
{"lineNum":"  592","line":"    explicit bernoulli_distribution(double p);                // C++20"},
{"lineNum":"  593","line":"    explicit bernoulli_distribution(const param_type& parm);"},
{"lineNum":"  594","line":"    void reset();"},
{"lineNum":"  595","line":""},
{"lineNum":"  596","line":"    // generating functions"},
{"lineNum":"  597","line":"    template<class URNG> result_type operator()(URNG& g);"},
{"lineNum":"  598","line":"    template<class URNG> result_type operator()(URNG& g, const param_type& parm);"},
{"lineNum":"  599","line":""},
{"lineNum":"  600","line":"    // property functions"},
{"lineNum":"  601","line":"    double p() const;"},
{"lineNum":"  602","line":""},
{"lineNum":"  603","line":"    param_type param() const;"},
{"lineNum":"  604","line":"    void param(const param_type& parm);"},
{"lineNum":"  605","line":""},
{"lineNum":"  606","line":"    result_type min() const;"},
{"lineNum":"  607","line":"    result_type max() const;"},
{"lineNum":"  608","line":""},
{"lineNum":"  609","line":"    friend bool operator==(const bernoulli_distribution& x,"},
{"lineNum":"  610","line":"                           const bernoulli_distribution& y);"},
{"lineNum":"  611","line":"    friend bool operator!=(const bernoulli_distribution& x,"},
{"lineNum":"  612","line":"                           const bernoulli_distribution& y);"},
{"lineNum":"  613","line":""},
{"lineNum":"  614","line":"    template <class charT, class traits>"},
{"lineNum":"  615","line":"    friend"},
{"lineNum":"  616","line":"    basic_ostream<charT, traits>&"},
{"lineNum":"  617","line":"    operator<<(basic_ostream<charT, traits>& os,"},
{"lineNum":"  618","line":"               const bernoulli_distribution& x);"},
{"lineNum":"  619","line":""},
{"lineNum":"  620","line":"    template <class charT, class traits>"},
{"lineNum":"  621","line":"    friend"},
{"lineNum":"  622","line":"    basic_istream<charT, traits>&"},
{"lineNum":"  623","line":"    operator>>(basic_istream<charT, traits>& is,"},
{"lineNum":"  624","line":"               bernoulli_distribution& x);"},
{"lineNum":"  625","line":"};"},
{"lineNum":"  626","line":""},
{"lineNum":"  627","line":"template<class IntType = int>"},
{"lineNum":"  628","line":"class binomial_distribution"},
{"lineNum":"  629","line":"{"},
{"lineNum":"  630","line":"public:"},
{"lineNum":"  631","line":"    // types"},
{"lineNum":"  632","line":"    typedef IntType result_type;"},
{"lineNum":"  633","line":""},
{"lineNum":"  634","line":"    class param_type"},
{"lineNum":"  635","line":"    {"},
{"lineNum":"  636","line":"    public:"},
{"lineNum":"  637","line":"        typedef binomial_distribution distribution_type;"},
{"lineNum":"  638","line":""},
{"lineNum":"  639","line":"        explicit param_type(IntType t = 1, double p = 0.5);"},
{"lineNum":"  640","line":""},
{"lineNum":"  641","line":"        IntType t() const;"},
{"lineNum":"  642","line":"        double p() const;"},
{"lineNum":"  643","line":""},
{"lineNum":"  644","line":"        friend bool operator==(const param_type& x, const param_type& y);"},
{"lineNum":"  645","line":"        friend bool operator!=(const param_type& x, const param_type& y);"},
{"lineNum":"  646","line":"    };"},
{"lineNum":"  647","line":""},
{"lineNum":"  648","line":"    // constructors and reset functions"},
{"lineNum":"  649","line":"    explicit binomial_distribution(IntType t = 1, double p = 0.5); // before C++20"},
{"lineNum":"  650","line":"    binomial_distribution() : binomial_distribution(1) {}          // C++20"},
{"lineNum":"  651","line":"    explicit binomial_distribution(IntType t, double p = 0.5);     // C++20"},
{"lineNum":"  652","line":"    explicit binomial_distribution(const param_type& parm);"},
{"lineNum":"  653","line":"    void reset();"},
{"lineNum":"  654","line":""},
{"lineNum":"  655","line":"    // generating functions"},
{"lineNum":"  656","line":"    template<class URNG> result_type operator()(URNG& g);"},
{"lineNum":"  657","line":"    template<class URNG> result_type operator()(URNG& g, const param_type& parm);"},
{"lineNum":"  658","line":""},
{"lineNum":"  659","line":"    // property functions"},
{"lineNum":"  660","line":"    IntType t() const;"},
{"lineNum":"  661","line":"    double p() const;"},
{"lineNum":"  662","line":""},
{"lineNum":"  663","line":"    param_type param() const;"},
{"lineNum":"  664","line":"    void param(const param_type& parm);"},
{"lineNum":"  665","line":""},
{"lineNum":"  666","line":"    result_type min() const;"},
{"lineNum":"  667","line":"    result_type max() const;"},
{"lineNum":"  668","line":""},
{"lineNum":"  669","line":"    friend bool operator==(const binomial_distribution& x,"},
{"lineNum":"  670","line":"                           const binomial_distribution& y);"},
{"lineNum":"  671","line":"    friend bool operator!=(const binomial_distribution& x,"},
{"lineNum":"  672","line":"                           const binomial_distribution& y);"},
{"lineNum":"  673","line":""},
{"lineNum":"  674","line":"    template <class charT, class traits>"},
{"lineNum":"  675","line":"    friend"},
{"lineNum":"  676","line":"    basic_ostream<charT, traits>&"},
{"lineNum":"  677","line":"    operator<<(basic_ostream<charT, traits>& os,"},
{"lineNum":"  678","line":"               const binomial_distribution& x);"},
{"lineNum":"  679","line":""},
{"lineNum":"  680","line":"    template <class charT, class traits>"},
{"lineNum":"  681","line":"    friend"},
{"lineNum":"  682","line":"    basic_istream<charT, traits>&"},
{"lineNum":"  683","line":"    operator>>(basic_istream<charT, traits>& is,"},
{"lineNum":"  684","line":"               binomial_distribution& x);"},
{"lineNum":"  685","line":"};"},
{"lineNum":"  686","line":""},
{"lineNum":"  687","line":"template<class IntType = int>"},
{"lineNum":"  688","line":"class geometric_distribution"},
{"lineNum":"  689","line":"{"},
{"lineNum":"  690","line":"public:"},
{"lineNum":"  691","line":"    // types"},
{"lineNum":"  692","line":"    typedef IntType result_type;"},
{"lineNum":"  693","line":""},
{"lineNum":"  694","line":"    class param_type"},
{"lineNum":"  695","line":"    {"},
{"lineNum":"  696","line":"    public:"},
{"lineNum":"  697","line":"        typedef geometric_distribution distribution_type;"},
{"lineNum":"  698","line":""},
{"lineNum":"  699","line":"        explicit param_type(double p = 0.5);"},
{"lineNum":"  700","line":""},
{"lineNum":"  701","line":"        double p() const;"},
{"lineNum":"  702","line":""},
{"lineNum":"  703","line":"        friend bool operator==(const param_type& x, const param_type& y);"},
{"lineNum":"  704","line":"        friend bool operator!=(const param_type& x, const param_type& y);"},
{"lineNum":"  705","line":"    };"},
{"lineNum":"  706","line":""},
{"lineNum":"  707","line":"    // constructors and reset functions"},
{"lineNum":"  708","line":"    explicit geometric_distribution(double p = 0.5);          // before C++20"},
{"lineNum":"  709","line":"    geometric_distribution() : geometric_distribution(0.5) {} // C++20"},
{"lineNum":"  710","line":"    explicit geometric_distribution(double p);                // C++20"},
{"lineNum":"  711","line":"    explicit geometric_distribution(const param_type& parm);"},
{"lineNum":"  712","line":"    void reset();"},
{"lineNum":"  713","line":""},
{"lineNum":"  714","line":"    // generating functions"},
{"lineNum":"  715","line":"    template<class URNG> result_type operator()(URNG& g);"},
{"lineNum":"  716","line":"    template<class URNG> result_type operator()(URNG& g, const param_type& parm);"},
{"lineNum":"  717","line":""},
{"lineNum":"  718","line":"    // property functions"},
{"lineNum":"  719","line":"    double p() const;"},
{"lineNum":"  720","line":""},
{"lineNum":"  721","line":"    param_type param() const;"},
{"lineNum":"  722","line":"    void param(const param_type& parm);"},
{"lineNum":"  723","line":""},
{"lineNum":"  724","line":"    result_type min() const;"},
{"lineNum":"  725","line":"    result_type max() const;"},
{"lineNum":"  726","line":""},
{"lineNum":"  727","line":"    friend bool operator==(const geometric_distribution& x,"},
{"lineNum":"  728","line":"                           const geometric_distribution& y);"},
{"lineNum":"  729","line":"    friend bool operator!=(const geometric_distribution& x,"},
{"lineNum":"  730","line":"                           const geometric_distribution& y);"},
{"lineNum":"  731","line":""},
{"lineNum":"  732","line":"    template <class charT, class traits>"},
{"lineNum":"  733","line":"    friend"},
{"lineNum":"  734","line":"    basic_ostream<charT, traits>&"},
{"lineNum":"  735","line":"    operator<<(basic_ostream<charT, traits>& os,"},
{"lineNum":"  736","line":"               const geometric_distribution& x);"},
{"lineNum":"  737","line":""},
{"lineNum":"  738","line":"    template <class charT, class traits>"},
{"lineNum":"  739","line":"    friend"},
{"lineNum":"  740","line":"    basic_istream<charT, traits>&"},
{"lineNum":"  741","line":"    operator>>(basic_istream<charT, traits>& is,"},
{"lineNum":"  742","line":"               geometric_distribution& x);"},
{"lineNum":"  743","line":"};"},
{"lineNum":"  744","line":""},
{"lineNum":"  745","line":"template<class IntType = int>"},
{"lineNum":"  746","line":"class negative_binomial_distribution"},
{"lineNum":"  747","line":"{"},
{"lineNum":"  748","line":"public:"},
{"lineNum":"  749","line":"    // types"},
{"lineNum":"  750","line":"    typedef IntType result_type;"},
{"lineNum":"  751","line":""},
{"lineNum":"  752","line":"    class param_type"},
{"lineNum":"  753","line":"    {"},
{"lineNum":"  754","line":"    public:"},
{"lineNum":"  755","line":"        typedef negative_binomial_distribution distribution_type;"},
{"lineNum":"  756","line":""},
{"lineNum":"  757","line":"        explicit param_type(result_type k = 1, double p = 0.5);"},
{"lineNum":"  758","line":""},
{"lineNum":"  759","line":"        result_type k() const;"},
{"lineNum":"  760","line":"        double p() const;"},
{"lineNum":"  761","line":""},
{"lineNum":"  762","line":"        friend bool operator==(const param_type& x, const param_type& y);"},
{"lineNum":"  763","line":"        friend bool operator!=(const param_type& x, const param_type& y);"},
{"lineNum":"  764","line":"    };"},
{"lineNum":"  765","line":""},
{"lineNum":"  766","line":"    // constructor and reset functions"},
{"lineNum":"  767","line":"    explicit negative_binomial_distribution(IntType k = 1, double p = 0.5); // before C++20"},
{"lineNum":"  768","line":"    negative_binomial_distribution() : negative_binomial_distribution(1) {} // C++20"},
{"lineNum":"  769","line":"    explicit negative_binomial_distribution(IntType k, double p = 0.5);     // C++20"},
{"lineNum":"  770","line":"    explicit negative_binomial_distribution(const param_type& parm);"},
{"lineNum":"  771","line":"    void reset();"},
{"lineNum":"  772","line":""},
{"lineNum":"  773","line":"    // generating functions"},
{"lineNum":"  774","line":"    template<class URNG> result_type operator()(URNG& g);"},
{"lineNum":"  775","line":"    template<class URNG> result_type operator()(URNG& g, const param_type& parm);"},
{"lineNum":"  776","line":""},
{"lineNum":"  777","line":"    // property functions"},
{"lineNum":"  778","line":"    result_type k() const;"},
{"lineNum":"  779","line":"    double p() const;"},
{"lineNum":"  780","line":""},
{"lineNum":"  781","line":"    param_type param() const;"},
{"lineNum":"  782","line":"    void param(const param_type& parm);"},
{"lineNum":"  783","line":""},
{"lineNum":"  784","line":"    result_type min() const;"},
{"lineNum":"  785","line":"    result_type max() const;"},
{"lineNum":"  786","line":""},
{"lineNum":"  787","line":"    friend bool operator==(const negative_binomial_distribution& x,"},
{"lineNum":"  788","line":"                           const negative_binomial_distribution& y);"},
{"lineNum":"  789","line":"    friend bool operator!=(const negative_binomial_distribution& x,"},
{"lineNum":"  790","line":"                           const negative_binomial_distribution& y);"},
{"lineNum":"  791","line":""},
{"lineNum":"  792","line":"    template <class charT, class traits>"},
{"lineNum":"  793","line":"    friend"},
{"lineNum":"  794","line":"    basic_ostream<charT, traits>&"},
{"lineNum":"  795","line":"    operator<<(basic_ostream<charT, traits>& os,"},
{"lineNum":"  796","line":"               const negative_binomial_distribution& x);"},
{"lineNum":"  797","line":""},
{"lineNum":"  798","line":"    template <class charT, class traits>"},
{"lineNum":"  799","line":"    friend"},
{"lineNum":"  800","line":"    basic_istream<charT, traits>&"},
{"lineNum":"  801","line":"    operator>>(basic_istream<charT, traits>& is,"},
{"lineNum":"  802","line":"               negative_binomial_distribution& x);"},
{"lineNum":"  803","line":"};"},
{"lineNum":"  804","line":""},
{"lineNum":"  805","line":"template<class IntType = int>"},
{"lineNum":"  806","line":"class poisson_distribution"},
{"lineNum":"  807","line":"{"},
{"lineNum":"  808","line":"public:"},
{"lineNum":"  809","line":"    // types"},
{"lineNum":"  810","line":"    typedef IntType result_type;"},
{"lineNum":"  811","line":""},
{"lineNum":"  812","line":"    class param_type"},
{"lineNum":"  813","line":"    {"},
{"lineNum":"  814","line":"    public:"},
{"lineNum":"  815","line":"        typedef poisson_distribution distribution_type;"},
{"lineNum":"  816","line":""},
{"lineNum":"  817","line":"        explicit param_type(double mean = 1.0);"},
{"lineNum":"  818","line":""},
{"lineNum":"  819","line":"        double mean() const;"},
{"lineNum":"  820","line":""},
{"lineNum":"  821","line":"        friend bool operator==(const param_type& x, const param_type& y);"},
{"lineNum":"  822","line":"        friend bool operator!=(const param_type& x, const param_type& y);"},
{"lineNum":"  823","line":"    };"},
{"lineNum":"  824","line":""},
{"lineNum":"  825","line":"    // constructors and reset functions"},
{"lineNum":"  826","line":"    explicit poisson_distribution(double mean = 1.0);     // before C++20"},
{"lineNum":"  827","line":"    poisson_distribution() : poisson_distribution(1.0) {} // C++20"},
{"lineNum":"  828","line":"    explicit poisson_distribution(double mean);           // C++20"},
{"lineNum":"  829","line":"    explicit poisson_distribution(const param_type& parm);"},
{"lineNum":"  830","line":"    void reset();"},
{"lineNum":"  831","line":""},
{"lineNum":"  832","line":"    // generating functions"},
{"lineNum":"  833","line":"    template<class URNG> result_type operator()(URNG& g);"},
{"lineNum":"  834","line":"    template<class URNG> result_type operator()(URNG& g, const param_type& parm);"},
{"lineNum":"  835","line":""},
{"lineNum":"  836","line":"    // property functions"},
{"lineNum":"  837","line":"    double mean() const;"},
{"lineNum":"  838","line":""},
{"lineNum":"  839","line":"    param_type param() const;"},
{"lineNum":"  840","line":"    void param(const param_type& parm);"},
{"lineNum":"  841","line":""},
{"lineNum":"  842","line":"    result_type min() const;"},
{"lineNum":"  843","line":"    result_type max() const;"},
{"lineNum":"  844","line":""},
{"lineNum":"  845","line":"    friend bool operator==(const poisson_distribution& x,"},
{"lineNum":"  846","line":"                           const poisson_distribution& y);"},
{"lineNum":"  847","line":"    friend bool operator!=(const poisson_distribution& x,"},
{"lineNum":"  848","line":"                           const poisson_distribution& y);"},
{"lineNum":"  849","line":""},
{"lineNum":"  850","line":"    template <class charT, class traits>"},
{"lineNum":"  851","line":"    friend"},
{"lineNum":"  852","line":"    basic_ostream<charT, traits>&"},
{"lineNum":"  853","line":"    operator<<(basic_ostream<charT, traits>& os,"},
{"lineNum":"  854","line":"               const poisson_distribution& x);"},
{"lineNum":"  855","line":""},
{"lineNum":"  856","line":"    template <class charT, class traits>"},
{"lineNum":"  857","line":"    friend"},
{"lineNum":"  858","line":"    basic_istream<charT, traits>&"},
{"lineNum":"  859","line":"    operator>>(basic_istream<charT, traits>& is,"},
{"lineNum":"  860","line":"               poisson_distribution& x);"},
{"lineNum":"  861","line":"};"},
{"lineNum":"  862","line":""},
{"lineNum":"  863","line":"template<class RealType = double>"},
{"lineNum":"  864","line":"class exponential_distribution"},
{"lineNum":"  865","line":"{"},
{"lineNum":"  866","line":"public:"},
{"lineNum":"  867","line":"    // types"},
{"lineNum":"  868","line":"    typedef RealType result_type;"},
{"lineNum":"  869","line":""},
{"lineNum":"  870","line":"    class param_type"},
{"lineNum":"  871","line":"    {"},
{"lineNum":"  872","line":"    public:"},
{"lineNum":"  873","line":"        typedef exponential_distribution distribution_type;"},
{"lineNum":"  874","line":""},
{"lineNum":"  875","line":"        explicit param_type(result_type lambda = 1.0);"},
{"lineNum":"  876","line":""},
{"lineNum":"  877","line":"        result_type lambda() const;"},
{"lineNum":"  878","line":""},
{"lineNum":"  879","line":"        friend bool operator==(const param_type& x, const param_type& y);"},
{"lineNum":"  880","line":"        friend bool operator!=(const param_type& x, const param_type& y);"},
{"lineNum":"  881","line":"    };"},
{"lineNum":"  882","line":""},
{"lineNum":"  883","line":"    // constructors and reset functions"},
{"lineNum":"  884","line":"    explicit exponential_distribution(RealType lambda = 1.0);     // before C++20"},
{"lineNum":"  885","line":"    exponential_distribution() : exponential_distribution(1.0) {} // C++20"},
{"lineNum":"  886","line":"    explicit exponential_distribution(RealType lambda);           // C++20"},
{"lineNum":"  887","line":"    explicit exponential_distribution(const param_type& parm);"},
{"lineNum":"  888","line":"    void reset();"},
{"lineNum":"  889","line":""},
{"lineNum":"  890","line":"    // generating functions"},
{"lineNum":"  891","line":"    template<class URNG> result_type operator()(URNG& g);"},
{"lineNum":"  892","line":"    template<class URNG> result_type operator()(URNG& g, const param_type& parm);"},
{"lineNum":"  893","line":""},
{"lineNum":"  894","line":"    // property functions"},
{"lineNum":"  895","line":"    result_type lambda() const;"},
{"lineNum":"  896","line":""},
{"lineNum":"  897","line":"    param_type param() const;"},
{"lineNum":"  898","line":"    void param(const param_type& parm);"},
{"lineNum":"  899","line":""},
{"lineNum":"  900","line":"    result_type min() const;"},
{"lineNum":"  901","line":"    result_type max() const;"},
{"lineNum":"  902","line":""},
{"lineNum":"  903","line":"    friend bool operator==(const exponential_distribution& x,"},
{"lineNum":"  904","line":"                           const exponential_distribution& y);"},
{"lineNum":"  905","line":"    friend bool operator!=(const exponential_distribution& x,"},
{"lineNum":"  906","line":"                           const exponential_distribution& y);"},
{"lineNum":"  907","line":""},
{"lineNum":"  908","line":"    template <class charT, class traits>"},
{"lineNum":"  909","line":"    friend"},
{"lineNum":"  910","line":"    basic_ostream<charT, traits>&"},
{"lineNum":"  911","line":"    operator<<(basic_ostream<charT, traits>& os,"},
{"lineNum":"  912","line":"               const exponential_distribution& x);"},
{"lineNum":"  913","line":""},
{"lineNum":"  914","line":"    template <class charT, class traits>"},
{"lineNum":"  915","line":"    friend"},
{"lineNum":"  916","line":"    basic_istream<charT, traits>&"},
{"lineNum":"  917","line":"    operator>>(basic_istream<charT, traits>& is,"},
{"lineNum":"  918","line":"               exponential_distribution& x);"},
{"lineNum":"  919","line":"};"},
{"lineNum":"  920","line":""},
{"lineNum":"  921","line":"template<class RealType = double>"},
{"lineNum":"  922","line":"class gamma_distribution"},
{"lineNum":"  923","line":"{"},
{"lineNum":"  924","line":"public:"},
{"lineNum":"  925","line":"    // types"},
{"lineNum":"  926","line":"    typedef RealType result_type;"},
{"lineNum":"  927","line":""},
{"lineNum":"  928","line":"    class param_type"},
{"lineNum":"  929","line":"    {"},
{"lineNum":"  930","line":"    public:"},
{"lineNum":"  931","line":"        typedef gamma_distribution distribution_type;"},
{"lineNum":"  932","line":""},
{"lineNum":"  933","line":"        explicit param_type(result_type alpha = 1, result_type beta = 1);"},
{"lineNum":"  934","line":""},
{"lineNum":"  935","line":"        result_type alpha() const;"},
{"lineNum":"  936","line":"        result_type beta() const;"},
{"lineNum":"  937","line":""},
{"lineNum":"  938","line":"        friend bool operator==(const param_type& x, const param_type& y);"},
{"lineNum":"  939","line":"        friend bool operator!=(const param_type& x, const param_type& y);"},
{"lineNum":"  940","line":"    };"},
{"lineNum":"  941","line":""},
{"lineNum":"  942","line":"    // constructors and reset functions"},
{"lineNum":"  943","line":"    explicit gamma_distribution(RealType alpha = 0.0, RealType beta = 1.0); // before C++20"},
{"lineNum":"  944","line":"    gamma_distribution() : gamma_distribution(0.0) {}                       // C++20"},
{"lineNum":"  945","line":"    explicit gamma_distribution(RealType alpha, RealType beta = 1.0);       // C++20"},
{"lineNum":"  946","line":"    explicit gamma_distribution(const param_type& parm);"},
{"lineNum":"  947","line":"    void reset();"},
{"lineNum":"  948","line":""},
{"lineNum":"  949","line":"    // generating functions"},
{"lineNum":"  950","line":"    template<class URNG> result_type operator()(URNG& g);"},
{"lineNum":"  951","line":"    template<class URNG> result_type operator()(URNG& g, const param_type& parm);"},
{"lineNum":"  952","line":""},
{"lineNum":"  953","line":"    // property functions"},
{"lineNum":"  954","line":"    result_type alpha() const;"},
{"lineNum":"  955","line":"    result_type beta() const;"},
{"lineNum":"  956","line":""},
{"lineNum":"  957","line":"    param_type param() const;"},
{"lineNum":"  958","line":"    void param(const param_type& parm);"},
{"lineNum":"  959","line":""},
{"lineNum":"  960","line":"    result_type min() const;"},
{"lineNum":"  961","line":"    result_type max() const;"},
{"lineNum":"  962","line":""},
{"lineNum":"  963","line":"    friend bool operator==(const gamma_distribution& x,"},
{"lineNum":"  964","line":"                           const gamma_distribution& y);"},
{"lineNum":"  965","line":"    friend bool operator!=(const gamma_distribution& x,"},
{"lineNum":"  966","line":"                           const gamma_distribution& y);"},
{"lineNum":"  967","line":""},
{"lineNum":"  968","line":"    template <class charT, class traits>"},
{"lineNum":"  969","line":"    friend"},
{"lineNum":"  970","line":"    basic_ostream<charT, traits>&"},
{"lineNum":"  971","line":"    operator<<(basic_ostream<charT, traits>& os,"},
{"lineNum":"  972","line":"               const gamma_distribution& x);"},
{"lineNum":"  973","line":""},
{"lineNum":"  974","line":"    template <class charT, class traits>"},
{"lineNum":"  975","line":"    friend"},
{"lineNum":"  976","line":"    basic_istream<charT, traits>&"},
{"lineNum":"  977","line":"    operator>>(basic_istream<charT, traits>& is,"},
{"lineNum":"  978","line":"               gamma_distribution& x);"},
{"lineNum":"  979","line":"};"},
{"lineNum":"  980","line":""},
{"lineNum":"  981","line":"template<class RealType = double>"},
{"lineNum":"  982","line":"class weibull_distribution"},
{"lineNum":"  983","line":"{"},
{"lineNum":"  984","line":"public:"},
{"lineNum":"  985","line":"    // types"},
{"lineNum":"  986","line":"    typedef RealType result_type;"},
{"lineNum":"  987","line":""},
{"lineNum":"  988","line":"    class param_type"},
{"lineNum":"  989","line":"    {"},
{"lineNum":"  990","line":"    public:"},
{"lineNum":"  991","line":"        typedef weibull_distribution distribution_type;"},
{"lineNum":"  992","line":""},
{"lineNum":"  993","line":"        explicit param_type(result_type alpha = 1, result_type beta = 1);"},
{"lineNum":"  994","line":""},
{"lineNum":"  995","line":"        result_type a() const;"},
{"lineNum":"  996","line":"        result_type b() const;"},
{"lineNum":"  997","line":""},
{"lineNum":"  998","line":"        friend bool operator==(const param_type& x, const param_type& y);"},
{"lineNum":"  999","line":"        friend bool operator!=(const param_type& x, const param_type& y);"},
{"lineNum":" 1000","line":"    };"},
{"lineNum":" 1001","line":""},
{"lineNum":" 1002","line":"    // constructor and reset functions"},
{"lineNum":" 1003","line":"    explicit weibull_distribution(RealType a = 1.0, RealType b = 1.0); // before C++20"},
{"lineNum":" 1004","line":"    weibull_distribution() : weibull_distribution(1.0) {}              // C++20"},
{"lineNum":" 1005","line":"    explicit weibull_distribution(RealType a, RealType b = 1.0);       // C++20"},
{"lineNum":" 1006","line":"    explicit weibull_distribution(const param_type& parm);"},
{"lineNum":" 1007","line":"    void reset();"},
{"lineNum":" 1008","line":""},
{"lineNum":" 1009","line":"    // generating functions"},
{"lineNum":" 1010","line":"    template<class URNG> result_type operator()(URNG& g);"},
{"lineNum":" 1011","line":"    template<class URNG> result_type operator()(URNG& g, const param_type& parm);"},
{"lineNum":" 1012","line":""},
{"lineNum":" 1013","line":"    // property functions"},
{"lineNum":" 1014","line":"    result_type a() const;"},
{"lineNum":" 1015","line":"    result_type b() const;"},
{"lineNum":" 1016","line":""},
{"lineNum":" 1017","line":"    param_type param() const;"},
{"lineNum":" 1018","line":"    void param(const param_type& parm);"},
{"lineNum":" 1019","line":""},
{"lineNum":" 1020","line":"    result_type min() const;"},
{"lineNum":" 1021","line":"    result_type max() const;"},
{"lineNum":" 1022","line":""},
{"lineNum":" 1023","line":"    friend bool operator==(const weibull_distribution& x,"},
{"lineNum":" 1024","line":"                           const weibull_distribution& y);"},
{"lineNum":" 1025","line":"    friend bool operator!=(const weibull_distribution& x,"},
{"lineNum":" 1026","line":"                           const weibull_distribution& y);"},
{"lineNum":" 1027","line":""},
{"lineNum":" 1028","line":"    template <class charT, class traits>"},
{"lineNum":" 1029","line":"    friend"},
{"lineNum":" 1030","line":"    basic_ostream<charT, traits>&"},
{"lineNum":" 1031","line":"    operator<<(basic_ostream<charT, traits>& os,"},
{"lineNum":" 1032","line":"               const weibull_distribution& x);"},
{"lineNum":" 1033","line":""},
{"lineNum":" 1034","line":"    template <class charT, class traits>"},
{"lineNum":" 1035","line":"    friend"},
{"lineNum":" 1036","line":"    basic_istream<charT, traits>&"},
{"lineNum":" 1037","line":"    operator>>(basic_istream<charT, traits>& is,"},
{"lineNum":" 1038","line":"               weibull_distribution& x);"},
{"lineNum":" 1039","line":"};"},
{"lineNum":" 1040","line":""},
{"lineNum":" 1041","line":"template<class RealType = double>"},
{"lineNum":" 1042","line":"class extreme_value_distribution"},
{"lineNum":" 1043","line":"{"},
{"lineNum":" 1044","line":"public:"},
{"lineNum":" 1045","line":"    // types"},
{"lineNum":" 1046","line":"    typedef RealType result_type;"},
{"lineNum":" 1047","line":""},
{"lineNum":" 1048","line":"    class param_type"},
{"lineNum":" 1049","line":"    {"},
{"lineNum":" 1050","line":"    public:"},
{"lineNum":" 1051","line":"        typedef extreme_value_distribution distribution_type;"},
{"lineNum":" 1052","line":""},
{"lineNum":" 1053","line":"        explicit param_type(result_type a = 0, result_type b = 1);"},
{"lineNum":" 1054","line":""},
{"lineNum":" 1055","line":"        result_type a() const;"},
{"lineNum":" 1056","line":"        result_type b() const;"},
{"lineNum":" 1057","line":""},
{"lineNum":" 1058","line":"        friend bool operator==(const param_type& x, const param_type& y);"},
{"lineNum":" 1059","line":"        friend bool operator!=(const param_type& x, const param_type& y);"},
{"lineNum":" 1060","line":"    };"},
{"lineNum":" 1061","line":""},
{"lineNum":" 1062","line":"    // constructor and reset functions"},
{"lineNum":" 1063","line":"    explicit extreme_value_distribution(RealType a = 0.0, RealType b = 1.0); // before C++20"},
{"lineNum":" 1064","line":"    extreme_value_distribution() : extreme_value_distribution(0.0) {}        // C++20"},
{"lineNum":" 1065","line":"    explicit extreme_value_distribution(RealType a, RealType b = 1.0);       // C++20"},
{"lineNum":" 1066","line":"    explicit extreme_value_distribution(const param_type& parm);"},
{"lineNum":" 1067","line":"    void reset();"},
{"lineNum":" 1068","line":""},
{"lineNum":" 1069","line":"    // generating functions"},
{"lineNum":" 1070","line":"    template<class URNG> result_type operator()(URNG& g);"},
{"lineNum":" 1071","line":"    template<class URNG> result_type operator()(URNG& g, const param_type& parm);"},
{"lineNum":" 1072","line":""},
{"lineNum":" 1073","line":"    // property functions"},
{"lineNum":" 1074","line":"    result_type a() const;"},
{"lineNum":" 1075","line":"    result_type b() const;"},
{"lineNum":" 1076","line":""},
{"lineNum":" 1077","line":"    param_type param() const;"},
{"lineNum":" 1078","line":"    void param(const param_type& parm);"},
{"lineNum":" 1079","line":""},
{"lineNum":" 1080","line":"    result_type min() const;"},
{"lineNum":" 1081","line":"    result_type max() const;"},
{"lineNum":" 1082","line":""},
{"lineNum":" 1083","line":"    friend bool operator==(const extreme_value_distribution& x,"},
{"lineNum":" 1084","line":"                           const extreme_value_distribution& y);"},
{"lineNum":" 1085","line":"    friend bool operator!=(const extreme_value_distribution& x,"},
{"lineNum":" 1086","line":"                           const extreme_value_distribution& y);"},
{"lineNum":" 1087","line":""},
{"lineNum":" 1088","line":"    template <class charT, class traits>"},
{"lineNum":" 1089","line":"    friend"},
{"lineNum":" 1090","line":"    basic_ostream<charT, traits>&"},
{"lineNum":" 1091","line":"    operator<<(basic_ostream<charT, traits>& os,"},
{"lineNum":" 1092","line":"               const extreme_value_distribution& x);"},
{"lineNum":" 1093","line":""},
{"lineNum":" 1094","line":"    template <class charT, class traits>"},
{"lineNum":" 1095","line":"    friend"},
{"lineNum":" 1096","line":"    basic_istream<charT, traits>&"},
{"lineNum":" 1097","line":"    operator>>(basic_istream<charT, traits>& is,"},
{"lineNum":" 1098","line":"               extreme_value_distribution& x);"},
{"lineNum":" 1099","line":"};"},
{"lineNum":" 1100","line":""},
{"lineNum":" 1101","line":"template<class RealType = double>"},
{"lineNum":" 1102","line":"class normal_distribution"},
{"lineNum":" 1103","line":"{"},
{"lineNum":" 1104","line":"public:"},
{"lineNum":" 1105","line":"    // types"},
{"lineNum":" 1106","line":"    typedef RealType result_type;"},
{"lineNum":" 1107","line":""},
{"lineNum":" 1108","line":"    class param_type"},
{"lineNum":" 1109","line":"    {"},
{"lineNum":" 1110","line":"    public:"},
{"lineNum":" 1111","line":"        typedef normal_distribution distribution_type;"},
{"lineNum":" 1112","line":""},
{"lineNum":" 1113","line":"        explicit param_type(result_type mean = 0, result_type stddev = 1);"},
{"lineNum":" 1114","line":""},
{"lineNum":" 1115","line":"        result_type mean() const;"},
{"lineNum":" 1116","line":"        result_type stddev() const;"},
{"lineNum":" 1117","line":""},
{"lineNum":" 1118","line":"        friend bool operator==(const param_type& x, const param_type& y);"},
{"lineNum":" 1119","line":"        friend bool operator!=(const param_type& x, const param_type& y);"},
{"lineNum":" 1120","line":"    };"},
{"lineNum":" 1121","line":""},
{"lineNum":" 1122","line":"    // constructors and reset functions"},
{"lineNum":" 1123","line":"    explicit normal_distribution(RealType mean = 0.0, RealType stddev = 1.0); // before C++20"},
{"lineNum":" 1124","line":"    normal_distribution() : normal_distribution(0.0) {}                       // C++20"},
{"lineNum":" 1125","line":"    explicit normal_distribution(RealType mean, RealType stddev = 1.0);       // C++20"},
{"lineNum":" 1126","line":"    explicit normal_distribution(const param_type& parm);"},
{"lineNum":" 1127","line":"    void reset();"},
{"lineNum":" 1128","line":""},
{"lineNum":" 1129","line":"    // generating functions"},
{"lineNum":" 1130","line":"    template<class URNG> result_type operator()(URNG& g);"},
{"lineNum":" 1131","line":"    template<class URNG> result_type operator()(URNG& g, const param_type& parm);"},
{"lineNum":" 1132","line":""},
{"lineNum":" 1133","line":"    // property functions"},
{"lineNum":" 1134","line":"    result_type mean() const;"},
{"lineNum":" 1135","line":"    result_type stddev() const;"},
{"lineNum":" 1136","line":""},
{"lineNum":" 1137","line":"    param_type param() const;"},
{"lineNum":" 1138","line":"    void param(const param_type& parm);"},
{"lineNum":" 1139","line":""},
{"lineNum":" 1140","line":"    result_type min() const;"},
{"lineNum":" 1141","line":"    result_type max() const;"},
{"lineNum":" 1142","line":""},
{"lineNum":" 1143","line":"    friend bool operator==(const normal_distribution& x,"},
{"lineNum":" 1144","line":"                           const normal_distribution& y);"},
{"lineNum":" 1145","line":"    friend bool operator!=(const normal_distribution& x,"},
{"lineNum":" 1146","line":"                           const normal_distribution& y);"},
{"lineNum":" 1147","line":""},
{"lineNum":" 1148","line":"    template <class charT, class traits>"},
{"lineNum":" 1149","line":"    friend"},
{"lineNum":" 1150","line":"    basic_ostream<charT, traits>&"},
{"lineNum":" 1151","line":"    operator<<(basic_ostream<charT, traits>& os,"},
{"lineNum":" 1152","line":"               const normal_distribution& x);"},
{"lineNum":" 1153","line":""},
{"lineNum":" 1154","line":"    template <class charT, class traits>"},
{"lineNum":" 1155","line":"    friend"},
{"lineNum":" 1156","line":"    basic_istream<charT, traits>&"},
{"lineNum":" 1157","line":"    operator>>(basic_istream<charT, traits>& is,"},
{"lineNum":" 1158","line":"               normal_distribution& x);"},
{"lineNum":" 1159","line":"};"},
{"lineNum":" 1160","line":""},
{"lineNum":" 1161","line":"template<class RealType = double>"},
{"lineNum":" 1162","line":"class lognormal_distribution"},
{"lineNum":" 1163","line":"{"},
{"lineNum":" 1164","line":"public:"},
{"lineNum":" 1165","line":"    // types"},
{"lineNum":" 1166","line":"    typedef RealType result_type;"},
{"lineNum":" 1167","line":""},
{"lineNum":" 1168","line":"    class param_type"},
{"lineNum":" 1169","line":"    {"},
{"lineNum":" 1170","line":"    public:"},
{"lineNum":" 1171","line":"        typedef lognormal_distribution distribution_type;"},
{"lineNum":" 1172","line":""},
{"lineNum":" 1173","line":"        explicit param_type(result_type m = 0, result_type s = 1);"},
{"lineNum":" 1174","line":""},
{"lineNum":" 1175","line":"        result_type m() const;"},
{"lineNum":" 1176","line":"        result_type s() const;"},
{"lineNum":" 1177","line":""},
{"lineNum":" 1178","line":"        friend bool operator==(const param_type& x, const param_type& y);"},
{"lineNum":" 1179","line":"        friend bool operator!=(const param_type& x, const param_type& y);"},
{"lineNum":" 1180","line":"    };"},
{"lineNum":" 1181","line":""},
{"lineNum":" 1182","line":"    // constructor and reset functions"},
{"lineNum":" 1183","line":"    explicit lognormal_distribution(RealType mean = 0.0, RealType stddev = 1.0); // before C++20"},
{"lineNum":" 1184","line":"    lognormal_distribution() : lognormal_distribution(0.0) {}                    // C++20"},
{"lineNum":" 1185","line":"    explicit lognormal_distribution(RealType mean, RealType stddev = 1.0);       // C++20"},
{"lineNum":" 1186","line":"    explicit lognormal_distribution(const param_type& parm);"},
{"lineNum":" 1187","line":"    void reset();"},
{"lineNum":" 1188","line":""},
{"lineNum":" 1189","line":"    // generating functions"},
{"lineNum":" 1190","line":"    template<class URNG> result_type operator()(URNG& g);"},
{"lineNum":" 1191","line":"    template<class URNG> result_type operator()(URNG& g, const param_type& parm);"},
{"lineNum":" 1192","line":""},
{"lineNum":" 1193","line":"    // property functions"},
{"lineNum":" 1194","line":"    result_type m() const;"},
{"lineNum":" 1195","line":"    result_type s() const;"},
{"lineNum":" 1196","line":""},
{"lineNum":" 1197","line":"    param_type param() const;"},
{"lineNum":" 1198","line":"    void param(const param_type& parm);"},
{"lineNum":" 1199","line":""},
{"lineNum":" 1200","line":"    result_type min() const;"},
{"lineNum":" 1201","line":"    result_type max() const;"},
{"lineNum":" 1202","line":""},
{"lineNum":" 1203","line":"    friend bool operator==(const lognormal_distribution& x,"},
{"lineNum":" 1204","line":"                           const lognormal_distribution& y);"},
{"lineNum":" 1205","line":"    friend bool operator!=(const lognormal_distribution& x,"},
{"lineNum":" 1206","line":"                           const lognormal_distribution& y);"},
{"lineNum":" 1207","line":""},
{"lineNum":" 1208","line":"    template <class charT, class traits>"},
{"lineNum":" 1209","line":"    friend"},
{"lineNum":" 1210","line":"    basic_ostream<charT, traits>&"},
{"lineNum":" 1211","line":"    operator<<(basic_ostream<charT, traits>& os,"},
{"lineNum":" 1212","line":"               const lognormal_distribution& x);"},
{"lineNum":" 1213","line":""},
{"lineNum":" 1214","line":"    template <class charT, class traits>"},
{"lineNum":" 1215","line":"    friend"},
{"lineNum":" 1216","line":"    basic_istream<charT, traits>&"},
{"lineNum":" 1217","line":"    operator>>(basic_istream<charT, traits>& is,"},
{"lineNum":" 1218","line":"               lognormal_distribution& x);"},
{"lineNum":" 1219","line":"};"},
{"lineNum":" 1220","line":""},
{"lineNum":" 1221","line":"template<class RealType = double>"},
{"lineNum":" 1222","line":"class chi_squared_distribution"},
{"lineNum":" 1223","line":"{"},
{"lineNum":" 1224","line":"public:"},
{"lineNum":" 1225","line":"    // types"},
{"lineNum":" 1226","line":"    typedef RealType result_type;"},
{"lineNum":" 1227","line":""},
{"lineNum":" 1228","line":"    class param_type"},
{"lineNum":" 1229","line":"    {"},
{"lineNum":" 1230","line":"    public:"},
{"lineNum":" 1231","line":"        typedef chi_squared_distribution distribution_type;"},
{"lineNum":" 1232","line":""},
{"lineNum":" 1233","line":"        explicit param_type(result_type n = 1);"},
{"lineNum":" 1234","line":""},
{"lineNum":" 1235","line":"        result_type n() const;"},
{"lineNum":" 1236","line":""},
{"lineNum":" 1237","line":"        friend bool operator==(const param_type& x, const param_type& y);"},
{"lineNum":" 1238","line":"        friend bool operator!=(const param_type& x, const param_type& y);"},
{"lineNum":" 1239","line":"    };"},
{"lineNum":" 1240","line":""},
{"lineNum":" 1241","line":"    // constructor and reset functions"},
{"lineNum":" 1242","line":"    explicit chi_squared_distribution(RealType n = 1.0);          // before C++20"},
{"lineNum":" 1243","line":"    chi_squared_distribution() : chi_squared_distribution(1.0) {} // C++20"},
{"lineNum":" 1244","line":"    explicit chi_squared_distribution(RealType n);                // C++20"},
{"lineNum":" 1245","line":"    explicit chi_squared_distribution(const param_type& parm);"},
{"lineNum":" 1246","line":"    void reset();"},
{"lineNum":" 1247","line":""},
{"lineNum":" 1248","line":"    // generating functions"},
{"lineNum":" 1249","line":"    template<class URNG> result_type operator()(URNG& g);"},
{"lineNum":" 1250","line":"    template<class URNG> result_type operator()(URNG& g, const param_type& parm);"},
{"lineNum":" 1251","line":""},
{"lineNum":" 1252","line":"    // property functions"},
{"lineNum":" 1253","line":"    result_type n() const;"},
{"lineNum":" 1254","line":""},
{"lineNum":" 1255","line":"    param_type param() const;"},
{"lineNum":" 1256","line":"    void param(const param_type& parm);"},
{"lineNum":" 1257","line":""},
{"lineNum":" 1258","line":"    result_type min() const;"},
{"lineNum":" 1259","line":"    result_type max() const;"},
{"lineNum":" 1260","line":""},
{"lineNum":" 1261","line":"    friend bool operator==(const chi_squared_distribution& x,"},
{"lineNum":" 1262","line":"                           const chi_squared_distribution& y);"},
{"lineNum":" 1263","line":"    friend bool operator!=(const chi_squared_distribution& x,"},
{"lineNum":" 1264","line":"                           const chi_squared_distribution& y);"},
{"lineNum":" 1265","line":""},
{"lineNum":" 1266","line":"    template <class charT, class traits>"},
{"lineNum":" 1267","line":"    friend"},
{"lineNum":" 1268","line":"    basic_ostream<charT, traits>&"},
{"lineNum":" 1269","line":"    operator<<(basic_ostream<charT, traits>& os,"},
{"lineNum":" 1270","line":"               const chi_squared_distribution& x);"},
{"lineNum":" 1271","line":""},
{"lineNum":" 1272","line":"    template <class charT, class traits>"},
{"lineNum":" 1273","line":"    friend"},
{"lineNum":" 1274","line":"    basic_istream<charT, traits>&"},
{"lineNum":" 1275","line":"    operator>>(basic_istream<charT, traits>& is,"},
{"lineNum":" 1276","line":"               chi_squared_distribution& x);"},
{"lineNum":" 1277","line":"};"},
{"lineNum":" 1278","line":""},
{"lineNum":" 1279","line":"template<class RealType = double>"},
{"lineNum":" 1280","line":"class cauchy_distribution"},
{"lineNum":" 1281","line":"{"},
{"lineNum":" 1282","line":"public:"},
{"lineNum":" 1283","line":"    // types"},
{"lineNum":" 1284","line":"    typedef RealType result_type;"},
{"lineNum":" 1285","line":""},
{"lineNum":" 1286","line":"    class param_type"},
{"lineNum":" 1287","line":"    {"},
{"lineNum":" 1288","line":"    public:"},
{"lineNum":" 1289","line":"        typedef cauchy_distribution distribution_type;"},
{"lineNum":" 1290","line":""},
{"lineNum":" 1291","line":"        explicit param_type(result_type a = 0, result_type b = 1);"},
{"lineNum":" 1292","line":""},
{"lineNum":" 1293","line":"        result_type a() const;"},
{"lineNum":" 1294","line":"        result_type b() const;"},
{"lineNum":" 1295","line":""},
{"lineNum":" 1296","line":"        friend bool operator==(const param_type& x, const param_type& y);"},
{"lineNum":" 1297","line":"        friend bool operator!=(const param_type& x, const param_type& y);"},
{"lineNum":" 1298","line":"    };"},
{"lineNum":" 1299","line":""},
{"lineNum":" 1300","line":"    // constructor and reset functions"},
{"lineNum":" 1301","line":"    explicit cauchy_distribution(RealType a = 0.0, RealType b = 1.0); // before C++20"},
{"lineNum":" 1302","line":"    cauchy_distribution() : cauchy_distribution(0.0) {}               // C++20"},
{"lineNum":" 1303","line":"    explicit cauchy_distribution(RealType a, RealType b = 1.0);       // C++20"},
{"lineNum":" 1304","line":"    explicit cauchy_distribution(const param_type& parm);"},
{"lineNum":" 1305","line":"    void reset();"},
{"lineNum":" 1306","line":""},
{"lineNum":" 1307","line":"    // generating functions"},
{"lineNum":" 1308","line":"    template<class URNG> result_type operator()(URNG& g);"},
{"lineNum":" 1309","line":"    template<class URNG> result_type operator()(URNG& g, const param_type& parm);"},
{"lineNum":" 1310","line":""},
{"lineNum":" 1311","line":"    // property functions"},
{"lineNum":" 1312","line":"    result_type a() const;"},
{"lineNum":" 1313","line":"    result_type b() const;"},
{"lineNum":" 1314","line":""},
{"lineNum":" 1315","line":"    param_type param() const;"},
{"lineNum":" 1316","line":"    void param(const param_type& parm);"},
{"lineNum":" 1317","line":""},
{"lineNum":" 1318","line":"    result_type min() const;"},
{"lineNum":" 1319","line":"    result_type max() const;"},
{"lineNum":" 1320","line":""},
{"lineNum":" 1321","line":"    friend bool operator==(const cauchy_distribution& x,"},
{"lineNum":" 1322","line":"                           const cauchy_distribution& y);"},
{"lineNum":" 1323","line":"    friend bool operator!=(const cauchy_distribution& x,"},
{"lineNum":" 1324","line":"                           const cauchy_distribution& y);"},
{"lineNum":" 1325","line":""},
{"lineNum":" 1326","line":"    template <class charT, class traits>"},
{"lineNum":" 1327","line":"    friend"},
{"lineNum":" 1328","line":"    basic_ostream<charT, traits>&"},
{"lineNum":" 1329","line":"    operator<<(basic_ostream<charT, traits>& os,"},
{"lineNum":" 1330","line":"               const cauchy_distribution& x);"},
{"lineNum":" 1331","line":""},
{"lineNum":" 1332","line":"    template <class charT, class traits>"},
{"lineNum":" 1333","line":"    friend"},
{"lineNum":" 1334","line":"    basic_istream<charT, traits>&"},
{"lineNum":" 1335","line":"    operator>>(basic_istream<charT, traits>& is,"},
{"lineNum":" 1336","line":"               cauchy_distribution& x);"},
{"lineNum":" 1337","line":"};"},
{"lineNum":" 1338","line":""},
{"lineNum":" 1339","line":"template<class RealType = double>"},
{"lineNum":" 1340","line":"class fisher_f_distribution"},
{"lineNum":" 1341","line":"{"},
{"lineNum":" 1342","line":"public:"},
{"lineNum":" 1343","line":"    // types"},
{"lineNum":" 1344","line":"    typedef RealType result_type;"},
{"lineNum":" 1345","line":""},
{"lineNum":" 1346","line":"    class param_type"},
{"lineNum":" 1347","line":"    {"},
{"lineNum":" 1348","line":"    public:"},
{"lineNum":" 1349","line":"        typedef fisher_f_distribution distribution_type;"},
{"lineNum":" 1350","line":""},
{"lineNum":" 1351","line":"        explicit param_type(result_type m = 1, result_type n = 1);"},
{"lineNum":" 1352","line":""},
{"lineNum":" 1353","line":"        result_type m() const;"},
{"lineNum":" 1354","line":"        result_type n() const;"},
{"lineNum":" 1355","line":""},
{"lineNum":" 1356","line":"        friend bool operator==(const param_type& x, const param_type& y);"},
{"lineNum":" 1357","line":"        friend bool operator!=(const param_type& x, const param_type& y);"},
{"lineNum":" 1358","line":"    };"},
{"lineNum":" 1359","line":""},
{"lineNum":" 1360","line":"    // constructor and reset functions"},
{"lineNum":" 1361","line":"    explicit fisher_f_distribution(RealType m = 1.0, RealType n = 1.0); // before C++20"},
{"lineNum":" 1362","line":"    fisher_f_distribution() : fisher_f_distribution(1.0) {}             // C++20"},
{"lineNum":" 1363","line":"    explicit fisher_f_distribution(RealType m, RealType n = 1.0);       // C++20"},
{"lineNum":" 1364","line":"    explicit fisher_f_distribution(const param_type& parm);"},
{"lineNum":" 1365","line":"    void reset();"},
{"lineNum":" 1366","line":""},
{"lineNum":" 1367","line":"    // generating functions"},
{"lineNum":" 1368","line":"    template<class URNG> result_type operator()(URNG& g);"},
{"lineNum":" 1369","line":"    template<class URNG> result_type operator()(URNG& g, const param_type& parm);"},
{"lineNum":" 1370","line":""},
{"lineNum":" 1371","line":"    // property functions"},
{"lineNum":" 1372","line":"    result_type m() const;"},
{"lineNum":" 1373","line":"    result_type n() const;"},
{"lineNum":" 1374","line":""},
{"lineNum":" 1375","line":"    param_type param() const;"},
{"lineNum":" 1376","line":"    void param(const param_type& parm);"},
{"lineNum":" 1377","line":""},
{"lineNum":" 1378","line":"    result_type min() const;"},
{"lineNum":" 1379","line":"    result_type max() const;"},
{"lineNum":" 1380","line":""},
{"lineNum":" 1381","line":"    friend bool operator==(const fisher_f_distribution& x,"},
{"lineNum":" 1382","line":"                           const fisher_f_distribution& y);"},
{"lineNum":" 1383","line":"    friend bool operator!=(const fisher_f_distribution& x,"},
{"lineNum":" 1384","line":"                           const fisher_f_distribution& y);"},
{"lineNum":" 1385","line":""},
{"lineNum":" 1386","line":"    template <class charT, class traits>"},
{"lineNum":" 1387","line":"    friend"},
{"lineNum":" 1388","line":"    basic_ostream<charT, traits>&"},
{"lineNum":" 1389","line":"    operator<<(basic_ostream<charT, traits>& os,"},
{"lineNum":" 1390","line":"               const fisher_f_distribution& x);"},
{"lineNum":" 1391","line":""},
{"lineNum":" 1392","line":"    template <class charT, class traits>"},
{"lineNum":" 1393","line":"    friend"},
{"lineNum":" 1394","line":"    basic_istream<charT, traits>&"},
{"lineNum":" 1395","line":"    operator>>(basic_istream<charT, traits>& is,"},
{"lineNum":" 1396","line":"               fisher_f_distribution& x);"},
{"lineNum":" 1397","line":"};"},
{"lineNum":" 1398","line":""},
{"lineNum":" 1399","line":"template<class RealType = double>"},
{"lineNum":" 1400","line":"class student_t_distribution"},
{"lineNum":" 1401","line":"{"},
{"lineNum":" 1402","line":"public:"},
{"lineNum":" 1403","line":"    // types"},
{"lineNum":" 1404","line":"    typedef RealType result_type;"},
{"lineNum":" 1405","line":""},
{"lineNum":" 1406","line":"    class param_type"},
{"lineNum":" 1407","line":"    {"},
{"lineNum":" 1408","line":"    public:"},
{"lineNum":" 1409","line":"        typedef student_t_distribution distribution_type;"},
{"lineNum":" 1410","line":""},
{"lineNum":" 1411","line":"        explicit param_type(result_type n = 1);"},
{"lineNum":" 1412","line":""},
{"lineNum":" 1413","line":"        result_type n() const;"},
{"lineNum":" 1414","line":""},
{"lineNum":" 1415","line":"        friend bool operator==(const param_type& x, const param_type& y);"},
{"lineNum":" 1416","line":"        friend bool operator!=(const param_type& x, const param_type& y);"},
{"lineNum":" 1417","line":"    };"},
{"lineNum":" 1418","line":""},
{"lineNum":" 1419","line":"    // constructor and reset functions"},
{"lineNum":" 1420","line":"    explicit student_t_distribution(RealType n = 1.0);        // before C++20"},
{"lineNum":" 1421","line":"    student_t_distribution() : student_t_distribution(1.0) {} // C++20"},
{"lineNum":" 1422","line":"    explicit student_t_distribution(RealType n);              // C++20"},
{"lineNum":" 1423","line":"    explicit student_t_distribution(const param_type& parm);"},
{"lineNum":" 1424","line":"    void reset();"},
{"lineNum":" 1425","line":""},
{"lineNum":" 1426","line":"    // generating functions"},
{"lineNum":" 1427","line":"    template<class URNG> result_type operator()(URNG& g);"},
{"lineNum":" 1428","line":"    template<class URNG> result_type operator()(URNG& g, const param_type& parm);"},
{"lineNum":" 1429","line":""},
{"lineNum":" 1430","line":"    // property functions"},
{"lineNum":" 1431","line":"    result_type n() const;"},
{"lineNum":" 1432","line":""},
{"lineNum":" 1433","line":"    param_type param() const;"},
{"lineNum":" 1434","line":"    void param(const param_type& parm);"},
{"lineNum":" 1435","line":""},
{"lineNum":" 1436","line":"    result_type min() const;"},
{"lineNum":" 1437","line":"    result_type max() const;"},
{"lineNum":" 1438","line":""},
{"lineNum":" 1439","line":"    friend bool operator==(const student_t_distribution& x,"},
{"lineNum":" 1440","line":"                           const student_t_distribution& y);"},
{"lineNum":" 1441","line":"    friend bool operator!=(const student_t_distribution& x,"},
{"lineNum":" 1442","line":"                           const student_t_distribution& y);"},
{"lineNum":" 1443","line":""},
{"lineNum":" 1444","line":"    template <class charT, class traits>"},
{"lineNum":" 1445","line":"    friend"},
{"lineNum":" 1446","line":"    basic_ostream<charT, traits>&"},
{"lineNum":" 1447","line":"    operator<<(basic_ostream<charT, traits>& os,"},
{"lineNum":" 1448","line":"               const student_t_distribution& x);"},
{"lineNum":" 1449","line":""},
{"lineNum":" 1450","line":"    template <class charT, class traits>"},
{"lineNum":" 1451","line":"    friend"},
{"lineNum":" 1452","line":"    basic_istream<charT, traits>&"},
{"lineNum":" 1453","line":"    operator>>(basic_istream<charT, traits>& is,"},
{"lineNum":" 1454","line":"               student_t_distribution& x);"},
{"lineNum":" 1455","line":"};"},
{"lineNum":" 1456","line":""},
{"lineNum":" 1457","line":"template<class IntType = int>"},
{"lineNum":" 1458","line":"class discrete_distribution"},
{"lineNum":" 1459","line":"{"},
{"lineNum":" 1460","line":"public:"},
{"lineNum":" 1461","line":"    // types"},
{"lineNum":" 1462","line":"    typedef IntType result_type;"},
{"lineNum":" 1463","line":""},
{"lineNum":" 1464","line":"    class param_type"},
{"lineNum":" 1465","line":"    {"},
{"lineNum":" 1466","line":"    public:"},
{"lineNum":" 1467","line":"        typedef discrete_distribution distribution_type;"},
{"lineNum":" 1468","line":""},
{"lineNum":" 1469","line":"        param_type();"},
{"lineNum":" 1470","line":"        template<class InputIterator>"},
{"lineNum":" 1471","line":"            param_type(InputIterator firstW, InputIterator lastW);"},
{"lineNum":" 1472","line":"        param_type(initializer_list<double> wl);"},
{"lineNum":" 1473","line":"        template<class UnaryOperation>"},
{"lineNum":" 1474","line":"            param_type(size_t nw, double xmin, double xmax, UnaryOperation fw);"},
{"lineNum":" 1475","line":""},
{"lineNum":" 1476","line":"        vector<double> probabilities() const;"},
{"lineNum":" 1477","line":""},
{"lineNum":" 1478","line":"        friend bool operator==(const param_type& x, const param_type& y);"},
{"lineNum":" 1479","line":"        friend bool operator!=(const param_type& x, const param_type& y);"},
{"lineNum":" 1480","line":"    };"},
{"lineNum":" 1481","line":""},
{"lineNum":" 1482","line":"    // constructor and reset functions"},
{"lineNum":" 1483","line":"    discrete_distribution();"},
{"lineNum":" 1484","line":"    template<class InputIterator>"},
{"lineNum":" 1485","line":"        discrete_distribution(InputIterator firstW, InputIterator lastW);"},
{"lineNum":" 1486","line":"    discrete_distribution(initializer_list<double> wl);"},
{"lineNum":" 1487","line":"    template<class UnaryOperation>"},
{"lineNum":" 1488","line":"        discrete_distribution(size_t nw, double xmin, double xmax,"},
{"lineNum":" 1489","line":"                              UnaryOperation fw);"},
{"lineNum":" 1490","line":"    explicit discrete_distribution(const param_type& parm);"},
{"lineNum":" 1491","line":"    void reset();"},
{"lineNum":" 1492","line":""},
{"lineNum":" 1493","line":"    // generating functions"},
{"lineNum":" 1494","line":"    template<class URNG> result_type operator()(URNG& g);"},
{"lineNum":" 1495","line":"    template<class URNG> result_type operator()(URNG& g, const param_type& parm);"},
{"lineNum":" 1496","line":""},
{"lineNum":" 1497","line":"    // property functions"},
{"lineNum":" 1498","line":"    vector<double> probabilities() const;"},
{"lineNum":" 1499","line":""},
{"lineNum":" 1500","line":"    param_type param() const;"},
{"lineNum":" 1501","line":"    void param(const param_type& parm);"},
{"lineNum":" 1502","line":""},
{"lineNum":" 1503","line":"    result_type min() const;"},
{"lineNum":" 1504","line":"    result_type max() const;"},
{"lineNum":" 1505","line":""},
{"lineNum":" 1506","line":"    friend bool operator==(const discrete_distribution& x,"},
{"lineNum":" 1507","line":"                           const discrete_distribution& y);"},
{"lineNum":" 1508","line":"    friend bool operator!=(const discrete_distribution& x,"},
{"lineNum":" 1509","line":"                           const discrete_distribution& y);"},
{"lineNum":" 1510","line":""},
{"lineNum":" 1511","line":"    template <class charT, class traits>"},
{"lineNum":" 1512","line":"    friend"},
{"lineNum":" 1513","line":"    basic_ostream<charT, traits>&"},
{"lineNum":" 1514","line":"    operator<<(basic_ostream<charT, traits>& os,"},
{"lineNum":" 1515","line":"               const discrete_distribution& x);"},
{"lineNum":" 1516","line":""},
{"lineNum":" 1517","line":"    template <class charT, class traits>"},
{"lineNum":" 1518","line":"    friend"},
{"lineNum":" 1519","line":"    basic_istream<charT, traits>&"},
{"lineNum":" 1520","line":"    operator>>(basic_istream<charT, traits>& is,"},
{"lineNum":" 1521","line":"               discrete_distribution& x);"},
{"lineNum":" 1522","line":"};"},
{"lineNum":" 1523","line":""},
{"lineNum":" 1524","line":"template<class RealType = double>"},
{"lineNum":" 1525","line":"class piecewise_constant_distribution"},
{"lineNum":" 1526","line":"{"},
{"lineNum":" 1527","line":"    // types"},
{"lineNum":" 1528","line":"    typedef RealType result_type;"},
{"lineNum":" 1529","line":""},
{"lineNum":" 1530","line":"    class param_type"},
{"lineNum":" 1531","line":"    {"},
{"lineNum":" 1532","line":"    public:"},
{"lineNum":" 1533","line":"        typedef piecewise_constant_distribution distribution_type;"},
{"lineNum":" 1534","line":""},
{"lineNum":" 1535","line":"        param_type();"},
{"lineNum":" 1536","line":"        template<class InputIteratorB, class InputIteratorW>"},
{"lineNum":" 1537","line":"            param_type(InputIteratorB firstB, InputIteratorB lastB,"},
{"lineNum":" 1538","line":"                       InputIteratorW firstW);"},
{"lineNum":" 1539","line":"        template<class UnaryOperation>"},
{"lineNum":" 1540","line":"            param_type(initializer_list<result_type> bl, UnaryOperation fw);"},
{"lineNum":" 1541","line":"        template<class UnaryOperation>"},
{"lineNum":" 1542","line":"            param_type(size_t nw, result_type xmin, result_type xmax,"},
{"lineNum":" 1543","line":"                       UnaryOperation fw);"},
{"lineNum":" 1544","line":""},
{"lineNum":" 1545","line":"        vector<result_type> intervals() const;"},
{"lineNum":" 1546","line":"        vector<result_type> densities() const;"},
{"lineNum":" 1547","line":""},
{"lineNum":" 1548","line":"        friend bool operator==(const param_type& x, const param_type& y);"},
{"lineNum":" 1549","line":"        friend bool operator!=(const param_type& x, const param_type& y);"},
{"lineNum":" 1550","line":"    };"},
{"lineNum":" 1551","line":""},
{"lineNum":" 1552","line":"    // constructor and reset functions"},
{"lineNum":" 1553","line":"    piecewise_constant_distribution();"},
{"lineNum":" 1554","line":"    template<class InputIteratorB, class InputIteratorW>"},
{"lineNum":" 1555","line":"        piecewise_constant_distribution(InputIteratorB firstB,"},
{"lineNum":" 1556","line":"                                        InputIteratorB lastB,"},
{"lineNum":" 1557","line":"                                        InputIteratorW firstW);"},
{"lineNum":" 1558","line":"    template<class UnaryOperation>"},
{"lineNum":" 1559","line":"        piecewise_constant_distribution(initializer_list<result_type> bl,"},
{"lineNum":" 1560","line":"                                        UnaryOperation fw);"},
{"lineNum":" 1561","line":"    template<class UnaryOperation>"},
{"lineNum":" 1562","line":"        piecewise_constant_distribution(size_t nw, result_type xmin,"},
{"lineNum":" 1563","line":"                                        result_type xmax, UnaryOperation fw);"},
{"lineNum":" 1564","line":"    explicit piecewise_constant_distribution(const param_type& parm);"},
{"lineNum":" 1565","line":"    void reset();"},
{"lineNum":" 1566","line":""},
{"lineNum":" 1567","line":"    // generating functions"},
{"lineNum":" 1568","line":"    template<class URNG> result_type operator()(URNG& g);"},
{"lineNum":" 1569","line":"    template<class URNG> result_type operator()(URNG& g, const param_type& parm);"},
{"lineNum":" 1570","line":""},
{"lineNum":" 1571","line":"    // property functions"},
{"lineNum":" 1572","line":"    vector<result_type> intervals() const;"},
{"lineNum":" 1573","line":"    vector<result_type> densities() const;"},
{"lineNum":" 1574","line":""},
{"lineNum":" 1575","line":"    param_type param() const;"},
{"lineNum":" 1576","line":"    void param(const param_type& parm);"},
{"lineNum":" 1577","line":""},
{"lineNum":" 1578","line":"    result_type min() const;"},
{"lineNum":" 1579","line":"    result_type max() const;"},
{"lineNum":" 1580","line":""},
{"lineNum":" 1581","line":"    friend bool operator==(const piecewise_constant_distribution& x,"},
{"lineNum":" 1582","line":"                           const piecewise_constant_distribution& y);"},
{"lineNum":" 1583","line":"    friend bool operator!=(const piecewise_constant_distribution& x,"},
{"lineNum":" 1584","line":"                           const piecewise_constant_distribution& y);"},
{"lineNum":" 1585","line":""},
{"lineNum":" 1586","line":"    template <class charT, class traits>"},
{"lineNum":" 1587","line":"    friend"},
{"lineNum":" 1588","line":"    basic_ostream<charT, traits>&"},
{"lineNum":" 1589","line":"    operator<<(basic_ostream<charT, traits>& os,"},
{"lineNum":" 1590","line":"               const piecewise_constant_distribution& x);"},
{"lineNum":" 1591","line":""},
{"lineNum":" 1592","line":"    template <class charT, class traits>"},
{"lineNum":" 1593","line":"    friend"},
{"lineNum":" 1594","line":"    basic_istream<charT, traits>&"},
{"lineNum":" 1595","line":"    operator>>(basic_istream<charT, traits>& is,"},
{"lineNum":" 1596","line":"               piecewise_constant_distribution& x);"},
{"lineNum":" 1597","line":"};"},
{"lineNum":" 1598","line":""},
{"lineNum":" 1599","line":"template<class RealType = double>"},
{"lineNum":" 1600","line":"class piecewise_linear_distribution"},
{"lineNum":" 1601","line":"{"},
{"lineNum":" 1602","line":"    // types"},
{"lineNum":" 1603","line":"    typedef RealType result_type;"},
{"lineNum":" 1604","line":""},
{"lineNum":" 1605","line":"    class param_type"},
{"lineNum":" 1606","line":"    {"},
{"lineNum":" 1607","line":"    public:"},
{"lineNum":" 1608","line":"        typedef piecewise_linear_distribution distribution_type;"},
{"lineNum":" 1609","line":""},
{"lineNum":" 1610","line":"        param_type();"},
{"lineNum":" 1611","line":"        template<class InputIteratorB, class InputIteratorW>"},
{"lineNum":" 1612","line":"            param_type(InputIteratorB firstB, InputIteratorB lastB,"},
{"lineNum":" 1613","line":"                       InputIteratorW firstW);"},
{"lineNum":" 1614","line":"        template<class UnaryOperation>"},
{"lineNum":" 1615","line":"            param_type(initializer_list<result_type> bl, UnaryOperation fw);"},
{"lineNum":" 1616","line":"        template<class UnaryOperation>"},
{"lineNum":" 1617","line":"            param_type(size_t nw, result_type xmin, result_type xmax,"},
{"lineNum":" 1618","line":"                       UnaryOperation fw);"},
{"lineNum":" 1619","line":""},
{"lineNum":" 1620","line":"        vector<result_type> intervals() const;"},
{"lineNum":" 1621","line":"        vector<result_type> densities() const;"},
{"lineNum":" 1622","line":""},
{"lineNum":" 1623","line":"        friend bool operator==(const param_type& x, const param_type& y);"},
{"lineNum":" 1624","line":"        friend bool operator!=(const param_type& x, const param_type& y);"},
{"lineNum":" 1625","line":"    };"},
{"lineNum":" 1626","line":""},
{"lineNum":" 1627","line":"    // constructor and reset functions"},
{"lineNum":" 1628","line":"    piecewise_linear_distribution();"},
{"lineNum":" 1629","line":"    template<class InputIteratorB, class InputIteratorW>"},
{"lineNum":" 1630","line":"        piecewise_linear_distribution(InputIteratorB firstB,"},
{"lineNum":" 1631","line":"                                      InputIteratorB lastB,"},
{"lineNum":" 1632","line":"                                      InputIteratorW firstW);"},
{"lineNum":" 1633","line":""},
{"lineNum":" 1634","line":"    template<class UnaryOperation>"},
{"lineNum":" 1635","line":"        piecewise_linear_distribution(initializer_list<result_type> bl,"},
{"lineNum":" 1636","line":"                                      UnaryOperation fw);"},
{"lineNum":" 1637","line":""},
{"lineNum":" 1638","line":"    template<class UnaryOperation>"},
{"lineNum":" 1639","line":"        piecewise_linear_distribution(size_t nw, result_type xmin,"},
{"lineNum":" 1640","line":"                                      result_type xmax, UnaryOperation fw);"},
{"lineNum":" 1641","line":""},
{"lineNum":" 1642","line":"    explicit piecewise_linear_distribution(const param_type& parm);"},
{"lineNum":" 1643","line":"    void reset();"},
{"lineNum":" 1644","line":""},
{"lineNum":" 1645","line":"    // generating functions"},
{"lineNum":" 1646","line":"    template<class URNG> result_type operator()(URNG& g);"},
{"lineNum":" 1647","line":"    template<class URNG> result_type operator()(URNG& g, const param_type& parm);"},
{"lineNum":" 1648","line":""},
{"lineNum":" 1649","line":"    // property functions"},
{"lineNum":" 1650","line":"    vector<result_type> intervals() const;"},
{"lineNum":" 1651","line":"    vector<result_type> densities() const;"},
{"lineNum":" 1652","line":""},
{"lineNum":" 1653","line":"    param_type param() const;"},
{"lineNum":" 1654","line":"    void param(const param_type& parm);"},
{"lineNum":" 1655","line":""},
{"lineNum":" 1656","line":"    result_type min() const;"},
{"lineNum":" 1657","line":"    result_type max() const;"},
{"lineNum":" 1658","line":""},
{"lineNum":" 1659","line":"    friend bool operator==(const piecewise_linear_distribution& x,"},
{"lineNum":" 1660","line":"                           const piecewise_linear_distribution& y);"},
{"lineNum":" 1661","line":"    friend bool operator!=(const piecewise_linear_distribution& x,"},
{"lineNum":" 1662","line":"                           const piecewise_linear_distribution& y);"},
{"lineNum":" 1663","line":""},
{"lineNum":" 1664","line":"    template <class charT, class traits>"},
{"lineNum":" 1665","line":"    friend"},
{"lineNum":" 1666","line":"    basic_ostream<charT, traits>&"},
{"lineNum":" 1667","line":"    operator<<(basic_ostream<charT, traits>& os,"},
{"lineNum":" 1668","line":"               const piecewise_linear_distribution& x);"},
{"lineNum":" 1669","line":""},
{"lineNum":" 1670","line":"    template <class charT, class traits>"},
{"lineNum":" 1671","line":"    friend"},
{"lineNum":" 1672","line":"    basic_istream<charT, traits>&"},
{"lineNum":" 1673","line":"    operator>>(basic_istream<charT, traits>& is,"},
{"lineNum":" 1674","line":"               piecewise_linear_distribution& x);"},
{"lineNum":" 1675","line":"};"},
{"lineNum":" 1676","line":""},
{"lineNum":" 1677","line":"} // std"},
{"lineNum":" 1678","line":"*/"},
{"lineNum":" 1679","line":""},
{"lineNum":" 1680","line":"#include <__config>"},
{"lineNum":" 1681","line":"#include <__random/uniform_int_distribution.h>"},
{"lineNum":" 1682","line":"#include <algorithm>"},
{"lineNum":" 1683","line":"#include <cmath>"},
{"lineNum":" 1684","line":"#include <concepts>"},
{"lineNum":" 1685","line":"#include <cstddef>"},
{"lineNum":" 1686","line":"#include <cstdint>"},
{"lineNum":" 1687","line":"#include <initializer_list>"},
{"lineNum":" 1688","line":"#include <iosfwd>"},
{"lineNum":" 1689","line":"#include <limits>"},
{"lineNum":" 1690","line":"#include <numeric>"},
{"lineNum":" 1691","line":"#include <string>"},
{"lineNum":" 1692","line":"#include <type_traits>"},
{"lineNum":" 1693","line":"#include <vector>"},
{"lineNum":" 1694","line":""},
{"lineNum":" 1695","line":"#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)"},
{"lineNum":" 1696","line":"#pragma GCC system_header"},
{"lineNum":" 1697","line":"#endif"},
{"lineNum":" 1698","line":""},
{"lineNum":" 1699","line":"_LIBCPP_PUSH_MACROS"},
{"lineNum":" 1700","line":"#include <__undef_macros>"},
{"lineNum":" 1701","line":""},
{"lineNum":" 1702","line":""},
{"lineNum":" 1703","line":"_LIBCPP_BEGIN_NAMESPACE_STD"},
{"lineNum":" 1704","line":""},
{"lineNum":" 1705","line":"#if _LIBCPP_STD_VER > 17 && !defined(_LIBCPP_HAS_NO_CONCEPTS)"},
{"lineNum":" 1706","line":""},
{"lineNum":" 1707","line":"// [rand.req.urng]"},
{"lineNum":" 1708","line":"template<class _Gen>"},
{"lineNum":" 1709","line":"concept uniform_random_bit_generator ="},
{"lineNum":" 1710","line":"  invocable<_Gen&> && unsigned_integral<invoke_result_t<_Gen&>> &&"},
{"lineNum":" 1711","line":"  requires {"},
{"lineNum":" 1712","line":"    { _Gen::min() } -> same_as<invoke_result_t<_Gen&>>;"},
{"lineNum":" 1713","line":"    { _Gen::max() } -> same_as<invoke_result_t<_Gen&>>;"},
{"lineNum":" 1714","line":"    requires bool_constant<(_Gen::min() < _Gen::max())>::value;"},
{"lineNum":" 1715","line":"  };"},
{"lineNum":" 1716","line":""},
{"lineNum":" 1717","line":"#endif // _LIBCPP_STD_VER > 17 && !defined(_LIBCPP_HAS_NO_CONCEPTS)"},
{"lineNum":" 1718","line":""},
{"lineNum":" 1719","line":"// __is_seed_sequence"},
{"lineNum":" 1720","line":""},
{"lineNum":" 1721","line":"template <class _Sseq, class _Engine>"},
{"lineNum":" 1722","line":"struct __is_seed_sequence"},
{"lineNum":" 1723","line":"{"},
{"lineNum":" 1724","line":"    static _LIBCPP_CONSTEXPR const bool value ="},
{"lineNum":" 1725","line":"              !is_convertible<_Sseq, typename _Engine::result_type>::value &&"},
{"lineNum":" 1726","line":"              !is_same<typename remove_cv<_Sseq>::type, _Engine>::value;"},
{"lineNum":" 1727","line":"};"},
{"lineNum":" 1728","line":""},
{"lineNum":" 1729","line":"// linear_congruential_engine"},
{"lineNum":" 1730","line":""},
{"lineNum":" 1731","line":"template <unsigned long long __a, unsigned long long __c,"},
{"lineNum":" 1732","line":"          unsigned long long __m, unsigned long long _Mp,"},
{"lineNum":" 1733","line":"          bool _MightOverflow = (__a != 0 && __m != 0 && __m-1 > (_Mp-__c)/__a),"},
{"lineNum":" 1734","line":"          bool _OverflowOK = ((__m | (__m-1)) > __m), // m = 2^n"},
{"lineNum":" 1735","line":"          bool _SchrageOK = (__a != 0 && __m != 0 && __m % __a <= __m / __a)> // r <= q"},
{"lineNum":" 1736","line":"struct __lce_alg_picker"},
{"lineNum":" 1737","line":"{"},
{"lineNum":" 1738","line":"    static_assert(__a != 0 || __m != 0 || !_MightOverflow || _OverflowOK || _SchrageOK,"},
{"lineNum":" 1739","line":"                  \"The current values of a, c, and m cannot generate a number \""},
{"lineNum":" 1740","line":"                  \"within bounds of linear_congruential_engine.\");"},
{"lineNum":" 1741","line":""},
{"lineNum":" 1742","line":"    static _LIBCPP_CONSTEXPR const bool __use_schrage = _MightOverflow &&"},
{"lineNum":" 1743","line":"                                                        !_OverflowOK &&"},
{"lineNum":" 1744","line":"                                                        _SchrageOK;"},
{"lineNum":" 1745","line":"};"},
{"lineNum":" 1746","line":""},
{"lineNum":" 1747","line":"template <unsigned long long __a, unsigned long long __c,"},
{"lineNum":" 1748","line":"          unsigned long long __m, unsigned long long _Mp,"},
{"lineNum":" 1749","line":"          bool _UseSchrage = __lce_alg_picker<__a, __c, __m, _Mp>::__use_schrage>"},
{"lineNum":" 1750","line":"struct __lce_ta;"},
{"lineNum":" 1751","line":""},
{"lineNum":" 1752","line":"// 64"},
{"lineNum":" 1753","line":""},
{"lineNum":" 1754","line":"template <unsigned long long __a, unsigned long long __c, unsigned long long __m>"},
{"lineNum":" 1755","line":"struct __lce_ta<__a, __c, __m, (unsigned long long)(~0), true>"},
{"lineNum":" 1756","line":"{"},
{"lineNum":" 1757","line":"    typedef unsigned long long result_type;"},
{"lineNum":" 1758","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1759","line":"    static result_type next(result_type __x)"},
{"lineNum":" 1760","line":"    {"},
{"lineNum":" 1761","line":"        // Schrage\'s algorithm"},
{"lineNum":" 1762","line":"        const result_type __q = __m / __a;"},
{"lineNum":" 1763","line":"        const result_type __r = __m % __a;"},
{"lineNum":" 1764","line":"        const result_type __t0 = __a * (__x % __q);"},
{"lineNum":" 1765","line":"        const result_type __t1 = __r * (__x / __q);"},
{"lineNum":" 1766","line":"        __x = __t0 + (__t0 < __t1) * __m - __t1;"},
{"lineNum":" 1767","line":"        __x += __c - (__x >= __m - __c) * __m;"},
{"lineNum":" 1768","line":"        return __x;"},
{"lineNum":" 1769","line":"    }"},
{"lineNum":" 1770","line":"};"},
{"lineNum":" 1771","line":""},
{"lineNum":" 1772","line":"template <unsigned long long __a, unsigned long long __m>"},
{"lineNum":" 1773","line":"struct __lce_ta<__a, 0, __m, (unsigned long long)(~0), true>"},
{"lineNum":" 1774","line":"{"},
{"lineNum":" 1775","line":"    typedef unsigned long long result_type;"},
{"lineNum":" 1776","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1777","line":"    static result_type next(result_type __x)"},
{"lineNum":" 1778","line":"    {"},
{"lineNum":" 1779","line":"        // Schrage\'s algorithm"},
{"lineNum":" 1780","line":"        const result_type __q = __m / __a;"},
{"lineNum":" 1781","line":"        const result_type __r = __m % __a;"},
{"lineNum":" 1782","line":"        const result_type __t0 = __a * (__x % __q);"},
{"lineNum":" 1783","line":"        const result_type __t1 = __r * (__x / __q);"},
{"lineNum":" 1784","line":"        __x = __t0 + (__t0 < __t1) * __m - __t1;"},
{"lineNum":" 1785","line":"        return __x;"},
{"lineNum":" 1786","line":"    }"},
{"lineNum":" 1787","line":"};"},
{"lineNum":" 1788","line":""},
{"lineNum":" 1789","line":"template <unsigned long long __a, unsigned long long __c, unsigned long long __m>"},
{"lineNum":" 1790","line":"struct __lce_ta<__a, __c, __m, (unsigned long long)(~0), false>"},
{"lineNum":" 1791","line":"{"},
{"lineNum":" 1792","line":"    typedef unsigned long long result_type;"},
{"lineNum":" 1793","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1794","line":"    static result_type next(result_type __x)"},
{"lineNum":" 1795","line":"    {"},
{"lineNum":" 1796","line":"        return (__a * __x + __c) % __m;"},
{"lineNum":" 1797","line":"    }"},
{"lineNum":" 1798","line":"};"},
{"lineNum":" 1799","line":""},
{"lineNum":" 1800","line":"template <unsigned long long __a, unsigned long long __c>"},
{"lineNum":" 1801","line":"struct __lce_ta<__a, __c, 0, (unsigned long long)(~0), false>"},
{"lineNum":" 1802","line":"{"},
{"lineNum":" 1803","line":"    typedef unsigned long long result_type;"},
{"lineNum":" 1804","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1805","line":"    static result_type next(result_type __x)"},
{"lineNum":" 1806","line":"    {"},
{"lineNum":" 1807","line":"        return __a * __x + __c;"},
{"lineNum":" 1808","line":"    }"},
{"lineNum":" 1809","line":"};"},
{"lineNum":" 1810","line":""},
{"lineNum":" 1811","line":"// 32"},
{"lineNum":" 1812","line":""},
{"lineNum":" 1813","line":"template <unsigned long long _Ap, unsigned long long _Cp, unsigned long long _Mp>"},
{"lineNum":" 1814","line":"struct __lce_ta<_Ap, _Cp, _Mp, unsigned(~0), true>"},
{"lineNum":" 1815","line":"{"},
{"lineNum":" 1816","line":"    typedef unsigned result_type;"},
{"lineNum":" 1817","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1818","line":"    static result_type next(result_type __x)"},
{"lineNum":" 1819","line":"    {"},
{"lineNum":" 1820","line":"        const result_type __a = static_cast<result_type>(_Ap);"},
{"lineNum":" 1821","line":"        const result_type __c = static_cast<result_type>(_Cp);"},
{"lineNum":" 1822","line":"        const result_type __m = static_cast<result_type>(_Mp);"},
{"lineNum":" 1823","line":"        // Schrage\'s algorithm"},
{"lineNum":" 1824","line":"        const result_type __q = __m / __a;"},
{"lineNum":" 1825","line":"        const result_type __r = __m % __a;"},
{"lineNum":" 1826","line":"        const result_type __t0 = __a * (__x % __q);"},
{"lineNum":" 1827","line":"        const result_type __t1 = __r * (__x / __q);"},
{"lineNum":" 1828","line":"        __x = __t0 + (__t0 < __t1) * __m - __t1;"},
{"lineNum":" 1829","line":"        __x += __c - (__x >= __m - __c) * __m;"},
{"lineNum":" 1830","line":"        return __x;"},
{"lineNum":" 1831","line":"    }"},
{"lineNum":" 1832","line":"};"},
{"lineNum":" 1833","line":""},
{"lineNum":" 1834","line":"template <unsigned long long _Ap, unsigned long long _Mp>"},
{"lineNum":" 1835","line":"struct __lce_ta<_Ap, 0, _Mp, unsigned(~0), true>"},
{"lineNum":" 1836","line":"{"},
{"lineNum":" 1837","line":"    typedef unsigned result_type;"},
{"lineNum":" 1838","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1839","line":"    static result_type next(result_type __x)"},
{"lineNum":" 1840","line":"    {"},
{"lineNum":" 1841","line":"        const result_type __a = static_cast<result_type>(_Ap);"},
{"lineNum":" 1842","line":"        const result_type __m = static_cast<result_type>(_Mp);"},
{"lineNum":" 1843","line":"        // Schrage\'s algorithm"},
{"lineNum":" 1844","line":"        const result_type __q = __m / __a;"},
{"lineNum":" 1845","line":"        const result_type __r = __m % __a;"},
{"lineNum":" 1846","line":"        const result_type __t0 = __a * (__x % __q);"},
{"lineNum":" 1847","line":"        const result_type __t1 = __r * (__x / __q);"},
{"lineNum":" 1848","line":"        __x = __t0 + (__t0 < __t1) * __m - __t1;"},
{"lineNum":" 1849","line":"        return __x;"},
{"lineNum":" 1850","line":"    }"},
{"lineNum":" 1851","line":"};"},
{"lineNum":" 1852","line":""},
{"lineNum":" 1853","line":"template <unsigned long long _Ap, unsigned long long _Cp, unsigned long long _Mp>"},
{"lineNum":" 1854","line":"struct __lce_ta<_Ap, _Cp, _Mp, unsigned(~0), false>"},
{"lineNum":" 1855","line":"{"},
{"lineNum":" 1856","line":"    typedef unsigned result_type;"},
{"lineNum":" 1857","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1858","line":"    static result_type next(result_type __x)"},
{"lineNum":" 1859","line":"    {"},
{"lineNum":" 1860","line":"        const result_type __a = static_cast<result_type>(_Ap);"},
{"lineNum":" 1861","line":"        const result_type __c = static_cast<result_type>(_Cp);"},
{"lineNum":" 1862","line":"        const result_type __m = static_cast<result_type>(_Mp);"},
{"lineNum":" 1863","line":"        return (__a * __x + __c) % __m;"},
{"lineNum":" 1864","line":"    }"},
{"lineNum":" 1865","line":"};"},
{"lineNum":" 1866","line":""},
{"lineNum":" 1867","line":"template <unsigned long long _Ap, unsigned long long _Cp>"},
{"lineNum":" 1868","line":"struct __lce_ta<_Ap, _Cp, 0, unsigned(~0), false>"},
{"lineNum":" 1869","line":"{"},
{"lineNum":" 1870","line":"    typedef unsigned result_type;"},
{"lineNum":" 1871","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1872","line":"    static result_type next(result_type __x)"},
{"lineNum":" 1873","line":"    {"},
{"lineNum":" 1874","line":"        const result_type __a = static_cast<result_type>(_Ap);"},
{"lineNum":" 1875","line":"        const result_type __c = static_cast<result_type>(_Cp);"},
{"lineNum":" 1876","line":"        return __a * __x + __c;"},
{"lineNum":" 1877","line":"    }"},
{"lineNum":" 1878","line":"};"},
{"lineNum":" 1879","line":""},
{"lineNum":" 1880","line":"// 16"},
{"lineNum":" 1881","line":""},
{"lineNum":" 1882","line":"template <unsigned long long __a, unsigned long long __c, unsigned long long __m, bool __b>"},
{"lineNum":" 1883","line":"struct __lce_ta<__a, __c, __m, (unsigned short)(~0), __b>"},
{"lineNum":" 1884","line":"{"},
{"lineNum":" 1885","line":"    typedef unsigned short result_type;"},
{"lineNum":" 1886","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1887","line":"    static result_type next(result_type __x)"},
{"lineNum":" 1888","line":"    {"},
{"lineNum":" 1889","line":"        return static_cast<result_type>(__lce_ta<__a, __c, __m, unsigned(~0)>::next(__x));"},
{"lineNum":" 1890","line":"    }"},
{"lineNum":" 1891","line":"};"},
{"lineNum":" 1892","line":""},
{"lineNum":" 1893","line":"template <class _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>"},
{"lineNum":" 1894","line":"class _LIBCPP_TEMPLATE_VIS linear_congruential_engine;"},
{"lineNum":" 1895","line":""},
{"lineNum":" 1896","line":"template <class _CharT, class _Traits,"},
{"lineNum":" 1897","line":"          class _Up, _Up _Ap, _Up _Cp, _Up _Np>"},
{"lineNum":" 1898","line":"_LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1899","line":"basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 1900","line":"operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 1901","line":"           const linear_congruential_engine<_Up, _Ap, _Cp, _Np>&);"},
{"lineNum":" 1902","line":""},
{"lineNum":" 1903","line":"template <class _CharT, class _Traits,"},
{"lineNum":" 1904","line":"          class _Up, _Up _Ap, _Up _Cp, _Up _Np>"},
{"lineNum":" 1905","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 1906","line":"operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 1907","line":"           linear_congruential_engine<_Up, _Ap, _Cp, _Np>& __x);"},
{"lineNum":" 1908","line":""},
{"lineNum":" 1909","line":"template <class _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>"},
{"lineNum":" 1910","line":"class _LIBCPP_TEMPLATE_VIS linear_congruential_engine"},
{"lineNum":" 1911","line":"{"},
{"lineNum":" 1912","line":"public:"},
{"lineNum":" 1913","line":"    // types"},
{"lineNum":" 1914","line":"    typedef _UIntType result_type;"},
{"lineNum":" 1915","line":""},
{"lineNum":" 1916","line":"private:"},
{"lineNum":" 1917","line":"    result_type __x_;"},
{"lineNum":" 1918","line":""},
{"lineNum":" 1919","line":"    static _LIBCPP_CONSTEXPR const result_type _Mp = result_type(~0);"},
{"lineNum":" 1920","line":""},
{"lineNum":" 1921","line":"    static_assert(__m == 0 || __a < __m, \"linear_congruential_engine invalid parameters\");"},
{"lineNum":" 1922","line":"    static_assert(__m == 0 || __c < __m, \"linear_congruential_engine invalid parameters\");"},
{"lineNum":" 1923","line":"    static_assert(is_unsigned<_UIntType>::value, \"_UIntType must be unsigned type\");"},
{"lineNum":" 1924","line":"public:"},
{"lineNum":" 1925","line":"    static _LIBCPP_CONSTEXPR const result_type _Min = __c == 0u ? 1u: 0u;"},
{"lineNum":" 1926","line":"    static _LIBCPP_CONSTEXPR const result_type _Max = __m - 1u;"},
{"lineNum":" 1927","line":"    static_assert(_Min < _Max,           \"linear_congruential_engine invalid parameters\");"},
{"lineNum":" 1928","line":""},
{"lineNum":" 1929","line":"    // engine characteristics"},
{"lineNum":" 1930","line":"    static _LIBCPP_CONSTEXPR const result_type multiplier = __a;"},
{"lineNum":" 1931","line":"    static _LIBCPP_CONSTEXPR const result_type increment = __c;"},
{"lineNum":" 1932","line":"    static _LIBCPP_CONSTEXPR const result_type modulus = __m;"},
{"lineNum":" 1933","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1934","line":"    static _LIBCPP_CONSTEXPR result_type min() {return _Min;}"},
{"lineNum":" 1935","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1936","line":"    static _LIBCPP_CONSTEXPR result_type max() {return _Max;}"},
{"lineNum":" 1937","line":"    static _LIBCPP_CONSTEXPR const result_type default_seed = 1u;"},
{"lineNum":" 1938","line":""},
{"lineNum":" 1939","line":"    // constructors and seeding functions"},
{"lineNum":" 1940","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 1941","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1942","line":"    linear_congruential_engine() : linear_congruential_engine(default_seed) {}"},
{"lineNum":" 1943","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1944","line":"    explicit linear_congruential_engine(result_type __s) { seed(__s); }"},
{"lineNum":" 1945","line":"#else"},
{"lineNum":" 1946","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1947","line":"    explicit linear_congruential_engine(result_type __s = default_seed) {"},
{"lineNum":" 1948","line":"      seed(__s);"},
{"lineNum":" 1949","line":"    }"},
{"lineNum":" 1950","line":"#endif"},
{"lineNum":" 1951","line":"    template<class _Sseq>"},
{"lineNum":" 1952","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1953","line":"        explicit linear_congruential_engine(_Sseq& __q,"},
{"lineNum":" 1954","line":"        typename enable_if<__is_seed_sequence<_Sseq, linear_congruential_engine>::value>::type* = 0)"},
{"lineNum":" 1955","line":"        {seed(__q);}"},
{"lineNum":" 1956","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1957","line":"    void seed(result_type __s = default_seed)"},
{"lineNum":" 1958","line":"        {seed(integral_constant<bool, __m == 0>(),"},
{"lineNum":" 1959","line":"              integral_constant<bool, __c == 0>(), __s);}"},
{"lineNum":" 1960","line":"    template<class _Sseq>"},
{"lineNum":" 1961","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1962","line":"        typename enable_if"},
{"lineNum":" 1963","line":"        <"},
{"lineNum":" 1964","line":"            __is_seed_sequence<_Sseq, linear_congruential_engine>::value,"},
{"lineNum":" 1965","line":"            void"},
{"lineNum":" 1966","line":"        >::type"},
{"lineNum":" 1967","line":"        seed(_Sseq& __q)"},
{"lineNum":" 1968","line":"            {__seed(__q, integral_constant<unsigned,"},
{"lineNum":" 1969","line":"                1 + (__m == 0 ? (sizeof(result_type) * __CHAR_BIT__ - 1)/32"},
{"lineNum":" 1970","line":"                             :  (__m > 0x100000000ull))>());}"},
{"lineNum":" 1971","line":""},
{"lineNum":" 1972","line":"    // generating functions"},
{"lineNum":" 1973","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1974","line":"    result_type operator()()"},
{"lineNum":" 1975","line":"        {return __x_ = static_cast<result_type>(__lce_ta<__a, __c, __m, _Mp>::next(__x_));}"},
{"lineNum":" 1976","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1977","line":"    void discard(unsigned long long __z) {for (; __z; --__z) operator()();}"},
{"lineNum":" 1978","line":""},
{"lineNum":" 1979","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1980","line":"    bool operator==(const linear_congruential_engine& __x,"},
{"lineNum":" 1981","line":"                    const linear_congruential_engine& __y)"},
{"lineNum":" 1982","line":"        {return __x.__x_ == __y.__x_;}"},
{"lineNum":" 1983","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1984","line":"    bool operator!=(const linear_congruential_engine& __x,"},
{"lineNum":" 1985","line":"                    const linear_congruential_engine& __y)"},
{"lineNum":" 1986","line":"        {return !(__x == __y);}"},
{"lineNum":" 1987","line":""},
{"lineNum":" 1988","line":"private:"},
{"lineNum":" 1989","line":""},
{"lineNum":" 1990","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1991","line":"    void seed(true_type, true_type, result_type __s) {__x_ = __s == 0 ? 1 : __s;}"},
{"lineNum":" 1992","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1993","line":"    void seed(true_type, false_type, result_type __s) {__x_ = __s;}"},
{"lineNum":" 1994","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1995","line":"    void seed(false_type, true_type, result_type __s) {__x_ = __s % __m == 0 ?"},
{"lineNum":" 1996","line":"                                                                 1 : __s % __m;}"},
{"lineNum":" 1997","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1998","line":"    void seed(false_type, false_type, result_type __s) {__x_ = __s % __m;}"},
{"lineNum":" 1999","line":""},
{"lineNum":" 2000","line":"    template<class _Sseq>"},
{"lineNum":" 2001","line":"        void __seed(_Sseq& __q, integral_constant<unsigned, 1>);"},
{"lineNum":" 2002","line":"    template<class _Sseq>"},
{"lineNum":" 2003","line":"        void __seed(_Sseq& __q, integral_constant<unsigned, 2>);"},
{"lineNum":" 2004","line":""},
{"lineNum":" 2005","line":"    template <class _CharT, class _Traits,"},
{"lineNum":" 2006","line":"              class _Up, _Up _Ap, _Up _Cp, _Up _Np>"},
{"lineNum":" 2007","line":"    friend"},
{"lineNum":" 2008","line":"    basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 2009","line":"    operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 2010","line":"               const linear_congruential_engine<_Up, _Ap, _Cp, _Np>&);"},
{"lineNum":" 2011","line":""},
{"lineNum":" 2012","line":"    template <class _CharT, class _Traits,"},
{"lineNum":" 2013","line":"              class _Up, _Up _Ap, _Up _Cp, _Up _Np>"},
{"lineNum":" 2014","line":"    friend"},
{"lineNum":" 2015","line":"    basic_istream<_CharT, _Traits>&"},
{"lineNum":" 2016","line":"    operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 2017","line":"               linear_congruential_engine<_Up, _Ap, _Cp, _Np>& __x);"},
{"lineNum":" 2018","line":"};"},
{"lineNum":" 2019","line":""},
{"lineNum":" 2020","line":"template <class _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>"},
{"lineNum":" 2021","line":"    _LIBCPP_CONSTEXPR const typename linear_congruential_engine<_UIntType, __a, __c, __m>::result_type"},
{"lineNum":" 2022","line":"    linear_congruential_engine<_UIntType, __a, __c, __m>::multiplier;"},
{"lineNum":" 2023","line":""},
{"lineNum":" 2024","line":"template <class _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>"},
{"lineNum":" 2025","line":"    _LIBCPP_CONSTEXPR const typename linear_congruential_engine<_UIntType, __a, __c, __m>::result_type"},
{"lineNum":" 2026","line":"    linear_congruential_engine<_UIntType, __a, __c, __m>::increment;"},
{"lineNum":" 2027","line":""},
{"lineNum":" 2028","line":"template <class _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>"},
{"lineNum":" 2029","line":"    _LIBCPP_CONSTEXPR const typename linear_congruential_engine<_UIntType, __a, __c, __m>::result_type"},
{"lineNum":" 2030","line":"    linear_congruential_engine<_UIntType, __a, __c, __m>::modulus;"},
{"lineNum":" 2031","line":""},
{"lineNum":" 2032","line":"template <class _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>"},
{"lineNum":" 2033","line":"    _LIBCPP_CONSTEXPR const typename linear_congruential_engine<_UIntType, __a, __c, __m>::result_type"},
{"lineNum":" 2034","line":"    linear_congruential_engine<_UIntType, __a, __c, __m>::default_seed;"},
{"lineNum":" 2035","line":""},
{"lineNum":" 2036","line":"template <class _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>"},
{"lineNum":" 2037","line":"template<class _Sseq>"},
{"lineNum":" 2038","line":"void"},
{"lineNum":" 2039","line":"linear_congruential_engine<_UIntType, __a, __c, __m>::__seed(_Sseq& __q,"},
{"lineNum":" 2040","line":"                                                 integral_constant<unsigned, 1>)"},
{"lineNum":" 2041","line":"{"},
{"lineNum":" 2042","line":"    const unsigned __k = 1;"},
{"lineNum":" 2043","line":"    uint32_t __ar[__k+3];"},
{"lineNum":" 2044","line":"    __q.generate(__ar, __ar + __k + 3);"},
{"lineNum":" 2045","line":"    result_type __s = static_cast<result_type>(__ar[3] % __m);"},
{"lineNum":" 2046","line":"    __x_ = __c == 0 && __s == 0 ? result_type(1) : __s;"},
{"lineNum":" 2047","line":"}"},
{"lineNum":" 2048","line":""},
{"lineNum":" 2049","line":"template <class _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>"},
{"lineNum":" 2050","line":"template<class _Sseq>"},
{"lineNum":" 2051","line":"void"},
{"lineNum":" 2052","line":"linear_congruential_engine<_UIntType, __a, __c, __m>::__seed(_Sseq& __q,"},
{"lineNum":" 2053","line":"                                                 integral_constant<unsigned, 2>)"},
{"lineNum":" 2054","line":"{"},
{"lineNum":" 2055","line":"    const unsigned __k = 2;"},
{"lineNum":" 2056","line":"    uint32_t __ar[__k+3];"},
{"lineNum":" 2057","line":"    __q.generate(__ar, __ar + __k + 3);"},
{"lineNum":" 2058","line":"    result_type __s = static_cast<result_type>((__ar[3] +"},
{"lineNum":" 2059","line":"                                              ((uint64_t)__ar[4] << 32)) % __m);"},
{"lineNum":" 2060","line":"    __x_ = __c == 0 && __s == 0 ? result_type(1) : __s;"},
{"lineNum":" 2061","line":"}"},
{"lineNum":" 2062","line":""},
{"lineNum":" 2063","line":"template <class _CharT, class _Traits,"},
{"lineNum":" 2064","line":"          class _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>"},
{"lineNum":" 2065","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2066","line":"basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 2067","line":"operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 2068","line":"           const linear_congruential_engine<_UIntType, __a, __c, __m>& __x)"},
{"lineNum":" 2069","line":"{"},
{"lineNum":" 2070","line":"    __save_flags<_CharT, _Traits> __lx(__os);"},
{"lineNum":" 2071","line":"    typedef basic_ostream<_CharT, _Traits> _Ostream;"},
{"lineNum":" 2072","line":"    __os.flags(_Ostream::dec | _Ostream::left);"},
{"lineNum":" 2073","line":"    __os.fill(__os.widen(\' \'));"},
{"lineNum":" 2074","line":"    return __os << __x.__x_;"},
{"lineNum":" 2075","line":"}"},
{"lineNum":" 2076","line":""},
{"lineNum":" 2077","line":"template <class _CharT, class _Traits,"},
{"lineNum":" 2078","line":"          class _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>"},
{"lineNum":" 2079","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 2080","line":"operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 2081","line":"           linear_congruential_engine<_UIntType, __a, __c, __m>& __x)"},
{"lineNum":" 2082","line":"{"},
{"lineNum":" 2083","line":"    __save_flags<_CharT, _Traits> __lx(__is);"},
{"lineNum":" 2084","line":"    typedef basic_istream<_CharT, _Traits> _Istream;"},
{"lineNum":" 2085","line":"    __is.flags(_Istream::dec | _Istream::skipws);"},
{"lineNum":" 2086","line":"    _UIntType __t;"},
{"lineNum":" 2087","line":"    __is >> __t;"},
{"lineNum":" 2088","line":"    if (!__is.fail())"},
{"lineNum":" 2089","line":"        __x.__x_ = __t;"},
{"lineNum":" 2090","line":"    return __is;"},
{"lineNum":" 2091","line":"}"},
{"lineNum":" 2092","line":""},
{"lineNum":" 2093","line":"typedef linear_congruential_engine<uint_fast32_t, 16807, 0, 2147483647>"},
{"lineNum":" 2094","line":"                                                                   minstd_rand0;"},
{"lineNum":" 2095","line":"typedef linear_congruential_engine<uint_fast32_t, 48271, 0, 2147483647>"},
{"lineNum":" 2096","line":"                                                                    minstd_rand;"},
{"lineNum":" 2097","line":"typedef minstd_rand                                       default_random_engine;"},
{"lineNum":" 2098","line":"// mersenne_twister_engine"},
{"lineNum":" 2099","line":""},
{"lineNum":" 2100","line":"template <class _UIntType, size_t __w, size_t __n, size_t __m, size_t __r,"},
{"lineNum":" 2101","line":"          _UIntType __a, size_t __u, _UIntType __d, size_t __s,"},
{"lineNum":" 2102","line":"          _UIntType __b, size_t __t, _UIntType __c, size_t __l, _UIntType __f>"},
{"lineNum":" 2103","line":"class _LIBCPP_TEMPLATE_VIS mersenne_twister_engine;"},
{"lineNum":" 2104","line":""},
{"lineNum":" 2105","line":"template <class _UInt, size_t _Wp, size_t _Np, size_t _Mp, size_t _Rp,"},
{"lineNum":" 2106","line":"          _UInt _Ap, size_t _Up, _UInt _Dp, size_t _Sp,"},
{"lineNum":" 2107","line":"          _UInt _Bp, size_t _Tp, _UInt _Cp, size_t _Lp, _UInt _Fp>"},
{"lineNum":" 2108","line":"bool"},
{"lineNum":" 2109","line":"operator==(const mersenne_twister_engine<_UInt, _Wp, _Np, _Mp, _Rp, _Ap, _Up, _Dp, _Sp,"},
{"lineNum":" 2110","line":"                                         _Bp, _Tp, _Cp, _Lp, _Fp>& __x,"},
{"lineNum":" 2111","line":"           const mersenne_twister_engine<_UInt, _Wp, _Np, _Mp, _Rp, _Ap, _Up, _Dp, _Sp,"},
{"lineNum":" 2112","line":"                                         _Bp, _Tp, _Cp, _Lp, _Fp>& __y);"},
{"lineNum":" 2113","line":""},
{"lineNum":" 2114","line":"template <class _UInt, size_t _Wp, size_t _Np, size_t _Mp, size_t _Rp,"},
{"lineNum":" 2115","line":"          _UInt _Ap, size_t _Up, _UInt _Dp, size_t _Sp,"},
{"lineNum":" 2116","line":"          _UInt _Bp, size_t _Tp, _UInt _Cp, size_t _Lp, _UInt _Fp>"},
{"lineNum":" 2117","line":"_LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2118","line":"bool"},
{"lineNum":" 2119","line":"operator!=(const mersenne_twister_engine<_UInt, _Wp, _Np, _Mp, _Rp, _Ap, _Up, _Dp, _Sp,"},
{"lineNum":" 2120","line":"                                         _Bp, _Tp, _Cp, _Lp, _Fp>& __x,"},
{"lineNum":" 2121","line":"           const mersenne_twister_engine<_UInt, _Wp, _Np, _Mp, _Rp, _Ap, _Up, _Dp, _Sp,"},
{"lineNum":" 2122","line":"                                         _Bp, _Tp, _Cp, _Lp, _Fp>& __y);"},
{"lineNum":" 2123","line":""},
{"lineNum":" 2124","line":"template <class _CharT, class _Traits,"},
{"lineNum":" 2125","line":"          class _UInt, size_t _Wp, size_t _Np, size_t _Mp, size_t _Rp,"},
{"lineNum":" 2126","line":"          _UInt _Ap, size_t _Up, _UInt _Dp, size_t _Sp,"},
{"lineNum":" 2127","line":"          _UInt _Bp, size_t _Tp, _UInt _Cp, size_t _Lp, _UInt _Fp>"},
{"lineNum":" 2128","line":"basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 2129","line":"operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 2130","line":"           const mersenne_twister_engine<_UInt, _Wp, _Np, _Mp, _Rp, _Ap, _Up, _Dp, _Sp,"},
{"lineNum":" 2131","line":"                                         _Bp, _Tp, _Cp, _Lp, _Fp>& __x);"},
{"lineNum":" 2132","line":""},
{"lineNum":" 2133","line":"template <class _CharT, class _Traits,"},
{"lineNum":" 2134","line":"          class _UInt, size_t _Wp, size_t _Np, size_t _Mp, size_t _Rp,"},
{"lineNum":" 2135","line":"          _UInt _Ap, size_t _Up, _UInt _Dp, size_t _Sp,"},
{"lineNum":" 2136","line":"          _UInt _Bp, size_t _Tp, _UInt _Cp, size_t _Lp, _UInt _Fp>"},
{"lineNum":" 2137","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 2138","line":"operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 2139","line":"           mersenne_twister_engine<_UInt, _Wp, _Np, _Mp, _Rp, _Ap, _Up, _Dp, _Sp,"},
{"lineNum":" 2140","line":"                                   _Bp, _Tp, _Cp, _Lp, _Fp>& __x);"},
{"lineNum":" 2141","line":""},
{"lineNum":" 2142","line":"template <class _UIntType, size_t __w, size_t __n, size_t __m, size_t __r,"},
{"lineNum":" 2143","line":"          _UIntType __a, size_t __u, _UIntType __d, size_t __s,"},
{"lineNum":" 2144","line":"          _UIntType __b, size_t __t, _UIntType __c, size_t __l, _UIntType __f>"},
{"lineNum":" 2145","line":"class _LIBCPP_TEMPLATE_VIS mersenne_twister_engine"},
{"lineNum":" 2146","line":"{"},
{"lineNum":" 2147","line":"public:"},
{"lineNum":" 2148","line":"    // types"},
{"lineNum":" 2149","line":"    typedef _UIntType result_type;"},
{"lineNum":" 2150","line":""},
{"lineNum":" 2151","line":"private:"},
{"lineNum":" 2152","line":"    result_type __x_[__n];"},
{"lineNum":" 2153","line":"    size_t      __i_;"},
{"lineNum":" 2154","line":""},
{"lineNum":" 2155","line":"    static_assert(  0 <  __m, \"mersenne_twister_engine invalid parameters\");"},
{"lineNum":" 2156","line":"    static_assert(__m <= __n, \"mersenne_twister_engine invalid parameters\");"},
{"lineNum":" 2157","line":"    static _LIBCPP_CONSTEXPR const result_type _Dt = numeric_limits<result_type>::digits;"},
{"lineNum":" 2158","line":"    static_assert(__w <= _Dt, \"mersenne_twister_engine invalid parameters\");"},
{"lineNum":" 2159","line":"    static_assert(  2 <= __w, \"mersenne_twister_engine invalid parameters\");"},
{"lineNum":" 2160","line":"    static_assert(__r <= __w, \"mersenne_twister_engine invalid parameters\");"},
{"lineNum":" 2161","line":"    static_assert(__u <= __w, \"mersenne_twister_engine invalid parameters\");"},
{"lineNum":" 2162","line":"    static_assert(__s <= __w, \"mersenne_twister_engine invalid parameters\");"},
{"lineNum":" 2163","line":"    static_assert(__t <= __w, \"mersenne_twister_engine invalid parameters\");"},
{"lineNum":" 2164","line":"    static_assert(__l <= __w, \"mersenne_twister_engine invalid parameters\");"},
{"lineNum":" 2165","line":"public:"},
{"lineNum":" 2166","line":"    static _LIBCPP_CONSTEXPR const result_type _Min = 0;"},
{"lineNum":" 2167","line":"    static _LIBCPP_CONSTEXPR const result_type _Max = __w == _Dt ? result_type(~0) :"},
{"lineNum":" 2168","line":"                                                      (result_type(1) << __w) - result_type(1);"},
{"lineNum":" 2169","line":"    static_assert(_Min < _Max, \"mersenne_twister_engine invalid parameters\");"},
{"lineNum":" 2170","line":"    static_assert(__a <= _Max, \"mersenne_twister_engine invalid parameters\");"},
{"lineNum":" 2171","line":"    static_assert(__b <= _Max, \"mersenne_twister_engine invalid parameters\");"},
{"lineNum":" 2172","line":"    static_assert(__c <= _Max, \"mersenne_twister_engine invalid parameters\");"},
{"lineNum":" 2173","line":"    static_assert(__d <= _Max, \"mersenne_twister_engine invalid parameters\");"},
{"lineNum":" 2174","line":"    static_assert(__f <= _Max, \"mersenne_twister_engine invalid parameters\");"},
{"lineNum":" 2175","line":""},
{"lineNum":" 2176","line":"    // engine characteristics"},
{"lineNum":" 2177","line":"    static _LIBCPP_CONSTEXPR const size_t word_size = __w;"},
{"lineNum":" 2178","line":"    static _LIBCPP_CONSTEXPR const size_t state_size = __n;"},
{"lineNum":" 2179","line":"    static _LIBCPP_CONSTEXPR const size_t shift_size = __m;"},
{"lineNum":" 2180","line":"    static _LIBCPP_CONSTEXPR const size_t mask_bits = __r;"},
{"lineNum":" 2181","line":"    static _LIBCPP_CONSTEXPR const result_type xor_mask = __a;"},
{"lineNum":" 2182","line":"    static _LIBCPP_CONSTEXPR const size_t tempering_u = __u;"},
{"lineNum":" 2183","line":"    static _LIBCPP_CONSTEXPR const result_type tempering_d = __d;"},
{"lineNum":" 2184","line":"    static _LIBCPP_CONSTEXPR const size_t tempering_s = __s;"},
{"lineNum":" 2185","line":"    static _LIBCPP_CONSTEXPR const result_type tempering_b = __b;"},
{"lineNum":" 2186","line":"    static _LIBCPP_CONSTEXPR const size_t tempering_t = __t;"},
{"lineNum":" 2187","line":"    static _LIBCPP_CONSTEXPR const result_type tempering_c = __c;"},
{"lineNum":" 2188","line":"    static _LIBCPP_CONSTEXPR const size_t tempering_l = __l;"},
{"lineNum":" 2189","line":"    static _LIBCPP_CONSTEXPR const result_type initialization_multiplier = __f;"},
{"lineNum":" 2190","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2191","line":"    static _LIBCPP_CONSTEXPR result_type min() { return _Min; }"},
{"lineNum":" 2192","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2193","line":"    static _LIBCPP_CONSTEXPR result_type max() { return _Max; }"},
{"lineNum":" 2194","line":"    static _LIBCPP_CONSTEXPR const result_type default_seed = 5489u;"},
{"lineNum":" 2195","line":""},
{"lineNum":" 2196","line":"    // constructors and seeding functions"},
{"lineNum":" 2197","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 2198","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2199","line":"    mersenne_twister_engine() : mersenne_twister_engine(default_seed) {}"},
{"lineNum":" 2200","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2201","line":"    explicit mersenne_twister_engine(result_type __sd) { seed(__sd); }"},
{"lineNum":" 2202","line":"#else"},
{"lineNum":" 2203","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2204","line":"    explicit mersenne_twister_engine(result_type __sd = default_seed) {"},
{"lineNum":" 2205","line":"      seed(__sd);"},
{"lineNum":" 2206","line":"    }"},
{"lineNum":" 2207","line":"#endif"},
{"lineNum":" 2208","line":"    template<class _Sseq>"},
{"lineNum":" 2209","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2210","line":"        explicit mersenne_twister_engine(_Sseq& __q,"},
{"lineNum":" 2211","line":"        typename enable_if<__is_seed_sequence<_Sseq, mersenne_twister_engine>::value>::type* = 0)"},
{"lineNum":" 2212","line":"        {seed(__q);}"},
{"lineNum":" 2213","line":"    void seed(result_type __sd = default_seed);"},
{"lineNum":" 2214","line":"    template<class _Sseq>"},
{"lineNum":" 2215","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2216","line":"        typename enable_if"},
{"lineNum":" 2217","line":"        <"},
{"lineNum":" 2218","line":"            __is_seed_sequence<_Sseq, mersenne_twister_engine>::value,"},
{"lineNum":" 2219","line":"            void"},
{"lineNum":" 2220","line":"        >::type"},
{"lineNum":" 2221","line":"        seed(_Sseq& __q)"},
{"lineNum":" 2222","line":"            {__seed(__q, integral_constant<unsigned, 1 + (__w - 1) / 32>());}"},
{"lineNum":" 2223","line":""},
{"lineNum":" 2224","line":"    // generating functions"},
{"lineNum":" 2225","line":"    result_type operator()();"},
{"lineNum":" 2226","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2227","line":"    void discard(unsigned long long __z) {for (; __z; --__z) operator()();}"},
{"lineNum":" 2228","line":""},
{"lineNum":" 2229","line":"    template <class _UInt, size_t _Wp, size_t _Np, size_t _Mp, size_t _Rp,"},
{"lineNum":" 2230","line":"              _UInt _Ap, size_t _Up, _UInt _Dp, size_t _Sp,"},
{"lineNum":" 2231","line":"              _UInt _Bp, size_t _Tp, _UInt _Cp, size_t _Lp, _UInt _Fp>"},
{"lineNum":" 2232","line":"    friend"},
{"lineNum":" 2233","line":"    bool"},
{"lineNum":" 2234","line":"    operator==(const mersenne_twister_engine<_UInt, _Wp, _Np, _Mp, _Rp, _Ap, _Up, _Dp, _Sp,"},
{"lineNum":" 2235","line":"                                             _Bp, _Tp, _Cp, _Lp, _Fp>& __x,"},
{"lineNum":" 2236","line":"               const mersenne_twister_engine<_UInt, _Wp, _Np, _Mp, _Rp, _Ap, _Up, _Dp, _Sp,"},
{"lineNum":" 2237","line":"                                             _Bp, _Tp, _Cp, _Lp, _Fp>& __y);"},
{"lineNum":" 2238","line":""},
{"lineNum":" 2239","line":"    template <class _UInt, size_t _Wp, size_t _Np, size_t _Mp, size_t _Rp,"},
{"lineNum":" 2240","line":"              _UInt _Ap, size_t _Up, _UInt _Dp, size_t _Sp,"},
{"lineNum":" 2241","line":"              _UInt _Bp, size_t _Tp, _UInt _Cp, size_t _Lp, _UInt _Fp>"},
{"lineNum":" 2242","line":"    friend"},
{"lineNum":" 2243","line":"    bool"},
{"lineNum":" 2244","line":"    operator!=(const mersenne_twister_engine<_UInt, _Wp, _Np, _Mp, _Rp, _Ap, _Up, _Dp, _Sp,"},
{"lineNum":" 2245","line":"                                             _Bp, _Tp, _Cp, _Lp, _Fp>& __x,"},
{"lineNum":" 2246","line":"               const mersenne_twister_engine<_UInt, _Wp, _Np, _Mp, _Rp, _Ap, _Up, _Dp, _Sp,"},
{"lineNum":" 2247","line":"                                             _Bp, _Tp, _Cp, _Lp, _Fp>& __y);"},
{"lineNum":" 2248","line":""},
{"lineNum":" 2249","line":"    template <class _CharT, class _Traits,"},
{"lineNum":" 2250","line":"              class _UInt, size_t _Wp, size_t _Np, size_t _Mp, size_t _Rp,"},
{"lineNum":" 2251","line":"              _UInt _Ap, size_t _Up, _UInt _Dp, size_t _Sp,"},
{"lineNum":" 2252","line":"              _UInt _Bp, size_t _Tp, _UInt _Cp, size_t _Lp, _UInt _Fp>"},
{"lineNum":" 2253","line":"    friend"},
{"lineNum":" 2254","line":"    basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 2255","line":"    operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 2256","line":"               const mersenne_twister_engine<_UInt, _Wp, _Np, _Mp, _Rp, _Ap, _Up, _Dp, _Sp,"},
{"lineNum":" 2257","line":"                                             _Bp, _Tp, _Cp, _Lp, _Fp>& __x);"},
{"lineNum":" 2258","line":""},
{"lineNum":" 2259","line":"    template <class _CharT, class _Traits,"},
{"lineNum":" 2260","line":"              class _UInt, size_t _Wp, size_t _Np, size_t _Mp, size_t _Rp,"},
{"lineNum":" 2261","line":"              _UInt _Ap, size_t _Up, _UInt _Dp, size_t _Sp,"},
{"lineNum":" 2262","line":"              _UInt _Bp, size_t _Tp, _UInt _Cp, size_t _Lp, _UInt _Fp>"},
{"lineNum":" 2263","line":"    friend"},
{"lineNum":" 2264","line":"    basic_istream<_CharT, _Traits>&"},
{"lineNum":" 2265","line":"    operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 2266","line":"               mersenne_twister_engine<_UInt, _Wp, _Np, _Mp, _Rp, _Ap, _Up, _Dp, _Sp,"},
{"lineNum":" 2267","line":"                                       _Bp, _Tp, _Cp, _Lp, _Fp>& __x);"},
{"lineNum":" 2268","line":"private:"},
{"lineNum":" 2269","line":""},
{"lineNum":" 2270","line":"    template<class _Sseq>"},
{"lineNum":" 2271","line":"        void __seed(_Sseq& __q, integral_constant<unsigned, 1>);"},
{"lineNum":" 2272","line":"    template<class _Sseq>"},
{"lineNum":" 2273","line":"        void __seed(_Sseq& __q, integral_constant<unsigned, 2>);"},
{"lineNum":" 2274","line":""},
{"lineNum":" 2275","line":"    template <size_t __count>"},
{"lineNum":" 2276","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2277","line":"        static"},
{"lineNum":" 2278","line":"        typename enable_if"},
{"lineNum":" 2279","line":"        <"},
{"lineNum":" 2280","line":"            __count < __w,"},
{"lineNum":" 2281","line":"            result_type"},
{"lineNum":" 2282","line":"        >::type"},
{"lineNum":" 2283","line":"        __lshift(result_type __x) {return (__x << __count) & _Max;}"},
{"lineNum":" 2284","line":""},
{"lineNum":" 2285","line":"    template <size_t __count>"},
{"lineNum":" 2286","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2287","line":"        static"},
{"lineNum":" 2288","line":"        typename enable_if"},
{"lineNum":" 2289","line":"        <"},
{"lineNum":" 2290","line":"            (__count >= __w),"},
{"lineNum":" 2291","line":"            result_type"},
{"lineNum":" 2292","line":"        >::type"},
{"lineNum":" 2293","line":"        __lshift(result_type) {return result_type(0);}"},
{"lineNum":" 2294","line":""},
{"lineNum":" 2295","line":"    template <size_t __count>"},
{"lineNum":" 2296","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2297","line":"        static"},
{"lineNum":" 2298","line":"        typename enable_if"},
{"lineNum":" 2299","line":"        <"},
{"lineNum":" 2300","line":"            __count < _Dt,"},
{"lineNum":" 2301","line":"            result_type"},
{"lineNum":" 2302","line":"        >::type"},
{"lineNum":" 2303","line":"        __rshift(result_type __x) {return __x >> __count;}","class":"lineNoCov","hits":"0","possible_hits":"8",},
{"lineNum":" 2304","line":""},
{"lineNum":" 2305","line":"    template <size_t __count>"},
{"lineNum":" 2306","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2307","line":"        static"},
{"lineNum":" 2308","line":"        typename enable_if"},
{"lineNum":" 2309","line":"        <"},
{"lineNum":" 2310","line":"            (__count >= _Dt),"},
{"lineNum":" 2311","line":"            result_type"},
{"lineNum":" 2312","line":"        >::type"},
{"lineNum":" 2313","line":"        __rshift(result_type) {return result_type(0);}"},
{"lineNum":" 2314","line":"};"},
{"lineNum":" 2315","line":""},
{"lineNum":" 2316","line":"template <class _UIntType, size_t __w, size_t __n, size_t __m, size_t __r,"},
{"lineNum":" 2317","line":"          _UIntType __a, size_t __u, _UIntType __d, size_t __s,"},
{"lineNum":" 2318","line":"          _UIntType __b, size_t __t, _UIntType __c, size_t __l, _UIntType __f>"},
{"lineNum":" 2319","line":"    _LIBCPP_CONSTEXPR const size_t"},
{"lineNum":" 2320","line":"    mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>::word_size;"},
{"lineNum":" 2321","line":""},
{"lineNum":" 2322","line":"template <class _UIntType, size_t __w, size_t __n, size_t __m, size_t __r,"},
{"lineNum":" 2323","line":"          _UIntType __a, size_t __u, _UIntType __d, size_t __s,"},
{"lineNum":" 2324","line":"          _UIntType __b, size_t __t, _UIntType __c, size_t __l, _UIntType __f>"},
{"lineNum":" 2325","line":"    _LIBCPP_CONSTEXPR const size_t"},
{"lineNum":" 2326","line":"    mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>::state_size;"},
{"lineNum":" 2327","line":""},
{"lineNum":" 2328","line":"template <class _UIntType, size_t __w, size_t __n, size_t __m, size_t __r,"},
{"lineNum":" 2329","line":"          _UIntType __a, size_t __u, _UIntType __d, size_t __s,"},
{"lineNum":" 2330","line":"          _UIntType __b, size_t __t, _UIntType __c, size_t __l, _UIntType __f>"},
{"lineNum":" 2331","line":"    _LIBCPP_CONSTEXPR const size_t"},
{"lineNum":" 2332","line":"    mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>::shift_size;"},
{"lineNum":" 2333","line":""},
{"lineNum":" 2334","line":"template <class _UIntType, size_t __w, size_t __n, size_t __m, size_t __r,"},
{"lineNum":" 2335","line":"          _UIntType __a, size_t __u, _UIntType __d, size_t __s,"},
{"lineNum":" 2336","line":"          _UIntType __b, size_t __t, _UIntType __c, size_t __l, _UIntType __f>"},
{"lineNum":" 2337","line":"    _LIBCPP_CONSTEXPR const size_t"},
{"lineNum":" 2338","line":"    mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>::mask_bits;"},
{"lineNum":" 2339","line":""},
{"lineNum":" 2340","line":"template <class _UIntType, size_t __w, size_t __n, size_t __m, size_t __r,"},
{"lineNum":" 2341","line":"          _UIntType __a, size_t __u, _UIntType __d, size_t __s,"},
{"lineNum":" 2342","line":"          _UIntType __b, size_t __t, _UIntType __c, size_t __l, _UIntType __f>"},
{"lineNum":" 2343","line":"    _LIBCPP_CONSTEXPR const typename mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>::result_type"},
{"lineNum":" 2344","line":"    mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>::xor_mask;"},
{"lineNum":" 2345","line":""},
{"lineNum":" 2346","line":"template <class _UIntType, size_t __w, size_t __n, size_t __m, size_t __r,"},
{"lineNum":" 2347","line":"          _UIntType __a, size_t __u, _UIntType __d, size_t __s,"},
{"lineNum":" 2348","line":"          _UIntType __b, size_t __t, _UIntType __c, size_t __l, _UIntType __f>"},
{"lineNum":" 2349","line":"    _LIBCPP_CONSTEXPR const size_t"},
{"lineNum":" 2350","line":"    mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>::tempering_u;"},
{"lineNum":" 2351","line":""},
{"lineNum":" 2352","line":"template <class _UIntType, size_t __w, size_t __n, size_t __m, size_t __r,"},
{"lineNum":" 2353","line":"          _UIntType __a, size_t __u, _UIntType __d, size_t __s,"},
{"lineNum":" 2354","line":"          _UIntType __b, size_t __t, _UIntType __c, size_t __l, _UIntType __f>"},
{"lineNum":" 2355","line":"    _LIBCPP_CONSTEXPR const typename mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>::result_type"},
{"lineNum":" 2356","line":"    mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>::tempering_d;"},
{"lineNum":" 2357","line":""},
{"lineNum":" 2358","line":"template <class _UIntType, size_t __w, size_t __n, size_t __m, size_t __r,"},
{"lineNum":" 2359","line":"          _UIntType __a, size_t __u, _UIntType __d, size_t __s,"},
{"lineNum":" 2360","line":"          _UIntType __b, size_t __t, _UIntType __c, size_t __l, _UIntType __f>"},
{"lineNum":" 2361","line":"    _LIBCPP_CONSTEXPR const size_t"},
{"lineNum":" 2362","line":"    mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>::tempering_s;"},
{"lineNum":" 2363","line":""},
{"lineNum":" 2364","line":"template <class _UIntType, size_t __w, size_t __n, size_t __m, size_t __r,"},
{"lineNum":" 2365","line":"          _UIntType __a, size_t __u, _UIntType __d, size_t __s,"},
{"lineNum":" 2366","line":"          _UIntType __b, size_t __t, _UIntType __c, size_t __l, _UIntType __f>"},
{"lineNum":" 2367","line":"    _LIBCPP_CONSTEXPR const typename mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>::result_type"},
{"lineNum":" 2368","line":"    mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>::tempering_b;"},
{"lineNum":" 2369","line":""},
{"lineNum":" 2370","line":"template <class _UIntType, size_t __w, size_t __n, size_t __m, size_t __r,"},
{"lineNum":" 2371","line":"          _UIntType __a, size_t __u, _UIntType __d, size_t __s,"},
{"lineNum":" 2372","line":"          _UIntType __b, size_t __t, _UIntType __c, size_t __l, _UIntType __f>"},
{"lineNum":" 2373","line":"    _LIBCPP_CONSTEXPR const size_t"},
{"lineNum":" 2374","line":"    mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>::tempering_t;"},
{"lineNum":" 2375","line":""},
{"lineNum":" 2376","line":"template <class _UIntType, size_t __w, size_t __n, size_t __m, size_t __r,"},
{"lineNum":" 2377","line":"          _UIntType __a, size_t __u, _UIntType __d, size_t __s,"},
{"lineNum":" 2378","line":"          _UIntType __b, size_t __t, _UIntType __c, size_t __l, _UIntType __f>"},
{"lineNum":" 2379","line":"    _LIBCPP_CONSTEXPR const typename mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>::result_type"},
{"lineNum":" 2380","line":"    mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>::tempering_c;"},
{"lineNum":" 2381","line":""},
{"lineNum":" 2382","line":"template <class _UIntType, size_t __w, size_t __n, size_t __m, size_t __r,"},
{"lineNum":" 2383","line":"          _UIntType __a, size_t __u, _UIntType __d, size_t __s,"},
{"lineNum":" 2384","line":"          _UIntType __b, size_t __t, _UIntType __c, size_t __l, _UIntType __f>"},
{"lineNum":" 2385","line":"    _LIBCPP_CONSTEXPR const size_t"},
{"lineNum":" 2386","line":"    mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>::tempering_l;"},
{"lineNum":" 2387","line":""},
{"lineNum":" 2388","line":"template <class _UIntType, size_t __w, size_t __n, size_t __m, size_t __r,"},
{"lineNum":" 2389","line":"          _UIntType __a, size_t __u, _UIntType __d, size_t __s,"},
{"lineNum":" 2390","line":"          _UIntType __b, size_t __t, _UIntType __c, size_t __l, _UIntType __f>"},
{"lineNum":" 2391","line":"    _LIBCPP_CONSTEXPR const typename mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>::result_type"},
{"lineNum":" 2392","line":"    mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>::initialization_multiplier;"},
{"lineNum":" 2393","line":""},
{"lineNum":" 2394","line":"template <class _UIntType, size_t __w, size_t __n, size_t __m, size_t __r,"},
{"lineNum":" 2395","line":"          _UIntType __a, size_t __u, _UIntType __d, size_t __s,"},
{"lineNum":" 2396","line":"          _UIntType __b, size_t __t, _UIntType __c, size_t __l, _UIntType __f>"},
{"lineNum":" 2397","line":"    _LIBCPP_CONSTEXPR const typename mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>::result_type"},
{"lineNum":" 2398","line":"    mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>::default_seed;"},
{"lineNum":" 2399","line":""},
{"lineNum":" 2400","line":"template <class _UIntType, size_t __w, size_t __n, size_t __m, size_t __r,"},
{"lineNum":" 2401","line":"          _UIntType __a, size_t __u, _UIntType __d, size_t __s,"},
{"lineNum":" 2402","line":"          _UIntType __b, size_t __t, _UIntType __c, size_t __l, _UIntType __f>"},
{"lineNum":" 2403","line":"void"},
{"lineNum":" 2404","line":"mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b,"},
{"lineNum":" 2405","line":"    __t, __c, __l, __f>::seed(result_type __sd)"},
{"lineNum":" 2406","line":"    _LIBCPP_DISABLE_UBSAN_UNSIGNED_INTEGER_CHECK"},
{"lineNum":" 2407","line":"{   // __w >= 2"},
{"lineNum":" 2408","line":"    __x_[0] = __sd & _Max;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2409","line":"    for (size_t __i = 1; __i < __n; ++__i)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2410","line":"        __x_[__i] = (__f * (__x_[__i-1] ^ __rshift<__w - 2>(__x_[__i-1])) + __i) & _Max;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 2411","line":"    __i_ = 0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 2412","line":"}"},
{"lineNum":" 2413","line":""},
{"lineNum":" 2414","line":"template <class _UIntType, size_t __w, size_t __n, size_t __m, size_t __r,"},
{"lineNum":" 2415","line":"          _UIntType __a, size_t __u, _UIntType __d, size_t __s,"},
{"lineNum":" 2416","line":"          _UIntType __b, size_t __t, _UIntType __c, size_t __l, _UIntType __f>"},
{"lineNum":" 2417","line":"template<class _Sseq>"},
{"lineNum":" 2418","line":"void"},
{"lineNum":" 2419","line":"mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b,"},
{"lineNum":" 2420","line":"    __t, __c, __l, __f>::__seed(_Sseq& __q, integral_constant<unsigned, 1>)"},
{"lineNum":" 2421","line":"{"},
{"lineNum":" 2422","line":"    const unsigned __k = 1;"},
{"lineNum":" 2423","line":"    uint32_t __ar[__n * __k];"},
{"lineNum":" 2424","line":"    __q.generate(__ar, __ar + __n * __k);"},
{"lineNum":" 2425","line":"    for (size_t __i = 0; __i < __n; ++__i)"},
{"lineNum":" 2426","line":"        __x_[__i] = static_cast<result_type>(__ar[__i] & _Max);"},
{"lineNum":" 2427","line":"    const result_type __mask = __r == _Dt ? result_type(~0) :"},
{"lineNum":" 2428","line":"                                       (result_type(1) << __r) - result_type(1);"},
{"lineNum":" 2429","line":"    __i_ = 0;"},
{"lineNum":" 2430","line":"    if ((__x_[0] & ~__mask) == 0)"},
{"lineNum":" 2431","line":"    {"},
{"lineNum":" 2432","line":"        for (size_t __i = 1; __i < __n; ++__i)"},
{"lineNum":" 2433","line":"            if (__x_[__i] != 0)"},
{"lineNum":" 2434","line":"                return;"},
{"lineNum":" 2435","line":"        __x_[0] = result_type(1) << (__w - 1);"},
{"lineNum":" 2436","line":"    }"},
{"lineNum":" 2437","line":"}"},
{"lineNum":" 2438","line":""},
{"lineNum":" 2439","line":"template <class _UIntType, size_t __w, size_t __n, size_t __m, size_t __r,"},
{"lineNum":" 2440","line":"          _UIntType __a, size_t __u, _UIntType __d, size_t __s,"},
{"lineNum":" 2441","line":"          _UIntType __b, size_t __t, _UIntType __c, size_t __l, _UIntType __f>"},
{"lineNum":" 2442","line":"template<class _Sseq>"},
{"lineNum":" 2443","line":"void"},
{"lineNum":" 2444","line":"mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b,"},
{"lineNum":" 2445","line":"    __t, __c, __l, __f>::__seed(_Sseq& __q, integral_constant<unsigned, 2>)"},
{"lineNum":" 2446","line":"{"},
{"lineNum":" 2447","line":"    const unsigned __k = 2;"},
{"lineNum":" 2448","line":"    uint32_t __ar[__n * __k];"},
{"lineNum":" 2449","line":"    __q.generate(__ar, __ar + __n * __k);"},
{"lineNum":" 2450","line":"    for (size_t __i = 0; __i < __n; ++__i)"},
{"lineNum":" 2451","line":"        __x_[__i] = static_cast<result_type>("},
{"lineNum":" 2452","line":"            (__ar[2 * __i] + ((uint64_t)__ar[2 * __i + 1] << 32)) & _Max);"},
{"lineNum":" 2453","line":"    const result_type __mask = __r == _Dt ? result_type(~0) :"},
{"lineNum":" 2454","line":"                                       (result_type(1) << __r) - result_type(1);"},
{"lineNum":" 2455","line":"    __i_ = 0;"},
{"lineNum":" 2456","line":"    if ((__x_[0] & ~__mask) == 0)"},
{"lineNum":" 2457","line":"    {"},
{"lineNum":" 2458","line":"        for (size_t __i = 1; __i < __n; ++__i)"},
{"lineNum":" 2459","line":"            if (__x_[__i] != 0)"},
{"lineNum":" 2460","line":"                return;"},
{"lineNum":" 2461","line":"        __x_[0] = result_type(1) << (__w - 1);"},
{"lineNum":" 2462","line":"    }"},
{"lineNum":" 2463","line":"}"},
{"lineNum":" 2464","line":""},
{"lineNum":" 2465","line":"template <class _UIntType, size_t __w, size_t __n, size_t __m, size_t __r,"},
{"lineNum":" 2466","line":"          _UIntType __a, size_t __u, _UIntType __d, size_t __s,"},
{"lineNum":" 2467","line":"          _UIntType __b, size_t __t, _UIntType __c, size_t __l, _UIntType __f>"},
{"lineNum":" 2468","line":"_UIntType"},
{"lineNum":" 2469","line":"mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d, __s, __b,"},
{"lineNum":" 2470","line":"    __t, __c, __l, __f>::operator()()"},
{"lineNum":" 2471","line":"{"},
{"lineNum":" 2472","line":"    const size_t __j = (__i_ + 1) % __n;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 2473","line":"    const result_type __mask = __r == _Dt ? result_type(~0) :"},
{"lineNum":" 2474","line":"                                       (result_type(1) << __r) - result_type(1);"},
{"lineNum":" 2475","line":"    const result_type _Yp = (__x_[__i_] & ~__mask) | (__x_[__j] & __mask);","class":"lineNoCov","hits":"0","possible_hits":"8",},
{"lineNum":" 2476","line":"    const size_t __k = (__i_ + __m) % __n;","class":"lineNoCov","hits":"0","possible_hits":"8",},
{"lineNum":" 2477","line":"    __x_[__i_] = __x_[__k] ^ __rshift<1>(_Yp) ^ (__a * (_Yp & 1));","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":" 2478","line":"    result_type __z = __x_[__i_] ^ (__rshift<__u>(__x_[__i_]) & __d);","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":" 2479","line":"    __i_ = __j;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 2480","line":"    __z ^= __lshift<__s>(__z) & __b;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 2481","line":"    __z ^= __lshift<__t>(__z) & __c;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 2482","line":"    return __z ^ __rshift<__l>(__z);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 2483","line":"}"},
{"lineNum":" 2484","line":""},
{"lineNum":" 2485","line":"template <class _UInt, size_t _Wp, size_t _Np, size_t _Mp, size_t _Rp,"},
{"lineNum":" 2486","line":"          _UInt _Ap, size_t _Up, _UInt _Dp, size_t _Sp,"},
{"lineNum":" 2487","line":"          _UInt _Bp, size_t _Tp, _UInt _Cp, size_t _Lp, _UInt _Fp>"},
{"lineNum":" 2488","line":"bool"},
{"lineNum":" 2489","line":"operator==(const mersenne_twister_engine<_UInt, _Wp, _Np, _Mp, _Rp, _Ap, _Up, _Dp, _Sp,"},
{"lineNum":" 2490","line":"                                         _Bp, _Tp, _Cp, _Lp, _Fp>& __x,"},
{"lineNum":" 2491","line":"           const mersenne_twister_engine<_UInt, _Wp, _Np, _Mp, _Rp, _Ap, _Up, _Dp, _Sp,"},
{"lineNum":" 2492","line":"                                         _Bp, _Tp, _Cp, _Lp, _Fp>& __y)"},
{"lineNum":" 2493","line":"{"},
{"lineNum":" 2494","line":"    if (__x.__i_ == __y.__i_)"},
{"lineNum":" 2495","line":"        return _VSTD::equal(__x.__x_, __x.__x_ + _Np, __y.__x_);"},
{"lineNum":" 2496","line":"    if (__x.__i_ == 0 || __y.__i_ == 0)"},
{"lineNum":" 2497","line":"    {"},
{"lineNum":" 2498","line":"        size_t __j = _VSTD::min(_Np - __x.__i_, _Np - __y.__i_);"},
{"lineNum":" 2499","line":"        if (!_VSTD::equal(__x.__x_ + __x.__i_, __x.__x_ + __x.__i_ + __j,"},
{"lineNum":" 2500","line":"                         __y.__x_ + __y.__i_))"},
{"lineNum":" 2501","line":"            return false;"},
{"lineNum":" 2502","line":"        if (__x.__i_ == 0)"},
{"lineNum":" 2503","line":"            return _VSTD::equal(__x.__x_ + __j, __x.__x_ + _Np, __y.__x_);"},
{"lineNum":" 2504","line":"        return _VSTD::equal(__x.__x_, __x.__x_ + (_Np - __j), __y.__x_ + __j);"},
{"lineNum":" 2505","line":"    }"},
{"lineNum":" 2506","line":"    if (__x.__i_ < __y.__i_)"},
{"lineNum":" 2507","line":"    {"},
{"lineNum":" 2508","line":"        size_t __j = _Np - __y.__i_;"},
{"lineNum":" 2509","line":"        if (!_VSTD::equal(__x.__x_ + __x.__i_, __x.__x_ + (__x.__i_ + __j),"},
{"lineNum":" 2510","line":"                         __y.__x_ + __y.__i_))"},
{"lineNum":" 2511","line":"            return false;"},
{"lineNum":" 2512","line":"        if (!_VSTD::equal(__x.__x_ + (__x.__i_ + __j), __x.__x_ + _Np,"},
{"lineNum":" 2513","line":"                         __y.__x_))"},
{"lineNum":" 2514","line":"            return false;"},
{"lineNum":" 2515","line":"        return _VSTD::equal(__x.__x_, __x.__x_ + __x.__i_,"},
{"lineNum":" 2516","line":"                           __y.__x_ + (_Np - (__x.__i_ + __j)));"},
{"lineNum":" 2517","line":"    }"},
{"lineNum":" 2518","line":"    size_t __j = _Np - __x.__i_;"},
{"lineNum":" 2519","line":"    if (!_VSTD::equal(__y.__x_ + __y.__i_, __y.__x_ + (__y.__i_ + __j),"},
{"lineNum":" 2520","line":"                     __x.__x_ + __x.__i_))"},
{"lineNum":" 2521","line":"        return false;"},
{"lineNum":" 2522","line":"    if (!_VSTD::equal(__y.__x_ + (__y.__i_ + __j), __y.__x_ + _Np,"},
{"lineNum":" 2523","line":"                     __x.__x_))"},
{"lineNum":" 2524","line":"        return false;"},
{"lineNum":" 2525","line":"    return _VSTD::equal(__y.__x_, __y.__x_ + __y.__i_,"},
{"lineNum":" 2526","line":"                       __x.__x_ + (_Np - (__y.__i_ + __j)));"},
{"lineNum":" 2527","line":"}"},
{"lineNum":" 2528","line":""},
{"lineNum":" 2529","line":"template <class _UInt, size_t _Wp, size_t _Np, size_t _Mp, size_t _Rp,"},
{"lineNum":" 2530","line":"          _UInt _Ap, size_t _Up, _UInt _Dp, size_t _Sp,"},
{"lineNum":" 2531","line":"          _UInt _Bp, size_t _Tp, _UInt _Cp, size_t _Lp, _UInt _Fp>"},
{"lineNum":" 2532","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2533","line":"bool"},
{"lineNum":" 2534","line":"operator!=(const mersenne_twister_engine<_UInt, _Wp, _Np, _Mp, _Rp, _Ap, _Up, _Dp, _Sp,"},
{"lineNum":" 2535","line":"                                         _Bp, _Tp, _Cp, _Lp, _Fp>& __x,"},
{"lineNum":" 2536","line":"           const mersenne_twister_engine<_UInt, _Wp, _Np, _Mp, _Rp, _Ap, _Up, _Dp, _Sp,"},
{"lineNum":" 2537","line":"                                         _Bp, _Tp, _Cp, _Lp, _Fp>& __y)"},
{"lineNum":" 2538","line":"{"},
{"lineNum":" 2539","line":"    return !(__x == __y);"},
{"lineNum":" 2540","line":"}"},
{"lineNum":" 2541","line":""},
{"lineNum":" 2542","line":"template <class _CharT, class _Traits,"},
{"lineNum":" 2543","line":"          class _UInt, size_t _Wp, size_t _Np, size_t _Mp, size_t _Rp,"},
{"lineNum":" 2544","line":"          _UInt _Ap, size_t _Up, _UInt _Dp, size_t _Sp,"},
{"lineNum":" 2545","line":"          _UInt _Bp, size_t _Tp, _UInt _Cp, size_t _Lp, _UInt _Fp>"},
{"lineNum":" 2546","line":"basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 2547","line":"operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 2548","line":"           const mersenne_twister_engine<_UInt, _Wp, _Np, _Mp, _Rp, _Ap, _Up, _Dp, _Sp,"},
{"lineNum":" 2549","line":"                                         _Bp, _Tp, _Cp, _Lp, _Fp>& __x)"},
{"lineNum":" 2550","line":"{"},
{"lineNum":" 2551","line":"    __save_flags<_CharT, _Traits> __lx(__os);"},
{"lineNum":" 2552","line":"    typedef basic_ostream<_CharT, _Traits> _Ostream;"},
{"lineNum":" 2553","line":"    __os.flags(_Ostream::dec | _Ostream::left);"},
{"lineNum":" 2554","line":"    _CharT __sp = __os.widen(\' \');"},
{"lineNum":" 2555","line":"    __os.fill(__sp);"},
{"lineNum":" 2556","line":"    __os << __x.__x_[__x.__i_];"},
{"lineNum":" 2557","line":"    for (size_t __j = __x.__i_ + 1; __j < _Np; ++__j)"},
{"lineNum":" 2558","line":"        __os << __sp << __x.__x_[__j];"},
{"lineNum":" 2559","line":"    for (size_t __j = 0; __j < __x.__i_; ++__j)"},
{"lineNum":" 2560","line":"        __os << __sp << __x.__x_[__j];"},
{"lineNum":" 2561","line":"    return __os;"},
{"lineNum":" 2562","line":"}"},
{"lineNum":" 2563","line":""},
{"lineNum":" 2564","line":"template <class _CharT, class _Traits,"},
{"lineNum":" 2565","line":"          class _UInt, size_t _Wp, size_t _Np, size_t _Mp, size_t _Rp,"},
{"lineNum":" 2566","line":"          _UInt _Ap, size_t _Up, _UInt _Dp, size_t _Sp,"},
{"lineNum":" 2567","line":"          _UInt _Bp, size_t _Tp, _UInt _Cp, size_t _Lp, _UInt _Fp>"},
{"lineNum":" 2568","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 2569","line":"operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 2570","line":"           mersenne_twister_engine<_UInt, _Wp, _Np, _Mp, _Rp, _Ap, _Up, _Dp, _Sp,"},
{"lineNum":" 2571","line":"                                   _Bp, _Tp, _Cp, _Lp, _Fp>& __x)"},
{"lineNum":" 2572","line":"{"},
{"lineNum":" 2573","line":"    __save_flags<_CharT, _Traits> __lx(__is);"},
{"lineNum":" 2574","line":"    typedef basic_istream<_CharT, _Traits> _Istream;"},
{"lineNum":" 2575","line":"    __is.flags(_Istream::dec | _Istream::skipws);"},
{"lineNum":" 2576","line":"    _UInt __t[_Np];"},
{"lineNum":" 2577","line":"    for (size_t __i = 0; __i < _Np; ++__i)"},
{"lineNum":" 2578","line":"        __is >> __t[__i];"},
{"lineNum":" 2579","line":"    if (!__is.fail())"},
{"lineNum":" 2580","line":"    {"},
{"lineNum":" 2581","line":"        for (size_t __i = 0; __i < _Np; ++__i)"},
{"lineNum":" 2582","line":"            __x.__x_[__i] = __t[__i];"},
{"lineNum":" 2583","line":"        __x.__i_ = 0;"},
{"lineNum":" 2584","line":"    }"},
{"lineNum":" 2585","line":"    return __is;"},
{"lineNum":" 2586","line":"}"},
{"lineNum":" 2587","line":""},
{"lineNum":" 2588","line":"typedef mersenne_twister_engine<uint_fast32_t, 32, 624, 397, 31,"},
{"lineNum":" 2589","line":"                                0x9908b0df, 11, 0xffffffff,"},
{"lineNum":" 2590","line":"                                7,  0x9d2c5680,"},
{"lineNum":" 2591","line":"                                15, 0xefc60000,"},
{"lineNum":" 2592","line":"                                18, 1812433253>                         mt19937;"},
{"lineNum":" 2593","line":"typedef mersenne_twister_engine<uint_fast64_t, 64, 312, 156, 31,"},
{"lineNum":" 2594","line":"                                0xb5026f5aa96619e9ULL, 29, 0x5555555555555555ULL,"},
{"lineNum":" 2595","line":"                                17, 0x71d67fffeda60000ULL,"},
{"lineNum":" 2596","line":"                                37, 0xfff7eee000000000ULL,"},
{"lineNum":" 2597","line":"                                43, 6364136223846793005ULL>          mt19937_64;"},
{"lineNum":" 2598","line":""},
{"lineNum":" 2599","line":"// subtract_with_carry_engine"},
{"lineNum":" 2600","line":""},
{"lineNum":" 2601","line":"template<class _UIntType, size_t __w, size_t __s, size_t __r>"},
{"lineNum":" 2602","line":"class _LIBCPP_TEMPLATE_VIS subtract_with_carry_engine;"},
{"lineNum":" 2603","line":""},
{"lineNum":" 2604","line":"template<class _UInt, size_t _Wp, size_t _Sp, size_t _Rp>"},
{"lineNum":" 2605","line":"bool"},
{"lineNum":" 2606","line":"operator==("},
{"lineNum":" 2607","line":"    const subtract_with_carry_engine<_UInt, _Wp, _Sp, _Rp>& __x,"},
{"lineNum":" 2608","line":"    const subtract_with_carry_engine<_UInt, _Wp, _Sp, _Rp>& __y);"},
{"lineNum":" 2609","line":""},
{"lineNum":" 2610","line":"template<class _UInt, size_t _Wp, size_t _Sp, size_t _Rp>"},
{"lineNum":" 2611","line":"_LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2612","line":"bool"},
{"lineNum":" 2613","line":"operator!=("},
{"lineNum":" 2614","line":"    const subtract_with_carry_engine<_UInt, _Wp, _Sp, _Rp>& __x,"},
{"lineNum":" 2615","line":"    const subtract_with_carry_engine<_UInt, _Wp, _Sp, _Rp>& __y);"},
{"lineNum":" 2616","line":""},
{"lineNum":" 2617","line":"template <class _CharT, class _Traits,"},
{"lineNum":" 2618","line":"          class _UInt, size_t _Wp, size_t _Sp, size_t _Rp>"},
{"lineNum":" 2619","line":"basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 2620","line":"operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 2621","line":"           const subtract_with_carry_engine<_UInt, _Wp, _Sp, _Rp>& __x);"},
{"lineNum":" 2622","line":""},
{"lineNum":" 2623","line":"template <class _CharT, class _Traits,"},
{"lineNum":" 2624","line":"          class _UInt, size_t _Wp, size_t _Sp, size_t _Rp>"},
{"lineNum":" 2625","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 2626","line":"operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 2627","line":"           subtract_with_carry_engine<_UInt, _Wp, _Sp, _Rp>& __x);"},
{"lineNum":" 2628","line":""},
{"lineNum":" 2629","line":"template<class _UIntType, size_t __w, size_t __s, size_t __r>"},
{"lineNum":" 2630","line":"class _LIBCPP_TEMPLATE_VIS subtract_with_carry_engine"},
{"lineNum":" 2631","line":"{"},
{"lineNum":" 2632","line":"public:"},
{"lineNum":" 2633","line":"    // types"},
{"lineNum":" 2634","line":"    typedef _UIntType result_type;"},
{"lineNum":" 2635","line":""},
{"lineNum":" 2636","line":"private:"},
{"lineNum":" 2637","line":"    result_type __x_[__r];"},
{"lineNum":" 2638","line":"    result_type  __c_;"},
{"lineNum":" 2639","line":"    size_t      __i_;"},
{"lineNum":" 2640","line":""},
{"lineNum":" 2641","line":"    static _LIBCPP_CONSTEXPR const result_type _Dt = numeric_limits<result_type>::digits;"},
{"lineNum":" 2642","line":"    static_assert(  0 <  __w, \"subtract_with_carry_engine invalid parameters\");"},
{"lineNum":" 2643","line":"    static_assert(__w <= _Dt, \"subtract_with_carry_engine invalid parameters\");"},
{"lineNum":" 2644","line":"    static_assert(  0 <  __s, \"subtract_with_carry_engine invalid parameters\");"},
{"lineNum":" 2645","line":"    static_assert(__s <  __r, \"subtract_with_carry_engine invalid parameters\");"},
{"lineNum":" 2646","line":"public:"},
{"lineNum":" 2647","line":"    static _LIBCPP_CONSTEXPR const result_type _Min = 0;"},
{"lineNum":" 2648","line":"    static _LIBCPP_CONSTEXPR const result_type _Max = __w == _Dt ? result_type(~0) :"},
{"lineNum":" 2649","line":"                                                      (result_type(1) << __w) - result_type(1);"},
{"lineNum":" 2650","line":"    static_assert(_Min < _Max, \"subtract_with_carry_engine invalid parameters\");"},
{"lineNum":" 2651","line":""},
{"lineNum":" 2652","line":"    // engine characteristics"},
{"lineNum":" 2653","line":"    static _LIBCPP_CONSTEXPR const size_t word_size = __w;"},
{"lineNum":" 2654","line":"    static _LIBCPP_CONSTEXPR const size_t short_lag = __s;"},
{"lineNum":" 2655","line":"    static _LIBCPP_CONSTEXPR const size_t long_lag = __r;"},
{"lineNum":" 2656","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2657","line":"    static _LIBCPP_CONSTEXPR result_type min() { return _Min; }"},
{"lineNum":" 2658","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2659","line":"    static _LIBCPP_CONSTEXPR result_type max() { return _Max; }"},
{"lineNum":" 2660","line":"    static _LIBCPP_CONSTEXPR const result_type default_seed = 19780503u;"},
{"lineNum":" 2661","line":""},
{"lineNum":" 2662","line":"    // constructors and seeding functions"},
{"lineNum":" 2663","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 2664","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2665","line":"    subtract_with_carry_engine() : subtract_with_carry_engine(default_seed) {}"},
{"lineNum":" 2666","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2667","line":"    explicit subtract_with_carry_engine(result_type __sd) { seed(__sd); }"},
{"lineNum":" 2668","line":"#else"},
{"lineNum":" 2669","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2670","line":"    explicit subtract_with_carry_engine(result_type __sd = default_seed) {"},
{"lineNum":" 2671","line":"      seed(__sd);"},
{"lineNum":" 2672","line":"    }"},
{"lineNum":" 2673","line":"#endif"},
{"lineNum":" 2674","line":"    template<class _Sseq>"},
{"lineNum":" 2675","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2676","line":"        explicit subtract_with_carry_engine(_Sseq& __q,"},
{"lineNum":" 2677","line":"        typename enable_if<__is_seed_sequence<_Sseq, subtract_with_carry_engine>::value>::type* = 0)"},
{"lineNum":" 2678","line":"        {seed(__q);}"},
{"lineNum":" 2679","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2680","line":"    void seed(result_type __sd = default_seed)"},
{"lineNum":" 2681","line":"        {seed(__sd, integral_constant<unsigned, 1 + (__w - 1) / 32>());}"},
{"lineNum":" 2682","line":"    template<class _Sseq>"},
{"lineNum":" 2683","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2684","line":"        typename enable_if"},
{"lineNum":" 2685","line":"        <"},
{"lineNum":" 2686","line":"            __is_seed_sequence<_Sseq, subtract_with_carry_engine>::value,"},
{"lineNum":" 2687","line":"            void"},
{"lineNum":" 2688","line":"        >::type"},
{"lineNum":" 2689","line":"        seed(_Sseq& __q)"},
{"lineNum":" 2690","line":"            {__seed(__q, integral_constant<unsigned, 1 + (__w - 1) / 32>());}"},
{"lineNum":" 2691","line":""},
{"lineNum":" 2692","line":"    // generating functions"},
{"lineNum":" 2693","line":"    result_type operator()();"},
{"lineNum":" 2694","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2695","line":"    void discard(unsigned long long __z) {for (; __z; --__z) operator()();}"},
{"lineNum":" 2696","line":""},
{"lineNum":" 2697","line":"    template<class _UInt, size_t _Wp, size_t _Sp, size_t _Rp>"},
{"lineNum":" 2698","line":"    friend"},
{"lineNum":" 2699","line":"    bool"},
{"lineNum":" 2700","line":"    operator==("},
{"lineNum":" 2701","line":"        const subtract_with_carry_engine<_UInt, _Wp, _Sp, _Rp>& __x,"},
{"lineNum":" 2702","line":"        const subtract_with_carry_engine<_UInt, _Wp, _Sp, _Rp>& __y);"},
{"lineNum":" 2703","line":""},
{"lineNum":" 2704","line":"    template<class _UInt, size_t _Wp, size_t _Sp, size_t _Rp>"},
{"lineNum":" 2705","line":"    friend"},
{"lineNum":" 2706","line":"    bool"},
{"lineNum":" 2707","line":"    operator!=("},
{"lineNum":" 2708","line":"        const subtract_with_carry_engine<_UInt, _Wp, _Sp, _Rp>& __x,"},
{"lineNum":" 2709","line":"        const subtract_with_carry_engine<_UInt, _Wp, _Sp, _Rp>& __y);"},
{"lineNum":" 2710","line":""},
{"lineNum":" 2711","line":"    template <class _CharT, class _Traits,"},
{"lineNum":" 2712","line":"              class _UInt, size_t _Wp, size_t _Sp, size_t _Rp>"},
{"lineNum":" 2713","line":"    friend"},
{"lineNum":" 2714","line":"    basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 2715","line":"    operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 2716","line":"               const subtract_with_carry_engine<_UInt, _Wp, _Sp, _Rp>& __x);"},
{"lineNum":" 2717","line":""},
{"lineNum":" 2718","line":"    template <class _CharT, class _Traits,"},
{"lineNum":" 2719","line":"              class _UInt, size_t _Wp, size_t _Sp, size_t _Rp>"},
{"lineNum":" 2720","line":"    friend"},
{"lineNum":" 2721","line":"    basic_istream<_CharT, _Traits>&"},
{"lineNum":" 2722","line":"    operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 2723","line":"               subtract_with_carry_engine<_UInt, _Wp, _Sp, _Rp>& __x);"},
{"lineNum":" 2724","line":""},
{"lineNum":" 2725","line":"private:"},
{"lineNum":" 2726","line":""},
{"lineNum":" 2727","line":"    void seed(result_type __sd, integral_constant<unsigned, 1>);"},
{"lineNum":" 2728","line":"    void seed(result_type __sd, integral_constant<unsigned, 2>);"},
{"lineNum":" 2729","line":"    template<class _Sseq>"},
{"lineNum":" 2730","line":"        void __seed(_Sseq& __q, integral_constant<unsigned, 1>);"},
{"lineNum":" 2731","line":"    template<class _Sseq>"},
{"lineNum":" 2732","line":"        void __seed(_Sseq& __q, integral_constant<unsigned, 2>);"},
{"lineNum":" 2733","line":"};"},
{"lineNum":" 2734","line":""},
{"lineNum":" 2735","line":"template<class _UIntType, size_t __w, size_t __s, size_t __r>"},
{"lineNum":" 2736","line":"    _LIBCPP_CONSTEXPR const size_t subtract_with_carry_engine<_UIntType, __w, __s, __r>::word_size;"},
{"lineNum":" 2737","line":""},
{"lineNum":" 2738","line":"template<class _UIntType, size_t __w, size_t __s, size_t __r>"},
{"lineNum":" 2739","line":"    _LIBCPP_CONSTEXPR const size_t subtract_with_carry_engine<_UIntType, __w, __s, __r>::short_lag;"},
{"lineNum":" 2740","line":""},
{"lineNum":" 2741","line":"template<class _UIntType, size_t __w, size_t __s, size_t __r>"},
{"lineNum":" 2742","line":"    _LIBCPP_CONSTEXPR const size_t subtract_with_carry_engine<_UIntType, __w, __s, __r>::long_lag;"},
{"lineNum":" 2743","line":""},
{"lineNum":" 2744","line":"template<class _UIntType, size_t __w, size_t __s, size_t __r>"},
{"lineNum":" 2745","line":"    _LIBCPP_CONSTEXPR const typename subtract_with_carry_engine<_UIntType, __w, __s, __r>::result_type"},
{"lineNum":" 2746","line":"    subtract_with_carry_engine<_UIntType, __w, __s, __r>::default_seed;"},
{"lineNum":" 2747","line":""},
{"lineNum":" 2748","line":"template<class _UIntType, size_t __w, size_t __s, size_t __r>"},
{"lineNum":" 2749","line":"void"},
{"lineNum":" 2750","line":"subtract_with_carry_engine<_UIntType, __w, __s, __r>::seed(result_type __sd,"},
{"lineNum":" 2751","line":"        integral_constant<unsigned, 1>)"},
{"lineNum":" 2752","line":"{"},
{"lineNum":" 2753","line":"    linear_congruential_engine<result_type, 40014u, 0u, 2147483563u>"},
{"lineNum":" 2754","line":"        __e(__sd == 0u ? default_seed : __sd);"},
{"lineNum":" 2755","line":"    for (size_t __i = 0; __i < __r; ++__i)"},
{"lineNum":" 2756","line":"        __x_[__i] = static_cast<result_type>(__e() & _Max);"},
{"lineNum":" 2757","line":"    __c_ = __x_[__r-1] == 0;"},
{"lineNum":" 2758","line":"    __i_ = 0;"},
{"lineNum":" 2759","line":"}"},
{"lineNum":" 2760","line":""},
{"lineNum":" 2761","line":"template<class _UIntType, size_t __w, size_t __s, size_t __r>"},
{"lineNum":" 2762","line":"void"},
{"lineNum":" 2763","line":"subtract_with_carry_engine<_UIntType, __w, __s, __r>::seed(result_type __sd,"},
{"lineNum":" 2764","line":"        integral_constant<unsigned, 2>)"},
{"lineNum":" 2765","line":"{"},
{"lineNum":" 2766","line":"    linear_congruential_engine<result_type, 40014u, 0u, 2147483563u>"},
{"lineNum":" 2767","line":"        __e(__sd == 0u ? default_seed : __sd);"},
{"lineNum":" 2768","line":"    for (size_t __i = 0; __i < __r; ++__i)"},
{"lineNum":" 2769","line":"    {"},
{"lineNum":" 2770","line":"        result_type __e0 = __e();"},
{"lineNum":" 2771","line":"        __x_[__i] = static_cast<result_type>("},
{"lineNum":" 2772","line":"                                    (__e0 + ((uint64_t)__e() << 32)) & _Max);"},
{"lineNum":" 2773","line":"    }"},
{"lineNum":" 2774","line":"    __c_ = __x_[__r-1] == 0;"},
{"lineNum":" 2775","line":"    __i_ = 0;"},
{"lineNum":" 2776","line":"}"},
{"lineNum":" 2777","line":""},
{"lineNum":" 2778","line":"template<class _UIntType, size_t __w, size_t __s, size_t __r>"},
{"lineNum":" 2779","line":"template<class _Sseq>"},
{"lineNum":" 2780","line":"void"},
{"lineNum":" 2781","line":"subtract_with_carry_engine<_UIntType, __w, __s, __r>::__seed(_Sseq& __q,"},
{"lineNum":" 2782","line":"        integral_constant<unsigned, 1>)"},
{"lineNum":" 2783","line":"{"},
{"lineNum":" 2784","line":"    const unsigned __k = 1;"},
{"lineNum":" 2785","line":"    uint32_t __ar[__r * __k];"},
{"lineNum":" 2786","line":"    __q.generate(__ar, __ar + __r * __k);"},
{"lineNum":" 2787","line":"    for (size_t __i = 0; __i < __r; ++__i)"},
{"lineNum":" 2788","line":"        __x_[__i] = static_cast<result_type>(__ar[__i] & _Max);"},
{"lineNum":" 2789","line":"    __c_ = __x_[__r-1] == 0;"},
{"lineNum":" 2790","line":"    __i_ = 0;"},
{"lineNum":" 2791","line":"}"},
{"lineNum":" 2792","line":""},
{"lineNum":" 2793","line":"template<class _UIntType, size_t __w, size_t __s, size_t __r>"},
{"lineNum":" 2794","line":"template<class _Sseq>"},
{"lineNum":" 2795","line":"void"},
{"lineNum":" 2796","line":"subtract_with_carry_engine<_UIntType, __w, __s, __r>::__seed(_Sseq& __q,"},
{"lineNum":" 2797","line":"        integral_constant<unsigned, 2>)"},
{"lineNum":" 2798","line":"{"},
{"lineNum":" 2799","line":"    const unsigned __k = 2;"},
{"lineNum":" 2800","line":"    uint32_t __ar[__r * __k];"},
{"lineNum":" 2801","line":"    __q.generate(__ar, __ar + __r * __k);"},
{"lineNum":" 2802","line":"    for (size_t __i = 0; __i < __r; ++__i)"},
{"lineNum":" 2803","line":"        __x_[__i] = static_cast<result_type>("},
{"lineNum":" 2804","line":"                  (__ar[2 * __i] + ((uint64_t)__ar[2 * __i + 1] << 32)) & _Max);"},
{"lineNum":" 2805","line":"    __c_ = __x_[__r-1] == 0;"},
{"lineNum":" 2806","line":"    __i_ = 0;"},
{"lineNum":" 2807","line":"}"},
{"lineNum":" 2808","line":""},
{"lineNum":" 2809","line":"template<class _UIntType, size_t __w, size_t __s, size_t __r>"},
{"lineNum":" 2810","line":"_UIntType"},
{"lineNum":" 2811","line":"subtract_with_carry_engine<_UIntType, __w, __s, __r>::operator()()"},
{"lineNum":" 2812","line":"{"},
{"lineNum":" 2813","line":"    const result_type& __xs = __x_[(__i_ + (__r - __s)) % __r];"},
{"lineNum":" 2814","line":"    result_type& __xr = __x_[__i_];"},
{"lineNum":" 2815","line":"    result_type __new_c = __c_ == 0 ? __xs < __xr : __xs != 0 ? __xs <= __xr : 1;"},
{"lineNum":" 2816","line":"    __xr = (__xs - __xr - __c_) & _Max;"},
{"lineNum":" 2817","line":"    __c_ = __new_c;"},
{"lineNum":" 2818","line":"    __i_ = (__i_ + 1) % __r;"},
{"lineNum":" 2819","line":"    return __xr;"},
{"lineNum":" 2820","line":"}"},
{"lineNum":" 2821","line":""},
{"lineNum":" 2822","line":"template<class _UInt, size_t _Wp, size_t _Sp, size_t _Rp>"},
{"lineNum":" 2823","line":"bool"},
{"lineNum":" 2824","line":"operator==("},
{"lineNum":" 2825","line":"    const subtract_with_carry_engine<_UInt, _Wp, _Sp, _Rp>& __x,"},
{"lineNum":" 2826","line":"    const subtract_with_carry_engine<_UInt, _Wp, _Sp, _Rp>& __y)"},
{"lineNum":" 2827","line":"{"},
{"lineNum":" 2828","line":"    if (__x.__c_ != __y.__c_)"},
{"lineNum":" 2829","line":"        return false;"},
{"lineNum":" 2830","line":"    if (__x.__i_ == __y.__i_)"},
{"lineNum":" 2831","line":"        return _VSTD::equal(__x.__x_, __x.__x_ + _Rp, __y.__x_);"},
{"lineNum":" 2832","line":"    if (__x.__i_ == 0 || __y.__i_ == 0)"},
{"lineNum":" 2833","line":"    {"},
{"lineNum":" 2834","line":"        size_t __j = _VSTD::min(_Rp - __x.__i_, _Rp - __y.__i_);"},
{"lineNum":" 2835","line":"        if (!_VSTD::equal(__x.__x_ + __x.__i_, __x.__x_ + __x.__i_ + __j,"},
{"lineNum":" 2836","line":"                         __y.__x_ + __y.__i_))"},
{"lineNum":" 2837","line":"            return false;"},
{"lineNum":" 2838","line":"        if (__x.__i_ == 0)"},
{"lineNum":" 2839","line":"            return _VSTD::equal(__x.__x_ + __j, __x.__x_ + _Rp, __y.__x_);"},
{"lineNum":" 2840","line":"        return _VSTD::equal(__x.__x_, __x.__x_ + (_Rp - __j), __y.__x_ + __j);"},
{"lineNum":" 2841","line":"    }"},
{"lineNum":" 2842","line":"    if (__x.__i_ < __y.__i_)"},
{"lineNum":" 2843","line":"    {"},
{"lineNum":" 2844","line":"        size_t __j = _Rp - __y.__i_;"},
{"lineNum":" 2845","line":"        if (!_VSTD::equal(__x.__x_ + __x.__i_, __x.__x_ + (__x.__i_ + __j),"},
{"lineNum":" 2846","line":"                         __y.__x_ + __y.__i_))"},
{"lineNum":" 2847","line":"            return false;"},
{"lineNum":" 2848","line":"        if (!_VSTD::equal(__x.__x_ + (__x.__i_ + __j), __x.__x_ + _Rp,"},
{"lineNum":" 2849","line":"                         __y.__x_))"},
{"lineNum":" 2850","line":"            return false;"},
{"lineNum":" 2851","line":"        return _VSTD::equal(__x.__x_, __x.__x_ + __x.__i_,"},
{"lineNum":" 2852","line":"                           __y.__x_ + (_Rp - (__x.__i_ + __j)));"},
{"lineNum":" 2853","line":"    }"},
{"lineNum":" 2854","line":"    size_t __j = _Rp - __x.__i_;"},
{"lineNum":" 2855","line":"    if (!_VSTD::equal(__y.__x_ + __y.__i_, __y.__x_ + (__y.__i_ + __j),"},
{"lineNum":" 2856","line":"                     __x.__x_ + __x.__i_))"},
{"lineNum":" 2857","line":"        return false;"},
{"lineNum":" 2858","line":"    if (!_VSTD::equal(__y.__x_ + (__y.__i_ + __j), __y.__x_ + _Rp,"},
{"lineNum":" 2859","line":"                     __x.__x_))"},
{"lineNum":" 2860","line":"        return false;"},
{"lineNum":" 2861","line":"    return _VSTD::equal(__y.__x_, __y.__x_ + __y.__i_,"},
{"lineNum":" 2862","line":"                       __x.__x_ + (_Rp - (__y.__i_ + __j)));"},
{"lineNum":" 2863","line":"}"},
{"lineNum":" 2864","line":""},
{"lineNum":" 2865","line":"template<class _UInt, size_t _Wp, size_t _Sp, size_t _Rp>"},
{"lineNum":" 2866","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2867","line":"bool"},
{"lineNum":" 2868","line":"operator!=("},
{"lineNum":" 2869","line":"    const subtract_with_carry_engine<_UInt, _Wp, _Sp, _Rp>& __x,"},
{"lineNum":" 2870","line":"    const subtract_with_carry_engine<_UInt, _Wp, _Sp, _Rp>& __y)"},
{"lineNum":" 2871","line":"{"},
{"lineNum":" 2872","line":"    return !(__x == __y);"},
{"lineNum":" 2873","line":"}"},
{"lineNum":" 2874","line":""},
{"lineNum":" 2875","line":"template <class _CharT, class _Traits,"},
{"lineNum":" 2876","line":"          class _UInt, size_t _Wp, size_t _Sp, size_t _Rp>"},
{"lineNum":" 2877","line":"basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 2878","line":"operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 2879","line":"           const subtract_with_carry_engine<_UInt, _Wp, _Sp, _Rp>& __x)"},
{"lineNum":" 2880","line":"{"},
{"lineNum":" 2881","line":"    __save_flags<_CharT, _Traits> __lx(__os);"},
{"lineNum":" 2882","line":"    typedef basic_ostream<_CharT, _Traits> _Ostream;"},
{"lineNum":" 2883","line":"    __os.flags(_Ostream::dec | _Ostream::left);"},
{"lineNum":" 2884","line":"    _CharT __sp = __os.widen(\' \');"},
{"lineNum":" 2885","line":"    __os.fill(__sp);"},
{"lineNum":" 2886","line":"    __os << __x.__x_[__x.__i_];"},
{"lineNum":" 2887","line":"    for (size_t __j = __x.__i_ + 1; __j < _Rp; ++__j)"},
{"lineNum":" 2888","line":"        __os << __sp << __x.__x_[__j];"},
{"lineNum":" 2889","line":"    for (size_t __j = 0; __j < __x.__i_; ++__j)"},
{"lineNum":" 2890","line":"        __os << __sp << __x.__x_[__j];"},
{"lineNum":" 2891","line":"    __os << __sp << __x.__c_;"},
{"lineNum":" 2892","line":"    return __os;"},
{"lineNum":" 2893","line":"}"},
{"lineNum":" 2894","line":""},
{"lineNum":" 2895","line":"template <class _CharT, class _Traits,"},
{"lineNum":" 2896","line":"          class _UInt, size_t _Wp, size_t _Sp, size_t _Rp>"},
{"lineNum":" 2897","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 2898","line":"operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 2899","line":"           subtract_with_carry_engine<_UInt, _Wp, _Sp, _Rp>& __x)"},
{"lineNum":" 2900","line":"{"},
{"lineNum":" 2901","line":"    __save_flags<_CharT, _Traits> __lx(__is);"},
{"lineNum":" 2902","line":"    typedef basic_istream<_CharT, _Traits> _Istream;"},
{"lineNum":" 2903","line":"    __is.flags(_Istream::dec | _Istream::skipws);"},
{"lineNum":" 2904","line":"    _UInt __t[_Rp+1];"},
{"lineNum":" 2905","line":"    for (size_t __i = 0; __i < _Rp+1; ++__i)"},
{"lineNum":" 2906","line":"        __is >> __t[__i];"},
{"lineNum":" 2907","line":"    if (!__is.fail())"},
{"lineNum":" 2908","line":"    {"},
{"lineNum":" 2909","line":"        for (size_t __i = 0; __i < _Rp; ++__i)"},
{"lineNum":" 2910","line":"            __x.__x_[__i] = __t[__i];"},
{"lineNum":" 2911","line":"        __x.__c_ = __t[_Rp];"},
{"lineNum":" 2912","line":"        __x.__i_ = 0;"},
{"lineNum":" 2913","line":"    }"},
{"lineNum":" 2914","line":"    return __is;"},
{"lineNum":" 2915","line":"}"},
{"lineNum":" 2916","line":""},
{"lineNum":" 2917","line":"typedef subtract_with_carry_engine<uint_fast32_t, 24, 10, 24>     ranlux24_base;"},
{"lineNum":" 2918","line":"typedef subtract_with_carry_engine<uint_fast64_t, 48,  5, 12>     ranlux48_base;"},
{"lineNum":" 2919","line":""},
{"lineNum":" 2920","line":"// discard_block_engine"},
{"lineNum":" 2921","line":""},
{"lineNum":" 2922","line":"template<class _Engine, size_t __p, size_t __r>"},
{"lineNum":" 2923","line":"class _LIBCPP_TEMPLATE_VIS discard_block_engine"},
{"lineNum":" 2924","line":"{"},
{"lineNum":" 2925","line":"    _Engine __e_;"},
{"lineNum":" 2926","line":"    int     __n_;"},
{"lineNum":" 2927","line":""},
{"lineNum":" 2928","line":"    static_assert(  0 <  __r, \"discard_block_engine invalid parameters\");"},
{"lineNum":" 2929","line":"    static_assert(__r <= __p, \"discard_block_engine invalid parameters\");"},
{"lineNum":" 2930","line":"    static_assert(__r <= INT_MAX, \"discard_block_engine invalid parameters\");"},
{"lineNum":" 2931","line":"public:"},
{"lineNum":" 2932","line":"    // types"},
{"lineNum":" 2933","line":"    typedef typename _Engine::result_type result_type;"},
{"lineNum":" 2934","line":""},
{"lineNum":" 2935","line":"    // engine characteristics"},
{"lineNum":" 2936","line":"    static _LIBCPP_CONSTEXPR const size_t block_size = __p;"},
{"lineNum":" 2937","line":"    static _LIBCPP_CONSTEXPR const size_t used_block = __r;"},
{"lineNum":" 2938","line":""},
{"lineNum":" 2939","line":"#ifdef _LIBCPP_CXX03_LANG"},
{"lineNum":" 2940","line":"    static const result_type _Min = _Engine::_Min;"},
{"lineNum":" 2941","line":"    static const result_type _Max = _Engine::_Max;"},
{"lineNum":" 2942","line":"#else"},
{"lineNum":" 2943","line":"    static _LIBCPP_CONSTEXPR const result_type _Min = _Engine::min();"},
{"lineNum":" 2944","line":"    static _LIBCPP_CONSTEXPR const result_type _Max = _Engine::max();"},
{"lineNum":" 2945","line":"#endif"},
{"lineNum":" 2946","line":""},
{"lineNum":" 2947","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2948","line":"    static _LIBCPP_CONSTEXPR result_type min() { return _Engine::min(); }"},
{"lineNum":" 2949","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2950","line":"    static _LIBCPP_CONSTEXPR result_type max() { return _Engine::max(); }"},
{"lineNum":" 2951","line":""},
{"lineNum":" 2952","line":"    // constructors and seeding functions"},
{"lineNum":" 2953","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2954","line":"    discard_block_engine() : __n_(0) {}"},
{"lineNum":" 2955","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2956","line":"    explicit discard_block_engine(const _Engine& __e)"},
{"lineNum":" 2957","line":"        : __e_(__e), __n_(0) {}"},
{"lineNum":" 2958","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 2959","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2960","line":"    explicit discard_block_engine(_Engine&& __e)"},
{"lineNum":" 2961","line":"        : __e_(_VSTD::move(__e)), __n_(0) {}"},
{"lineNum":" 2962","line":"#endif // _LIBCPP_CXX03_LANG"},
{"lineNum":" 2963","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2964","line":"    explicit discard_block_engine(result_type __sd) : __e_(__sd), __n_(0) {}"},
{"lineNum":" 2965","line":"    template<class _Sseq>"},
{"lineNum":" 2966","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2967","line":"        explicit discard_block_engine(_Sseq& __q,"},
{"lineNum":" 2968","line":"        typename enable_if<__is_seed_sequence<_Sseq, discard_block_engine>::value &&"},
{"lineNum":" 2969","line":"                           !is_convertible<_Sseq, _Engine>::value>::type* = 0)"},
{"lineNum":" 2970","line":"        : __e_(__q), __n_(0) {}"},
{"lineNum":" 2971","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2972","line":"    void seed() {__e_.seed(); __n_ = 0;}"},
{"lineNum":" 2973","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2974","line":"    void seed(result_type __sd) {__e_.seed(__sd); __n_ = 0;}"},
{"lineNum":" 2975","line":"    template<class _Sseq>"},
{"lineNum":" 2976","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2977","line":"        typename enable_if"},
{"lineNum":" 2978","line":"        <"},
{"lineNum":" 2979","line":"            __is_seed_sequence<_Sseq, discard_block_engine>::value,"},
{"lineNum":" 2980","line":"            void"},
{"lineNum":" 2981","line":"        >::type"},
{"lineNum":" 2982","line":"        seed(_Sseq& __q) {__e_.seed(__q); __n_ = 0;}"},
{"lineNum":" 2983","line":""},
{"lineNum":" 2984","line":"    // generating functions"},
{"lineNum":" 2985","line":"    result_type operator()();"},
{"lineNum":" 2986","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2987","line":"    void discard(unsigned long long __z) {for (; __z; --__z) operator()();}"},
{"lineNum":" 2988","line":""},
{"lineNum":" 2989","line":"    // property functions"},
{"lineNum":" 2990","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 2991","line":"    const _Engine& base() const _NOEXCEPT {return __e_;}"},
{"lineNum":" 2992","line":""},
{"lineNum":" 2993","line":"    template<class _Eng, size_t _Pp, size_t _Rp>"},
{"lineNum":" 2994","line":"    friend"},
{"lineNum":" 2995","line":"    bool"},
{"lineNum":" 2996","line":"    operator==("},
{"lineNum":" 2997","line":"        const discard_block_engine<_Eng, _Pp, _Rp>& __x,"},
{"lineNum":" 2998","line":"        const discard_block_engine<_Eng, _Pp, _Rp>& __y);"},
{"lineNum":" 2999","line":""},
{"lineNum":" 3000","line":"    template<class _Eng, size_t _Pp, size_t _Rp>"},
{"lineNum":" 3001","line":"    friend"},
{"lineNum":" 3002","line":"    bool"},
{"lineNum":" 3003","line":"    operator!=("},
{"lineNum":" 3004","line":"        const discard_block_engine<_Eng, _Pp, _Rp>& __x,"},
{"lineNum":" 3005","line":"        const discard_block_engine<_Eng, _Pp, _Rp>& __y);"},
{"lineNum":" 3006","line":""},
{"lineNum":" 3007","line":"    template <class _CharT, class _Traits,"},
{"lineNum":" 3008","line":"              class _Eng, size_t _Pp, size_t _Rp>"},
{"lineNum":" 3009","line":"    friend"},
{"lineNum":" 3010","line":"    basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 3011","line":"    operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 3012","line":"               const discard_block_engine<_Eng, _Pp, _Rp>& __x);"},
{"lineNum":" 3013","line":""},
{"lineNum":" 3014","line":"    template <class _CharT, class _Traits,"},
{"lineNum":" 3015","line":"              class _Eng, size_t _Pp, size_t _Rp>"},
{"lineNum":" 3016","line":"    friend"},
{"lineNum":" 3017","line":"    basic_istream<_CharT, _Traits>&"},
{"lineNum":" 3018","line":"    operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 3019","line":"               discard_block_engine<_Eng, _Pp, _Rp>& __x);"},
{"lineNum":" 3020","line":"};"},
{"lineNum":" 3021","line":""},
{"lineNum":" 3022","line":"template<class _Engine, size_t __p, size_t __r>"},
{"lineNum":" 3023","line":"    _LIBCPP_CONSTEXPR const size_t discard_block_engine<_Engine, __p, __r>::block_size;"},
{"lineNum":" 3024","line":""},
{"lineNum":" 3025","line":"template<class _Engine, size_t __p, size_t __r>"},
{"lineNum":" 3026","line":"    _LIBCPP_CONSTEXPR const size_t discard_block_engine<_Engine, __p, __r>::used_block;"},
{"lineNum":" 3027","line":""},
{"lineNum":" 3028","line":"template<class _Engine, size_t __p, size_t __r>"},
{"lineNum":" 3029","line":"typename discard_block_engine<_Engine, __p, __r>::result_type"},
{"lineNum":" 3030","line":"discard_block_engine<_Engine, __p, __r>::operator()()"},
{"lineNum":" 3031","line":"{"},
{"lineNum":" 3032","line":"    if (__n_ >= static_cast<int>(__r))"},
{"lineNum":" 3033","line":"    {"},
{"lineNum":" 3034","line":"        __e_.discard(__p - __r);"},
{"lineNum":" 3035","line":"        __n_ = 0;"},
{"lineNum":" 3036","line":"    }"},
{"lineNum":" 3037","line":"    ++__n_;"},
{"lineNum":" 3038","line":"    return __e_();"},
{"lineNum":" 3039","line":"}"},
{"lineNum":" 3040","line":""},
{"lineNum":" 3041","line":"template<class _Eng, size_t _Pp, size_t _Rp>"},
{"lineNum":" 3042","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3043","line":"bool"},
{"lineNum":" 3044","line":"operator==(const discard_block_engine<_Eng, _Pp, _Rp>& __x,"},
{"lineNum":" 3045","line":"           const discard_block_engine<_Eng, _Pp, _Rp>& __y)"},
{"lineNum":" 3046","line":"{"},
{"lineNum":" 3047","line":"    return __x.__n_ == __y.__n_ && __x.__e_ == __y.__e_;"},
{"lineNum":" 3048","line":"}"},
{"lineNum":" 3049","line":""},
{"lineNum":" 3050","line":"template<class _Eng, size_t _Pp, size_t _Rp>"},
{"lineNum":" 3051","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3052","line":"bool"},
{"lineNum":" 3053","line":"operator!=(const discard_block_engine<_Eng, _Pp, _Rp>& __x,"},
{"lineNum":" 3054","line":"           const discard_block_engine<_Eng, _Pp, _Rp>& __y)"},
{"lineNum":" 3055","line":"{"},
{"lineNum":" 3056","line":"    return !(__x == __y);"},
{"lineNum":" 3057","line":"}"},
{"lineNum":" 3058","line":""},
{"lineNum":" 3059","line":"template <class _CharT, class _Traits,"},
{"lineNum":" 3060","line":"          class _Eng, size_t _Pp, size_t _Rp>"},
{"lineNum":" 3061","line":"basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 3062","line":"operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 3063","line":"           const discard_block_engine<_Eng, _Pp, _Rp>& __x)"},
{"lineNum":" 3064","line":"{"},
{"lineNum":" 3065","line":"    __save_flags<_CharT, _Traits> __lx(__os);"},
{"lineNum":" 3066","line":"    typedef basic_ostream<_CharT, _Traits> _Ostream;"},
{"lineNum":" 3067","line":"    __os.flags(_Ostream::dec | _Ostream::left);"},
{"lineNum":" 3068","line":"    _CharT __sp = __os.widen(\' \');"},
{"lineNum":" 3069","line":"    __os.fill(__sp);"},
{"lineNum":" 3070","line":"    return __os << __x.__e_ << __sp << __x.__n_;"},
{"lineNum":" 3071","line":"}"},
{"lineNum":" 3072","line":""},
{"lineNum":" 3073","line":"template <class _CharT, class _Traits,"},
{"lineNum":" 3074","line":"          class _Eng, size_t _Pp, size_t _Rp>"},
{"lineNum":" 3075","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 3076","line":"operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 3077","line":"           discard_block_engine<_Eng, _Pp, _Rp>& __x)"},
{"lineNum":" 3078","line":"{"},
{"lineNum":" 3079","line":"    __save_flags<_CharT, _Traits> __lx(__is);"},
{"lineNum":" 3080","line":"    typedef basic_istream<_CharT, _Traits> _Istream;"},
{"lineNum":" 3081","line":"    __is.flags(_Istream::dec | _Istream::skipws);"},
{"lineNum":" 3082","line":"    _Eng __e;"},
{"lineNum":" 3083","line":"    int __n;"},
{"lineNum":" 3084","line":"    __is >> __e >> __n;"},
{"lineNum":" 3085","line":"    if (!__is.fail())"},
{"lineNum":" 3086","line":"    {"},
{"lineNum":" 3087","line":"        __x.__e_ = __e;"},
{"lineNum":" 3088","line":"        __x.__n_ = __n;"},
{"lineNum":" 3089","line":"    }"},
{"lineNum":" 3090","line":"    return __is;"},
{"lineNum":" 3091","line":"}"},
{"lineNum":" 3092","line":""},
{"lineNum":" 3093","line":"typedef discard_block_engine<ranlux24_base, 223, 23> ranlux24;"},
{"lineNum":" 3094","line":"typedef discard_block_engine<ranlux48_base, 389, 11> ranlux48;"},
{"lineNum":" 3095","line":""},
{"lineNum":" 3096","line":"// independent_bits_engine"},
{"lineNum":" 3097","line":""},
{"lineNum":" 3098","line":"template<class _Engine, size_t __w, class _UIntType>"},
{"lineNum":" 3099","line":"class _LIBCPP_TEMPLATE_VIS independent_bits_engine"},
{"lineNum":" 3100","line":"{"},
{"lineNum":" 3101","line":"    template <class _UInt, _UInt _R0, size_t _Wp, size_t _Mp>"},
{"lineNum":" 3102","line":"    class __get_n"},
{"lineNum":" 3103","line":"    {"},
{"lineNum":" 3104","line":"        static _LIBCPP_CONSTEXPR const size_t _Dt = numeric_limits<_UInt>::digits;"},
{"lineNum":" 3105","line":"        static _LIBCPP_CONSTEXPR const size_t _Np = _Wp / _Mp + (_Wp % _Mp != 0);"},
{"lineNum":" 3106","line":"        static _LIBCPP_CONSTEXPR const size_t _W0 = _Wp / _Np;"},
{"lineNum":" 3107","line":"        static _LIBCPP_CONSTEXPR const _UInt _Y0 = _W0 >= _Dt ? 0 : (_R0 >> _W0) << _W0;"},
{"lineNum":" 3108","line":"    public:"},
{"lineNum":" 3109","line":"        static _LIBCPP_CONSTEXPR const size_t value = _R0 - _Y0 > _Y0 / _Np ? _Np + 1 : _Np;"},
{"lineNum":" 3110","line":"    };"},
{"lineNum":" 3111","line":"public:"},
{"lineNum":" 3112","line":"    // types"},
{"lineNum":" 3113","line":"    typedef _UIntType result_type;"},
{"lineNum":" 3114","line":""},
{"lineNum":" 3115","line":"private:"},
{"lineNum":" 3116","line":"    _Engine __e_;"},
{"lineNum":" 3117","line":""},
{"lineNum":" 3118","line":"    static _LIBCPP_CONSTEXPR const result_type _Dt = numeric_limits<result_type>::digits;"},
{"lineNum":" 3119","line":"    static_assert(  0 <  __w, \"independent_bits_engine invalid parameters\");"},
{"lineNum":" 3120","line":"    static_assert(__w <= _Dt, \"independent_bits_engine invalid parameters\");"},
{"lineNum":" 3121","line":""},
{"lineNum":" 3122","line":"    typedef typename _Engine::result_type _Engine_result_type;"},
{"lineNum":" 3123","line":"    typedef typename conditional"},
{"lineNum":" 3124","line":"        <"},
{"lineNum":" 3125","line":"            sizeof(_Engine_result_type) <= sizeof(result_type),"},
{"lineNum":" 3126","line":"                result_type,"},
{"lineNum":" 3127","line":"                _Engine_result_type"},
{"lineNum":" 3128","line":"        >::type _Working_result_type;"},
{"lineNum":" 3129","line":"#ifdef _LIBCPP_CXX03_LANG"},
{"lineNum":" 3130","line":"    static const _Working_result_type _Rp = _Engine::_Max - _Engine::_Min"},
{"lineNum":" 3131","line":"                                          + _Working_result_type(1);"},
{"lineNum":" 3132","line":"#else"},
{"lineNum":" 3133","line":"    static _LIBCPP_CONSTEXPR const _Working_result_type _Rp = _Engine::max() - _Engine::min()"},
{"lineNum":" 3134","line":"                                                            + _Working_result_type(1);"},
{"lineNum":" 3135","line":"#endif"},
{"lineNum":" 3136","line":"    static _LIBCPP_CONSTEXPR const size_t __m = __log2<_Working_result_type, _Rp>::value;"},
{"lineNum":" 3137","line":"    static _LIBCPP_CONSTEXPR const size_t __n = __get_n<_Working_result_type, _Rp, __w, __m>::value;"},
{"lineNum":" 3138","line":"    static _LIBCPP_CONSTEXPR const size_t __w0 = __w / __n;"},
{"lineNum":" 3139","line":"    static _LIBCPP_CONSTEXPR const size_t __n0 = __n - __w % __n;"},
{"lineNum":" 3140","line":"    static _LIBCPP_CONSTEXPR const size_t _WDt = numeric_limits<_Working_result_type>::digits;"},
{"lineNum":" 3141","line":"    static _LIBCPP_CONSTEXPR const size_t _EDt = numeric_limits<_Engine_result_type>::digits;"},
{"lineNum":" 3142","line":"    static _LIBCPP_CONSTEXPR const _Working_result_type __y0 = __w0 >= _WDt ? 0 :"},
{"lineNum":" 3143","line":"                                                               (_Rp >> __w0) << __w0;"},
{"lineNum":" 3144","line":"    static _LIBCPP_CONSTEXPR const _Working_result_type __y1 = __w0 >= _WDt - 1 ? 0 :"},
{"lineNum":" 3145","line":"                                                               (_Rp >> (__w0+1)) << (__w0+1);"},
{"lineNum":" 3146","line":"    static _LIBCPP_CONSTEXPR const _Engine_result_type __mask0 = __w0 > 0 ?"},
{"lineNum":" 3147","line":"                                _Engine_result_type(~0) >> (_EDt - __w0) :"},
{"lineNum":" 3148","line":"                                _Engine_result_type(0);"},
{"lineNum":" 3149","line":"    static _LIBCPP_CONSTEXPR const _Engine_result_type __mask1 = __w0 < _EDt - 1 ?"},
{"lineNum":" 3150","line":"                                _Engine_result_type(~0) >> (_EDt - (__w0 + 1)) :"},
{"lineNum":" 3151","line":"                                _Engine_result_type(~0);"},
{"lineNum":" 3152","line":"public:"},
{"lineNum":" 3153","line":"    static _LIBCPP_CONSTEXPR const result_type _Min = 0;"},
{"lineNum":" 3154","line":"    static _LIBCPP_CONSTEXPR const result_type _Max = __w == _Dt ? result_type(~0) :"},
{"lineNum":" 3155","line":"                                                      (result_type(1) << __w) - result_type(1);"},
{"lineNum":" 3156","line":"    static_assert(_Min < _Max, \"independent_bits_engine invalid parameters\");"},
{"lineNum":" 3157","line":""},
{"lineNum":" 3158","line":"    // engine characteristics"},
{"lineNum":" 3159","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3160","line":"    static _LIBCPP_CONSTEXPR result_type min() { return _Min; }"},
{"lineNum":" 3161","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3162","line":"    static _LIBCPP_CONSTEXPR result_type max() { return _Max; }"},
{"lineNum":" 3163","line":""},
{"lineNum":" 3164","line":"    // constructors and seeding functions"},
{"lineNum":" 3165","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3166","line":"    independent_bits_engine() {}"},
{"lineNum":" 3167","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3168","line":"    explicit independent_bits_engine(const _Engine& __e)"},
{"lineNum":" 3169","line":"        : __e_(__e) {}"},
{"lineNum":" 3170","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 3171","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3172","line":"    explicit independent_bits_engine(_Engine&& __e)"},
{"lineNum":" 3173","line":"        : __e_(_VSTD::move(__e)) {}"},
{"lineNum":" 3174","line":"#endif // _LIBCPP_CXX03_LANG"},
{"lineNum":" 3175","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3176","line":"    explicit independent_bits_engine(result_type __sd) : __e_(__sd) {}"},
{"lineNum":" 3177","line":"    template<class _Sseq>"},
{"lineNum":" 3178","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3179","line":"        explicit independent_bits_engine(_Sseq& __q,"},
{"lineNum":" 3180","line":"        typename enable_if<__is_seed_sequence<_Sseq, independent_bits_engine>::value &&"},
{"lineNum":" 3181","line":"                           !is_convertible<_Sseq, _Engine>::value>::type* = 0)"},
{"lineNum":" 3182","line":"         : __e_(__q) {}"},
{"lineNum":" 3183","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3184","line":"    void seed() {__e_.seed();}"},
{"lineNum":" 3185","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3186","line":"    void seed(result_type __sd) {__e_.seed(__sd);}"},
{"lineNum":" 3187","line":"    template<class _Sseq>"},
{"lineNum":" 3188","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3189","line":"        typename enable_if"},
{"lineNum":" 3190","line":"        <"},
{"lineNum":" 3191","line":"            __is_seed_sequence<_Sseq, independent_bits_engine>::value,"},
{"lineNum":" 3192","line":"            void"},
{"lineNum":" 3193","line":"        >::type"},
{"lineNum":" 3194","line":"        seed(_Sseq& __q) {__e_.seed(__q);}"},
{"lineNum":" 3195","line":""},
{"lineNum":" 3196","line":"    // generating functions"},
{"lineNum":" 3197","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3198","line":"    result_type operator()() {return __eval(integral_constant<bool, _Rp != 0>());}"},
{"lineNum":" 3199","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3200","line":"    void discard(unsigned long long __z) {for (; __z; --__z) operator()();}"},
{"lineNum":" 3201","line":""},
{"lineNum":" 3202","line":"    // property functions"},
{"lineNum":" 3203","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3204","line":"    const _Engine& base() const _NOEXCEPT {return __e_;}"},
{"lineNum":" 3205","line":""},
{"lineNum":" 3206","line":"    template<class _Eng, size_t _Wp, class _UInt>"},
{"lineNum":" 3207","line":"    friend"},
{"lineNum":" 3208","line":"    bool"},
{"lineNum":" 3209","line":"    operator==("},
{"lineNum":" 3210","line":"        const independent_bits_engine<_Eng, _Wp, _UInt>& __x,"},
{"lineNum":" 3211","line":"        const independent_bits_engine<_Eng, _Wp, _UInt>& __y);"},
{"lineNum":" 3212","line":""},
{"lineNum":" 3213","line":"    template<class _Eng, size_t _Wp, class _UInt>"},
{"lineNum":" 3214","line":"    friend"},
{"lineNum":" 3215","line":"    bool"},
{"lineNum":" 3216","line":"    operator!=("},
{"lineNum":" 3217","line":"        const independent_bits_engine<_Eng, _Wp, _UInt>& __x,"},
{"lineNum":" 3218","line":"        const independent_bits_engine<_Eng, _Wp, _UInt>& __y);"},
{"lineNum":" 3219","line":""},
{"lineNum":" 3220","line":"    template <class _CharT, class _Traits,"},
{"lineNum":" 3221","line":"              class _Eng, size_t _Wp, class _UInt>"},
{"lineNum":" 3222","line":"    friend"},
{"lineNum":" 3223","line":"    basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 3224","line":"    operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 3225","line":"               const independent_bits_engine<_Eng, _Wp, _UInt>& __x);"},
{"lineNum":" 3226","line":""},
{"lineNum":" 3227","line":"    template <class _CharT, class _Traits,"},
{"lineNum":" 3228","line":"              class _Eng, size_t _Wp, class _UInt>"},
{"lineNum":" 3229","line":"    friend"},
{"lineNum":" 3230","line":"    basic_istream<_CharT, _Traits>&"},
{"lineNum":" 3231","line":"    operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 3232","line":"               independent_bits_engine<_Eng, _Wp, _UInt>& __x);"},
{"lineNum":" 3233","line":""},
{"lineNum":" 3234","line":"private:"},
{"lineNum":" 3235","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3236","line":"    result_type __eval(false_type);"},
{"lineNum":" 3237","line":"    result_type __eval(true_type);"},
{"lineNum":" 3238","line":""},
{"lineNum":" 3239","line":"    template <size_t __count>"},
{"lineNum":" 3240","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3241","line":"        static"},
{"lineNum":" 3242","line":"        typename enable_if"},
{"lineNum":" 3243","line":"        <"},
{"lineNum":" 3244","line":"            __count < _Dt,"},
{"lineNum":" 3245","line":"            result_type"},
{"lineNum":" 3246","line":"        >::type"},
{"lineNum":" 3247","line":"        __lshift(result_type __x) {return __x << __count;}"},
{"lineNum":" 3248","line":""},
{"lineNum":" 3249","line":"    template <size_t __count>"},
{"lineNum":" 3250","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3251","line":"        static"},
{"lineNum":" 3252","line":"        typename enable_if"},
{"lineNum":" 3253","line":"        <"},
{"lineNum":" 3254","line":"            (__count >= _Dt),"},
{"lineNum":" 3255","line":"            result_type"},
{"lineNum":" 3256","line":"        >::type"},
{"lineNum":" 3257","line":"        __lshift(result_type) {return result_type(0);}"},
{"lineNum":" 3258","line":"};"},
{"lineNum":" 3259","line":""},
{"lineNum":" 3260","line":"template<class _Engine, size_t __w, class _UIntType>"},
{"lineNum":" 3261","line":"inline"},
{"lineNum":" 3262","line":"_UIntType"},
{"lineNum":" 3263","line":"independent_bits_engine<_Engine, __w, _UIntType>::__eval(false_type)"},
{"lineNum":" 3264","line":"{"},
{"lineNum":" 3265","line":"    return static_cast<result_type>(__e_() & __mask0);"},
{"lineNum":" 3266","line":"}"},
{"lineNum":" 3267","line":""},
{"lineNum":" 3268","line":"template<class _Engine, size_t __w, class _UIntType>"},
{"lineNum":" 3269","line":"_UIntType"},
{"lineNum":" 3270","line":"independent_bits_engine<_Engine, __w, _UIntType>::__eval(true_type)"},
{"lineNum":" 3271","line":"{"},
{"lineNum":" 3272","line":"    result_type _Sp = 0;"},
{"lineNum":" 3273","line":"    for (size_t __k = 0; __k < __n0; ++__k)"},
{"lineNum":" 3274","line":"    {"},
{"lineNum":" 3275","line":"        _Engine_result_type __u;"},
{"lineNum":" 3276","line":"        do"},
{"lineNum":" 3277","line":"        {"},
{"lineNum":" 3278","line":"            __u = __e_() - _Engine::min();"},
{"lineNum":" 3279","line":"        } while (__u >= __y0);"},
{"lineNum":" 3280","line":"        _Sp = static_cast<result_type>(__lshift<__w0>(_Sp) + (__u & __mask0));"},
{"lineNum":" 3281","line":"    }"},
{"lineNum":" 3282","line":"    for (size_t __k = __n0; __k < __n; ++__k)"},
{"lineNum":" 3283","line":"    {"},
{"lineNum":" 3284","line":"        _Engine_result_type __u;"},
{"lineNum":" 3285","line":"        do"},
{"lineNum":" 3286","line":"        {"},
{"lineNum":" 3287","line":"            __u = __e_() - _Engine::min();"},
{"lineNum":" 3288","line":"        } while (__u >= __y1);"},
{"lineNum":" 3289","line":"        _Sp = static_cast<result_type>(__lshift<__w0+1>(_Sp) + (__u & __mask1));"},
{"lineNum":" 3290","line":"    }"},
{"lineNum":" 3291","line":"    return _Sp;"},
{"lineNum":" 3292","line":"}"},
{"lineNum":" 3293","line":""},
{"lineNum":" 3294","line":"template<class _Eng, size_t _Wp, class _UInt>"},
{"lineNum":" 3295","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3296","line":"bool"},
{"lineNum":" 3297","line":"operator==("},
{"lineNum":" 3298","line":"    const independent_bits_engine<_Eng, _Wp, _UInt>& __x,"},
{"lineNum":" 3299","line":"    const independent_bits_engine<_Eng, _Wp, _UInt>& __y)"},
{"lineNum":" 3300","line":"{"},
{"lineNum":" 3301","line":"    return __x.base() == __y.base();"},
{"lineNum":" 3302","line":"}"},
{"lineNum":" 3303","line":""},
{"lineNum":" 3304","line":"template<class _Eng, size_t _Wp, class _UInt>"},
{"lineNum":" 3305","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3306","line":"bool"},
{"lineNum":" 3307","line":"operator!=("},
{"lineNum":" 3308","line":"    const independent_bits_engine<_Eng, _Wp, _UInt>& __x,"},
{"lineNum":" 3309","line":"    const independent_bits_engine<_Eng, _Wp, _UInt>& __y)"},
{"lineNum":" 3310","line":"{"},
{"lineNum":" 3311","line":"    return !(__x == __y);"},
{"lineNum":" 3312","line":"}"},
{"lineNum":" 3313","line":""},
{"lineNum":" 3314","line":"template <class _CharT, class _Traits,"},
{"lineNum":" 3315","line":"          class _Eng, size_t _Wp, class _UInt>"},
{"lineNum":" 3316","line":"basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 3317","line":"operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 3318","line":"           const independent_bits_engine<_Eng, _Wp, _UInt>& __x)"},
{"lineNum":" 3319","line":"{"},
{"lineNum":" 3320","line":"    return __os << __x.base();"},
{"lineNum":" 3321","line":"}"},
{"lineNum":" 3322","line":""},
{"lineNum":" 3323","line":"template <class _CharT, class _Traits,"},
{"lineNum":" 3324","line":"          class _Eng, size_t _Wp, class _UInt>"},
{"lineNum":" 3325","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 3326","line":"operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 3327","line":"           independent_bits_engine<_Eng, _Wp, _UInt>& __x)"},
{"lineNum":" 3328","line":"{"},
{"lineNum":" 3329","line":"    _Eng __e;"},
{"lineNum":" 3330","line":"    __is >> __e;"},
{"lineNum":" 3331","line":"    if (!__is.fail())"},
{"lineNum":" 3332","line":"        __x.__e_ = __e;"},
{"lineNum":" 3333","line":"    return __is;"},
{"lineNum":" 3334","line":"}"},
{"lineNum":" 3335","line":""},
{"lineNum":" 3336","line":"// shuffle_order_engine"},
{"lineNum":" 3337","line":""},
{"lineNum":" 3338","line":"template <uint64_t _Xp, uint64_t _Yp>"},
{"lineNum":" 3339","line":"struct __ugcd"},
{"lineNum":" 3340","line":"{"},
{"lineNum":" 3341","line":"    static _LIBCPP_CONSTEXPR const uint64_t value = __ugcd<_Yp, _Xp % _Yp>::value;"},
{"lineNum":" 3342","line":"};"},
{"lineNum":" 3343","line":""},
{"lineNum":" 3344","line":"template <uint64_t _Xp>"},
{"lineNum":" 3345","line":"struct __ugcd<_Xp, 0>"},
{"lineNum":" 3346","line":"{"},
{"lineNum":" 3347","line":"    static _LIBCPP_CONSTEXPR const uint64_t value = _Xp;"},
{"lineNum":" 3348","line":"};"},
{"lineNum":" 3349","line":""},
{"lineNum":" 3350","line":"template <uint64_t _Np, uint64_t _Dp>"},
{"lineNum":" 3351","line":"class __uratio"},
{"lineNum":" 3352","line":"{"},
{"lineNum":" 3353","line":"    static_assert(_Dp != 0, \"__uratio divide by 0\");"},
{"lineNum":" 3354","line":"    static _LIBCPP_CONSTEXPR const uint64_t __gcd = __ugcd<_Np, _Dp>::value;"},
{"lineNum":" 3355","line":"public:"},
{"lineNum":" 3356","line":"    static _LIBCPP_CONSTEXPR const uint64_t num = _Np / __gcd;"},
{"lineNum":" 3357","line":"    static _LIBCPP_CONSTEXPR const uint64_t den = _Dp / __gcd;"},
{"lineNum":" 3358","line":""},
{"lineNum":" 3359","line":"    typedef __uratio<num, den> type;"},
{"lineNum":" 3360","line":"};"},
{"lineNum":" 3361","line":""},
{"lineNum":" 3362","line":"template<class _Engine, size_t __k>"},
{"lineNum":" 3363","line":"class _LIBCPP_TEMPLATE_VIS shuffle_order_engine"},
{"lineNum":" 3364","line":"{"},
{"lineNum":" 3365","line":"    static_assert(0 < __k, \"shuffle_order_engine invalid parameters\");"},
{"lineNum":" 3366","line":"public:"},
{"lineNum":" 3367","line":"    // types"},
{"lineNum":" 3368","line":"    typedef typename _Engine::result_type result_type;"},
{"lineNum":" 3369","line":""},
{"lineNum":" 3370","line":"private:"},
{"lineNum":" 3371","line":"    _Engine __e_;"},
{"lineNum":" 3372","line":"    result_type _V_[__k];"},
{"lineNum":" 3373","line":"    result_type _Y_;"},
{"lineNum":" 3374","line":""},
{"lineNum":" 3375","line":"public:"},
{"lineNum":" 3376","line":"    // engine characteristics"},
{"lineNum":" 3377","line":"    static _LIBCPP_CONSTEXPR const size_t table_size = __k;"},
{"lineNum":" 3378","line":""},
{"lineNum":" 3379","line":"#ifdef _LIBCPP_CXX03_LANG"},
{"lineNum":" 3380","line":"    static const result_type _Min = _Engine::_Min;"},
{"lineNum":" 3381","line":"    static const result_type _Max = _Engine::_Max;"},
{"lineNum":" 3382","line":"#else"},
{"lineNum":" 3383","line":"    static _LIBCPP_CONSTEXPR const result_type _Min = _Engine::min();"},
{"lineNum":" 3384","line":"    static _LIBCPP_CONSTEXPR const result_type _Max = _Engine::max();"},
{"lineNum":" 3385","line":"#endif"},
{"lineNum":" 3386","line":"    static_assert(_Min < _Max, \"shuffle_order_engine invalid parameters\");"},
{"lineNum":" 3387","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3388","line":"    static _LIBCPP_CONSTEXPR result_type min() { return _Min; }"},
{"lineNum":" 3389","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3390","line":"    static _LIBCPP_CONSTEXPR result_type max() { return _Max; }"},
{"lineNum":" 3391","line":""},
{"lineNum":" 3392","line":"    static _LIBCPP_CONSTEXPR const unsigned long long _Rp = _Max - _Min + 1ull;"},
{"lineNum":" 3393","line":""},
{"lineNum":" 3394","line":"    // constructors and seeding functions"},
{"lineNum":" 3395","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3396","line":"    shuffle_order_engine() {__init();}"},
{"lineNum":" 3397","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3398","line":"    explicit shuffle_order_engine(const _Engine& __e)"},
{"lineNum":" 3399","line":"        : __e_(__e) {__init();}"},
{"lineNum":" 3400","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 3401","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3402","line":"    explicit shuffle_order_engine(_Engine&& __e)"},
{"lineNum":" 3403","line":"        : __e_(_VSTD::move(__e)) {__init();}"},
{"lineNum":" 3404","line":"#endif // _LIBCPP_CXX03_LANG"},
{"lineNum":" 3405","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3406","line":"    explicit shuffle_order_engine(result_type __sd) : __e_(__sd) {__init();}"},
{"lineNum":" 3407","line":"    template<class _Sseq>"},
{"lineNum":" 3408","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3409","line":"        explicit shuffle_order_engine(_Sseq& __q,"},
{"lineNum":" 3410","line":"        typename enable_if<__is_seed_sequence<_Sseq, shuffle_order_engine>::value &&"},
{"lineNum":" 3411","line":"                           !is_convertible<_Sseq, _Engine>::value>::type* = 0)"},
{"lineNum":" 3412","line":"         : __e_(__q) {__init();}"},
{"lineNum":" 3413","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3414","line":"    void seed() {__e_.seed(); __init();}"},
{"lineNum":" 3415","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3416","line":"    void seed(result_type __sd) {__e_.seed(__sd); __init();}"},
{"lineNum":" 3417","line":"    template<class _Sseq>"},
{"lineNum":" 3418","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3419","line":"        typename enable_if"},
{"lineNum":" 3420","line":"        <"},
{"lineNum":" 3421","line":"            __is_seed_sequence<_Sseq, shuffle_order_engine>::value,"},
{"lineNum":" 3422","line":"            void"},
{"lineNum":" 3423","line":"        >::type"},
{"lineNum":" 3424","line":"        seed(_Sseq& __q) {__e_.seed(__q); __init();}"},
{"lineNum":" 3425","line":""},
{"lineNum":" 3426","line":"    // generating functions"},
{"lineNum":" 3427","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3428","line":"    result_type operator()() {return __eval(integral_constant<bool, _Rp != 0>());}"},
{"lineNum":" 3429","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3430","line":"    void discard(unsigned long long __z) {for (; __z; --__z) operator()();}"},
{"lineNum":" 3431","line":""},
{"lineNum":" 3432","line":"    // property functions"},
{"lineNum":" 3433","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3434","line":"    const _Engine& base() const _NOEXCEPT {return __e_;}"},
{"lineNum":" 3435","line":""},
{"lineNum":" 3436","line":"private:"},
{"lineNum":" 3437","line":"    template<class _Eng, size_t _Kp>"},
{"lineNum":" 3438","line":"    friend"},
{"lineNum":" 3439","line":"    bool"},
{"lineNum":" 3440","line":"    operator==("},
{"lineNum":" 3441","line":"        const shuffle_order_engine<_Eng, _Kp>& __x,"},
{"lineNum":" 3442","line":"        const shuffle_order_engine<_Eng, _Kp>& __y);"},
{"lineNum":" 3443","line":""},
{"lineNum":" 3444","line":"    template<class _Eng, size_t _Kp>"},
{"lineNum":" 3445","line":"    friend"},
{"lineNum":" 3446","line":"    bool"},
{"lineNum":" 3447","line":"    operator!=("},
{"lineNum":" 3448","line":"        const shuffle_order_engine<_Eng, _Kp>& __x,"},
{"lineNum":" 3449","line":"        const shuffle_order_engine<_Eng, _Kp>& __y);"},
{"lineNum":" 3450","line":""},
{"lineNum":" 3451","line":"    template <class _CharT, class _Traits,"},
{"lineNum":" 3452","line":"              class _Eng, size_t _Kp>"},
{"lineNum":" 3453","line":"    friend"},
{"lineNum":" 3454","line":"    basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 3455","line":"    operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 3456","line":"               const shuffle_order_engine<_Eng, _Kp>& __x);"},
{"lineNum":" 3457","line":""},
{"lineNum":" 3458","line":"    template <class _CharT, class _Traits,"},
{"lineNum":" 3459","line":"              class _Eng, size_t _Kp>"},
{"lineNum":" 3460","line":"    friend"},
{"lineNum":" 3461","line":"    basic_istream<_CharT, _Traits>&"},
{"lineNum":" 3462","line":"    operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 3463","line":"               shuffle_order_engine<_Eng, _Kp>& __x);"},
{"lineNum":" 3464","line":""},
{"lineNum":" 3465","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3466","line":"    void __init()"},
{"lineNum":" 3467","line":"    {"},
{"lineNum":" 3468","line":"        for (size_t __i = 0; __i < __k; ++__i)"},
{"lineNum":" 3469","line":"            _V_[__i] = __e_();"},
{"lineNum":" 3470","line":"        _Y_ = __e_();"},
{"lineNum":" 3471","line":"    }"},
{"lineNum":" 3472","line":""},
{"lineNum":" 3473","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3474","line":"    result_type __eval(false_type) {return __eval2(integral_constant<bool, __k & 1>());}"},
{"lineNum":" 3475","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3476","line":"    result_type __eval(true_type) {return __eval(__uratio<__k, _Rp>());}"},
{"lineNum":" 3477","line":""},
{"lineNum":" 3478","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3479","line":"    result_type __eval2(false_type) {return __eval(__uratio<__k/2, 0x8000000000000000ull>());}"},
{"lineNum":" 3480","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3481","line":"    result_type __eval2(true_type) {return __evalf<__k, 0>();}"},
{"lineNum":" 3482","line":""},
{"lineNum":" 3483","line":"    template <uint64_t _Np, uint64_t _Dp>"},
{"lineNum":" 3484","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3485","line":"        typename enable_if"},
{"lineNum":" 3486","line":"        <"},
{"lineNum":" 3487","line":"            (__uratio<_Np, _Dp>::num > 0xFFFFFFFFFFFFFFFFull / (_Max - _Min)),"},
{"lineNum":" 3488","line":"            result_type"},
{"lineNum":" 3489","line":"        >::type"},
{"lineNum":" 3490","line":"        __eval(__uratio<_Np, _Dp>)"},
{"lineNum":" 3491","line":"            {return __evalf<__uratio<_Np, _Dp>::num, __uratio<_Np, _Dp>::den>();}"},
{"lineNum":" 3492","line":""},
{"lineNum":" 3493","line":"    template <uint64_t _Np, uint64_t _Dp>"},
{"lineNum":" 3494","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3495","line":"        typename enable_if"},
{"lineNum":" 3496","line":"        <"},
{"lineNum":" 3497","line":"            __uratio<_Np, _Dp>::num <= 0xFFFFFFFFFFFFFFFFull / (_Max - _Min),"},
{"lineNum":" 3498","line":"            result_type"},
{"lineNum":" 3499","line":"        >::type"},
{"lineNum":" 3500","line":"        __eval(__uratio<_Np, _Dp>)"},
{"lineNum":" 3501","line":"        {"},
{"lineNum":" 3502","line":"            const size_t __j = static_cast<size_t>(__uratio<_Np, _Dp>::num * (_Y_ - _Min)"},
{"lineNum":" 3503","line":"                                                   / __uratio<_Np, _Dp>::den);"},
{"lineNum":" 3504","line":"            _Y_ = _V_[__j];"},
{"lineNum":" 3505","line":"            _V_[__j] = __e_();"},
{"lineNum":" 3506","line":"            return _Y_;"},
{"lineNum":" 3507","line":"        }"},
{"lineNum":" 3508","line":""},
{"lineNum":" 3509","line":"    template <uint64_t __n, uint64_t __d>"},
{"lineNum":" 3510","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3511","line":"        result_type __evalf()"},
{"lineNum":" 3512","line":"        {"},
{"lineNum":" 3513","line":"            const double _Fp = __d == 0 ?"},
{"lineNum":" 3514","line":"                __n / (2. * 0x8000000000000000ull) :"},
{"lineNum":" 3515","line":"                __n / (double)__d;"},
{"lineNum":" 3516","line":"            const size_t __j = static_cast<size_t>(_Fp * (_Y_ - _Min));"},
{"lineNum":" 3517","line":"            _Y_ = _V_[__j];"},
{"lineNum":" 3518","line":"            _V_[__j] = __e_();"},
{"lineNum":" 3519","line":"            return _Y_;"},
{"lineNum":" 3520","line":"        }"},
{"lineNum":" 3521","line":"};"},
{"lineNum":" 3522","line":""},
{"lineNum":" 3523","line":"template<class _Engine, size_t __k>"},
{"lineNum":" 3524","line":"    _LIBCPP_CONSTEXPR const size_t shuffle_order_engine<_Engine, __k>::table_size;"},
{"lineNum":" 3525","line":""},
{"lineNum":" 3526","line":"template<class _Eng, size_t _Kp>"},
{"lineNum":" 3527","line":"bool"},
{"lineNum":" 3528","line":"operator==("},
{"lineNum":" 3529","line":"    const shuffle_order_engine<_Eng, _Kp>& __x,"},
{"lineNum":" 3530","line":"    const shuffle_order_engine<_Eng, _Kp>& __y)"},
{"lineNum":" 3531","line":"{"},
{"lineNum":" 3532","line":"    return __x._Y_ == __y._Y_ && _VSTD::equal(__x._V_, __x._V_ + _Kp, __y._V_) &&"},
{"lineNum":" 3533","line":"           __x.__e_ == __y.__e_;"},
{"lineNum":" 3534","line":"}"},
{"lineNum":" 3535","line":""},
{"lineNum":" 3536","line":"template<class _Eng, size_t _Kp>"},
{"lineNum":" 3537","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3538","line":"bool"},
{"lineNum":" 3539","line":"operator!=("},
{"lineNum":" 3540","line":"    const shuffle_order_engine<_Eng, _Kp>& __x,"},
{"lineNum":" 3541","line":"    const shuffle_order_engine<_Eng, _Kp>& __y)"},
{"lineNum":" 3542","line":"{"},
{"lineNum":" 3543","line":"    return !(__x == __y);"},
{"lineNum":" 3544","line":"}"},
{"lineNum":" 3545","line":""},
{"lineNum":" 3546","line":"template <class _CharT, class _Traits,"},
{"lineNum":" 3547","line":"          class _Eng, size_t _Kp>"},
{"lineNum":" 3548","line":"basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 3549","line":"operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 3550","line":"           const shuffle_order_engine<_Eng, _Kp>& __x)"},
{"lineNum":" 3551","line":"{"},
{"lineNum":" 3552","line":"    __save_flags<_CharT, _Traits> __lx(__os);"},
{"lineNum":" 3553","line":"    typedef basic_ostream<_CharT, _Traits> _Ostream;"},
{"lineNum":" 3554","line":"    __os.flags(_Ostream::dec | _Ostream::left);"},
{"lineNum":" 3555","line":"    _CharT __sp = __os.widen(\' \');"},
{"lineNum":" 3556","line":"    __os.fill(__sp);"},
{"lineNum":" 3557","line":"    __os << __x.__e_ << __sp << __x._V_[0];"},
{"lineNum":" 3558","line":"    for (size_t __i = 1; __i < _Kp; ++__i)"},
{"lineNum":" 3559","line":"        __os << __sp << __x._V_[__i];"},
{"lineNum":" 3560","line":"    return __os << __sp << __x._Y_;"},
{"lineNum":" 3561","line":"}"},
{"lineNum":" 3562","line":""},
{"lineNum":" 3563","line":"template <class _CharT, class _Traits,"},
{"lineNum":" 3564","line":"          class _Eng, size_t _Kp>"},
{"lineNum":" 3565","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 3566","line":"operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 3567","line":"           shuffle_order_engine<_Eng, _Kp>& __x)"},
{"lineNum":" 3568","line":"{"},
{"lineNum":" 3569","line":"    typedef typename shuffle_order_engine<_Eng, _Kp>::result_type result_type;"},
{"lineNum":" 3570","line":"    __save_flags<_CharT, _Traits> __lx(__is);"},
{"lineNum":" 3571","line":"    typedef basic_istream<_CharT, _Traits> _Istream;"},
{"lineNum":" 3572","line":"    __is.flags(_Istream::dec | _Istream::skipws);"},
{"lineNum":" 3573","line":"    _Eng __e;"},
{"lineNum":" 3574","line":"    result_type _Vp[_Kp+1];"},
{"lineNum":" 3575","line":"    __is >> __e;"},
{"lineNum":" 3576","line":"    for (size_t __i = 0; __i < _Kp+1; ++__i)"},
{"lineNum":" 3577","line":"        __is >> _Vp[__i];"},
{"lineNum":" 3578","line":"    if (!__is.fail())"},
{"lineNum":" 3579","line":"    {"},
{"lineNum":" 3580","line":"        __x.__e_ = __e;"},
{"lineNum":" 3581","line":"        for (size_t __i = 0; __i < _Kp; ++__i)"},
{"lineNum":" 3582","line":"            __x._V_[__i] = _Vp[__i];"},
{"lineNum":" 3583","line":"        __x._Y_ = _Vp[_Kp];"},
{"lineNum":" 3584","line":"    }"},
{"lineNum":" 3585","line":"    return __is;"},
{"lineNum":" 3586","line":"}"},
{"lineNum":" 3587","line":""},
{"lineNum":" 3588","line":"typedef shuffle_order_engine<minstd_rand0, 256>                         knuth_b;"},
{"lineNum":" 3589","line":""},
{"lineNum":" 3590","line":"// random_device"},
{"lineNum":" 3591","line":""},
{"lineNum":" 3592","line":"#if !defined(_LIBCPP_HAS_NO_RANDOM_DEVICE)"},
{"lineNum":" 3593","line":""},
{"lineNum":" 3594","line":"class _LIBCPP_TYPE_VIS random_device"},
{"lineNum":" 3595","line":"{"},
{"lineNum":" 3596","line":"#ifdef _LIBCPP_USING_DEV_RANDOM"},
{"lineNum":" 3597","line":"    int __f_;"},
{"lineNum":" 3598","line":"#endif // defined(_LIBCPP_USING_DEV_RANDOM)"},
{"lineNum":" 3599","line":"public:"},
{"lineNum":" 3600","line":"    // types"},
{"lineNum":" 3601","line":"    typedef unsigned result_type;"},
{"lineNum":" 3602","line":""},
{"lineNum":" 3603","line":"    // generator characteristics"},
{"lineNum":" 3604","line":"    static _LIBCPP_CONSTEXPR const result_type _Min = 0;"},
{"lineNum":" 3605","line":"    static _LIBCPP_CONSTEXPR const result_type _Max = 0xFFFFFFFFu;"},
{"lineNum":" 3606","line":""},
{"lineNum":" 3607","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3608","line":"    static _LIBCPP_CONSTEXPR result_type min() { return _Min;}"},
{"lineNum":" 3609","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3610","line":"    static _LIBCPP_CONSTEXPR result_type max() { return _Max;}"},
{"lineNum":" 3611","line":""},
{"lineNum":" 3612","line":"    // constructors"},
{"lineNum":" 3613","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 3614","line":"    random_device() : random_device(\"/dev/urandom\") {}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 3615","line":"    explicit random_device(const string& __token);"},
{"lineNum":" 3616","line":"#else"},
{"lineNum":" 3617","line":"    explicit random_device(const string& __token = \"/dev/urandom\");"},
{"lineNum":" 3618","line":"#endif"},
{"lineNum":" 3619","line":"    ~random_device();"},
{"lineNum":" 3620","line":""},
{"lineNum":" 3621","line":"    // generating functions"},
{"lineNum":" 3622","line":"    result_type operator()();"},
{"lineNum":" 3623","line":""},
{"lineNum":" 3624","line":"    // property functions"},
{"lineNum":" 3625","line":"    double entropy() const _NOEXCEPT;"},
{"lineNum":" 3626","line":""},
{"lineNum":" 3627","line":"private:"},
{"lineNum":" 3628","line":"    // no copy functions"},
{"lineNum":" 3629","line":"    random_device(const random_device&); // = delete;"},
{"lineNum":" 3630","line":"    random_device& operator=(const random_device&); // = delete;"},
{"lineNum":" 3631","line":"};"},
{"lineNum":" 3632","line":""},
{"lineNum":" 3633","line":"#endif // !_LIBCPP_HAS_NO_RANDOM_DEVICE"},
{"lineNum":" 3634","line":""},
{"lineNum":" 3635","line":"// seed_seq"},
{"lineNum":" 3636","line":""},
{"lineNum":" 3637","line":"class _LIBCPP_TEMPLATE_VIS seed_seq"},
{"lineNum":" 3638","line":"{"},
{"lineNum":" 3639","line":"public:"},
{"lineNum":" 3640","line":"    // types"},
{"lineNum":" 3641","line":"    typedef uint32_t result_type;"},
{"lineNum":" 3642","line":""},
{"lineNum":" 3643","line":"private:"},
{"lineNum":" 3644","line":"    vector<result_type> __v_;"},
{"lineNum":" 3645","line":""},
{"lineNum":" 3646","line":"    template<class _InputIterator>"},
{"lineNum":" 3647","line":"        void init(_InputIterator __first, _InputIterator __last);"},
{"lineNum":" 3648","line":"public:"},
{"lineNum":" 3649","line":"    // constructors"},
{"lineNum":" 3650","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3651","line":"    seed_seq() _NOEXCEPT {}"},
{"lineNum":" 3652","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 3653","line":"    template<class _Tp>"},
{"lineNum":" 3654","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3655","line":"        seed_seq(initializer_list<_Tp> __il) {init(__il.begin(), __il.end());}"},
{"lineNum":" 3656","line":"#endif // _LIBCPP_CXX03_LANG"},
{"lineNum":" 3657","line":""},
{"lineNum":" 3658","line":"    template<class _InputIterator>"},
{"lineNum":" 3659","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3660","line":"        seed_seq(_InputIterator __first, _InputIterator __last)"},
{"lineNum":" 3661","line":"             {init(__first, __last);}"},
{"lineNum":" 3662","line":""},
{"lineNum":" 3663","line":"    // generating functions"},
{"lineNum":" 3664","line":"    template<class _RandomAccessIterator>"},
{"lineNum":" 3665","line":"        void generate(_RandomAccessIterator __first, _RandomAccessIterator __last);"},
{"lineNum":" 3666","line":""},
{"lineNum":" 3667","line":"    // property functions"},
{"lineNum":" 3668","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3669","line":"    size_t size() const _NOEXCEPT {return __v_.size();}"},
{"lineNum":" 3670","line":"    template<class _OutputIterator>"},
{"lineNum":" 3671","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3672","line":"        void param(_OutputIterator __dest) const"},
{"lineNum":" 3673","line":"            {_VSTD::copy(__v_.begin(), __v_.end(), __dest);}"},
{"lineNum":" 3674","line":""},
{"lineNum":" 3675","line":"private:"},
{"lineNum":" 3676","line":"    // no copy functions"},
{"lineNum":" 3677","line":"    seed_seq(const seed_seq&); // = delete;"},
{"lineNum":" 3678","line":"    void operator=(const seed_seq&); // = delete;"},
{"lineNum":" 3679","line":""},
{"lineNum":" 3680","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3681","line":"    static result_type _Tp(result_type __x) {return __x ^ (__x >> 27);}"},
{"lineNum":" 3682","line":"};"},
{"lineNum":" 3683","line":""},
{"lineNum":" 3684","line":"template<class _InputIterator>"},
{"lineNum":" 3685","line":"void"},
{"lineNum":" 3686","line":"seed_seq::init(_InputIterator __first, _InputIterator __last)"},
{"lineNum":" 3687","line":"{"},
{"lineNum":" 3688","line":"    for (_InputIterator __s = __first; __s != __last; ++__s)"},
{"lineNum":" 3689","line":"        __v_.push_back(*__s & 0xFFFFFFFF);"},
{"lineNum":" 3690","line":"}"},
{"lineNum":" 3691","line":""},
{"lineNum":" 3692","line":"template<class _RandomAccessIterator>"},
{"lineNum":" 3693","line":"void"},
{"lineNum":" 3694","line":"seed_seq::generate(_RandomAccessIterator __first, _RandomAccessIterator __last)"},
{"lineNum":" 3695","line":"{"},
{"lineNum":" 3696","line":"    if (__first != __last)"},
{"lineNum":" 3697","line":"    {"},
{"lineNum":" 3698","line":"        _VSTD::fill(__first, __last, 0x8b8b8b8b);"},
{"lineNum":" 3699","line":"        const size_t __n = static_cast<size_t>(__last - __first);"},
{"lineNum":" 3700","line":"        const size_t __s = __v_.size();"},
{"lineNum":" 3701","line":"        const size_t __t = (__n >= 623) ? 11"},
{"lineNum":" 3702","line":"                         : (__n >= 68) ? 7"},
{"lineNum":" 3703","line":"                         : (__n >= 39) ? 5"},
{"lineNum":" 3704","line":"                         : (__n >= 7)  ? 3"},
{"lineNum":" 3705","line":"                         : (__n - 1) / 2;"},
{"lineNum":" 3706","line":"        const size_t __p = (__n - __t) / 2;"},
{"lineNum":" 3707","line":"        const size_t __q = __p + __t;"},
{"lineNum":" 3708","line":"        const size_t __m = _VSTD::max(__s + 1, __n);"},
{"lineNum":" 3709","line":"        // __k = 0;"},
{"lineNum":" 3710","line":"        {"},
{"lineNum":" 3711","line":"            result_type __r = 1664525 * _Tp(__first[0] ^ __first[__p]"},
{"lineNum":" 3712","line":"                                                      ^  __first[__n - 1]);"},
{"lineNum":" 3713","line":"            __first[__p] += __r;"},
{"lineNum":" 3714","line":"            __r += __s;"},
{"lineNum":" 3715","line":"            __first[__q] += __r;"},
{"lineNum":" 3716","line":"            __first[0] = __r;"},
{"lineNum":" 3717","line":"        }"},
{"lineNum":" 3718","line":"        for (size_t __k = 1; __k <= __s; ++__k)"},
{"lineNum":" 3719","line":"        {"},
{"lineNum":" 3720","line":"            const size_t __kmodn = __k % __n;"},
{"lineNum":" 3721","line":"            const size_t __kpmodn = (__k + __p) % __n;"},
{"lineNum":" 3722","line":"            result_type __r = 1664525 * _Tp(__first[__kmodn] ^ __first[__kpmodn]"},
{"lineNum":" 3723","line":"                                           ^ __first[(__k - 1) % __n]);"},
{"lineNum":" 3724","line":"            __first[__kpmodn] += __r;"},
{"lineNum":" 3725","line":"            __r +=  __kmodn + __v_[__k-1];"},
{"lineNum":" 3726","line":"            __first[(__k + __q) % __n] += __r;"},
{"lineNum":" 3727","line":"            __first[__kmodn] = __r;"},
{"lineNum":" 3728","line":"        }"},
{"lineNum":" 3729","line":"        for (size_t __k = __s + 1; __k < __m; ++__k)"},
{"lineNum":" 3730","line":"        {"},
{"lineNum":" 3731","line":"            const size_t __kmodn = __k % __n;"},
{"lineNum":" 3732","line":"            const size_t __kpmodn = (__k + __p) % __n;"},
{"lineNum":" 3733","line":"            result_type __r = 1664525 * _Tp(__first[__kmodn] ^ __first[__kpmodn]"},
{"lineNum":" 3734","line":"                                           ^ __first[(__k - 1) % __n]);"},
{"lineNum":" 3735","line":"            __first[__kpmodn] += __r;"},
{"lineNum":" 3736","line":"            __r +=  __kmodn;"},
{"lineNum":" 3737","line":"            __first[(__k + __q) % __n] += __r;"},
{"lineNum":" 3738","line":"            __first[__kmodn] = __r;"},
{"lineNum":" 3739","line":"        }"},
{"lineNum":" 3740","line":"        for (size_t __k = __m; __k < __m + __n; ++__k)"},
{"lineNum":" 3741","line":"        {"},
{"lineNum":" 3742","line":"            const size_t __kmodn = __k % __n;"},
{"lineNum":" 3743","line":"            const size_t __kpmodn = (__k + __p) % __n;"},
{"lineNum":" 3744","line":"            result_type __r = 1566083941 * _Tp(__first[__kmodn] +"},
{"lineNum":" 3745","line":"                                              __first[__kpmodn] +"},
{"lineNum":" 3746","line":"                                              __first[(__k - 1) % __n]);"},
{"lineNum":" 3747","line":"            __first[__kpmodn] ^= __r;"},
{"lineNum":" 3748","line":"            __r -= __kmodn;"},
{"lineNum":" 3749","line":"            __first[(__k + __q) % __n] ^= __r;"},
{"lineNum":" 3750","line":"            __first[__kmodn] = __r;"},
{"lineNum":" 3751","line":"        }"},
{"lineNum":" 3752","line":"    }"},
{"lineNum":" 3753","line":"}"},
{"lineNum":" 3754","line":""},
{"lineNum":" 3755","line":"// generate_canonical"},
{"lineNum":" 3756","line":""},
{"lineNum":" 3757","line":"template<class _RealType, size_t __bits, class _URNG>"},
{"lineNum":" 3758","line":"_RealType"},
{"lineNum":" 3759","line":"generate_canonical(_URNG& __g)"},
{"lineNum":" 3760","line":"{"},
{"lineNum":" 3761","line":"    const size_t _Dt = numeric_limits<_RealType>::digits;"},
{"lineNum":" 3762","line":"    const size_t __b = _Dt < __bits ? _Dt : __bits;"},
{"lineNum":" 3763","line":"#ifdef _LIBCPP_CXX03_LANG"},
{"lineNum":" 3764","line":"    const size_t __logR = __log2<uint64_t, _URNG::_Max - _URNG::_Min + uint64_t(1)>::value;"},
{"lineNum":" 3765","line":"#else"},
{"lineNum":" 3766","line":"    const size_t __logR = __log2<uint64_t, _URNG::max() - _URNG::min() + uint64_t(1)>::value;"},
{"lineNum":" 3767","line":"#endif"},
{"lineNum":" 3768","line":"    const size_t __k = __b / __logR + (__b % __logR != 0) + (__b == 0);"},
{"lineNum":" 3769","line":"    const _RealType _Rp = static_cast<_RealType>(_URNG::max() - _URNG::min()) + _RealType(1);"},
{"lineNum":" 3770","line":"    _RealType __base = _Rp;"},
{"lineNum":" 3771","line":"    _RealType _Sp = __g() - _URNG::min();","class":"lineNoCov","hits":"0","possible_hits":"10",},
{"lineNum":" 3772","line":"    for (size_t __i = 1; __i < __k; ++__i, __base *= _Rp)"},
{"lineNum":" 3773","line":"        _Sp += (__g() - _URNG::min()) * __base;"},
{"lineNum":" 3774","line":"    return _Sp / __base;","class":"lineNoCov","hits":"0","possible_hits":"7",},
{"lineNum":" 3775","line":"}"},
{"lineNum":" 3776","line":""},
{"lineNum":" 3777","line":"// uniform_real_distribution"},
{"lineNum":" 3778","line":""},
{"lineNum":" 3779","line":"template<class _RealType = double>"},
{"lineNum":" 3780","line":"class _LIBCPP_TEMPLATE_VIS uniform_real_distribution"},
{"lineNum":" 3781","line":"{"},
{"lineNum":" 3782","line":"public:"},
{"lineNum":" 3783","line":"    // types"},
{"lineNum":" 3784","line":"    typedef _RealType result_type;"},
{"lineNum":" 3785","line":""},
{"lineNum":" 3786","line":"    class _LIBCPP_TEMPLATE_VIS param_type"},
{"lineNum":" 3787","line":"    {"},
{"lineNum":" 3788","line":"        result_type __a_;"},
{"lineNum":" 3789","line":"        result_type __b_;"},
{"lineNum":" 3790","line":"    public:"},
{"lineNum":" 3791","line":"        typedef uniform_real_distribution distribution_type;"},
{"lineNum":" 3792","line":""},
{"lineNum":" 3793","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3794","line":"        explicit param_type(result_type __a = 0,"},
{"lineNum":" 3795","line":"                            result_type __b = 1)"},
{"lineNum":" 3796","line":"            : __a_(__a), __b_(__b) {}"},
{"lineNum":" 3797","line":""},
{"lineNum":" 3798","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3799","line":"        result_type a() const {return __a_;}"},
{"lineNum":" 3800","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3801","line":"        result_type b() const {return __b_;}"},
{"lineNum":" 3802","line":""},
{"lineNum":" 3803","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3804","line":"        bool operator==(const param_type& __x, const param_type& __y)"},
{"lineNum":" 3805","line":"            {return __x.__a_ == __y.__a_ && __x.__b_ == __y.__b_;}"},
{"lineNum":" 3806","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3807","line":"        bool operator!=(const param_type& __x, const param_type& __y)"},
{"lineNum":" 3808","line":"            {return !(__x == __y);}"},
{"lineNum":" 3809","line":"    };"},
{"lineNum":" 3810","line":""},
{"lineNum":" 3811","line":"private:"},
{"lineNum":" 3812","line":"    param_type __p_;"},
{"lineNum":" 3813","line":""},
{"lineNum":" 3814","line":"public:"},
{"lineNum":" 3815","line":"    // constructors and reset functions"},
{"lineNum":" 3816","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 3817","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3818","line":"    uniform_real_distribution() : uniform_real_distribution(0) {}"},
{"lineNum":" 3819","line":"    explicit uniform_real_distribution(result_type __a, result_type __b = 1)"},
{"lineNum":" 3820","line":"        : __p_(param_type(__a, __b)) {}"},
{"lineNum":" 3821","line":"#else"},
{"lineNum":" 3822","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3823","line":"    explicit uniform_real_distribution(result_type __a = 0, result_type __b = 1)"},
{"lineNum":" 3824","line":"        : __p_(param_type(__a, __b)) {}"},
{"lineNum":" 3825","line":"#endif"},
{"lineNum":" 3826","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3827","line":"    explicit uniform_real_distribution(const param_type& __p) : __p_(__p) {}"},
{"lineNum":" 3828","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3829","line":"    void reset() {}"},
{"lineNum":" 3830","line":""},
{"lineNum":" 3831","line":"    // generating functions"},
{"lineNum":" 3832","line":"    template<class _URNG>"},
{"lineNum":" 3833","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3834","line":"        result_type operator()(_URNG& __g)"},
{"lineNum":" 3835","line":"        {return (*this)(__g, __p_);}"},
{"lineNum":" 3836","line":"    template<class _URNG> _LIBCPP_INLINE_VISIBILITY result_type operator()(_URNG& __g, const param_type& __p);"},
{"lineNum":" 3837","line":""},
{"lineNum":" 3838","line":"    // property functions"},
{"lineNum":" 3839","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3840","line":"    result_type a() const {return __p_.a();}"},
{"lineNum":" 3841","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3842","line":"    result_type b() const {return __p_.b();}"},
{"lineNum":" 3843","line":""},
{"lineNum":" 3844","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3845","line":"    param_type param() const {return __p_;}"},
{"lineNum":" 3846","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3847","line":"    void param(const param_type& __p) {__p_ = __p;}"},
{"lineNum":" 3848","line":""},
{"lineNum":" 3849","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3850","line":"    result_type min() const {return a();}"},
{"lineNum":" 3851","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3852","line":"    result_type max() const {return b();}"},
{"lineNum":" 3853","line":""},
{"lineNum":" 3854","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3855","line":"        bool operator==(const uniform_real_distribution& __x,"},
{"lineNum":" 3856","line":"                        const uniform_real_distribution& __y)"},
{"lineNum":" 3857","line":"        {return __x.__p_ == __y.__p_;}"},
{"lineNum":" 3858","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3859","line":"        bool operator!=(const uniform_real_distribution& __x,"},
{"lineNum":" 3860","line":"                        const uniform_real_distribution& __y)"},
{"lineNum":" 3861","line":"        {return !(__x == __y);}"},
{"lineNum":" 3862","line":"};"},
{"lineNum":" 3863","line":""},
{"lineNum":" 3864","line":"template<class _RealType>"},
{"lineNum":" 3865","line":"template<class _URNG>"},
{"lineNum":" 3866","line":"inline"},
{"lineNum":" 3867","line":"typename uniform_real_distribution<_RealType>::result_type"},
{"lineNum":" 3868","line":"uniform_real_distribution<_RealType>::operator()(_URNG& __g, const param_type& __p)"},
{"lineNum":" 3869","line":"{"},
{"lineNum":" 3870","line":"    return (__p.b() - __p.a())"},
{"lineNum":" 3871","line":"        * _VSTD::generate_canonical<_RealType, numeric_limits<_RealType>::digits>(__g)"},
{"lineNum":" 3872","line":"        + __p.a();","class":"lineNoCov","hits":"0","possible_hits":"7",},
{"lineNum":" 3873","line":"}"},
{"lineNum":" 3874","line":""},
{"lineNum":" 3875","line":"template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 3876","line":"basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 3877","line":"operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 3878","line":"           const uniform_real_distribution<_RT>& __x)"},
{"lineNum":" 3879","line":"{"},
{"lineNum":" 3880","line":"    __save_flags<_CharT, _Traits> __lx(__os);"},
{"lineNum":" 3881","line":"    typedef basic_ostream<_CharT, _Traits> _OStream;"},
{"lineNum":" 3882","line":"    __os.flags(_OStream::dec | _OStream::left | _OStream::fixed |"},
{"lineNum":" 3883","line":"               _OStream::scientific);"},
{"lineNum":" 3884","line":"    _CharT __sp = __os.widen(\' \');"},
{"lineNum":" 3885","line":"    __os.fill(__sp);"},
{"lineNum":" 3886","line":"    return __os << __x.a() << __sp << __x.b();"},
{"lineNum":" 3887","line":"}"},
{"lineNum":" 3888","line":""},
{"lineNum":" 3889","line":"template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 3890","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 3891","line":"operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 3892","line":"           uniform_real_distribution<_RT>& __x)"},
{"lineNum":" 3893","line":"{"},
{"lineNum":" 3894","line":"    typedef uniform_real_distribution<_RT> _Eng;"},
{"lineNum":" 3895","line":"    typedef typename _Eng::result_type result_type;"},
{"lineNum":" 3896","line":"    typedef typename _Eng::param_type param_type;"},
{"lineNum":" 3897","line":"    __save_flags<_CharT, _Traits> __lx(__is);"},
{"lineNum":" 3898","line":"    typedef basic_istream<_CharT, _Traits> _Istream;"},
{"lineNum":" 3899","line":"    __is.flags(_Istream::dec | _Istream::skipws);"},
{"lineNum":" 3900","line":"    result_type __a;"},
{"lineNum":" 3901","line":"    result_type __b;"},
{"lineNum":" 3902","line":"    __is >> __a >> __b;"},
{"lineNum":" 3903","line":"    if (!__is.fail())"},
{"lineNum":" 3904","line":"        __x.param(param_type(__a, __b));"},
{"lineNum":" 3905","line":"    return __is;"},
{"lineNum":" 3906","line":"}"},
{"lineNum":" 3907","line":""},
{"lineNum":" 3908","line":"// bernoulli_distribution"},
{"lineNum":" 3909","line":""},
{"lineNum":" 3910","line":"class _LIBCPP_TEMPLATE_VIS bernoulli_distribution"},
{"lineNum":" 3911","line":"{"},
{"lineNum":" 3912","line":"public:"},
{"lineNum":" 3913","line":"    // types"},
{"lineNum":" 3914","line":"    typedef bool result_type;"},
{"lineNum":" 3915","line":""},
{"lineNum":" 3916","line":"    class _LIBCPP_TEMPLATE_VIS param_type"},
{"lineNum":" 3917","line":"    {"},
{"lineNum":" 3918","line":"        double __p_;"},
{"lineNum":" 3919","line":"    public:"},
{"lineNum":" 3920","line":"        typedef bernoulli_distribution distribution_type;"},
{"lineNum":" 3921","line":""},
{"lineNum":" 3922","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3923","line":"        explicit param_type(double __p = 0.5) : __p_(__p) {}"},
{"lineNum":" 3924","line":""},
{"lineNum":" 3925","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3926","line":"        double p() const {return __p_;}"},
{"lineNum":" 3927","line":""},
{"lineNum":" 3928","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3929","line":"            bool operator==(const param_type& __x, const param_type& __y)"},
{"lineNum":" 3930","line":"            {return __x.__p_ == __y.__p_;}"},
{"lineNum":" 3931","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3932","line":"            bool operator!=(const param_type& __x, const param_type& __y)"},
{"lineNum":" 3933","line":"            {return !(__x == __y);}"},
{"lineNum":" 3934","line":"    };"},
{"lineNum":" 3935","line":""},
{"lineNum":" 3936","line":"private:"},
{"lineNum":" 3937","line":"    param_type __p_;"},
{"lineNum":" 3938","line":""},
{"lineNum":" 3939","line":"public:"},
{"lineNum":" 3940","line":"    // constructors and reset functions"},
{"lineNum":" 3941","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 3942","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3943","line":"    bernoulli_distribution() : bernoulli_distribution(0.5) {}"},
{"lineNum":" 3944","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3945","line":"    explicit bernoulli_distribution(double __p) : __p_(param_type(__p)) {}"},
{"lineNum":" 3946","line":"#else"},
{"lineNum":" 3947","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3948","line":"    explicit bernoulli_distribution(double __p = 0.5) : __p_(param_type(__p)) {}"},
{"lineNum":" 3949","line":"#endif"},
{"lineNum":" 3950","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3951","line":"    explicit bernoulli_distribution(const param_type& __p) : __p_(__p) {}"},
{"lineNum":" 3952","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3953","line":"    void reset() {}"},
{"lineNum":" 3954","line":""},
{"lineNum":" 3955","line":"    // generating functions"},
{"lineNum":" 3956","line":"    template<class _URNG>"},
{"lineNum":" 3957","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3958","line":"        result_type operator()(_URNG& __g)"},
{"lineNum":" 3959","line":"        {return (*this)(__g, __p_);}"},
{"lineNum":" 3960","line":"    template<class _URNG> _LIBCPP_INLINE_VISIBILITY result_type operator()(_URNG& __g, const param_type& __p);"},
{"lineNum":" 3961","line":""},
{"lineNum":" 3962","line":"    // property functions"},
{"lineNum":" 3963","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3964","line":"    double p() const {return __p_.p();}"},
{"lineNum":" 3965","line":""},
{"lineNum":" 3966","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3967","line":"    param_type param() const {return __p_;}"},
{"lineNum":" 3968","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3969","line":"    void param(const param_type& __p) {__p_ = __p;}"},
{"lineNum":" 3970","line":""},
{"lineNum":" 3971","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3972","line":"    result_type min() const {return false;}"},
{"lineNum":" 3973","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3974","line":"    result_type max() const {return true;}"},
{"lineNum":" 3975","line":""},
{"lineNum":" 3976","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3977","line":"        bool operator==(const bernoulli_distribution& __x,"},
{"lineNum":" 3978","line":"                        const bernoulli_distribution& __y)"},
{"lineNum":" 3979","line":"        {return __x.__p_ == __y.__p_;}"},
{"lineNum":" 3980","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 3981","line":"        bool operator!=(const bernoulli_distribution& __x,"},
{"lineNum":" 3982","line":"                        const bernoulli_distribution& __y)"},
{"lineNum":" 3983","line":"        {return !(__x == __y);}"},
{"lineNum":" 3984","line":"};"},
{"lineNum":" 3985","line":""},
{"lineNum":" 3986","line":"template<class _URNG>"},
{"lineNum":" 3987","line":"inline"},
{"lineNum":" 3988","line":"bernoulli_distribution::result_type"},
{"lineNum":" 3989","line":"bernoulli_distribution::operator()(_URNG& __g, const param_type& __p)"},
{"lineNum":" 3990","line":"{"},
{"lineNum":" 3991","line":"    uniform_real_distribution<double> __gen;"},
{"lineNum":" 3992","line":"    return __gen(__g) < __p.p();"},
{"lineNum":" 3993","line":"}"},
{"lineNum":" 3994","line":""},
{"lineNum":" 3995","line":"template <class _CharT, class _Traits>"},
{"lineNum":" 3996","line":"basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 3997","line":"operator<<(basic_ostream<_CharT, _Traits>& __os, const bernoulli_distribution& __x)"},
{"lineNum":" 3998","line":"{"},
{"lineNum":" 3999","line":"    __save_flags<_CharT, _Traits> __lx(__os);"},
{"lineNum":" 4000","line":"    typedef basic_ostream<_CharT, _Traits> _OStream;"},
{"lineNum":" 4001","line":"    __os.flags(_OStream::dec | _OStream::left | _OStream::fixed |"},
{"lineNum":" 4002","line":"               _OStream::scientific);"},
{"lineNum":" 4003","line":"    _CharT __sp = __os.widen(\' \');"},
{"lineNum":" 4004","line":"    __os.fill(__sp);"},
{"lineNum":" 4005","line":"    return __os << __x.p();"},
{"lineNum":" 4006","line":"}"},
{"lineNum":" 4007","line":""},
{"lineNum":" 4008","line":"template <class _CharT, class _Traits>"},
{"lineNum":" 4009","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 4010","line":"operator>>(basic_istream<_CharT, _Traits>& __is, bernoulli_distribution& __x)"},
{"lineNum":" 4011","line":"{"},
{"lineNum":" 4012","line":"    typedef bernoulli_distribution _Eng;"},
{"lineNum":" 4013","line":"    typedef typename _Eng::param_type param_type;"},
{"lineNum":" 4014","line":"    __save_flags<_CharT, _Traits> __lx(__is);"},
{"lineNum":" 4015","line":"    typedef basic_istream<_CharT, _Traits> _Istream;"},
{"lineNum":" 4016","line":"    __is.flags(_Istream::dec | _Istream::skipws);"},
{"lineNum":" 4017","line":"    double __p;"},
{"lineNum":" 4018","line":"    __is >> __p;"},
{"lineNum":" 4019","line":"    if (!__is.fail())"},
{"lineNum":" 4020","line":"        __x.param(param_type(__p));"},
{"lineNum":" 4021","line":"    return __is;"},
{"lineNum":" 4022","line":"}"},
{"lineNum":" 4023","line":""},
{"lineNum":" 4024","line":"// binomial_distribution"},
{"lineNum":" 4025","line":""},
{"lineNum":" 4026","line":"template<class _IntType = int>"},
{"lineNum":" 4027","line":"class _LIBCPP_TEMPLATE_VIS binomial_distribution"},
{"lineNum":" 4028","line":"{"},
{"lineNum":" 4029","line":"public:"},
{"lineNum":" 4030","line":"    // types"},
{"lineNum":" 4031","line":"    typedef _IntType result_type;"},
{"lineNum":" 4032","line":""},
{"lineNum":" 4033","line":"    class _LIBCPP_TEMPLATE_VIS param_type"},
{"lineNum":" 4034","line":"    {"},
{"lineNum":" 4035","line":"        result_type __t_;"},
{"lineNum":" 4036","line":"        double __p_;"},
{"lineNum":" 4037","line":"        double __pr_;"},
{"lineNum":" 4038","line":"        double __odds_ratio_;"},
{"lineNum":" 4039","line":"        result_type __r0_;"},
{"lineNum":" 4040","line":"    public:"},
{"lineNum":" 4041","line":"        typedef binomial_distribution distribution_type;"},
{"lineNum":" 4042","line":""},
{"lineNum":" 4043","line":"        explicit param_type(result_type __t = 1, double __p = 0.5);"},
{"lineNum":" 4044","line":""},
{"lineNum":" 4045","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4046","line":"        result_type t() const {return __t_;}"},
{"lineNum":" 4047","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4048","line":"        double p() const {return __p_;}"},
{"lineNum":" 4049","line":""},
{"lineNum":" 4050","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4051","line":"            bool operator==(const param_type& __x, const param_type& __y)"},
{"lineNum":" 4052","line":"            {return __x.__t_ == __y.__t_ && __x.__p_ == __y.__p_;}"},
{"lineNum":" 4053","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4054","line":"            bool operator!=(const param_type& __x, const param_type& __y)"},
{"lineNum":" 4055","line":"            {return !(__x == __y);}"},
{"lineNum":" 4056","line":""},
{"lineNum":" 4057","line":"        friend class binomial_distribution;"},
{"lineNum":" 4058","line":"    };"},
{"lineNum":" 4059","line":""},
{"lineNum":" 4060","line":"private:"},
{"lineNum":" 4061","line":"    param_type __p_;"},
{"lineNum":" 4062","line":""},
{"lineNum":" 4063","line":"public:"},
{"lineNum":" 4064","line":"    // constructors and reset functions"},
{"lineNum":" 4065","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 4066","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4067","line":"    binomial_distribution() : binomial_distribution(1) {}"},
{"lineNum":" 4068","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4069","line":"    explicit binomial_distribution(result_type __t, double __p = 0.5)"},
{"lineNum":" 4070","line":"        : __p_(param_type(__t, __p)) {}"},
{"lineNum":" 4071","line":"#else"},
{"lineNum":" 4072","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4073","line":"    explicit binomial_distribution(result_type __t = 1, double __p = 0.5)"},
{"lineNum":" 4074","line":"        : __p_(param_type(__t, __p)) {}"},
{"lineNum":" 4075","line":"#endif"},
{"lineNum":" 4076","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4077","line":"    explicit binomial_distribution(const param_type& __p) : __p_(__p) {}"},
{"lineNum":" 4078","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4079","line":"    void reset() {}"},
{"lineNum":" 4080","line":""},
{"lineNum":" 4081","line":"    // generating functions"},
{"lineNum":" 4082","line":"    template<class _URNG>"},
{"lineNum":" 4083","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4084","line":"        result_type operator()(_URNG& __g)"},
{"lineNum":" 4085","line":"        {return (*this)(__g, __p_);}"},
{"lineNum":" 4086","line":"    template<class _URNG> result_type operator()(_URNG& __g, const param_type& __p);"},
{"lineNum":" 4087","line":""},
{"lineNum":" 4088","line":"    // property functions"},
{"lineNum":" 4089","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4090","line":"    result_type t() const {return __p_.t();}"},
{"lineNum":" 4091","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4092","line":"    double p() const {return __p_.p();}"},
{"lineNum":" 4093","line":""},
{"lineNum":" 4094","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4095","line":"    param_type param() const {return __p_;}"},
{"lineNum":" 4096","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4097","line":"    void param(const param_type& __p) {__p_ = __p;}"},
{"lineNum":" 4098","line":""},
{"lineNum":" 4099","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4100","line":"    result_type min() const {return 0;}"},
{"lineNum":" 4101","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4102","line":"    result_type max() const {return t();}"},
{"lineNum":" 4103","line":""},
{"lineNum":" 4104","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4105","line":"        bool operator==(const binomial_distribution& __x,"},
{"lineNum":" 4106","line":"                        const binomial_distribution& __y)"},
{"lineNum":" 4107","line":"        {return __x.__p_ == __y.__p_;}"},
{"lineNum":" 4108","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4109","line":"        bool operator!=(const binomial_distribution& __x,"},
{"lineNum":" 4110","line":"                        const binomial_distribution& __y)"},
{"lineNum":" 4111","line":"        {return !(__x == __y);}"},
{"lineNum":" 4112","line":"};"},
{"lineNum":" 4113","line":""},
{"lineNum":" 4114","line":"#ifndef _LIBCPP_MSVCRT_LIKE"},
{"lineNum":" 4115","line":"extern \"C\" double lgamma_r(double, int *);"},
{"lineNum":" 4116","line":"#endif"},
{"lineNum":" 4117","line":""},
{"lineNum":" 4118","line":"inline _LIBCPP_INLINE_VISIBILITY double __libcpp_lgamma(double __d) {"},
{"lineNum":" 4119","line":"#if defined(_LIBCPP_MSVCRT_LIKE)"},
{"lineNum":" 4120","line":"  return lgamma(__d);"},
{"lineNum":" 4121","line":"#else"},
{"lineNum":" 4122","line":"  int __sign;"},
{"lineNum":" 4123","line":"  return lgamma_r(__d, &__sign);"},
{"lineNum":" 4124","line":"#endif"},
{"lineNum":" 4125","line":"}"},
{"lineNum":" 4126","line":""},
{"lineNum":" 4127","line":"template<class _IntType>"},
{"lineNum":" 4128","line":"binomial_distribution<_IntType>::param_type::param_type(result_type __t, double __p)"},
{"lineNum":" 4129","line":"    : __t_(__t), __p_(__p)"},
{"lineNum":" 4130","line":"{"},
{"lineNum":" 4131","line":"    if (0 < __p_ && __p_ < 1)"},
{"lineNum":" 4132","line":"    {"},
{"lineNum":" 4133","line":"        __r0_ = static_cast<result_type>((__t_ + 1) * __p_);"},
{"lineNum":" 4134","line":"        __pr_ = _VSTD::exp(__libcpp_lgamma(__t_ + 1.) -"},
{"lineNum":" 4135","line":"                           __libcpp_lgamma(__r0_ + 1.) -"},
{"lineNum":" 4136","line":"                           __libcpp_lgamma(__t_ - __r0_ + 1.) + __r0_ * _VSTD::log(__p_) +"},
{"lineNum":" 4137","line":"                           (__t_ - __r0_) * _VSTD::log(1 - __p_));"},
{"lineNum":" 4138","line":"        __odds_ratio_ = __p_ / (1 - __p_);"},
{"lineNum":" 4139","line":"    }"},
{"lineNum":" 4140","line":"}"},
{"lineNum":" 4141","line":""},
{"lineNum":" 4142","line":"// Reference: Kemp, C.D. (1986). `A modal method for generating binomial"},
{"lineNum":" 4143","line":"//           variables\', Commun. Statist. - Theor. Meth. 15(3), 805-813."},
{"lineNum":" 4144","line":"template<class _IntType>"},
{"lineNum":" 4145","line":"template<class _URNG>"},
{"lineNum":" 4146","line":"_IntType"},
{"lineNum":" 4147","line":"binomial_distribution<_IntType>::operator()(_URNG& __g, const param_type& __pr)"},
{"lineNum":" 4148","line":"{"},
{"lineNum":" 4149","line":"    if (__pr.__t_ == 0 || __pr.__p_ == 0)"},
{"lineNum":" 4150","line":"        return 0;"},
{"lineNum":" 4151","line":"    if (__pr.__p_ == 1)"},
{"lineNum":" 4152","line":"        return __pr.__t_;"},
{"lineNum":" 4153","line":"    uniform_real_distribution<double> __gen;"},
{"lineNum":" 4154","line":"    double __u = __gen(__g) - __pr.__pr_;"},
{"lineNum":" 4155","line":"    if (__u < 0)"},
{"lineNum":" 4156","line":"        return __pr.__r0_;"},
{"lineNum":" 4157","line":"    double __pu = __pr.__pr_;"},
{"lineNum":" 4158","line":"    double __pd = __pu;"},
{"lineNum":" 4159","line":"    result_type __ru = __pr.__r0_;"},
{"lineNum":" 4160","line":"    result_type __rd = __ru;"},
{"lineNum":" 4161","line":"    while (true)"},
{"lineNum":" 4162","line":"    {"},
{"lineNum":" 4163","line":"        bool __break = true;"},
{"lineNum":" 4164","line":"        if (__rd >= 1)"},
{"lineNum":" 4165","line":"        {"},
{"lineNum":" 4166","line":"            __pd *= __rd / (__pr.__odds_ratio_ * (__pr.__t_ - __rd + 1));"},
{"lineNum":" 4167","line":"            __u -= __pd;"},
{"lineNum":" 4168","line":"            __break = false;"},
{"lineNum":" 4169","line":"            if (__u < 0)"},
{"lineNum":" 4170","line":"                return __rd - 1;"},
{"lineNum":" 4171","line":"        }"},
{"lineNum":" 4172","line":"        if ( __rd != 0 )"},
{"lineNum":" 4173","line":"            --__rd;"},
{"lineNum":" 4174","line":"        ++__ru;"},
{"lineNum":" 4175","line":"        if (__ru <= __pr.__t_)"},
{"lineNum":" 4176","line":"        {"},
{"lineNum":" 4177","line":"            __pu *= (__pr.__t_ - __ru + 1) * __pr.__odds_ratio_ / __ru;"},
{"lineNum":" 4178","line":"            __u -= __pu;"},
{"lineNum":" 4179","line":"            __break = false;"},
{"lineNum":" 4180","line":"            if (__u < 0)"},
{"lineNum":" 4181","line":"                return __ru;"},
{"lineNum":" 4182","line":"        }"},
{"lineNum":" 4183","line":"        if (__break)"},
{"lineNum":" 4184","line":"            return 0;"},
{"lineNum":" 4185","line":"    }"},
{"lineNum":" 4186","line":"}"},
{"lineNum":" 4187","line":""},
{"lineNum":" 4188","line":"template <class _CharT, class _Traits, class _IntType>"},
{"lineNum":" 4189","line":"basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 4190","line":"operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 4191","line":"           const binomial_distribution<_IntType>& __x)"},
{"lineNum":" 4192","line":"{"},
{"lineNum":" 4193","line":"    __save_flags<_CharT, _Traits> __lx(__os);"},
{"lineNum":" 4194","line":"    typedef basic_ostream<_CharT, _Traits> _OStream;"},
{"lineNum":" 4195","line":"    __os.flags(_OStream::dec | _OStream::left | _OStream::fixed |"},
{"lineNum":" 4196","line":"               _OStream::scientific);"},
{"lineNum":" 4197","line":"    _CharT __sp = __os.widen(\' \');"},
{"lineNum":" 4198","line":"    __os.fill(__sp);"},
{"lineNum":" 4199","line":"    return __os << __x.t() << __sp << __x.p();"},
{"lineNum":" 4200","line":"}"},
{"lineNum":" 4201","line":""},
{"lineNum":" 4202","line":"template <class _CharT, class _Traits, class _IntType>"},
{"lineNum":" 4203","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 4204","line":"operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 4205","line":"           binomial_distribution<_IntType>& __x)"},
{"lineNum":" 4206","line":"{"},
{"lineNum":" 4207","line":"    typedef binomial_distribution<_IntType> _Eng;"},
{"lineNum":" 4208","line":"    typedef typename _Eng::result_type result_type;"},
{"lineNum":" 4209","line":"    typedef typename _Eng::param_type param_type;"},
{"lineNum":" 4210","line":"    __save_flags<_CharT, _Traits> __lx(__is);"},
{"lineNum":" 4211","line":"    typedef basic_istream<_CharT, _Traits> _Istream;"},
{"lineNum":" 4212","line":"    __is.flags(_Istream::dec | _Istream::skipws);"},
{"lineNum":" 4213","line":"    result_type __t;"},
{"lineNum":" 4214","line":"    double __p;"},
{"lineNum":" 4215","line":"    __is >> __t >> __p;"},
{"lineNum":" 4216","line":"    if (!__is.fail())"},
{"lineNum":" 4217","line":"        __x.param(param_type(__t, __p));"},
{"lineNum":" 4218","line":"    return __is;"},
{"lineNum":" 4219","line":"}"},
{"lineNum":" 4220","line":""},
{"lineNum":" 4221","line":"// exponential_distribution"},
{"lineNum":" 4222","line":""},
{"lineNum":" 4223","line":"template<class _RealType = double>"},
{"lineNum":" 4224","line":"class _LIBCPP_TEMPLATE_VIS exponential_distribution"},
{"lineNum":" 4225","line":"{"},
{"lineNum":" 4226","line":"public:"},
{"lineNum":" 4227","line":"    // types"},
{"lineNum":" 4228","line":"    typedef _RealType result_type;"},
{"lineNum":" 4229","line":""},
{"lineNum":" 4230","line":"    class _LIBCPP_TEMPLATE_VIS param_type"},
{"lineNum":" 4231","line":"    {"},
{"lineNum":" 4232","line":"        result_type __lambda_;"},
{"lineNum":" 4233","line":"    public:"},
{"lineNum":" 4234","line":"        typedef exponential_distribution distribution_type;"},
{"lineNum":" 4235","line":""},
{"lineNum":" 4236","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4237","line":"        explicit param_type(result_type __lambda = 1) : __lambda_(__lambda) {}"},
{"lineNum":" 4238","line":""},
{"lineNum":" 4239","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4240","line":"        result_type lambda() const {return __lambda_;}"},
{"lineNum":" 4241","line":""},
{"lineNum":" 4242","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4243","line":"            bool operator==(const param_type& __x, const param_type& __y)"},
{"lineNum":" 4244","line":"            {return __x.__lambda_ == __y.__lambda_;}"},
{"lineNum":" 4245","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4246","line":"            bool operator!=(const param_type& __x, const param_type& __y)"},
{"lineNum":" 4247","line":"            {return !(__x == __y);}"},
{"lineNum":" 4248","line":"    };"},
{"lineNum":" 4249","line":""},
{"lineNum":" 4250","line":"private:"},
{"lineNum":" 4251","line":"    param_type __p_;"},
{"lineNum":" 4252","line":""},
{"lineNum":" 4253","line":"public:"},
{"lineNum":" 4254","line":"    // constructors and reset functions"},
{"lineNum":" 4255","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 4256","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4257","line":"    exponential_distribution() : exponential_distribution(1) {}"},
{"lineNum":" 4258","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4259","line":"    explicit exponential_distribution(result_type __lambda)"},
{"lineNum":" 4260","line":"        : __p_(param_type(__lambda)) {}"},
{"lineNum":" 4261","line":"#else"},
{"lineNum":" 4262","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4263","line":"    explicit exponential_distribution(result_type __lambda = 1)"},
{"lineNum":" 4264","line":"        : __p_(param_type(__lambda)) {}"},
{"lineNum":" 4265","line":"#endif"},
{"lineNum":" 4266","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4267","line":"    explicit exponential_distribution(const param_type& __p) : __p_(__p) {}"},
{"lineNum":" 4268","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4269","line":"    void reset() {}"},
{"lineNum":" 4270","line":""},
{"lineNum":" 4271","line":"    // generating functions"},
{"lineNum":" 4272","line":"    template<class _URNG>"},
{"lineNum":" 4273","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4274","line":"        result_type operator()(_URNG& __g)"},
{"lineNum":" 4275","line":"        {return (*this)(__g, __p_);}"},
{"lineNum":" 4276","line":"    template<class _URNG> result_type operator()(_URNG& __g, const param_type& __p);"},
{"lineNum":" 4277","line":""},
{"lineNum":" 4278","line":"    // property functions"},
{"lineNum":" 4279","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4280","line":"    result_type lambda() const {return __p_.lambda();}"},
{"lineNum":" 4281","line":""},
{"lineNum":" 4282","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4283","line":"    param_type param() const {return __p_;}"},
{"lineNum":" 4284","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4285","line":"    void param(const param_type& __p) {__p_ = __p;}"},
{"lineNum":" 4286","line":""},
{"lineNum":" 4287","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4288","line":"    result_type min() const {return 0;}"},
{"lineNum":" 4289","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4290","line":"    result_type max() const {return numeric_limits<result_type>::infinity();}"},
{"lineNum":" 4291","line":""},
{"lineNum":" 4292","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4293","line":"        bool operator==(const exponential_distribution& __x,"},
{"lineNum":" 4294","line":"                        const exponential_distribution& __y)"},
{"lineNum":" 4295","line":"        {return __x.__p_ == __y.__p_;}"},
{"lineNum":" 4296","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4297","line":"        bool operator!=(const exponential_distribution& __x,"},
{"lineNum":" 4298","line":"                        const exponential_distribution& __y)"},
{"lineNum":" 4299","line":"        {return !(__x == __y);}"},
{"lineNum":" 4300","line":"};"},
{"lineNum":" 4301","line":""},
{"lineNum":" 4302","line":"template <class _RealType>"},
{"lineNum":" 4303","line":"template<class _URNG>"},
{"lineNum":" 4304","line":"_RealType"},
{"lineNum":" 4305","line":"exponential_distribution<_RealType>::operator()(_URNG& __g, const param_type& __p)"},
{"lineNum":" 4306","line":"{"},
{"lineNum":" 4307","line":"    return -_VSTD::log"},
{"lineNum":" 4308","line":"                  ("},
{"lineNum":" 4309","line":"                      result_type(1) -"},
{"lineNum":" 4310","line":"                      _VSTD::generate_canonical<result_type,"},
{"lineNum":" 4311","line":"                                       numeric_limits<result_type>::digits>(__g)"},
{"lineNum":" 4312","line":"                  )"},
{"lineNum":" 4313","line":"                  / __p.lambda();"},
{"lineNum":" 4314","line":"}"},
{"lineNum":" 4315","line":""},
{"lineNum":" 4316","line":"template <class _CharT, class _Traits, class _RealType>"},
{"lineNum":" 4317","line":"basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 4318","line":"operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 4319","line":"           const exponential_distribution<_RealType>& __x)"},
{"lineNum":" 4320","line":"{"},
{"lineNum":" 4321","line":"    __save_flags<_CharT, _Traits> __lx(__os);"},
{"lineNum":" 4322","line":"    typedef basic_ostream<_CharT, _Traits> _OStream;"},
{"lineNum":" 4323","line":"    __os.flags(_OStream::dec | _OStream::left | _OStream::fixed |"},
{"lineNum":" 4324","line":"               _OStream::scientific);"},
{"lineNum":" 4325","line":"    return __os << __x.lambda();"},
{"lineNum":" 4326","line":"}"},
{"lineNum":" 4327","line":""},
{"lineNum":" 4328","line":"template <class _CharT, class _Traits, class _RealType>"},
{"lineNum":" 4329","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 4330","line":"operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 4331","line":"           exponential_distribution<_RealType>& __x)"},
{"lineNum":" 4332","line":"{"},
{"lineNum":" 4333","line":"    typedef exponential_distribution<_RealType> _Eng;"},
{"lineNum":" 4334","line":"    typedef typename _Eng::result_type result_type;"},
{"lineNum":" 4335","line":"    typedef typename _Eng::param_type param_type;"},
{"lineNum":" 4336","line":"    __save_flags<_CharT, _Traits> __lx(__is);"},
{"lineNum":" 4337","line":"    typedef basic_istream<_CharT, _Traits> _Istream;"},
{"lineNum":" 4338","line":"    __is.flags(_Istream::dec | _Istream::skipws);"},
{"lineNum":" 4339","line":"    result_type __lambda;"},
{"lineNum":" 4340","line":"    __is >> __lambda;"},
{"lineNum":" 4341","line":"    if (!__is.fail())"},
{"lineNum":" 4342","line":"        __x.param(param_type(__lambda));"},
{"lineNum":" 4343","line":"    return __is;"},
{"lineNum":" 4344","line":"}"},
{"lineNum":" 4345","line":""},
{"lineNum":" 4346","line":"// normal_distribution"},
{"lineNum":" 4347","line":""},
{"lineNum":" 4348","line":"template<class _RealType = double>"},
{"lineNum":" 4349","line":"class _LIBCPP_TEMPLATE_VIS normal_distribution"},
{"lineNum":" 4350","line":"{"},
{"lineNum":" 4351","line":"public:"},
{"lineNum":" 4352","line":"    // types"},
{"lineNum":" 4353","line":"    typedef _RealType result_type;"},
{"lineNum":" 4354","line":""},
{"lineNum":" 4355","line":"    class _LIBCPP_TEMPLATE_VIS param_type"},
{"lineNum":" 4356","line":"    {"},
{"lineNum":" 4357","line":"        result_type __mean_;"},
{"lineNum":" 4358","line":"        result_type __stddev_;"},
{"lineNum":" 4359","line":"    public:"},
{"lineNum":" 4360","line":"        typedef normal_distribution distribution_type;"},
{"lineNum":" 4361","line":""},
{"lineNum":" 4362","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4363","line":"        explicit param_type(result_type __mean = 0, result_type __stddev = 1)"},
{"lineNum":" 4364","line":"            : __mean_(__mean), __stddev_(__stddev) {}"},
{"lineNum":" 4365","line":""},
{"lineNum":" 4366","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4367","line":"        result_type mean() const {return __mean_;}"},
{"lineNum":" 4368","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4369","line":"        result_type stddev() const {return __stddev_;}"},
{"lineNum":" 4370","line":""},
{"lineNum":" 4371","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4372","line":"            bool operator==(const param_type& __x, const param_type& __y)"},
{"lineNum":" 4373","line":"            {return __x.__mean_ == __y.__mean_ && __x.__stddev_ == __y.__stddev_;}"},
{"lineNum":" 4374","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4375","line":"            bool operator!=(const param_type& __x, const param_type& __y)"},
{"lineNum":" 4376","line":"            {return !(__x == __y);}"},
{"lineNum":" 4377","line":"    };"},
{"lineNum":" 4378","line":""},
{"lineNum":" 4379","line":"private:"},
{"lineNum":" 4380","line":"    param_type __p_;"},
{"lineNum":" 4381","line":"    result_type _V_;"},
{"lineNum":" 4382","line":"    bool _V_hot_;"},
{"lineNum":" 4383","line":""},
{"lineNum":" 4384","line":"public:"},
{"lineNum":" 4385","line":"    // constructors and reset functions"},
{"lineNum":" 4386","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 4387","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4388","line":"    normal_distribution() : normal_distribution(0) {}"},
{"lineNum":" 4389","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4390","line":"    explicit normal_distribution(result_type __mean, result_type __stddev = 1)"},
{"lineNum":" 4391","line":"        : __p_(param_type(__mean, __stddev)), _V_hot_(false) {}"},
{"lineNum":" 4392","line":"#else"},
{"lineNum":" 4393","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4394","line":"    explicit normal_distribution(result_type __mean = 0,"},
{"lineNum":" 4395","line":"                                 result_type __stddev = 1)"},
{"lineNum":" 4396","line":"        : __p_(param_type(__mean, __stddev)), _V_hot_(false) {}"},
{"lineNum":" 4397","line":"#endif"},
{"lineNum":" 4398","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4399","line":"    explicit normal_distribution(const param_type& __p)"},
{"lineNum":" 4400","line":"        : __p_(__p), _V_hot_(false) {}"},
{"lineNum":" 4401","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4402","line":"    void reset() {_V_hot_ = false;}"},
{"lineNum":" 4403","line":""},
{"lineNum":" 4404","line":"    // generating functions"},
{"lineNum":" 4405","line":"    template<class _URNG>"},
{"lineNum":" 4406","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4407","line":"        result_type operator()(_URNG& __g)"},
{"lineNum":" 4408","line":"        {return (*this)(__g, __p_);}"},
{"lineNum":" 4409","line":"    template<class _URNG> result_type operator()(_URNG& __g, const param_type& __p);"},
{"lineNum":" 4410","line":""},
{"lineNum":" 4411","line":"    // property functions"},
{"lineNum":" 4412","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4413","line":"    result_type mean() const {return __p_.mean();}"},
{"lineNum":" 4414","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4415","line":"    result_type stddev() const {return __p_.stddev();}"},
{"lineNum":" 4416","line":""},
{"lineNum":" 4417","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4418","line":"    param_type param() const {return __p_;}"},
{"lineNum":" 4419","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4420","line":"    void param(const param_type& __p) {__p_ = __p;}"},
{"lineNum":" 4421","line":""},
{"lineNum":" 4422","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4423","line":"    result_type min() const {return -numeric_limits<result_type>::infinity();}"},
{"lineNum":" 4424","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4425","line":"    result_type max() const {return numeric_limits<result_type>::infinity();}"},
{"lineNum":" 4426","line":""},
{"lineNum":" 4427","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4428","line":"        bool operator==(const normal_distribution& __x,"},
{"lineNum":" 4429","line":"                        const normal_distribution& __y)"},
{"lineNum":" 4430","line":"        {return __x.__p_ == __y.__p_ && __x._V_hot_ == __y._V_hot_ &&"},
{"lineNum":" 4431","line":"                (!__x._V_hot_ || __x._V_ == __y._V_);}"},
{"lineNum":" 4432","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4433","line":"        bool operator!=(const normal_distribution& __x,"},
{"lineNum":" 4434","line":"                        const normal_distribution& __y)"},
{"lineNum":" 4435","line":"        {return !(__x == __y);}"},
{"lineNum":" 4436","line":""},
{"lineNum":" 4437","line":"    template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 4438","line":"    friend"},
{"lineNum":" 4439","line":"    basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 4440","line":"    operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 4441","line":"               const normal_distribution<_RT>& __x);"},
{"lineNum":" 4442","line":""},
{"lineNum":" 4443","line":"    template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 4444","line":"    friend"},
{"lineNum":" 4445","line":"    basic_istream<_CharT, _Traits>&"},
{"lineNum":" 4446","line":"    operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 4447","line":"               normal_distribution<_RT>& __x);"},
{"lineNum":" 4448","line":"};"},
{"lineNum":" 4449","line":""},
{"lineNum":" 4450","line":"template <class _RealType>"},
{"lineNum":" 4451","line":"template<class _URNG>"},
{"lineNum":" 4452","line":"_RealType"},
{"lineNum":" 4453","line":"normal_distribution<_RealType>::operator()(_URNG& __g, const param_type& __p)"},
{"lineNum":" 4454","line":"{"},
{"lineNum":" 4455","line":"    result_type _Up;"},
{"lineNum":" 4456","line":"    if (_V_hot_)"},
{"lineNum":" 4457","line":"    {"},
{"lineNum":" 4458","line":"        _V_hot_ = false;"},
{"lineNum":" 4459","line":"        _Up = _V_;"},
{"lineNum":" 4460","line":"    }"},
{"lineNum":" 4461","line":"    else"},
{"lineNum":" 4462","line":"    {"},
{"lineNum":" 4463","line":"        uniform_real_distribution<result_type> _Uni(-1, 1);"},
{"lineNum":" 4464","line":"        result_type __u;"},
{"lineNum":" 4465","line":"        result_type __v;"},
{"lineNum":" 4466","line":"        result_type __s;"},
{"lineNum":" 4467","line":"        do"},
{"lineNum":" 4468","line":"        {"},
{"lineNum":" 4469","line":"            __u = _Uni(__g);"},
{"lineNum":" 4470","line":"            __v = _Uni(__g);"},
{"lineNum":" 4471","line":"            __s = __u * __u + __v * __v;"},
{"lineNum":" 4472","line":"        } while (__s > 1 || __s == 0);"},
{"lineNum":" 4473","line":"        result_type _Fp = _VSTD::sqrt(-2 * _VSTD::log(__s) / __s);"},
{"lineNum":" 4474","line":"        _V_ = __v * _Fp;"},
{"lineNum":" 4475","line":"        _V_hot_ = true;"},
{"lineNum":" 4476","line":"        _Up = __u * _Fp;"},
{"lineNum":" 4477","line":"    }"},
{"lineNum":" 4478","line":"    return _Up * __p.stddev() + __p.mean();"},
{"lineNum":" 4479","line":"}"},
{"lineNum":" 4480","line":""},
{"lineNum":" 4481","line":"template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 4482","line":"basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 4483","line":"operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 4484","line":"           const normal_distribution<_RT>& __x)"},
{"lineNum":" 4485","line":"{"},
{"lineNum":" 4486","line":"    __save_flags<_CharT, _Traits> __lx(__os);"},
{"lineNum":" 4487","line":"    typedef basic_ostream<_CharT, _Traits> _OStream;"},
{"lineNum":" 4488","line":"    __os.flags(_OStream::dec | _OStream::left | _OStream::fixed |"},
{"lineNum":" 4489","line":"               _OStream::scientific);"},
{"lineNum":" 4490","line":"    _CharT __sp = __os.widen(\' \');"},
{"lineNum":" 4491","line":"    __os.fill(__sp);"},
{"lineNum":" 4492","line":"    __os << __x.mean() << __sp << __x.stddev() << __sp << __x._V_hot_;"},
{"lineNum":" 4493","line":"    if (__x._V_hot_)"},
{"lineNum":" 4494","line":"        __os << __sp << __x._V_;"},
{"lineNum":" 4495","line":"    return __os;"},
{"lineNum":" 4496","line":"}"},
{"lineNum":" 4497","line":""},
{"lineNum":" 4498","line":"template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 4499","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 4500","line":"operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 4501","line":"           normal_distribution<_RT>& __x)"},
{"lineNum":" 4502","line":"{"},
{"lineNum":" 4503","line":"    typedef normal_distribution<_RT> _Eng;"},
{"lineNum":" 4504","line":"    typedef typename _Eng::result_type result_type;"},
{"lineNum":" 4505","line":"    typedef typename _Eng::param_type param_type;"},
{"lineNum":" 4506","line":"    __save_flags<_CharT, _Traits> __lx(__is);"},
{"lineNum":" 4507","line":"    typedef basic_istream<_CharT, _Traits> _Istream;"},
{"lineNum":" 4508","line":"    __is.flags(_Istream::dec | _Istream::skipws);"},
{"lineNum":" 4509","line":"    result_type __mean;"},
{"lineNum":" 4510","line":"    result_type __stddev;"},
{"lineNum":" 4511","line":"    result_type _Vp = 0;"},
{"lineNum":" 4512","line":"    bool _V_hot = false;"},
{"lineNum":" 4513","line":"    __is >> __mean >> __stddev >> _V_hot;"},
{"lineNum":" 4514","line":"    if (_V_hot)"},
{"lineNum":" 4515","line":"        __is >> _Vp;"},
{"lineNum":" 4516","line":"    if (!__is.fail())"},
{"lineNum":" 4517","line":"    {"},
{"lineNum":" 4518","line":"        __x.param(param_type(__mean, __stddev));"},
{"lineNum":" 4519","line":"        __x._V_hot_ = _V_hot;"},
{"lineNum":" 4520","line":"        __x._V_ = _Vp;"},
{"lineNum":" 4521","line":"    }"},
{"lineNum":" 4522","line":"    return __is;"},
{"lineNum":" 4523","line":"}"},
{"lineNum":" 4524","line":""},
{"lineNum":" 4525","line":"// lognormal_distribution"},
{"lineNum":" 4526","line":""},
{"lineNum":" 4527","line":"template<class _RealType = double>"},
{"lineNum":" 4528","line":"class _LIBCPP_TEMPLATE_VIS lognormal_distribution"},
{"lineNum":" 4529","line":"{"},
{"lineNum":" 4530","line":"public:"},
{"lineNum":" 4531","line":"    // types"},
{"lineNum":" 4532","line":"    typedef _RealType result_type;"},
{"lineNum":" 4533","line":""},
{"lineNum":" 4534","line":"    class _LIBCPP_TEMPLATE_VIS param_type"},
{"lineNum":" 4535","line":"    {"},
{"lineNum":" 4536","line":"        normal_distribution<result_type> __nd_;"},
{"lineNum":" 4537","line":"    public:"},
{"lineNum":" 4538","line":"        typedef lognormal_distribution distribution_type;"},
{"lineNum":" 4539","line":""},
{"lineNum":" 4540","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4541","line":"        explicit param_type(result_type __m = 0, result_type __s = 1)"},
{"lineNum":" 4542","line":"            : __nd_(__m, __s) {}"},
{"lineNum":" 4543","line":""},
{"lineNum":" 4544","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4545","line":"        result_type m() const {return __nd_.mean();}"},
{"lineNum":" 4546","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4547","line":"        result_type s() const {return __nd_.stddev();}"},
{"lineNum":" 4548","line":""},
{"lineNum":" 4549","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4550","line":"            bool operator==(const param_type& __x, const param_type& __y)"},
{"lineNum":" 4551","line":"            {return __x.__nd_ == __y.__nd_;}"},
{"lineNum":" 4552","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4553","line":"            bool operator!=(const param_type& __x, const param_type& __y)"},
{"lineNum":" 4554","line":"            {return !(__x == __y);}"},
{"lineNum":" 4555","line":"        friend class lognormal_distribution;"},
{"lineNum":" 4556","line":""},
{"lineNum":" 4557","line":"        template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 4558","line":"        friend"},
{"lineNum":" 4559","line":"        basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 4560","line":"        operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 4561","line":"                   const lognormal_distribution<_RT>& __x);"},
{"lineNum":" 4562","line":""},
{"lineNum":" 4563","line":"        template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 4564","line":"        friend"},
{"lineNum":" 4565","line":"        basic_istream<_CharT, _Traits>&"},
{"lineNum":" 4566","line":"        operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 4567","line":"                   lognormal_distribution<_RT>& __x);"},
{"lineNum":" 4568","line":"    };"},
{"lineNum":" 4569","line":""},
{"lineNum":" 4570","line":"private:"},
{"lineNum":" 4571","line":"    param_type __p_;"},
{"lineNum":" 4572","line":""},
{"lineNum":" 4573","line":"public:"},
{"lineNum":" 4574","line":"    // constructor and reset functions"},
{"lineNum":" 4575","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 4576","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4577","line":"    lognormal_distribution() : lognormal_distribution(0) {}"},
{"lineNum":" 4578","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4579","line":"    explicit lognormal_distribution(result_type __m, result_type __s = 1)"},
{"lineNum":" 4580","line":"        : __p_(param_type(__m, __s)) {}"},
{"lineNum":" 4581","line":"#else"},
{"lineNum":" 4582","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4583","line":"    explicit lognormal_distribution(result_type __m = 0,"},
{"lineNum":" 4584","line":"                                    result_type __s = 1)"},
{"lineNum":" 4585","line":"        : __p_(param_type(__m, __s)) {}"},
{"lineNum":" 4586","line":"#endif"},
{"lineNum":" 4587","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4588","line":"    explicit lognormal_distribution(const param_type& __p)"},
{"lineNum":" 4589","line":"        : __p_(__p) {}"},
{"lineNum":" 4590","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4591","line":"    void reset() {__p_.__nd_.reset();}"},
{"lineNum":" 4592","line":""},
{"lineNum":" 4593","line":"    // generating functions"},
{"lineNum":" 4594","line":"    template<class _URNG>"},
{"lineNum":" 4595","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4596","line":"        result_type operator()(_URNG& __g)"},
{"lineNum":" 4597","line":"        {return (*this)(__g, __p_);}"},
{"lineNum":" 4598","line":"    template<class _URNG>"},
{"lineNum":" 4599","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4600","line":"        result_type operator()(_URNG& __g, const param_type& __p)"},
{"lineNum":" 4601","line":"        {return _VSTD::exp(const_cast<normal_distribution<result_type>&>(__p.__nd_)(__g));}"},
{"lineNum":" 4602","line":""},
{"lineNum":" 4603","line":"    // property functions"},
{"lineNum":" 4604","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4605","line":"    result_type m() const {return __p_.m();}"},
{"lineNum":" 4606","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4607","line":"    result_type s() const {return __p_.s();}"},
{"lineNum":" 4608","line":""},
{"lineNum":" 4609","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4610","line":"    param_type param() const {return __p_;}"},
{"lineNum":" 4611","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4612","line":"    void param(const param_type& __p) {__p_ = __p;}"},
{"lineNum":" 4613","line":""},
{"lineNum":" 4614","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4615","line":"    result_type min() const {return 0;}"},
{"lineNum":" 4616","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4617","line":"    result_type max() const {return numeric_limits<result_type>::infinity();}"},
{"lineNum":" 4618","line":""},
{"lineNum":" 4619","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4620","line":"        bool operator==(const lognormal_distribution& __x,"},
{"lineNum":" 4621","line":"                        const lognormal_distribution& __y)"},
{"lineNum":" 4622","line":"        {return __x.__p_ == __y.__p_;}"},
{"lineNum":" 4623","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4624","line":"        bool operator!=(const lognormal_distribution& __x,"},
{"lineNum":" 4625","line":"                        const lognormal_distribution& __y)"},
{"lineNum":" 4626","line":"        {return !(__x == __y);}"},
{"lineNum":" 4627","line":""},
{"lineNum":" 4628","line":"    template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 4629","line":"    friend"},
{"lineNum":" 4630","line":"    basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 4631","line":"    operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 4632","line":"               const lognormal_distribution<_RT>& __x);"},
{"lineNum":" 4633","line":""},
{"lineNum":" 4634","line":"    template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 4635","line":"    friend"},
{"lineNum":" 4636","line":"    basic_istream<_CharT, _Traits>&"},
{"lineNum":" 4637","line":"    operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 4638","line":"               lognormal_distribution<_RT>& __x);"},
{"lineNum":" 4639","line":"};"},
{"lineNum":" 4640","line":""},
{"lineNum":" 4641","line":"template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 4642","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4643","line":"basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 4644","line":"operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 4645","line":"           const lognormal_distribution<_RT>& __x)"},
{"lineNum":" 4646","line":"{"},
{"lineNum":" 4647","line":"    return __os << __x.__p_.__nd_;"},
{"lineNum":" 4648","line":"}"},
{"lineNum":" 4649","line":""},
{"lineNum":" 4650","line":"template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 4651","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4652","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 4653","line":"operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 4654","line":"           lognormal_distribution<_RT>& __x)"},
{"lineNum":" 4655","line":"{"},
{"lineNum":" 4656","line":"    return __is >> __x.__p_.__nd_;"},
{"lineNum":" 4657","line":"}"},
{"lineNum":" 4658","line":""},
{"lineNum":" 4659","line":"// poisson_distribution"},
{"lineNum":" 4660","line":""},
{"lineNum":" 4661","line":"template<class _IntType = int>"},
{"lineNum":" 4662","line":"class _LIBCPP_TEMPLATE_VIS poisson_distribution"},
{"lineNum":" 4663","line":"{"},
{"lineNum":" 4664","line":"public:"},
{"lineNum":" 4665","line":"    // types"},
{"lineNum":" 4666","line":"    typedef _IntType result_type;"},
{"lineNum":" 4667","line":""},
{"lineNum":" 4668","line":"    class _LIBCPP_TEMPLATE_VIS param_type"},
{"lineNum":" 4669","line":"    {"},
{"lineNum":" 4670","line":"        double __mean_;"},
{"lineNum":" 4671","line":"        double __s_;"},
{"lineNum":" 4672","line":"        double __d_;"},
{"lineNum":" 4673","line":"        double __l_;"},
{"lineNum":" 4674","line":"        double __omega_;"},
{"lineNum":" 4675","line":"        double __c0_;"},
{"lineNum":" 4676","line":"        double __c1_;"},
{"lineNum":" 4677","line":"        double __c2_;"},
{"lineNum":" 4678","line":"        double __c3_;"},
{"lineNum":" 4679","line":"        double __c_;"},
{"lineNum":" 4680","line":""},
{"lineNum":" 4681","line":"    public:"},
{"lineNum":" 4682","line":"        typedef poisson_distribution distribution_type;"},
{"lineNum":" 4683","line":""},
{"lineNum":" 4684","line":"        explicit param_type(double __mean = 1.0);"},
{"lineNum":" 4685","line":""},
{"lineNum":" 4686","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4687","line":"        double mean() const {return __mean_;}"},
{"lineNum":" 4688","line":""},
{"lineNum":" 4689","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4690","line":"            bool operator==(const param_type& __x, const param_type& __y)"},
{"lineNum":" 4691","line":"            {return __x.__mean_ == __y.__mean_;}"},
{"lineNum":" 4692","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4693","line":"            bool operator!=(const param_type& __x, const param_type& __y)"},
{"lineNum":" 4694","line":"            {return !(__x == __y);}"},
{"lineNum":" 4695","line":""},
{"lineNum":" 4696","line":"        friend class poisson_distribution;"},
{"lineNum":" 4697","line":"    };"},
{"lineNum":" 4698","line":""},
{"lineNum":" 4699","line":"private:"},
{"lineNum":" 4700","line":"    param_type __p_;"},
{"lineNum":" 4701","line":""},
{"lineNum":" 4702","line":"public:"},
{"lineNum":" 4703","line":"    // constructors and reset functions"},
{"lineNum":" 4704","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 4705","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4706","line":"    poisson_distribution() : poisson_distribution(1.0) {}"},
{"lineNum":" 4707","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4708","line":"    explicit poisson_distribution(double __mean)"},
{"lineNum":" 4709","line":"        : __p_(__mean) {}"},
{"lineNum":" 4710","line":"#else"},
{"lineNum":" 4711","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4712","line":"    explicit poisson_distribution(double __mean = 1.0)"},
{"lineNum":" 4713","line":"        : __p_(__mean) {}"},
{"lineNum":" 4714","line":"#endif"},
{"lineNum":" 4715","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4716","line":"    explicit poisson_distribution(const param_type& __p) : __p_(__p) {}"},
{"lineNum":" 4717","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4718","line":"    void reset() {}"},
{"lineNum":" 4719","line":""},
{"lineNum":" 4720","line":"    // generating functions"},
{"lineNum":" 4721","line":"    template<class _URNG>"},
{"lineNum":" 4722","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4723","line":"        result_type operator()(_URNG& __g)"},
{"lineNum":" 4724","line":"        {return (*this)(__g, __p_);}"},
{"lineNum":" 4725","line":"    template<class _URNG> result_type operator()(_URNG& __g, const param_type& __p);"},
{"lineNum":" 4726","line":""},
{"lineNum":" 4727","line":"    // property functions"},
{"lineNum":" 4728","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4729","line":"    double mean() const {return __p_.mean();}"},
{"lineNum":" 4730","line":""},
{"lineNum":" 4731","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4732","line":"    param_type param() const {return __p_;}"},
{"lineNum":" 4733","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4734","line":"    void param(const param_type& __p) {__p_ = __p;}"},
{"lineNum":" 4735","line":""},
{"lineNum":" 4736","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4737","line":"    result_type min() const {return 0;}"},
{"lineNum":" 4738","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4739","line":"    result_type max() const {return numeric_limits<result_type>::max();}"},
{"lineNum":" 4740","line":""},
{"lineNum":" 4741","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4742","line":"        bool operator==(const poisson_distribution& __x,"},
{"lineNum":" 4743","line":"                        const poisson_distribution& __y)"},
{"lineNum":" 4744","line":"        {return __x.__p_ == __y.__p_;}"},
{"lineNum":" 4745","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4746","line":"        bool operator!=(const poisson_distribution& __x,"},
{"lineNum":" 4747","line":"                        const poisson_distribution& __y)"},
{"lineNum":" 4748","line":"        {return !(__x == __y);}"},
{"lineNum":" 4749","line":"};"},
{"lineNum":" 4750","line":""},
{"lineNum":" 4751","line":"template<class _IntType>"},
{"lineNum":" 4752","line":"poisson_distribution<_IntType>::param_type::param_type(double __mean)"},
{"lineNum":" 4753","line":"    // According to the standard `inf` is a valid input, but it causes the"},
{"lineNum":" 4754","line":"    // distribution to hang, so we replace it with the maximum representable"},
{"lineNum":" 4755","line":"    // mean."},
{"lineNum":" 4756","line":"    : __mean_(isinf(__mean) ? numeric_limits<double>::max() : __mean)"},
{"lineNum":" 4757","line":"{"},
{"lineNum":" 4758","line":"    if (__mean_ < 10)"},
{"lineNum":" 4759","line":"    {"},
{"lineNum":" 4760","line":"        __s_ = 0;"},
{"lineNum":" 4761","line":"        __d_ = 0;"},
{"lineNum":" 4762","line":"        __l_ = _VSTD::exp(-__mean_);"},
{"lineNum":" 4763","line":"        __omega_ = 0;"},
{"lineNum":" 4764","line":"        __c3_ = 0;"},
{"lineNum":" 4765","line":"        __c2_ = 0;"},
{"lineNum":" 4766","line":"        __c1_ = 0;"},
{"lineNum":" 4767","line":"        __c0_ = 0;"},
{"lineNum":" 4768","line":"        __c_ = 0;"},
{"lineNum":" 4769","line":"    }"},
{"lineNum":" 4770","line":"    else"},
{"lineNum":" 4771","line":"    {"},
{"lineNum":" 4772","line":"        __s_ = _VSTD::sqrt(__mean_);"},
{"lineNum":" 4773","line":"        __d_ = 6 * __mean_ * __mean_;"},
{"lineNum":" 4774","line":"        __l_ = _VSTD::trunc(__mean_ - 1.1484);"},
{"lineNum":" 4775","line":"        __omega_ = .3989423 / __s_;"},
{"lineNum":" 4776","line":"        double __b1_ = .4166667E-1 / __mean_;"},
{"lineNum":" 4777","line":"        double __b2_ = .3 * __b1_ * __b1_;"},
{"lineNum":" 4778","line":"        __c3_ = .1428571 * __b1_ * __b2_;"},
{"lineNum":" 4779","line":"        __c2_ = __b2_ - 15. * __c3_;"},
{"lineNum":" 4780","line":"        __c1_ = __b1_ - 6. * __b2_ + 45. * __c3_;"},
{"lineNum":" 4781","line":"        __c0_ = 1. - __b1_ + 3. * __b2_ - 15. * __c3_;"},
{"lineNum":" 4782","line":"        __c_ = .1069 / __mean_;"},
{"lineNum":" 4783","line":"    }"},
{"lineNum":" 4784","line":"}"},
{"lineNum":" 4785","line":""},
{"lineNum":" 4786","line":"template <class _IntType>"},
{"lineNum":" 4787","line":"template<class _URNG>"},
{"lineNum":" 4788","line":"_IntType"},
{"lineNum":" 4789","line":"poisson_distribution<_IntType>::operator()(_URNG& __urng, const param_type& __pr)"},
{"lineNum":" 4790","line":"{"},
{"lineNum":" 4791","line":"    double __tx;"},
{"lineNum":" 4792","line":"    uniform_real_distribution<double> __urd;"},
{"lineNum":" 4793","line":"    if (__pr.__mean_ < 10)"},
{"lineNum":" 4794","line":"    {"},
{"lineNum":" 4795","line":"         __tx = 0;"},
{"lineNum":" 4796","line":"        for (double __p = __urd(__urng); __p > __pr.__l_; ++__tx)"},
{"lineNum":" 4797","line":"            __p *= __urd(__urng);"},
{"lineNum":" 4798","line":"    }"},
{"lineNum":" 4799","line":"    else"},
{"lineNum":" 4800","line":"    {"},
{"lineNum":" 4801","line":"        double __difmuk;"},
{"lineNum":" 4802","line":"        double __g = __pr.__mean_ + __pr.__s_ * normal_distribution<double>()(__urng);"},
{"lineNum":" 4803","line":"        double __u;"},
{"lineNum":" 4804","line":"        if (__g > 0)"},
{"lineNum":" 4805","line":"        {"},
{"lineNum":" 4806","line":"            __tx = _VSTD::trunc(__g);"},
{"lineNum":" 4807","line":"            if (__tx >= __pr.__l_)"},
{"lineNum":" 4808","line":"                return _VSTD::__clamp_to_integral<result_type>(__tx);"},
{"lineNum":" 4809","line":"            __difmuk = __pr.__mean_ - __tx;"},
{"lineNum":" 4810","line":"            __u = __urd(__urng);"},
{"lineNum":" 4811","line":"            if (__pr.__d_ * __u >= __difmuk * __difmuk * __difmuk)"},
{"lineNum":" 4812","line":"                return _VSTD::__clamp_to_integral<result_type>(__tx);"},
{"lineNum":" 4813","line":"        }"},
{"lineNum":" 4814","line":"        exponential_distribution<double> __edist;"},
{"lineNum":" 4815","line":"        for (bool __using_exp_dist = false; true; __using_exp_dist = true)"},
{"lineNum":" 4816","line":"        {"},
{"lineNum":" 4817","line":"            double __e;"},
{"lineNum":" 4818","line":"            if (__using_exp_dist || __g <= 0)"},
{"lineNum":" 4819","line":"            {"},
{"lineNum":" 4820","line":"                double __t;"},
{"lineNum":" 4821","line":"                do"},
{"lineNum":" 4822","line":"                {"},
{"lineNum":" 4823","line":"                    __e = __edist(__urng);"},
{"lineNum":" 4824","line":"                    __u = __urd(__urng);"},
{"lineNum":" 4825","line":"                    __u += __u - 1;"},
{"lineNum":" 4826","line":"                    __t = 1.8 + (__u < 0 ? -__e : __e);"},
{"lineNum":" 4827","line":"                } while (__t <= -.6744);"},
{"lineNum":" 4828","line":"                __tx = _VSTD::trunc(__pr.__mean_ + __pr.__s_ * __t);"},
{"lineNum":" 4829","line":"                __difmuk = __pr.__mean_ - __tx;"},
{"lineNum":" 4830","line":"                __using_exp_dist = true;"},
{"lineNum":" 4831","line":"            }"},
{"lineNum":" 4832","line":"            double __px;"},
{"lineNum":" 4833","line":"            double __py;"},
{"lineNum":" 4834","line":"            if (__tx < 10 && __tx >= 0)"},
{"lineNum":" 4835","line":"            {"},
{"lineNum":" 4836","line":"                const double __fac[] = {1, 1, 2, 6, 24, 120, 720, 5040,"},
{"lineNum":" 4837","line":"                                             40320, 362880};"},
{"lineNum":" 4838","line":"                __px = -__pr.__mean_;"},
{"lineNum":" 4839","line":"                __py = _VSTD::pow(__pr.__mean_, (double)__tx) / __fac[static_cast<int>(__tx)];"},
{"lineNum":" 4840","line":"            }"},
{"lineNum":" 4841","line":"            else"},
{"lineNum":" 4842","line":"            {"},
{"lineNum":" 4843","line":"                double __del = .8333333E-1 / __tx;"},
{"lineNum":" 4844","line":"                __del -= 4.8 * __del * __del * __del;"},
{"lineNum":" 4845","line":"                double __v = __difmuk / __tx;"},
{"lineNum":" 4846","line":"                if (_VSTD::abs(__v) > 0.25)"},
{"lineNum":" 4847","line":"                    __px = __tx * _VSTD::log(1 + __v) - __difmuk - __del;"},
{"lineNum":" 4848","line":"                else"},
{"lineNum":" 4849","line":"                    __px = __tx * __v * __v * (((((((.1250060 * __v + -.1384794) *"},
{"lineNum":" 4850","line":"                           __v + .1421878) * __v + -.1661269) * __v + .2000118) *"},
{"lineNum":" 4851","line":"                           __v + -.2500068) * __v + .3333333) * __v + -.5) - __del;"},
{"lineNum":" 4852","line":"                __py = .3989423 / _VSTD::sqrt(__tx);"},
{"lineNum":" 4853","line":"            }"},
{"lineNum":" 4854","line":"            double __r = (0.5 - __difmuk) / __pr.__s_;"},
{"lineNum":" 4855","line":"            double __r2 = __r * __r;"},
{"lineNum":" 4856","line":"            double __fx = -0.5 * __r2;"},
{"lineNum":" 4857","line":"            double __fy = __pr.__omega_ * (((__pr.__c3_ * __r2 + __pr.__c2_) *"},
{"lineNum":" 4858","line":"                                        __r2 + __pr.__c1_) * __r2 + __pr.__c0_);"},
{"lineNum":" 4859","line":"            if (__using_exp_dist)"},
{"lineNum":" 4860","line":"            {"},
{"lineNum":" 4861","line":"                if (__pr.__c_ * _VSTD::abs(__u) <= __py * _VSTD::exp(__px + __e) -"},
{"lineNum":" 4862","line":"                                                   __fy * _VSTD::exp(__fx + __e))"},
{"lineNum":" 4863","line":"                    break;"},
{"lineNum":" 4864","line":"            }"},
{"lineNum":" 4865","line":"            else"},
{"lineNum":" 4866","line":"            {"},
{"lineNum":" 4867","line":"                if (__fy - __u * __fy <= __py * _VSTD::exp(__px - __fx))"},
{"lineNum":" 4868","line":"                    break;"},
{"lineNum":" 4869","line":"            }"},
{"lineNum":" 4870","line":"        }"},
{"lineNum":" 4871","line":"    }"},
{"lineNum":" 4872","line":"    return _VSTD::__clamp_to_integral<result_type>(__tx);"},
{"lineNum":" 4873","line":"}"},
{"lineNum":" 4874","line":""},
{"lineNum":" 4875","line":"template <class _CharT, class _Traits, class _IntType>"},
{"lineNum":" 4876","line":"basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 4877","line":"operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 4878","line":"           const poisson_distribution<_IntType>& __x)"},
{"lineNum":" 4879","line":"{"},
{"lineNum":" 4880","line":"    __save_flags<_CharT, _Traits> __lx(__os);"},
{"lineNum":" 4881","line":"    typedef basic_ostream<_CharT, _Traits> _OStream;"},
{"lineNum":" 4882","line":"    __os.flags(_OStream::dec | _OStream::left | _OStream::fixed |"},
{"lineNum":" 4883","line":"               _OStream::scientific);"},
{"lineNum":" 4884","line":"    return __os << __x.mean();"},
{"lineNum":" 4885","line":"}"},
{"lineNum":" 4886","line":""},
{"lineNum":" 4887","line":"template <class _CharT, class _Traits, class _IntType>"},
{"lineNum":" 4888","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 4889","line":"operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 4890","line":"           poisson_distribution<_IntType>& __x)"},
{"lineNum":" 4891","line":"{"},
{"lineNum":" 4892","line":"    typedef poisson_distribution<_IntType> _Eng;"},
{"lineNum":" 4893","line":"    typedef typename _Eng::param_type param_type;"},
{"lineNum":" 4894","line":"    __save_flags<_CharT, _Traits> __lx(__is);"},
{"lineNum":" 4895","line":"    typedef basic_istream<_CharT, _Traits> _Istream;"},
{"lineNum":" 4896","line":"    __is.flags(_Istream::dec | _Istream::skipws);"},
{"lineNum":" 4897","line":"    double __mean;"},
{"lineNum":" 4898","line":"    __is >> __mean;"},
{"lineNum":" 4899","line":"    if (!__is.fail())"},
{"lineNum":" 4900","line":"        __x.param(param_type(__mean));"},
{"lineNum":" 4901","line":"    return __is;"},
{"lineNum":" 4902","line":"}"},
{"lineNum":" 4903","line":""},
{"lineNum":" 4904","line":"// weibull_distribution"},
{"lineNum":" 4905","line":""},
{"lineNum":" 4906","line":"template<class _RealType = double>"},
{"lineNum":" 4907","line":"class _LIBCPP_TEMPLATE_VIS weibull_distribution"},
{"lineNum":" 4908","line":"{"},
{"lineNum":" 4909","line":"public:"},
{"lineNum":" 4910","line":"    // types"},
{"lineNum":" 4911","line":"    typedef _RealType result_type;"},
{"lineNum":" 4912","line":""},
{"lineNum":" 4913","line":"    class _LIBCPP_TEMPLATE_VIS param_type"},
{"lineNum":" 4914","line":"    {"},
{"lineNum":" 4915","line":"        result_type __a_;"},
{"lineNum":" 4916","line":"        result_type __b_;"},
{"lineNum":" 4917","line":"    public:"},
{"lineNum":" 4918","line":"        typedef weibull_distribution distribution_type;"},
{"lineNum":" 4919","line":""},
{"lineNum":" 4920","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4921","line":"        explicit param_type(result_type __a = 1, result_type __b = 1)"},
{"lineNum":" 4922","line":"            : __a_(__a), __b_(__b) {}"},
{"lineNum":" 4923","line":""},
{"lineNum":" 4924","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4925","line":"        result_type a() const {return __a_;}"},
{"lineNum":" 4926","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4927","line":"        result_type b() const {return __b_;}"},
{"lineNum":" 4928","line":""},
{"lineNum":" 4929","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4930","line":"            bool operator==(const param_type& __x, const param_type& __y)"},
{"lineNum":" 4931","line":"            {return __x.__a_ == __y.__a_ && __x.__b_ == __y.__b_;}"},
{"lineNum":" 4932","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4933","line":"            bool operator!=(const param_type& __x, const param_type& __y)"},
{"lineNum":" 4934","line":"            {return !(__x == __y);}"},
{"lineNum":" 4935","line":"    };"},
{"lineNum":" 4936","line":""},
{"lineNum":" 4937","line":"private:"},
{"lineNum":" 4938","line":"    param_type __p_;"},
{"lineNum":" 4939","line":""},
{"lineNum":" 4940","line":"public:"},
{"lineNum":" 4941","line":"    // constructor and reset functions"},
{"lineNum":" 4942","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 4943","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4944","line":"    weibull_distribution() : weibull_distribution(1) {}"},
{"lineNum":" 4945","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4946","line":"    explicit weibull_distribution(result_type __a, result_type __b = 1)"},
{"lineNum":" 4947","line":"        : __p_(param_type(__a, __b)) {}"},
{"lineNum":" 4948","line":"#else"},
{"lineNum":" 4949","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4950","line":"    explicit weibull_distribution(result_type __a = 1, result_type __b = 1)"},
{"lineNum":" 4951","line":"        : __p_(param_type(__a, __b)) {}"},
{"lineNum":" 4952","line":"#endif"},
{"lineNum":" 4953","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4954","line":"    explicit weibull_distribution(const param_type& __p)"},
{"lineNum":" 4955","line":"        : __p_(__p) {}"},
{"lineNum":" 4956","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4957","line":"    void reset() {}"},
{"lineNum":" 4958","line":""},
{"lineNum":" 4959","line":"    // generating functions"},
{"lineNum":" 4960","line":"    template<class _URNG>"},
{"lineNum":" 4961","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4962","line":"        result_type operator()(_URNG& __g)"},
{"lineNum":" 4963","line":"        {return (*this)(__g, __p_);}"},
{"lineNum":" 4964","line":"    template<class _URNG>"},
{"lineNum":" 4965","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4966","line":"        result_type operator()(_URNG& __g, const param_type& __p)"},
{"lineNum":" 4967","line":"        {return __p.b() *"},
{"lineNum":" 4968","line":"            _VSTD::pow(exponential_distribution<result_type>()(__g), 1/__p.a());}"},
{"lineNum":" 4969","line":""},
{"lineNum":" 4970","line":"    // property functions"},
{"lineNum":" 4971","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4972","line":"    result_type a() const {return __p_.a();}"},
{"lineNum":" 4973","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4974","line":"    result_type b() const {return __p_.b();}"},
{"lineNum":" 4975","line":""},
{"lineNum":" 4976","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4977","line":"    param_type param() const {return __p_;}"},
{"lineNum":" 4978","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4979","line":"    void param(const param_type& __p) {__p_ = __p;}"},
{"lineNum":" 4980","line":""},
{"lineNum":" 4981","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4982","line":"    result_type min() const {return 0;}"},
{"lineNum":" 4983","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4984","line":"    result_type max() const {return numeric_limits<result_type>::infinity();}"},
{"lineNum":" 4985","line":""},
{"lineNum":" 4986","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4987","line":"        bool operator==(const weibull_distribution& __x,"},
{"lineNum":" 4988","line":"                        const weibull_distribution& __y)"},
{"lineNum":" 4989","line":"        {return __x.__p_ == __y.__p_;}"},
{"lineNum":" 4990","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 4991","line":"        bool operator!=(const weibull_distribution& __x,"},
{"lineNum":" 4992","line":"                        const weibull_distribution& __y)"},
{"lineNum":" 4993","line":"        {return !(__x == __y);}"},
{"lineNum":" 4994","line":"};"},
{"lineNum":" 4995","line":""},
{"lineNum":" 4996","line":"template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 4997","line":"basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 4998","line":"operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 4999","line":"           const weibull_distribution<_RT>& __x)"},
{"lineNum":" 5000","line":"{"},
{"lineNum":" 5001","line":"    __save_flags<_CharT, _Traits> __lx(__os);"},
{"lineNum":" 5002","line":"    typedef basic_ostream<_CharT, _Traits> _OStream;"},
{"lineNum":" 5003","line":"    __os.flags(_OStream::dec | _OStream::left | _OStream::fixed |"},
{"lineNum":" 5004","line":"               _OStream::scientific);"},
{"lineNum":" 5005","line":"    _CharT __sp = __os.widen(\' \');"},
{"lineNum":" 5006","line":"    __os.fill(__sp);"},
{"lineNum":" 5007","line":"    __os << __x.a() << __sp << __x.b();"},
{"lineNum":" 5008","line":"    return __os;"},
{"lineNum":" 5009","line":"}"},
{"lineNum":" 5010","line":""},
{"lineNum":" 5011","line":"template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 5012","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 5013","line":"operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 5014","line":"           weibull_distribution<_RT>& __x)"},
{"lineNum":" 5015","line":"{"},
{"lineNum":" 5016","line":"    typedef weibull_distribution<_RT> _Eng;"},
{"lineNum":" 5017","line":"    typedef typename _Eng::result_type result_type;"},
{"lineNum":" 5018","line":"    typedef typename _Eng::param_type param_type;"},
{"lineNum":" 5019","line":"    __save_flags<_CharT, _Traits> __lx(__is);"},
{"lineNum":" 5020","line":"    typedef basic_istream<_CharT, _Traits> _Istream;"},
{"lineNum":" 5021","line":"    __is.flags(_Istream::dec | _Istream::skipws);"},
{"lineNum":" 5022","line":"    result_type __a;"},
{"lineNum":" 5023","line":"    result_type __b;"},
{"lineNum":" 5024","line":"    __is >> __a >> __b;"},
{"lineNum":" 5025","line":"    if (!__is.fail())"},
{"lineNum":" 5026","line":"        __x.param(param_type(__a, __b));"},
{"lineNum":" 5027","line":"    return __is;"},
{"lineNum":" 5028","line":"}"},
{"lineNum":" 5029","line":""},
{"lineNum":" 5030","line":"template<class _RealType = double>"},
{"lineNum":" 5031","line":"class _LIBCPP_TEMPLATE_VIS extreme_value_distribution"},
{"lineNum":" 5032","line":"{"},
{"lineNum":" 5033","line":"public:"},
{"lineNum":" 5034","line":"    // types"},
{"lineNum":" 5035","line":"    typedef _RealType result_type;"},
{"lineNum":" 5036","line":""},
{"lineNum":" 5037","line":"    class _LIBCPP_TEMPLATE_VIS param_type"},
{"lineNum":" 5038","line":"    {"},
{"lineNum":" 5039","line":"        result_type __a_;"},
{"lineNum":" 5040","line":"        result_type __b_;"},
{"lineNum":" 5041","line":"    public:"},
{"lineNum":" 5042","line":"        typedef extreme_value_distribution distribution_type;"},
{"lineNum":" 5043","line":""},
{"lineNum":" 5044","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5045","line":"        explicit param_type(result_type __a = 0, result_type __b = 1)"},
{"lineNum":" 5046","line":"            : __a_(__a), __b_(__b) {}"},
{"lineNum":" 5047","line":""},
{"lineNum":" 5048","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5049","line":"        result_type a() const {return __a_;}"},
{"lineNum":" 5050","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5051","line":"        result_type b() const {return __b_;}"},
{"lineNum":" 5052","line":""},
{"lineNum":" 5053","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5054","line":"            bool operator==(const param_type& __x, const param_type& __y)"},
{"lineNum":" 5055","line":"            {return __x.__a_ == __y.__a_ && __x.__b_ == __y.__b_;}"},
{"lineNum":" 5056","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5057","line":"            bool operator!=(const param_type& __x, const param_type& __y)"},
{"lineNum":" 5058","line":"            {return !(__x == __y);}"},
{"lineNum":" 5059","line":"    };"},
{"lineNum":" 5060","line":""},
{"lineNum":" 5061","line":"private:"},
{"lineNum":" 5062","line":"    param_type __p_;"},
{"lineNum":" 5063","line":""},
{"lineNum":" 5064","line":"public:"},
{"lineNum":" 5065","line":"    // constructor and reset functions"},
{"lineNum":" 5066","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 5067","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5068","line":"    extreme_value_distribution() : extreme_value_distribution(0) {}"},
{"lineNum":" 5069","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5070","line":"    explicit extreme_value_distribution(result_type __a, result_type __b = 1)"},
{"lineNum":" 5071","line":"        : __p_(param_type(__a, __b)) {}"},
{"lineNum":" 5072","line":"#else"},
{"lineNum":" 5073","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5074","line":"    explicit extreme_value_distribution(result_type __a = 0,"},
{"lineNum":" 5075","line":"                                        result_type __b = 1)"},
{"lineNum":" 5076","line":"        : __p_(param_type(__a, __b)) {}"},
{"lineNum":" 5077","line":"#endif"},
{"lineNum":" 5078","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5079","line":"    explicit extreme_value_distribution(const param_type& __p)"},
{"lineNum":" 5080","line":"        : __p_(__p) {}"},
{"lineNum":" 5081","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5082","line":"    void reset() {}"},
{"lineNum":" 5083","line":""},
{"lineNum":" 5084","line":"    // generating functions"},
{"lineNum":" 5085","line":"    template<class _URNG>"},
{"lineNum":" 5086","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5087","line":"        result_type operator()(_URNG& __g)"},
{"lineNum":" 5088","line":"        {return (*this)(__g, __p_);}"},
{"lineNum":" 5089","line":"    template<class _URNG> result_type operator()(_URNG& __g, const param_type& __p);"},
{"lineNum":" 5090","line":""},
{"lineNum":" 5091","line":"    // property functions"},
{"lineNum":" 5092","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5093","line":"    result_type a() const {return __p_.a();}"},
{"lineNum":" 5094","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5095","line":"    result_type b() const {return __p_.b();}"},
{"lineNum":" 5096","line":""},
{"lineNum":" 5097","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5098","line":"    param_type param() const {return __p_;}"},
{"lineNum":" 5099","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5100","line":"    void param(const param_type& __p) {__p_ = __p;}"},
{"lineNum":" 5101","line":""},
{"lineNum":" 5102","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5103","line":"    result_type min() const {return -numeric_limits<result_type>::infinity();}"},
{"lineNum":" 5104","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5105","line":"    result_type max() const {return numeric_limits<result_type>::infinity();}"},
{"lineNum":" 5106","line":""},
{"lineNum":" 5107","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5108","line":"        bool operator==(const extreme_value_distribution& __x,"},
{"lineNum":" 5109","line":"                        const extreme_value_distribution& __y)"},
{"lineNum":" 5110","line":"        {return __x.__p_ == __y.__p_;}"},
{"lineNum":" 5111","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5112","line":"        bool operator!=(const extreme_value_distribution& __x,"},
{"lineNum":" 5113","line":"                        const extreme_value_distribution& __y)"},
{"lineNum":" 5114","line":"        {return !(__x == __y);}"},
{"lineNum":" 5115","line":"};"},
{"lineNum":" 5116","line":""},
{"lineNum":" 5117","line":"template<class _RealType>"},
{"lineNum":" 5118","line":"template<class _URNG>"},
{"lineNum":" 5119","line":"_RealType"},
{"lineNum":" 5120","line":"extreme_value_distribution<_RealType>::operator()(_URNG& __g, const param_type& __p)"},
{"lineNum":" 5121","line":"{"},
{"lineNum":" 5122","line":"    return __p.a() - __p.b() *"},
{"lineNum":" 5123","line":"         _VSTD::log(-_VSTD::log(1-uniform_real_distribution<result_type>()(__g)));"},
{"lineNum":" 5124","line":"}"},
{"lineNum":" 5125","line":""},
{"lineNum":" 5126","line":"template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 5127","line":"basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 5128","line":"operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 5129","line":"           const extreme_value_distribution<_RT>& __x)"},
{"lineNum":" 5130","line":"{"},
{"lineNum":" 5131","line":"    __save_flags<_CharT, _Traits> __lx(__os);"},
{"lineNum":" 5132","line":"    typedef basic_ostream<_CharT, _Traits> _OStream;"},
{"lineNum":" 5133","line":"    __os.flags(_OStream::dec | _OStream::left | _OStream::fixed |"},
{"lineNum":" 5134","line":"               _OStream::scientific);"},
{"lineNum":" 5135","line":"    _CharT __sp = __os.widen(\' \');"},
{"lineNum":" 5136","line":"    __os.fill(__sp);"},
{"lineNum":" 5137","line":"    __os << __x.a() << __sp << __x.b();"},
{"lineNum":" 5138","line":"    return __os;"},
{"lineNum":" 5139","line":"}"},
{"lineNum":" 5140","line":""},
{"lineNum":" 5141","line":"template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 5142","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 5143","line":"operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 5144","line":"           extreme_value_distribution<_RT>& __x)"},
{"lineNum":" 5145","line":"{"},
{"lineNum":" 5146","line":"    typedef extreme_value_distribution<_RT> _Eng;"},
{"lineNum":" 5147","line":"    typedef typename _Eng::result_type result_type;"},
{"lineNum":" 5148","line":"    typedef typename _Eng::param_type param_type;"},
{"lineNum":" 5149","line":"    __save_flags<_CharT, _Traits> __lx(__is);"},
{"lineNum":" 5150","line":"    typedef basic_istream<_CharT, _Traits> _Istream;"},
{"lineNum":" 5151","line":"    __is.flags(_Istream::dec | _Istream::skipws);"},
{"lineNum":" 5152","line":"    result_type __a;"},
{"lineNum":" 5153","line":"    result_type __b;"},
{"lineNum":" 5154","line":"    __is >> __a >> __b;"},
{"lineNum":" 5155","line":"    if (!__is.fail())"},
{"lineNum":" 5156","line":"        __x.param(param_type(__a, __b));"},
{"lineNum":" 5157","line":"    return __is;"},
{"lineNum":" 5158","line":"}"},
{"lineNum":" 5159","line":""},
{"lineNum":" 5160","line":"// gamma_distribution"},
{"lineNum":" 5161","line":""},
{"lineNum":" 5162","line":"template<class _RealType = double>"},
{"lineNum":" 5163","line":"class _LIBCPP_TEMPLATE_VIS gamma_distribution"},
{"lineNum":" 5164","line":"{"},
{"lineNum":" 5165","line":"public:"},
{"lineNum":" 5166","line":"    // types"},
{"lineNum":" 5167","line":"    typedef _RealType result_type;"},
{"lineNum":" 5168","line":""},
{"lineNum":" 5169","line":"    class _LIBCPP_TEMPLATE_VIS param_type"},
{"lineNum":" 5170","line":"    {"},
{"lineNum":" 5171","line":"        result_type __alpha_;"},
{"lineNum":" 5172","line":"        result_type __beta_;"},
{"lineNum":" 5173","line":"    public:"},
{"lineNum":" 5174","line":"        typedef gamma_distribution distribution_type;"},
{"lineNum":" 5175","line":""},
{"lineNum":" 5176","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5177","line":"        explicit param_type(result_type __alpha = 1, result_type __beta = 1)"},
{"lineNum":" 5178","line":"            : __alpha_(__alpha), __beta_(__beta) {}"},
{"lineNum":" 5179","line":""},
{"lineNum":" 5180","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5181","line":"        result_type alpha() const {return __alpha_;}"},
{"lineNum":" 5182","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5183","line":"        result_type beta() const {return __beta_;}"},
{"lineNum":" 5184","line":""},
{"lineNum":" 5185","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5186","line":"            bool operator==(const param_type& __x, const param_type& __y)"},
{"lineNum":" 5187","line":"            {return __x.__alpha_ == __y.__alpha_ && __x.__beta_ == __y.__beta_;}"},
{"lineNum":" 5188","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5189","line":"            bool operator!=(const param_type& __x, const param_type& __y)"},
{"lineNum":" 5190","line":"            {return !(__x == __y);}"},
{"lineNum":" 5191","line":"    };"},
{"lineNum":" 5192","line":""},
{"lineNum":" 5193","line":"private:"},
{"lineNum":" 5194","line":"    param_type __p_;"},
{"lineNum":" 5195","line":""},
{"lineNum":" 5196","line":"public:"},
{"lineNum":" 5197","line":"    // constructors and reset functions"},
{"lineNum":" 5198","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 5199","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5200","line":"    gamma_distribution() : gamma_distribution(1) {}"},
{"lineNum":" 5201","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5202","line":"    explicit gamma_distribution(result_type __alpha, result_type __beta = 1)"},
{"lineNum":" 5203","line":"        : __p_(param_type(__alpha, __beta)) {}"},
{"lineNum":" 5204","line":"#else"},
{"lineNum":" 5205","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5206","line":"    explicit gamma_distribution(result_type __alpha = 1,"},
{"lineNum":" 5207","line":"                                result_type __beta = 1)"},
{"lineNum":" 5208","line":"        : __p_(param_type(__alpha, __beta)) {}"},
{"lineNum":" 5209","line":"#endif"},
{"lineNum":" 5210","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5211","line":"    explicit gamma_distribution(const param_type& __p)"},
{"lineNum":" 5212","line":"        : __p_(__p) {}"},
{"lineNum":" 5213","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5214","line":"    void reset() {}"},
{"lineNum":" 5215","line":""},
{"lineNum":" 5216","line":"    // generating functions"},
{"lineNum":" 5217","line":"    template<class _URNG>"},
{"lineNum":" 5218","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5219","line":"        result_type operator()(_URNG& __g)"},
{"lineNum":" 5220","line":"        {return (*this)(__g, __p_);}"},
{"lineNum":" 5221","line":"    template<class _URNG> result_type operator()(_URNG& __g, const param_type& __p);"},
{"lineNum":" 5222","line":""},
{"lineNum":" 5223","line":"    // property functions"},
{"lineNum":" 5224","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5225","line":"    result_type alpha() const {return __p_.alpha();}"},
{"lineNum":" 5226","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5227","line":"    result_type beta() const {return __p_.beta();}"},
{"lineNum":" 5228","line":""},
{"lineNum":" 5229","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5230","line":"    param_type param() const {return __p_;}"},
{"lineNum":" 5231","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5232","line":"    void param(const param_type& __p) {__p_ = __p;}"},
{"lineNum":" 5233","line":""},
{"lineNum":" 5234","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5235","line":"    result_type min() const {return 0;}"},
{"lineNum":" 5236","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5237","line":"    result_type max() const {return numeric_limits<result_type>::infinity();}"},
{"lineNum":" 5238","line":""},
{"lineNum":" 5239","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5240","line":"        bool operator==(const gamma_distribution& __x,"},
{"lineNum":" 5241","line":"                        const gamma_distribution& __y)"},
{"lineNum":" 5242","line":"        {return __x.__p_ == __y.__p_;}"},
{"lineNum":" 5243","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5244","line":"        bool operator!=(const gamma_distribution& __x,"},
{"lineNum":" 5245","line":"                        const gamma_distribution& __y)"},
{"lineNum":" 5246","line":"        {return !(__x == __y);}"},
{"lineNum":" 5247","line":"};"},
{"lineNum":" 5248","line":""},
{"lineNum":" 5249","line":"template <class _RealType>"},
{"lineNum":" 5250","line":"template<class _URNG>"},
{"lineNum":" 5251","line":"_RealType"},
{"lineNum":" 5252","line":"gamma_distribution<_RealType>::operator()(_URNG& __g, const param_type& __p)"},
{"lineNum":" 5253","line":"{"},
{"lineNum":" 5254","line":"    result_type __a = __p.alpha();"},
{"lineNum":" 5255","line":"    uniform_real_distribution<result_type> __gen(0, 1);"},
{"lineNum":" 5256","line":"    exponential_distribution<result_type> __egen;"},
{"lineNum":" 5257","line":"    result_type __x;"},
{"lineNum":" 5258","line":"    if (__a == 1)"},
{"lineNum":" 5259","line":"        __x = __egen(__g);"},
{"lineNum":" 5260","line":"    else if (__a > 1)"},
{"lineNum":" 5261","line":"    {"},
{"lineNum":" 5262","line":"        const result_type __b = __a - 1;"},
{"lineNum":" 5263","line":"        const result_type __c = 3 * __a - result_type(0.75);"},
{"lineNum":" 5264","line":"        while (true)"},
{"lineNum":" 5265","line":"        {"},
{"lineNum":" 5266","line":"            const result_type __u = __gen(__g);"},
{"lineNum":" 5267","line":"            const result_type __v = __gen(__g);"},
{"lineNum":" 5268","line":"            const result_type __w = __u * (1 - __u);"},
{"lineNum":" 5269","line":"            if (__w != 0)"},
{"lineNum":" 5270","line":"            {"},
{"lineNum":" 5271","line":"                const result_type __y = _VSTD::sqrt(__c / __w) *"},
{"lineNum":" 5272","line":"                                        (__u - result_type(0.5));"},
{"lineNum":" 5273","line":"                __x = __b + __y;"},
{"lineNum":" 5274","line":"                if (__x >= 0)"},
{"lineNum":" 5275","line":"                {"},
{"lineNum":" 5276","line":"                    const result_type __z = 64 * __w * __w * __w * __v * __v;"},
{"lineNum":" 5277","line":"                    if (__z <= 1 - 2 * __y * __y / __x)"},
{"lineNum":" 5278","line":"                        break;"},
{"lineNum":" 5279","line":"                    if (_VSTD::log(__z) <= 2 * (__b * _VSTD::log(__x / __b) - __y))"},
{"lineNum":" 5280","line":"                        break;"},
{"lineNum":" 5281","line":"                }"},
{"lineNum":" 5282","line":"            }"},
{"lineNum":" 5283","line":"        }"},
{"lineNum":" 5284","line":"    }"},
{"lineNum":" 5285","line":"    else  // __a < 1"},
{"lineNum":" 5286","line":"    {"},
{"lineNum":" 5287","line":"        while (true)"},
{"lineNum":" 5288","line":"        {"},
{"lineNum":" 5289","line":"            const result_type __u = __gen(__g);"},
{"lineNum":" 5290","line":"            const result_type __es = __egen(__g);"},
{"lineNum":" 5291","line":"            if (__u <= 1 - __a)"},
{"lineNum":" 5292","line":"            {"},
{"lineNum":" 5293","line":"                __x = _VSTD::pow(__u, 1 / __a);"},
{"lineNum":" 5294","line":"                if (__x <= __es)"},
{"lineNum":" 5295","line":"                    break;"},
{"lineNum":" 5296","line":"            }"},
{"lineNum":" 5297","line":"            else"},
{"lineNum":" 5298","line":"            {"},
{"lineNum":" 5299","line":"                const result_type __e = -_VSTD::log((1-__u)/__a);"},
{"lineNum":" 5300","line":"                __x = _VSTD::pow(1 - __a + __a * __e, 1 / __a);"},
{"lineNum":" 5301","line":"                if (__x <= __e + __es)"},
{"lineNum":" 5302","line":"                    break;"},
{"lineNum":" 5303","line":"            }"},
{"lineNum":" 5304","line":"        }"},
{"lineNum":" 5305","line":"    }"},
{"lineNum":" 5306","line":"    return __x * __p.beta();"},
{"lineNum":" 5307","line":"}"},
{"lineNum":" 5308","line":""},
{"lineNum":" 5309","line":"template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 5310","line":"basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 5311","line":"operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 5312","line":"           const gamma_distribution<_RT>& __x)"},
{"lineNum":" 5313","line":"{"},
{"lineNum":" 5314","line":"    __save_flags<_CharT, _Traits> __lx(__os);"},
{"lineNum":" 5315","line":"    typedef basic_ostream<_CharT, _Traits> _OStream;"},
{"lineNum":" 5316","line":"    __os.flags(_OStream::dec | _OStream::left | _OStream::fixed |"},
{"lineNum":" 5317","line":"               _OStream::scientific);"},
{"lineNum":" 5318","line":"    _CharT __sp = __os.widen(\' \');"},
{"lineNum":" 5319","line":"    __os.fill(__sp);"},
{"lineNum":" 5320","line":"    __os << __x.alpha() << __sp << __x.beta();"},
{"lineNum":" 5321","line":"    return __os;"},
{"lineNum":" 5322","line":"}"},
{"lineNum":" 5323","line":""},
{"lineNum":" 5324","line":"template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 5325","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 5326","line":"operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 5327","line":"           gamma_distribution<_RT>& __x)"},
{"lineNum":" 5328","line":"{"},
{"lineNum":" 5329","line":"    typedef gamma_distribution<_RT> _Eng;"},
{"lineNum":" 5330","line":"    typedef typename _Eng::result_type result_type;"},
{"lineNum":" 5331","line":"    typedef typename _Eng::param_type param_type;"},
{"lineNum":" 5332","line":"    __save_flags<_CharT, _Traits> __lx(__is);"},
{"lineNum":" 5333","line":"    typedef basic_istream<_CharT, _Traits> _Istream;"},
{"lineNum":" 5334","line":"    __is.flags(_Istream::dec | _Istream::skipws);"},
{"lineNum":" 5335","line":"    result_type __alpha;"},
{"lineNum":" 5336","line":"    result_type __beta;"},
{"lineNum":" 5337","line":"    __is >> __alpha >> __beta;"},
{"lineNum":" 5338","line":"    if (!__is.fail())"},
{"lineNum":" 5339","line":"        __x.param(param_type(__alpha, __beta));"},
{"lineNum":" 5340","line":"    return __is;"},
{"lineNum":" 5341","line":"}"},
{"lineNum":" 5342","line":""},
{"lineNum":" 5343","line":"// negative_binomial_distribution"},
{"lineNum":" 5344","line":""},
{"lineNum":" 5345","line":"template<class _IntType = int>"},
{"lineNum":" 5346","line":"class _LIBCPP_TEMPLATE_VIS negative_binomial_distribution"},
{"lineNum":" 5347","line":"{"},
{"lineNum":" 5348","line":"public:"},
{"lineNum":" 5349","line":"    // types"},
{"lineNum":" 5350","line":"    typedef _IntType result_type;"},
{"lineNum":" 5351","line":""},
{"lineNum":" 5352","line":"    class _LIBCPP_TEMPLATE_VIS param_type"},
{"lineNum":" 5353","line":"    {"},
{"lineNum":" 5354","line":"        result_type __k_;"},
{"lineNum":" 5355","line":"        double __p_;"},
{"lineNum":" 5356","line":"    public:"},
{"lineNum":" 5357","line":"        typedef negative_binomial_distribution distribution_type;"},
{"lineNum":" 5358","line":""},
{"lineNum":" 5359","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5360","line":"        explicit param_type(result_type __k = 1, double __p = 0.5)"},
{"lineNum":" 5361","line":"            : __k_(__k), __p_(__p) {}"},
{"lineNum":" 5362","line":""},
{"lineNum":" 5363","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5364","line":"        result_type k() const {return __k_;}"},
{"lineNum":" 5365","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5366","line":"        double p() const {return __p_;}"},
{"lineNum":" 5367","line":""},
{"lineNum":" 5368","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5369","line":"            bool operator==(const param_type& __x, const param_type& __y)"},
{"lineNum":" 5370","line":"            {return __x.__k_ == __y.__k_ && __x.__p_ == __y.__p_;}"},
{"lineNum":" 5371","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5372","line":"            bool operator!=(const param_type& __x, const param_type& __y)"},
{"lineNum":" 5373","line":"            {return !(__x == __y);}"},
{"lineNum":" 5374","line":"    };"},
{"lineNum":" 5375","line":""},
{"lineNum":" 5376","line":"private:"},
{"lineNum":" 5377","line":"    param_type __p_;"},
{"lineNum":" 5378","line":""},
{"lineNum":" 5379","line":"public:"},
{"lineNum":" 5380","line":"    // constructor and reset functions"},
{"lineNum":" 5381","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 5382","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5383","line":"    negative_binomial_distribution() : negative_binomial_distribution(1) {}"},
{"lineNum":" 5384","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5385","line":"    explicit negative_binomial_distribution(result_type __k, double __p = 0.5)"},
{"lineNum":" 5386","line":"        : __p_(__k, __p) {}"},
{"lineNum":" 5387","line":"#else"},
{"lineNum":" 5388","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5389","line":"    explicit negative_binomial_distribution(result_type __k = 1,"},
{"lineNum":" 5390","line":"                                            double __p = 0.5)"},
{"lineNum":" 5391","line":"        : __p_(__k, __p) {}"},
{"lineNum":" 5392","line":"#endif"},
{"lineNum":" 5393","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5394","line":"    explicit negative_binomial_distribution(const param_type& __p) : __p_(__p) {}"},
{"lineNum":" 5395","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5396","line":"    void reset() {}"},
{"lineNum":" 5397","line":""},
{"lineNum":" 5398","line":"    // generating functions"},
{"lineNum":" 5399","line":"    template<class _URNG>"},
{"lineNum":" 5400","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5401","line":"        result_type operator()(_URNG& __g)"},
{"lineNum":" 5402","line":"        {return (*this)(__g, __p_);}"},
{"lineNum":" 5403","line":"    template<class _URNG> result_type operator()(_URNG& __g, const param_type& __p);"},
{"lineNum":" 5404","line":""},
{"lineNum":" 5405","line":"    // property functions"},
{"lineNum":" 5406","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5407","line":"    result_type k() const {return __p_.k();}"},
{"lineNum":" 5408","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5409","line":"    double p() const {return __p_.p();}"},
{"lineNum":" 5410","line":""},
{"lineNum":" 5411","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5412","line":"    param_type param() const {return __p_;}"},
{"lineNum":" 5413","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5414","line":"    void param(const param_type& __p) {__p_ = __p;}"},
{"lineNum":" 5415","line":""},
{"lineNum":" 5416","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5417","line":"    result_type min() const {return 0;}"},
{"lineNum":" 5418","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5419","line":"    result_type max() const {return numeric_limits<result_type>::max();}"},
{"lineNum":" 5420","line":""},
{"lineNum":" 5421","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5422","line":"        bool operator==(const negative_binomial_distribution& __x,"},
{"lineNum":" 5423","line":"                        const negative_binomial_distribution& __y)"},
{"lineNum":" 5424","line":"        {return __x.__p_ == __y.__p_;}"},
{"lineNum":" 5425","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5426","line":"        bool operator!=(const negative_binomial_distribution& __x,"},
{"lineNum":" 5427","line":"                        const negative_binomial_distribution& __y)"},
{"lineNum":" 5428","line":"        {return !(__x == __y);}"},
{"lineNum":" 5429","line":"};"},
{"lineNum":" 5430","line":""},
{"lineNum":" 5431","line":"template <class _IntType>"},
{"lineNum":" 5432","line":"template<class _URNG>"},
{"lineNum":" 5433","line":"_IntType"},
{"lineNum":" 5434","line":"negative_binomial_distribution<_IntType>::operator()(_URNG& __urng, const param_type& __pr)"},
{"lineNum":" 5435","line":"{"},
{"lineNum":" 5436","line":"    result_type __k = __pr.k();"},
{"lineNum":" 5437","line":"    double __p = __pr.p();"},
{"lineNum":" 5438","line":"    if (__k <= 21 * __p)"},
{"lineNum":" 5439","line":"    {"},
{"lineNum":" 5440","line":"        bernoulli_distribution __gen(__p);"},
{"lineNum":" 5441","line":"        result_type __f = 0;"},
{"lineNum":" 5442","line":"        result_type __s = 0;"},
{"lineNum":" 5443","line":"        while (__s < __k)"},
{"lineNum":" 5444","line":"        {"},
{"lineNum":" 5445","line":"            if (__gen(__urng))"},
{"lineNum":" 5446","line":"                ++__s;"},
{"lineNum":" 5447","line":"            else"},
{"lineNum":" 5448","line":"                ++__f;"},
{"lineNum":" 5449","line":"        }"},
{"lineNum":" 5450","line":"        return __f;"},
{"lineNum":" 5451","line":"    }"},
{"lineNum":" 5452","line":"    return poisson_distribution<result_type>(gamma_distribution<double>"},
{"lineNum":" 5453","line":"                                            (__k, (1-__p)/__p)(__urng))(__urng);"},
{"lineNum":" 5454","line":"}"},
{"lineNum":" 5455","line":""},
{"lineNum":" 5456","line":"template <class _CharT, class _Traits, class _IntType>"},
{"lineNum":" 5457","line":"basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 5458","line":"operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 5459","line":"           const negative_binomial_distribution<_IntType>& __x)"},
{"lineNum":" 5460","line":"{"},
{"lineNum":" 5461","line":"    __save_flags<_CharT, _Traits> __lx(__os);"},
{"lineNum":" 5462","line":"    typedef basic_ostream<_CharT, _Traits> _OStream;"},
{"lineNum":" 5463","line":"    __os.flags(_OStream::dec | _OStream::left | _OStream::fixed |"},
{"lineNum":" 5464","line":"               _OStream::scientific);"},
{"lineNum":" 5465","line":"    _CharT __sp = __os.widen(\' \');"},
{"lineNum":" 5466","line":"    __os.fill(__sp);"},
{"lineNum":" 5467","line":"    return __os << __x.k() << __sp << __x.p();"},
{"lineNum":" 5468","line":"}"},
{"lineNum":" 5469","line":""},
{"lineNum":" 5470","line":"template <class _CharT, class _Traits, class _IntType>"},
{"lineNum":" 5471","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 5472","line":"operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 5473","line":"           negative_binomial_distribution<_IntType>& __x)"},
{"lineNum":" 5474","line":"{"},
{"lineNum":" 5475","line":"    typedef negative_binomial_distribution<_IntType> _Eng;"},
{"lineNum":" 5476","line":"    typedef typename _Eng::result_type result_type;"},
{"lineNum":" 5477","line":"    typedef typename _Eng::param_type param_type;"},
{"lineNum":" 5478","line":"    __save_flags<_CharT, _Traits> __lx(__is);"},
{"lineNum":" 5479","line":"    typedef basic_istream<_CharT, _Traits> _Istream;"},
{"lineNum":" 5480","line":"    __is.flags(_Istream::dec | _Istream::skipws);"},
{"lineNum":" 5481","line":"    result_type __k;"},
{"lineNum":" 5482","line":"    double __p;"},
{"lineNum":" 5483","line":"    __is >> __k >> __p;"},
{"lineNum":" 5484","line":"    if (!__is.fail())"},
{"lineNum":" 5485","line":"        __x.param(param_type(__k, __p));"},
{"lineNum":" 5486","line":"    return __is;"},
{"lineNum":" 5487","line":"}"},
{"lineNum":" 5488","line":""},
{"lineNum":" 5489","line":"// geometric_distribution"},
{"lineNum":" 5490","line":""},
{"lineNum":" 5491","line":"template<class _IntType = int>"},
{"lineNum":" 5492","line":"class _LIBCPP_TEMPLATE_VIS geometric_distribution"},
{"lineNum":" 5493","line":"{"},
{"lineNum":" 5494","line":"public:"},
{"lineNum":" 5495","line":"    // types"},
{"lineNum":" 5496","line":"    typedef _IntType result_type;"},
{"lineNum":" 5497","line":""},
{"lineNum":" 5498","line":"    class _LIBCPP_TEMPLATE_VIS param_type"},
{"lineNum":" 5499","line":"    {"},
{"lineNum":" 5500","line":"        double __p_;"},
{"lineNum":" 5501","line":"    public:"},
{"lineNum":" 5502","line":"        typedef geometric_distribution distribution_type;"},
{"lineNum":" 5503","line":""},
{"lineNum":" 5504","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5505","line":"        explicit param_type(double __p = 0.5) : __p_(__p) {}"},
{"lineNum":" 5506","line":""},
{"lineNum":" 5507","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5508","line":"        double p() const {return __p_;}"},
{"lineNum":" 5509","line":""},
{"lineNum":" 5510","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5511","line":"            bool operator==(const param_type& __x, const param_type& __y)"},
{"lineNum":" 5512","line":"            {return __x.__p_ == __y.__p_;}"},
{"lineNum":" 5513","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5514","line":"            bool operator!=(const param_type& __x, const param_type& __y)"},
{"lineNum":" 5515","line":"            {return !(__x == __y);}"},
{"lineNum":" 5516","line":"    };"},
{"lineNum":" 5517","line":""},
{"lineNum":" 5518","line":"private:"},
{"lineNum":" 5519","line":"    param_type __p_;"},
{"lineNum":" 5520","line":""},
{"lineNum":" 5521","line":"public:"},
{"lineNum":" 5522","line":"    // constructors and reset functions"},
{"lineNum":" 5523","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 5524","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5525","line":"    geometric_distribution() : geometric_distribution(0.5) {}"},
{"lineNum":" 5526","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5527","line":"    explicit geometric_distribution(double __p)"},
{"lineNum":" 5528","line":"        : __p_(__p) {}"},
{"lineNum":" 5529","line":"#else"},
{"lineNum":" 5530","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5531","line":"    explicit geometric_distribution(double __p = 0.5)"},
{"lineNum":" 5532","line":"        : __p_(__p) {}"},
{"lineNum":" 5533","line":"#endif"},
{"lineNum":" 5534","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5535","line":"    explicit geometric_distribution(const param_type& __p) : __p_(__p) {}"},
{"lineNum":" 5536","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5537","line":"    void reset() {}"},
{"lineNum":" 5538","line":""},
{"lineNum":" 5539","line":"    // generating functions"},
{"lineNum":" 5540","line":"    template<class _URNG>"},
{"lineNum":" 5541","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5542","line":"        result_type operator()(_URNG& __g)"},
{"lineNum":" 5543","line":"        {return (*this)(__g, __p_);}"},
{"lineNum":" 5544","line":"    template<class _URNG>"},
{"lineNum":" 5545","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5546","line":"        result_type operator()(_URNG& __g, const param_type& __p)"},
{"lineNum":" 5547","line":"        {return negative_binomial_distribution<result_type>(1, __p.p())(__g);}"},
{"lineNum":" 5548","line":""},
{"lineNum":" 5549","line":"    // property functions"},
{"lineNum":" 5550","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5551","line":"    double p() const {return __p_.p();}"},
{"lineNum":" 5552","line":""},
{"lineNum":" 5553","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5554","line":"    param_type param() const {return __p_;}"},
{"lineNum":" 5555","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5556","line":"    void param(const param_type& __p) {__p_ = __p;}"},
{"lineNum":" 5557","line":""},
{"lineNum":" 5558","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5559","line":"    result_type min() const {return 0;}"},
{"lineNum":" 5560","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5561","line":"    result_type max() const {return numeric_limits<result_type>::max();}"},
{"lineNum":" 5562","line":""},
{"lineNum":" 5563","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5564","line":"        bool operator==(const geometric_distribution& __x,"},
{"lineNum":" 5565","line":"                        const geometric_distribution& __y)"},
{"lineNum":" 5566","line":"        {return __x.__p_ == __y.__p_;}"},
{"lineNum":" 5567","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5568","line":"        bool operator!=(const geometric_distribution& __x,"},
{"lineNum":" 5569","line":"                        const geometric_distribution& __y)"},
{"lineNum":" 5570","line":"        {return !(__x == __y);}"},
{"lineNum":" 5571","line":"};"},
{"lineNum":" 5572","line":""},
{"lineNum":" 5573","line":"template <class _CharT, class _Traits, class _IntType>"},
{"lineNum":" 5574","line":"basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 5575","line":"operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 5576","line":"           const geometric_distribution<_IntType>& __x)"},
{"lineNum":" 5577","line":"{"},
{"lineNum":" 5578","line":"    __save_flags<_CharT, _Traits> __lx(__os);"},
{"lineNum":" 5579","line":"    typedef basic_ostream<_CharT, _Traits> _OStream;"},
{"lineNum":" 5580","line":"    __os.flags(_OStream::dec | _OStream::left | _OStream::fixed |"},
{"lineNum":" 5581","line":"               _OStream::scientific);"},
{"lineNum":" 5582","line":"    return __os << __x.p();"},
{"lineNum":" 5583","line":"}"},
{"lineNum":" 5584","line":""},
{"lineNum":" 5585","line":"template <class _CharT, class _Traits, class _IntType>"},
{"lineNum":" 5586","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 5587","line":"operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 5588","line":"           geometric_distribution<_IntType>& __x)"},
{"lineNum":" 5589","line":"{"},
{"lineNum":" 5590","line":"    typedef geometric_distribution<_IntType> _Eng;"},
{"lineNum":" 5591","line":"    typedef typename _Eng::param_type param_type;"},
{"lineNum":" 5592","line":"    __save_flags<_CharT, _Traits> __lx(__is);"},
{"lineNum":" 5593","line":"    typedef basic_istream<_CharT, _Traits> _Istream;"},
{"lineNum":" 5594","line":"    __is.flags(_Istream::dec | _Istream::skipws);"},
{"lineNum":" 5595","line":"    double __p;"},
{"lineNum":" 5596","line":"    __is >> __p;"},
{"lineNum":" 5597","line":"    if (!__is.fail())"},
{"lineNum":" 5598","line":"        __x.param(param_type(__p));"},
{"lineNum":" 5599","line":"    return __is;"},
{"lineNum":" 5600","line":"}"},
{"lineNum":" 5601","line":""},
{"lineNum":" 5602","line":"// chi_squared_distribution"},
{"lineNum":" 5603","line":""},
{"lineNum":" 5604","line":"template<class _RealType = double>"},
{"lineNum":" 5605","line":"class _LIBCPP_TEMPLATE_VIS chi_squared_distribution"},
{"lineNum":" 5606","line":"{"},
{"lineNum":" 5607","line":"public:"},
{"lineNum":" 5608","line":"    // types"},
{"lineNum":" 5609","line":"    typedef _RealType result_type;"},
{"lineNum":" 5610","line":""},
{"lineNum":" 5611","line":"    class _LIBCPP_TEMPLATE_VIS param_type"},
{"lineNum":" 5612","line":"    {"},
{"lineNum":" 5613","line":"        result_type __n_;"},
{"lineNum":" 5614","line":"    public:"},
{"lineNum":" 5615","line":"        typedef chi_squared_distribution distribution_type;"},
{"lineNum":" 5616","line":""},
{"lineNum":" 5617","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5618","line":"        explicit param_type(result_type __n = 1) : __n_(__n) {}"},
{"lineNum":" 5619","line":""},
{"lineNum":" 5620","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5621","line":"        result_type n() const {return __n_;}"},
{"lineNum":" 5622","line":""},
{"lineNum":" 5623","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5624","line":"            bool operator==(const param_type& __x, const param_type& __y)"},
{"lineNum":" 5625","line":"            {return __x.__n_ == __y.__n_;}"},
{"lineNum":" 5626","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5627","line":"            bool operator!=(const param_type& __x, const param_type& __y)"},
{"lineNum":" 5628","line":"            {return !(__x == __y);}"},
{"lineNum":" 5629","line":"    };"},
{"lineNum":" 5630","line":""},
{"lineNum":" 5631","line":"private:"},
{"lineNum":" 5632","line":"    param_type __p_;"},
{"lineNum":" 5633","line":""},
{"lineNum":" 5634","line":"public:"},
{"lineNum":" 5635","line":"    // constructor and reset functions"},
{"lineNum":" 5636","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 5637","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5638","line":"    chi_squared_distribution() : chi_squared_distribution(1) {}"},
{"lineNum":" 5639","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5640","line":"    explicit chi_squared_distribution(result_type __n)"},
{"lineNum":" 5641","line":"        : __p_(param_type(__n)) {}"},
{"lineNum":" 5642","line":"#else"},
{"lineNum":" 5643","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5644","line":"    explicit chi_squared_distribution(result_type __n = 1)"},
{"lineNum":" 5645","line":"        : __p_(param_type(__n)) {}"},
{"lineNum":" 5646","line":"#endif"},
{"lineNum":" 5647","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5648","line":"    explicit chi_squared_distribution(const param_type& __p)"},
{"lineNum":" 5649","line":"        : __p_(__p) {}"},
{"lineNum":" 5650","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5651","line":"    void reset() {}"},
{"lineNum":" 5652","line":""},
{"lineNum":" 5653","line":"    // generating functions"},
{"lineNum":" 5654","line":"    template<class _URNG>"},
{"lineNum":" 5655","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5656","line":"        result_type operator()(_URNG& __g)"},
{"lineNum":" 5657","line":"        {return (*this)(__g, __p_);}"},
{"lineNum":" 5658","line":"    template<class _URNG>"},
{"lineNum":" 5659","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5660","line":"        result_type operator()(_URNG& __g, const param_type& __p)"},
{"lineNum":" 5661","line":"        {return gamma_distribution<result_type>(__p.n() / 2, 2)(__g);}"},
{"lineNum":" 5662","line":""},
{"lineNum":" 5663","line":"    // property functions"},
{"lineNum":" 5664","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5665","line":"    result_type n() const {return __p_.n();}"},
{"lineNum":" 5666","line":""},
{"lineNum":" 5667","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5668","line":"    param_type param() const {return __p_;}"},
{"lineNum":" 5669","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5670","line":"    void param(const param_type& __p) {__p_ = __p;}"},
{"lineNum":" 5671","line":""},
{"lineNum":" 5672","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5673","line":"    result_type min() const {return 0;}"},
{"lineNum":" 5674","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5675","line":"    result_type max() const {return numeric_limits<result_type>::infinity();}"},
{"lineNum":" 5676","line":""},
{"lineNum":" 5677","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5678","line":"        bool operator==(const chi_squared_distribution& __x,"},
{"lineNum":" 5679","line":"                        const chi_squared_distribution& __y)"},
{"lineNum":" 5680","line":"        {return __x.__p_ == __y.__p_;}"},
{"lineNum":" 5681","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5682","line":"        bool operator!=(const chi_squared_distribution& __x,"},
{"lineNum":" 5683","line":"                        const chi_squared_distribution& __y)"},
{"lineNum":" 5684","line":"        {return !(__x == __y);}"},
{"lineNum":" 5685","line":"};"},
{"lineNum":" 5686","line":""},
{"lineNum":" 5687","line":"template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 5688","line":"basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 5689","line":"operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 5690","line":"           const chi_squared_distribution<_RT>& __x)"},
{"lineNum":" 5691","line":"{"},
{"lineNum":" 5692","line":"    __save_flags<_CharT, _Traits> __lx(__os);"},
{"lineNum":" 5693","line":"    typedef basic_ostream<_CharT, _Traits> _OStream;"},
{"lineNum":" 5694","line":"    __os.flags(_OStream::dec | _OStream::left | _OStream::fixed |"},
{"lineNum":" 5695","line":"               _OStream::scientific);"},
{"lineNum":" 5696","line":"    __os << __x.n();"},
{"lineNum":" 5697","line":"    return __os;"},
{"lineNum":" 5698","line":"}"},
{"lineNum":" 5699","line":""},
{"lineNum":" 5700","line":"template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 5701","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 5702","line":"operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 5703","line":"           chi_squared_distribution<_RT>& __x)"},
{"lineNum":" 5704","line":"{"},
{"lineNum":" 5705","line":"    typedef chi_squared_distribution<_RT> _Eng;"},
{"lineNum":" 5706","line":"    typedef typename _Eng::result_type result_type;"},
{"lineNum":" 5707","line":"    typedef typename _Eng::param_type param_type;"},
{"lineNum":" 5708","line":"    __save_flags<_CharT, _Traits> __lx(__is);"},
{"lineNum":" 5709","line":"    typedef basic_istream<_CharT, _Traits> _Istream;"},
{"lineNum":" 5710","line":"    __is.flags(_Istream::dec | _Istream::skipws);"},
{"lineNum":" 5711","line":"    result_type __n;"},
{"lineNum":" 5712","line":"    __is >> __n;"},
{"lineNum":" 5713","line":"    if (!__is.fail())"},
{"lineNum":" 5714","line":"        __x.param(param_type(__n));"},
{"lineNum":" 5715","line":"    return __is;"},
{"lineNum":" 5716","line":"}"},
{"lineNum":" 5717","line":""},
{"lineNum":" 5718","line":"// cauchy_distribution"},
{"lineNum":" 5719","line":""},
{"lineNum":" 5720","line":"template<class _RealType = double>"},
{"lineNum":" 5721","line":"class _LIBCPP_TEMPLATE_VIS cauchy_distribution"},
{"lineNum":" 5722","line":"{"},
{"lineNum":" 5723","line":"public:"},
{"lineNum":" 5724","line":"    // types"},
{"lineNum":" 5725","line":"    typedef _RealType result_type;"},
{"lineNum":" 5726","line":""},
{"lineNum":" 5727","line":"    class _LIBCPP_TEMPLATE_VIS param_type"},
{"lineNum":" 5728","line":"    {"},
{"lineNum":" 5729","line":"        result_type __a_;"},
{"lineNum":" 5730","line":"        result_type __b_;"},
{"lineNum":" 5731","line":"    public:"},
{"lineNum":" 5732","line":"        typedef cauchy_distribution distribution_type;"},
{"lineNum":" 5733","line":""},
{"lineNum":" 5734","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5735","line":"        explicit param_type(result_type __a = 0, result_type __b = 1)"},
{"lineNum":" 5736","line":"            : __a_(__a), __b_(__b) {}"},
{"lineNum":" 5737","line":""},
{"lineNum":" 5738","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5739","line":"        result_type a() const {return __a_;}"},
{"lineNum":" 5740","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5741","line":"        result_type b() const {return __b_;}"},
{"lineNum":" 5742","line":""},
{"lineNum":" 5743","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5744","line":"            bool operator==(const param_type& __x, const param_type& __y)"},
{"lineNum":" 5745","line":"            {return __x.__a_ == __y.__a_ && __x.__b_ == __y.__b_;}"},
{"lineNum":" 5746","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5747","line":"            bool operator!=(const param_type& __x, const param_type& __y)"},
{"lineNum":" 5748","line":"            {return !(__x == __y);}"},
{"lineNum":" 5749","line":"    };"},
{"lineNum":" 5750","line":""},
{"lineNum":" 5751","line":"private:"},
{"lineNum":" 5752","line":"    param_type __p_;"},
{"lineNum":" 5753","line":""},
{"lineNum":" 5754","line":"public:"},
{"lineNum":" 5755","line":"    // constructor and reset functions"},
{"lineNum":" 5756","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 5757","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5758","line":"    cauchy_distribution() : cauchy_distribution(0) {}"},
{"lineNum":" 5759","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5760","line":"    explicit cauchy_distribution(result_type __a, result_type __b = 1)"},
{"lineNum":" 5761","line":"        : __p_(param_type(__a, __b)) {}"},
{"lineNum":" 5762","line":"#else"},
{"lineNum":" 5763","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5764","line":"    explicit cauchy_distribution(result_type __a = 0, result_type __b = 1)"},
{"lineNum":" 5765","line":"        : __p_(param_type(__a, __b)) {}"},
{"lineNum":" 5766","line":"#endif"},
{"lineNum":" 5767","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5768","line":"    explicit cauchy_distribution(const param_type& __p)"},
{"lineNum":" 5769","line":"        : __p_(__p) {}"},
{"lineNum":" 5770","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5771","line":"    void reset() {}"},
{"lineNum":" 5772","line":""},
{"lineNum":" 5773","line":"    // generating functions"},
{"lineNum":" 5774","line":"    template<class _URNG>"},
{"lineNum":" 5775","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5776","line":"        result_type operator()(_URNG& __g)"},
{"lineNum":" 5777","line":"        {return (*this)(__g, __p_);}"},
{"lineNum":" 5778","line":"    template<class _URNG> _LIBCPP_INLINE_VISIBILITY result_type operator()(_URNG& __g, const param_type& __p);"},
{"lineNum":" 5779","line":""},
{"lineNum":" 5780","line":"    // property functions"},
{"lineNum":" 5781","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5782","line":"    result_type a() const {return __p_.a();}"},
{"lineNum":" 5783","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5784","line":"    result_type b() const {return __p_.b();}"},
{"lineNum":" 5785","line":""},
{"lineNum":" 5786","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5787","line":"    param_type param() const {return __p_;}"},
{"lineNum":" 5788","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5789","line":"    void param(const param_type& __p) {__p_ = __p;}"},
{"lineNum":" 5790","line":""},
{"lineNum":" 5791","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5792","line":"    result_type min() const {return -numeric_limits<result_type>::infinity();}"},
{"lineNum":" 5793","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5794","line":"    result_type max() const {return numeric_limits<result_type>::infinity();}"},
{"lineNum":" 5795","line":""},
{"lineNum":" 5796","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5797","line":"        bool operator==(const cauchy_distribution& __x,"},
{"lineNum":" 5798","line":"                        const cauchy_distribution& __y)"},
{"lineNum":" 5799","line":"        {return __x.__p_ == __y.__p_;}"},
{"lineNum":" 5800","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5801","line":"        bool operator!=(const cauchy_distribution& __x,"},
{"lineNum":" 5802","line":"                        const cauchy_distribution& __y)"},
{"lineNum":" 5803","line":"        {return !(__x == __y);}"},
{"lineNum":" 5804","line":"};"},
{"lineNum":" 5805","line":""},
{"lineNum":" 5806","line":"template <class _RealType>"},
{"lineNum":" 5807","line":"template<class _URNG>"},
{"lineNum":" 5808","line":"inline"},
{"lineNum":" 5809","line":"_RealType"},
{"lineNum":" 5810","line":"cauchy_distribution<_RealType>::operator()(_URNG& __g, const param_type& __p)"},
{"lineNum":" 5811","line":"{"},
{"lineNum":" 5812","line":"    uniform_real_distribution<result_type> __gen;"},
{"lineNum":" 5813","line":"    // purposefully let tan arg get as close to pi/2 as it wants, tan will return a finite"},
{"lineNum":" 5814","line":"    return __p.a() + __p.b() * _VSTD::tan(3.1415926535897932384626433832795 * __gen(__g));"},
{"lineNum":" 5815","line":"}"},
{"lineNum":" 5816","line":""},
{"lineNum":" 5817","line":"template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 5818","line":"basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 5819","line":"operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 5820","line":"           const cauchy_distribution<_RT>& __x)"},
{"lineNum":" 5821","line":"{"},
{"lineNum":" 5822","line":"    __save_flags<_CharT, _Traits> __lx(__os);"},
{"lineNum":" 5823","line":"    typedef basic_ostream<_CharT, _Traits> _OStream;"},
{"lineNum":" 5824","line":"    __os.flags(_OStream::dec | _OStream::left | _OStream::fixed |"},
{"lineNum":" 5825","line":"               _OStream::scientific);"},
{"lineNum":" 5826","line":"    _CharT __sp = __os.widen(\' \');"},
{"lineNum":" 5827","line":"    __os.fill(__sp);"},
{"lineNum":" 5828","line":"    __os << __x.a() << __sp << __x.b();"},
{"lineNum":" 5829","line":"    return __os;"},
{"lineNum":" 5830","line":"}"},
{"lineNum":" 5831","line":""},
{"lineNum":" 5832","line":"template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 5833","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 5834","line":"operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 5835","line":"           cauchy_distribution<_RT>& __x)"},
{"lineNum":" 5836","line":"{"},
{"lineNum":" 5837","line":"    typedef cauchy_distribution<_RT> _Eng;"},
{"lineNum":" 5838","line":"    typedef typename _Eng::result_type result_type;"},
{"lineNum":" 5839","line":"    typedef typename _Eng::param_type param_type;"},
{"lineNum":" 5840","line":"    __save_flags<_CharT, _Traits> __lx(__is);"},
{"lineNum":" 5841","line":"    typedef basic_istream<_CharT, _Traits> _Istream;"},
{"lineNum":" 5842","line":"    __is.flags(_Istream::dec | _Istream::skipws);"},
{"lineNum":" 5843","line":"    result_type __a;"},
{"lineNum":" 5844","line":"    result_type __b;"},
{"lineNum":" 5845","line":"    __is >> __a >> __b;"},
{"lineNum":" 5846","line":"    if (!__is.fail())"},
{"lineNum":" 5847","line":"        __x.param(param_type(__a, __b));"},
{"lineNum":" 5848","line":"    return __is;"},
{"lineNum":" 5849","line":"}"},
{"lineNum":" 5850","line":""},
{"lineNum":" 5851","line":"// fisher_f_distribution"},
{"lineNum":" 5852","line":""},
{"lineNum":" 5853","line":"template<class _RealType = double>"},
{"lineNum":" 5854","line":"class _LIBCPP_TEMPLATE_VIS fisher_f_distribution"},
{"lineNum":" 5855","line":"{"},
{"lineNum":" 5856","line":"public:"},
{"lineNum":" 5857","line":"    // types"},
{"lineNum":" 5858","line":"    typedef _RealType result_type;"},
{"lineNum":" 5859","line":""},
{"lineNum":" 5860","line":"    class _LIBCPP_TEMPLATE_VIS param_type"},
{"lineNum":" 5861","line":"    {"},
{"lineNum":" 5862","line":"        result_type __m_;"},
{"lineNum":" 5863","line":"        result_type __n_;"},
{"lineNum":" 5864","line":"    public:"},
{"lineNum":" 5865","line":"        typedef fisher_f_distribution distribution_type;"},
{"lineNum":" 5866","line":""},
{"lineNum":" 5867","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5868","line":"        explicit param_type(result_type __m = 1, result_type __n = 1)"},
{"lineNum":" 5869","line":"            : __m_(__m), __n_(__n) {}"},
{"lineNum":" 5870","line":""},
{"lineNum":" 5871","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5872","line":"        result_type m() const {return __m_;}"},
{"lineNum":" 5873","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5874","line":"        result_type n() const {return __n_;}"},
{"lineNum":" 5875","line":""},
{"lineNum":" 5876","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5877","line":"            bool operator==(const param_type& __x, const param_type& __y)"},
{"lineNum":" 5878","line":"            {return __x.__m_ == __y.__m_ && __x.__n_ == __y.__n_;}"},
{"lineNum":" 5879","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5880","line":"            bool operator!=(const param_type& __x, const param_type& __y)"},
{"lineNum":" 5881","line":"            {return !(__x == __y);}"},
{"lineNum":" 5882","line":"    };"},
{"lineNum":" 5883","line":""},
{"lineNum":" 5884","line":"private:"},
{"lineNum":" 5885","line":"    param_type __p_;"},
{"lineNum":" 5886","line":""},
{"lineNum":" 5887","line":"public:"},
{"lineNum":" 5888","line":"    // constructor and reset functions"},
{"lineNum":" 5889","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 5890","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5891","line":"    fisher_f_distribution() : fisher_f_distribution(1) {}"},
{"lineNum":" 5892","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5893","line":"    explicit fisher_f_distribution(result_type __m, result_type __n = 1)"},
{"lineNum":" 5894","line":"        : __p_(param_type(__m, __n)) {}"},
{"lineNum":" 5895","line":"#else"},
{"lineNum":" 5896","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5897","line":"    explicit fisher_f_distribution(result_type __m = 1, result_type __n = 1)"},
{"lineNum":" 5898","line":"        : __p_(param_type(__m, __n)) {}"},
{"lineNum":" 5899","line":"#endif"},
{"lineNum":" 5900","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5901","line":"    explicit fisher_f_distribution(const param_type& __p)"},
{"lineNum":" 5902","line":"        : __p_(__p) {}"},
{"lineNum":" 5903","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5904","line":"    void reset() {}"},
{"lineNum":" 5905","line":""},
{"lineNum":" 5906","line":"    // generating functions"},
{"lineNum":" 5907","line":"    template<class _URNG>"},
{"lineNum":" 5908","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5909","line":"        result_type operator()(_URNG& __g)"},
{"lineNum":" 5910","line":"        {return (*this)(__g, __p_);}"},
{"lineNum":" 5911","line":"    template<class _URNG> result_type operator()(_URNG& __g, const param_type& __p);"},
{"lineNum":" 5912","line":""},
{"lineNum":" 5913","line":"    // property functions"},
{"lineNum":" 5914","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5915","line":"    result_type m() const {return __p_.m();}"},
{"lineNum":" 5916","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5917","line":"    result_type n() const {return __p_.n();}"},
{"lineNum":" 5918","line":""},
{"lineNum":" 5919","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5920","line":"    param_type param() const {return __p_;}"},
{"lineNum":" 5921","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5922","line":"    void param(const param_type& __p) {__p_ = __p;}"},
{"lineNum":" 5923","line":""},
{"lineNum":" 5924","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5925","line":"    result_type min() const {return 0;}"},
{"lineNum":" 5926","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5927","line":"    result_type max() const {return numeric_limits<result_type>::infinity();}"},
{"lineNum":" 5928","line":""},
{"lineNum":" 5929","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5930","line":"        bool operator==(const fisher_f_distribution& __x,"},
{"lineNum":" 5931","line":"                        const fisher_f_distribution& __y)"},
{"lineNum":" 5932","line":"        {return __x.__p_ == __y.__p_;}"},
{"lineNum":" 5933","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5934","line":"        bool operator!=(const fisher_f_distribution& __x,"},
{"lineNum":" 5935","line":"                        const fisher_f_distribution& __y)"},
{"lineNum":" 5936","line":"        {return !(__x == __y);}"},
{"lineNum":" 5937","line":"};"},
{"lineNum":" 5938","line":""},
{"lineNum":" 5939","line":"template <class _RealType>"},
{"lineNum":" 5940","line":"template<class _URNG>"},
{"lineNum":" 5941","line":"_RealType"},
{"lineNum":" 5942","line":"fisher_f_distribution<_RealType>::operator()(_URNG& __g, const param_type& __p)"},
{"lineNum":" 5943","line":"{"},
{"lineNum":" 5944","line":"    gamma_distribution<result_type> __gdm(__p.m() * result_type(.5));"},
{"lineNum":" 5945","line":"    gamma_distribution<result_type> __gdn(__p.n() * result_type(.5));"},
{"lineNum":" 5946","line":"    return __p.n() * __gdm(__g) / (__p.m() * __gdn(__g));"},
{"lineNum":" 5947","line":"}"},
{"lineNum":" 5948","line":""},
{"lineNum":" 5949","line":"template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 5950","line":"basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 5951","line":"operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 5952","line":"           const fisher_f_distribution<_RT>& __x)"},
{"lineNum":" 5953","line":"{"},
{"lineNum":" 5954","line":"    __save_flags<_CharT, _Traits> __lx(__os);"},
{"lineNum":" 5955","line":"    typedef basic_ostream<_CharT, _Traits> _OStream;"},
{"lineNum":" 5956","line":"    __os.flags(_OStream::dec | _OStream::left | _OStream::fixed |"},
{"lineNum":" 5957","line":"               _OStream::scientific);"},
{"lineNum":" 5958","line":"    _CharT __sp = __os.widen(\' \');"},
{"lineNum":" 5959","line":"    __os.fill(__sp);"},
{"lineNum":" 5960","line":"    __os << __x.m() << __sp << __x.n();"},
{"lineNum":" 5961","line":"    return __os;"},
{"lineNum":" 5962","line":"}"},
{"lineNum":" 5963","line":""},
{"lineNum":" 5964","line":"template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 5965","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 5966","line":"operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 5967","line":"           fisher_f_distribution<_RT>& __x)"},
{"lineNum":" 5968","line":"{"},
{"lineNum":" 5969","line":"    typedef fisher_f_distribution<_RT> _Eng;"},
{"lineNum":" 5970","line":"    typedef typename _Eng::result_type result_type;"},
{"lineNum":" 5971","line":"    typedef typename _Eng::param_type param_type;"},
{"lineNum":" 5972","line":"    __save_flags<_CharT, _Traits> __lx(__is);"},
{"lineNum":" 5973","line":"    typedef basic_istream<_CharT, _Traits> _Istream;"},
{"lineNum":" 5974","line":"    __is.flags(_Istream::dec | _Istream::skipws);"},
{"lineNum":" 5975","line":"    result_type __m;"},
{"lineNum":" 5976","line":"    result_type __n;"},
{"lineNum":" 5977","line":"    __is >> __m >> __n;"},
{"lineNum":" 5978","line":"    if (!__is.fail())"},
{"lineNum":" 5979","line":"        __x.param(param_type(__m, __n));"},
{"lineNum":" 5980","line":"    return __is;"},
{"lineNum":" 5981","line":"}"},
{"lineNum":" 5982","line":""},
{"lineNum":" 5983","line":"// student_t_distribution"},
{"lineNum":" 5984","line":""},
{"lineNum":" 5985","line":"template<class _RealType = double>"},
{"lineNum":" 5986","line":"class _LIBCPP_TEMPLATE_VIS student_t_distribution"},
{"lineNum":" 5987","line":"{"},
{"lineNum":" 5988","line":"public:"},
{"lineNum":" 5989","line":"    // types"},
{"lineNum":" 5990","line":"    typedef _RealType result_type;"},
{"lineNum":" 5991","line":""},
{"lineNum":" 5992","line":"    class _LIBCPP_TEMPLATE_VIS param_type"},
{"lineNum":" 5993","line":"    {"},
{"lineNum":" 5994","line":"        result_type __n_;"},
{"lineNum":" 5995","line":"    public:"},
{"lineNum":" 5996","line":"        typedef student_t_distribution distribution_type;"},
{"lineNum":" 5997","line":""},
{"lineNum":" 5998","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 5999","line":"        explicit param_type(result_type __n = 1) : __n_(__n) {}"},
{"lineNum":" 6000","line":""},
{"lineNum":" 6001","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6002","line":"        result_type n() const {return __n_;}"},
{"lineNum":" 6003","line":""},
{"lineNum":" 6004","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6005","line":"            bool operator==(const param_type& __x, const param_type& __y)"},
{"lineNum":" 6006","line":"            {return __x.__n_ == __y.__n_;}"},
{"lineNum":" 6007","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6008","line":"            bool operator!=(const param_type& __x, const param_type& __y)"},
{"lineNum":" 6009","line":"            {return !(__x == __y);}"},
{"lineNum":" 6010","line":"    };"},
{"lineNum":" 6011","line":""},
{"lineNum":" 6012","line":"private:"},
{"lineNum":" 6013","line":"    param_type __p_;"},
{"lineNum":" 6014","line":"    normal_distribution<result_type> __nd_;"},
{"lineNum":" 6015","line":""},
{"lineNum":" 6016","line":"public:"},
{"lineNum":" 6017","line":"    // constructor and reset functions"},
{"lineNum":" 6018","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 6019","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6020","line":"    student_t_distribution() : student_t_distribution(1) {}"},
{"lineNum":" 6021","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6022","line":"    explicit student_t_distribution(result_type __n)"},
{"lineNum":" 6023","line":"        : __p_(param_type(__n)) {}"},
{"lineNum":" 6024","line":"#else"},
{"lineNum":" 6025","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6026","line":"    explicit student_t_distribution(result_type __n = 1)"},
{"lineNum":" 6027","line":"        : __p_(param_type(__n)) {}"},
{"lineNum":" 6028","line":"#endif"},
{"lineNum":" 6029","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6030","line":"    explicit student_t_distribution(const param_type& __p)"},
{"lineNum":" 6031","line":"        : __p_(__p) {}"},
{"lineNum":" 6032","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6033","line":"    void reset() {__nd_.reset();}"},
{"lineNum":" 6034","line":""},
{"lineNum":" 6035","line":"    // generating functions"},
{"lineNum":" 6036","line":"    template<class _URNG>"},
{"lineNum":" 6037","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6038","line":"        result_type operator()(_URNG& __g)"},
{"lineNum":" 6039","line":"        {return (*this)(__g, __p_);}"},
{"lineNum":" 6040","line":"    template<class _URNG> result_type operator()(_URNG& __g, const param_type& __p);"},
{"lineNum":" 6041","line":""},
{"lineNum":" 6042","line":"    // property functions"},
{"lineNum":" 6043","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6044","line":"    result_type n() const {return __p_.n();}"},
{"lineNum":" 6045","line":""},
{"lineNum":" 6046","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6047","line":"    param_type param() const {return __p_;}"},
{"lineNum":" 6048","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6049","line":"    void param(const param_type& __p) {__p_ = __p;}"},
{"lineNum":" 6050","line":""},
{"lineNum":" 6051","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6052","line":"    result_type min() const {return -numeric_limits<result_type>::infinity();}"},
{"lineNum":" 6053","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6054","line":"    result_type max() const {return numeric_limits<result_type>::infinity();}"},
{"lineNum":" 6055","line":""},
{"lineNum":" 6056","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6057","line":"        bool operator==(const student_t_distribution& __x,"},
{"lineNum":" 6058","line":"                        const student_t_distribution& __y)"},
{"lineNum":" 6059","line":"        {return __x.__p_ == __y.__p_;}"},
{"lineNum":" 6060","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6061","line":"        bool operator!=(const student_t_distribution& __x,"},
{"lineNum":" 6062","line":"                        const student_t_distribution& __y)"},
{"lineNum":" 6063","line":"        {return !(__x == __y);}"},
{"lineNum":" 6064","line":"};"},
{"lineNum":" 6065","line":""},
{"lineNum":" 6066","line":"template <class _RealType>"},
{"lineNum":" 6067","line":"template<class _URNG>"},
{"lineNum":" 6068","line":"_RealType"},
{"lineNum":" 6069","line":"student_t_distribution<_RealType>::operator()(_URNG& __g, const param_type& __p)"},
{"lineNum":" 6070","line":"{"},
{"lineNum":" 6071","line":"    gamma_distribution<result_type> __gd(__p.n() * .5, 2);"},
{"lineNum":" 6072","line":"    return __nd_(__g) * _VSTD::sqrt(__p.n()/__gd(__g));"},
{"lineNum":" 6073","line":"}"},
{"lineNum":" 6074","line":""},
{"lineNum":" 6075","line":"template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 6076","line":"basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 6077","line":"operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 6078","line":"           const student_t_distribution<_RT>& __x)"},
{"lineNum":" 6079","line":"{"},
{"lineNum":" 6080","line":"    __save_flags<_CharT, _Traits> __lx(__os);"},
{"lineNum":" 6081","line":"    typedef basic_ostream<_CharT, _Traits> _OStream;"},
{"lineNum":" 6082","line":"    __os.flags(_OStream::dec | _OStream::left | _OStream::fixed |"},
{"lineNum":" 6083","line":"               _OStream::scientific);"},
{"lineNum":" 6084","line":"    __os << __x.n();"},
{"lineNum":" 6085","line":"    return __os;"},
{"lineNum":" 6086","line":"}"},
{"lineNum":" 6087","line":""},
{"lineNum":" 6088","line":"template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 6089","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 6090","line":"operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 6091","line":"           student_t_distribution<_RT>& __x)"},
{"lineNum":" 6092","line":"{"},
{"lineNum":" 6093","line":"    typedef student_t_distribution<_RT> _Eng;"},
{"lineNum":" 6094","line":"    typedef typename _Eng::result_type result_type;"},
{"lineNum":" 6095","line":"    typedef typename _Eng::param_type param_type;"},
{"lineNum":" 6096","line":"    __save_flags<_CharT, _Traits> __lx(__is);"},
{"lineNum":" 6097","line":"    typedef basic_istream<_CharT, _Traits> _Istream;"},
{"lineNum":" 6098","line":"    __is.flags(_Istream::dec | _Istream::skipws);"},
{"lineNum":" 6099","line":"    result_type __n;"},
{"lineNum":" 6100","line":"    __is >> __n;"},
{"lineNum":" 6101","line":"    if (!__is.fail())"},
{"lineNum":" 6102","line":"        __x.param(param_type(__n));"},
{"lineNum":" 6103","line":"    return __is;"},
{"lineNum":" 6104","line":"}"},
{"lineNum":" 6105","line":""},
{"lineNum":" 6106","line":"// discrete_distribution"},
{"lineNum":" 6107","line":""},
{"lineNum":" 6108","line":"template<class _IntType = int>"},
{"lineNum":" 6109","line":"class _LIBCPP_TEMPLATE_VIS discrete_distribution"},
{"lineNum":" 6110","line":"{"},
{"lineNum":" 6111","line":"public:"},
{"lineNum":" 6112","line":"    // types"},
{"lineNum":" 6113","line":"    typedef _IntType result_type;"},
{"lineNum":" 6114","line":""},
{"lineNum":" 6115","line":"    class _LIBCPP_TEMPLATE_VIS param_type"},
{"lineNum":" 6116","line":"    {"},
{"lineNum":" 6117","line":"        vector<double> __p_;"},
{"lineNum":" 6118","line":"    public:"},
{"lineNum":" 6119","line":"        typedef discrete_distribution distribution_type;"},
{"lineNum":" 6120","line":""},
{"lineNum":" 6121","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6122","line":"        param_type() {}"},
{"lineNum":" 6123","line":"        template<class _InputIterator>"},
{"lineNum":" 6124","line":"            _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6125","line":"            param_type(_InputIterator __f, _InputIterator __l)"},
{"lineNum":" 6126","line":"            : __p_(__f, __l) {__init();}"},
{"lineNum":" 6127","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 6128","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6129","line":"        param_type(initializer_list<double> __wl)"},
{"lineNum":" 6130","line":"            : __p_(__wl.begin(), __wl.end()) {__init();}"},
{"lineNum":" 6131","line":"#endif // _LIBCPP_CXX03_LANG"},
{"lineNum":" 6132","line":"        template<class _UnaryOperation>"},
{"lineNum":" 6133","line":"            param_type(size_t __nw, double __xmin, double __xmax,"},
{"lineNum":" 6134","line":"                       _UnaryOperation __fw);"},
{"lineNum":" 6135","line":""},
{"lineNum":" 6136","line":"        vector<double> probabilities() const;"},
{"lineNum":" 6137","line":""},
{"lineNum":" 6138","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6139","line":"            bool operator==(const param_type& __x, const param_type& __y)"},
{"lineNum":" 6140","line":"            {return __x.__p_ == __y.__p_;}"},
{"lineNum":" 6141","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6142","line":"            bool operator!=(const param_type& __x, const param_type& __y)"},
{"lineNum":" 6143","line":"            {return !(__x == __y);}"},
{"lineNum":" 6144","line":""},
{"lineNum":" 6145","line":"    private:"},
{"lineNum":" 6146","line":"        void __init();"},
{"lineNum":" 6147","line":""},
{"lineNum":" 6148","line":"        friend class discrete_distribution;"},
{"lineNum":" 6149","line":""},
{"lineNum":" 6150","line":"        template <class _CharT, class _Traits, class _IT>"},
{"lineNum":" 6151","line":"        friend"},
{"lineNum":" 6152","line":"        basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 6153","line":"        operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 6154","line":"                   const discrete_distribution<_IT>& __x);"},
{"lineNum":" 6155","line":""},
{"lineNum":" 6156","line":"        template <class _CharT, class _Traits, class _IT>"},
{"lineNum":" 6157","line":"        friend"},
{"lineNum":" 6158","line":"        basic_istream<_CharT, _Traits>&"},
{"lineNum":" 6159","line":"        operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 6160","line":"                   discrete_distribution<_IT>& __x);"},
{"lineNum":" 6161","line":"    };"},
{"lineNum":" 6162","line":""},
{"lineNum":" 6163","line":"private:"},
{"lineNum":" 6164","line":"    param_type __p_;"},
{"lineNum":" 6165","line":""},
{"lineNum":" 6166","line":"public:"},
{"lineNum":" 6167","line":"    // constructor and reset functions"},
{"lineNum":" 6168","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6169","line":"    discrete_distribution() {}"},
{"lineNum":" 6170","line":"    template<class _InputIterator>"},
{"lineNum":" 6171","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6172","line":"        discrete_distribution(_InputIterator __f, _InputIterator __l)"},
{"lineNum":" 6173","line":"            : __p_(__f, __l) {}"},
{"lineNum":" 6174","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 6175","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6176","line":"    discrete_distribution(initializer_list<double> __wl)"},
{"lineNum":" 6177","line":"        : __p_(__wl) {}"},
{"lineNum":" 6178","line":"#endif // _LIBCPP_CXX03_LANG"},
{"lineNum":" 6179","line":"    template<class _UnaryOperation>"},
{"lineNum":" 6180","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6181","line":"        discrete_distribution(size_t __nw, double __xmin, double __xmax,"},
{"lineNum":" 6182","line":"                              _UnaryOperation __fw)"},
{"lineNum":" 6183","line":"        : __p_(__nw, __xmin, __xmax, __fw) {}"},
{"lineNum":" 6184","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6185","line":"    explicit discrete_distribution(const param_type& __p)"},
{"lineNum":" 6186","line":"        : __p_(__p) {}"},
{"lineNum":" 6187","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6188","line":"    void reset() {}"},
{"lineNum":" 6189","line":""},
{"lineNum":" 6190","line":"    // generating functions"},
{"lineNum":" 6191","line":"    template<class _URNG>"},
{"lineNum":" 6192","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6193","line":"        result_type operator()(_URNG& __g)"},
{"lineNum":" 6194","line":"        {return (*this)(__g, __p_);}"},
{"lineNum":" 6195","line":"    template<class _URNG> result_type operator()(_URNG& __g, const param_type& __p);"},
{"lineNum":" 6196","line":""},
{"lineNum":" 6197","line":"    // property functions"},
{"lineNum":" 6198","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6199","line":"    vector<double> probabilities() const {return __p_.probabilities();}"},
{"lineNum":" 6200","line":""},
{"lineNum":" 6201","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6202","line":"    param_type param() const {return __p_;}"},
{"lineNum":" 6203","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6204","line":"    void param(const param_type& __p) {__p_ = __p;}"},
{"lineNum":" 6205","line":""},
{"lineNum":" 6206","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6207","line":"    result_type min() const {return 0;}"},
{"lineNum":" 6208","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6209","line":"    result_type max() const {return __p_.__p_.size();}"},
{"lineNum":" 6210","line":""},
{"lineNum":" 6211","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6212","line":"        bool operator==(const discrete_distribution& __x,"},
{"lineNum":" 6213","line":"                        const discrete_distribution& __y)"},
{"lineNum":" 6214","line":"        {return __x.__p_ == __y.__p_;}"},
{"lineNum":" 6215","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6216","line":"        bool operator!=(const discrete_distribution& __x,"},
{"lineNum":" 6217","line":"                        const discrete_distribution& __y)"},
{"lineNum":" 6218","line":"        {return !(__x == __y);}"},
{"lineNum":" 6219","line":""},
{"lineNum":" 6220","line":"    template <class _CharT, class _Traits, class _IT>"},
{"lineNum":" 6221","line":"    friend"},
{"lineNum":" 6222","line":"    basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 6223","line":"    operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 6224","line":"               const discrete_distribution<_IT>& __x);"},
{"lineNum":" 6225","line":""},
{"lineNum":" 6226","line":"    template <class _CharT, class _Traits, class _IT>"},
{"lineNum":" 6227","line":"    friend"},
{"lineNum":" 6228","line":"    basic_istream<_CharT, _Traits>&"},
{"lineNum":" 6229","line":"    operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 6230","line":"               discrete_distribution<_IT>& __x);"},
{"lineNum":" 6231","line":"};"},
{"lineNum":" 6232","line":""},
{"lineNum":" 6233","line":"template<class _IntType>"},
{"lineNum":" 6234","line":"template<class _UnaryOperation>"},
{"lineNum":" 6235","line":"discrete_distribution<_IntType>::param_type::param_type(size_t __nw,"},
{"lineNum":" 6236","line":"                                                        double __xmin,"},
{"lineNum":" 6237","line":"                                                        double __xmax,"},
{"lineNum":" 6238","line":"                                                        _UnaryOperation __fw)"},
{"lineNum":" 6239","line":"{"},
{"lineNum":" 6240","line":"    if (__nw > 1)"},
{"lineNum":" 6241","line":"    {"},
{"lineNum":" 6242","line":"        __p_.reserve(__nw - 1);"},
{"lineNum":" 6243","line":"        double __d = (__xmax - __xmin) / __nw;"},
{"lineNum":" 6244","line":"        double __d2 = __d / 2;"},
{"lineNum":" 6245","line":"        for (size_t __k = 0; __k < __nw; ++__k)"},
{"lineNum":" 6246","line":"            __p_.push_back(__fw(__xmin + __k * __d + __d2));"},
{"lineNum":" 6247","line":"        __init();"},
{"lineNum":" 6248","line":"    }"},
{"lineNum":" 6249","line":"}"},
{"lineNum":" 6250","line":""},
{"lineNum":" 6251","line":"template<class _IntType>"},
{"lineNum":" 6252","line":"void"},
{"lineNum":" 6253","line":"discrete_distribution<_IntType>::param_type::__init()"},
{"lineNum":" 6254","line":"{"},
{"lineNum":" 6255","line":"    if (!__p_.empty())"},
{"lineNum":" 6256","line":"    {"},
{"lineNum":" 6257","line":"        if (__p_.size() > 1)"},
{"lineNum":" 6258","line":"        {"},
{"lineNum":" 6259","line":"            double __s = _VSTD::accumulate(__p_.begin(), __p_.end(), 0.0);"},
{"lineNum":" 6260","line":"            for (vector<double>::iterator __i = __p_.begin(), __e = __p_.end(); __i < __e; ++__i)"},
{"lineNum":" 6261","line":"                *__i /= __s;"},
{"lineNum":" 6262","line":"            vector<double> __t(__p_.size() - 1);"},
{"lineNum":" 6263","line":"            _VSTD::partial_sum(__p_.begin(), __p_.end() - 1, __t.begin());"},
{"lineNum":" 6264","line":"            swap(__p_, __t);"},
{"lineNum":" 6265","line":"        }"},
{"lineNum":" 6266","line":"        else"},
{"lineNum":" 6267","line":"        {"},
{"lineNum":" 6268","line":"            __p_.clear();"},
{"lineNum":" 6269","line":"            __p_.shrink_to_fit();"},
{"lineNum":" 6270","line":"        }"},
{"lineNum":" 6271","line":"    }"},
{"lineNum":" 6272","line":"}"},
{"lineNum":" 6273","line":""},
{"lineNum":" 6274","line":"template<class _IntType>"},
{"lineNum":" 6275","line":"vector<double>"},
{"lineNum":" 6276","line":"discrete_distribution<_IntType>::param_type::probabilities() const"},
{"lineNum":" 6277","line":"{"},
{"lineNum":" 6278","line":"    size_t __n = __p_.size();"},
{"lineNum":" 6279","line":"    vector<double> __p(__n+1);"},
{"lineNum":" 6280","line":"    _VSTD::adjacent_difference(__p_.begin(), __p_.end(), __p.begin());"},
{"lineNum":" 6281","line":"    if (__n > 0)"},
{"lineNum":" 6282","line":"        __p[__n] = 1 - __p_[__n-1];"},
{"lineNum":" 6283","line":"    else"},
{"lineNum":" 6284","line":"        __p[0] = 1;"},
{"lineNum":" 6285","line":"    return __p;"},
{"lineNum":" 6286","line":"}"},
{"lineNum":" 6287","line":""},
{"lineNum":" 6288","line":"template<class _IntType>"},
{"lineNum":" 6289","line":"template<class _URNG>"},
{"lineNum":" 6290","line":"_IntType"},
{"lineNum":" 6291","line":"discrete_distribution<_IntType>::operator()(_URNG& __g, const param_type& __p)"},
{"lineNum":" 6292","line":"{"},
{"lineNum":" 6293","line":"    uniform_real_distribution<double> __gen;"},
{"lineNum":" 6294","line":"    return static_cast<_IntType>("},
{"lineNum":" 6295","line":"           _VSTD::upper_bound(__p.__p_.begin(), __p.__p_.end(), __gen(__g)) -"},
{"lineNum":" 6296","line":"                                                              __p.__p_.begin());"},
{"lineNum":" 6297","line":"}"},
{"lineNum":" 6298","line":""},
{"lineNum":" 6299","line":"template <class _CharT, class _Traits, class _IT>"},
{"lineNum":" 6300","line":"basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 6301","line":"operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 6302","line":"           const discrete_distribution<_IT>& __x)"},
{"lineNum":" 6303","line":"{"},
{"lineNum":" 6304","line":"    __save_flags<_CharT, _Traits> __lx(__os);"},
{"lineNum":" 6305","line":"    typedef basic_ostream<_CharT, _Traits> _OStream;"},
{"lineNum":" 6306","line":"    __os.flags(_OStream::dec | _OStream::left | _OStream::fixed |"},
{"lineNum":" 6307","line":"               _OStream::scientific);"},
{"lineNum":" 6308","line":"    _CharT __sp = __os.widen(\' \');"},
{"lineNum":" 6309","line":"    __os.fill(__sp);"},
{"lineNum":" 6310","line":"    size_t __n = __x.__p_.__p_.size();"},
{"lineNum":" 6311","line":"    __os << __n;"},
{"lineNum":" 6312","line":"    for (size_t __i = 0; __i < __n; ++__i)"},
{"lineNum":" 6313","line":"        __os << __sp << __x.__p_.__p_[__i];"},
{"lineNum":" 6314","line":"    return __os;"},
{"lineNum":" 6315","line":"}"},
{"lineNum":" 6316","line":""},
{"lineNum":" 6317","line":"template <class _CharT, class _Traits, class _IT>"},
{"lineNum":" 6318","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 6319","line":"operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 6320","line":"           discrete_distribution<_IT>& __x)"},
{"lineNum":" 6321","line":"{"},
{"lineNum":" 6322","line":"    __save_flags<_CharT, _Traits> __lx(__is);"},
{"lineNum":" 6323","line":"    typedef basic_istream<_CharT, _Traits> _Istream;"},
{"lineNum":" 6324","line":"    __is.flags(_Istream::dec | _Istream::skipws);"},
{"lineNum":" 6325","line":"    size_t __n;"},
{"lineNum":" 6326","line":"    __is >> __n;"},
{"lineNum":" 6327","line":"    vector<double> __p(__n);"},
{"lineNum":" 6328","line":"    for (size_t __i = 0; __i < __n; ++__i)"},
{"lineNum":" 6329","line":"        __is >> __p[__i];"},
{"lineNum":" 6330","line":"    if (!__is.fail())"},
{"lineNum":" 6331","line":"        swap(__x.__p_.__p_, __p);"},
{"lineNum":" 6332","line":"    return __is;"},
{"lineNum":" 6333","line":"}"},
{"lineNum":" 6334","line":""},
{"lineNum":" 6335","line":"// piecewise_constant_distribution"},
{"lineNum":" 6336","line":""},
{"lineNum":" 6337","line":"template<class _RealType = double>"},
{"lineNum":" 6338","line":"class _LIBCPP_TEMPLATE_VIS piecewise_constant_distribution"},
{"lineNum":" 6339","line":"{"},
{"lineNum":" 6340","line":"public:"},
{"lineNum":" 6341","line":"    // types"},
{"lineNum":" 6342","line":"    typedef _RealType result_type;"},
{"lineNum":" 6343","line":""},
{"lineNum":" 6344","line":"    class _LIBCPP_TEMPLATE_VIS param_type"},
{"lineNum":" 6345","line":"    {"},
{"lineNum":" 6346","line":"        vector<result_type> __b_;"},
{"lineNum":" 6347","line":"        vector<result_type> __densities_;"},
{"lineNum":" 6348","line":"        vector<result_type> __areas_;"},
{"lineNum":" 6349","line":"    public:"},
{"lineNum":" 6350","line":"        typedef piecewise_constant_distribution distribution_type;"},
{"lineNum":" 6351","line":""},
{"lineNum":" 6352","line":"        param_type();"},
{"lineNum":" 6353","line":"        template<class _InputIteratorB, class _InputIteratorW>"},
{"lineNum":" 6354","line":"            param_type(_InputIteratorB __fB, _InputIteratorB __lB,"},
{"lineNum":" 6355","line":"                       _InputIteratorW __fW);"},
{"lineNum":" 6356","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 6357","line":"        template<class _UnaryOperation>"},
{"lineNum":" 6358","line":"            param_type(initializer_list<result_type> __bl, _UnaryOperation __fw);"},
{"lineNum":" 6359","line":"#endif // _LIBCPP_CXX03_LANG"},
{"lineNum":" 6360","line":"        template<class _UnaryOperation>"},
{"lineNum":" 6361","line":"            param_type(size_t __nw, result_type __xmin, result_type __xmax,"},
{"lineNum":" 6362","line":"                       _UnaryOperation __fw);"},
{"lineNum":" 6363","line":"        param_type(param_type const&) = default;"},
{"lineNum":" 6364","line":"        param_type & operator=(const param_type& __rhs);"},
{"lineNum":" 6365","line":""},
{"lineNum":" 6366","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6367","line":"        vector<result_type> intervals() const {return __b_;}"},
{"lineNum":" 6368","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6369","line":"        vector<result_type> densities() const {return __densities_;}"},
{"lineNum":" 6370","line":""},
{"lineNum":" 6371","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6372","line":"            bool operator==(const param_type& __x, const param_type& __y)"},
{"lineNum":" 6373","line":"            {return __x.__densities_ == __y.__densities_ && __x.__b_ == __y.__b_;}"},
{"lineNum":" 6374","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6375","line":"            bool operator!=(const param_type& __x, const param_type& __y)"},
{"lineNum":" 6376","line":"            {return !(__x == __y);}"},
{"lineNum":" 6377","line":""},
{"lineNum":" 6378","line":"    private:"},
{"lineNum":" 6379","line":"        void __init();"},
{"lineNum":" 6380","line":""},
{"lineNum":" 6381","line":"        friend class piecewise_constant_distribution;"},
{"lineNum":" 6382","line":""},
{"lineNum":" 6383","line":"        template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 6384","line":"        friend"},
{"lineNum":" 6385","line":"        basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 6386","line":"        operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 6387","line":"                   const piecewise_constant_distribution<_RT>& __x);"},
{"lineNum":" 6388","line":""},
{"lineNum":" 6389","line":"        template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 6390","line":"        friend"},
{"lineNum":" 6391","line":"        basic_istream<_CharT, _Traits>&"},
{"lineNum":" 6392","line":"        operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 6393","line":"                   piecewise_constant_distribution<_RT>& __x);"},
{"lineNum":" 6394","line":"    };"},
{"lineNum":" 6395","line":""},
{"lineNum":" 6396","line":"private:"},
{"lineNum":" 6397","line":"    param_type __p_;"},
{"lineNum":" 6398","line":""},
{"lineNum":" 6399","line":"public:"},
{"lineNum":" 6400","line":"    // constructor and reset functions"},
{"lineNum":" 6401","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6402","line":"    piecewise_constant_distribution() {}"},
{"lineNum":" 6403","line":"    template<class _InputIteratorB, class _InputIteratorW>"},
{"lineNum":" 6404","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6405","line":"        piecewise_constant_distribution(_InputIteratorB __fB,"},
{"lineNum":" 6406","line":"                                        _InputIteratorB __lB,"},
{"lineNum":" 6407","line":"                                        _InputIteratorW __fW)"},
{"lineNum":" 6408","line":"        : __p_(__fB, __lB, __fW) {}"},
{"lineNum":" 6409","line":""},
{"lineNum":" 6410","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 6411","line":"    template<class _UnaryOperation>"},
{"lineNum":" 6412","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6413","line":"        piecewise_constant_distribution(initializer_list<result_type> __bl,"},
{"lineNum":" 6414","line":"                                        _UnaryOperation __fw)"},
{"lineNum":" 6415","line":"        : __p_(__bl, __fw) {}"},
{"lineNum":" 6416","line":"#endif // _LIBCPP_CXX03_LANG"},
{"lineNum":" 6417","line":""},
{"lineNum":" 6418","line":"    template<class _UnaryOperation>"},
{"lineNum":" 6419","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6420","line":"        piecewise_constant_distribution(size_t __nw, result_type __xmin,"},
{"lineNum":" 6421","line":"                                        result_type __xmax, _UnaryOperation __fw)"},
{"lineNum":" 6422","line":"        : __p_(__nw, __xmin, __xmax, __fw) {}"},
{"lineNum":" 6423","line":""},
{"lineNum":" 6424","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6425","line":"    explicit piecewise_constant_distribution(const param_type& __p)"},
{"lineNum":" 6426","line":"        : __p_(__p) {}"},
{"lineNum":" 6427","line":""},
{"lineNum":" 6428","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6429","line":"    void reset() {}"},
{"lineNum":" 6430","line":""},
{"lineNum":" 6431","line":"    // generating functions"},
{"lineNum":" 6432","line":"    template<class _URNG>"},
{"lineNum":" 6433","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6434","line":"        result_type operator()(_URNG& __g)"},
{"lineNum":" 6435","line":"        {return (*this)(__g, __p_);}"},
{"lineNum":" 6436","line":"    template<class _URNG> result_type operator()(_URNG& __g, const param_type& __p);"},
{"lineNum":" 6437","line":""},
{"lineNum":" 6438","line":"    // property functions"},
{"lineNum":" 6439","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6440","line":"    vector<result_type> intervals() const {return __p_.intervals();}"},
{"lineNum":" 6441","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6442","line":"    vector<result_type> densities() const {return __p_.densities();}"},
{"lineNum":" 6443","line":""},
{"lineNum":" 6444","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6445","line":"    param_type param() const {return __p_;}"},
{"lineNum":" 6446","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6447","line":"    void param(const param_type& __p) {__p_ = __p;}"},
{"lineNum":" 6448","line":""},
{"lineNum":" 6449","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6450","line":"    result_type min() const {return __p_.__b_.front();}"},
{"lineNum":" 6451","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6452","line":"    result_type max() const {return __p_.__b_.back();}"},
{"lineNum":" 6453","line":""},
{"lineNum":" 6454","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6455","line":"        bool operator==(const piecewise_constant_distribution& __x,"},
{"lineNum":" 6456","line":"                        const piecewise_constant_distribution& __y)"},
{"lineNum":" 6457","line":"        {return __x.__p_ == __y.__p_;}"},
{"lineNum":" 6458","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6459","line":"        bool operator!=(const piecewise_constant_distribution& __x,"},
{"lineNum":" 6460","line":"                           const piecewise_constant_distribution& __y)"},
{"lineNum":" 6461","line":"        {return !(__x == __y);}"},
{"lineNum":" 6462","line":""},
{"lineNum":" 6463","line":"    template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 6464","line":"    friend"},
{"lineNum":" 6465","line":"    basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 6466","line":"    operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 6467","line":"               const piecewise_constant_distribution<_RT>& __x);"},
{"lineNum":" 6468","line":""},
{"lineNum":" 6469","line":"    template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 6470","line":"    friend"},
{"lineNum":" 6471","line":"    basic_istream<_CharT, _Traits>&"},
{"lineNum":" 6472","line":"    operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 6473","line":"               piecewise_constant_distribution<_RT>& __x);"},
{"lineNum":" 6474","line":"};"},
{"lineNum":" 6475","line":""},
{"lineNum":" 6476","line":"template<class _RealType>"},
{"lineNum":" 6477","line":"typename piecewise_constant_distribution<_RealType>::param_type &"},
{"lineNum":" 6478","line":"piecewise_constant_distribution<_RealType>::param_type::operator="},
{"lineNum":" 6479","line":"                                                       (const param_type& __rhs)"},
{"lineNum":" 6480","line":"{"},
{"lineNum":" 6481","line":"//  These can throw"},
{"lineNum":" 6482","line":"    __b_.reserve        (__rhs.__b_.size ());"},
{"lineNum":" 6483","line":"    __densities_.reserve(__rhs.__densities_.size());"},
{"lineNum":" 6484","line":"    __areas_.reserve    (__rhs.__areas_.size());"},
{"lineNum":" 6485","line":""},
{"lineNum":" 6486","line":"//  These can not throw"},
{"lineNum":" 6487","line":"    __b_         = __rhs.__b_;"},
{"lineNum":" 6488","line":"    __densities_ = __rhs.__densities_;"},
{"lineNum":" 6489","line":"    __areas_     =  __rhs.__areas_;"},
{"lineNum":" 6490","line":"    return *this;"},
{"lineNum":" 6491","line":"}"},
{"lineNum":" 6492","line":""},
{"lineNum":" 6493","line":"template<class _RealType>"},
{"lineNum":" 6494","line":"void"},
{"lineNum":" 6495","line":"piecewise_constant_distribution<_RealType>::param_type::__init()"},
{"lineNum":" 6496","line":"{"},
{"lineNum":" 6497","line":"    // __densities_ contains non-normalized areas"},
{"lineNum":" 6498","line":"    result_type __total_area = _VSTD::accumulate(__densities_.begin(),"},
{"lineNum":" 6499","line":"                                                __densities_.end(),"},
{"lineNum":" 6500","line":"                                                result_type());"},
{"lineNum":" 6501","line":"    for (size_t __i = 0; __i < __densities_.size(); ++__i)"},
{"lineNum":" 6502","line":"        __densities_[__i] /= __total_area;"},
{"lineNum":" 6503","line":"    // __densities_ contains normalized areas"},
{"lineNum":" 6504","line":"    __areas_.assign(__densities_.size(), result_type());"},
{"lineNum":" 6505","line":"    _VSTD::partial_sum(__densities_.begin(), __densities_.end() - 1,"},
{"lineNum":" 6506","line":"                                                          __areas_.begin() + 1);"},
{"lineNum":" 6507","line":"    // __areas_ contains partial sums of normalized areas: [0, __densities_ - 1]"},
{"lineNum":" 6508","line":"    __densities_.back() = 1 - __areas_.back();  // correct round off error"},
{"lineNum":" 6509","line":"    for (size_t __i = 0; __i < __densities_.size(); ++__i)"},
{"lineNum":" 6510","line":"        __densities_[__i] /= (__b_[__i+1] - __b_[__i]);"},
{"lineNum":" 6511","line":"    // __densities_ now contains __densities_"},
{"lineNum":" 6512","line":"}"},
{"lineNum":" 6513","line":""},
{"lineNum":" 6514","line":"template<class _RealType>"},
{"lineNum":" 6515","line":"piecewise_constant_distribution<_RealType>::param_type::param_type()"},
{"lineNum":" 6516","line":"    : __b_(2),"},
{"lineNum":" 6517","line":"      __densities_(1, 1.0),"},
{"lineNum":" 6518","line":"      __areas_(1, 0.0)"},
{"lineNum":" 6519","line":"{"},
{"lineNum":" 6520","line":"    __b_[1] = 1;"},
{"lineNum":" 6521","line":"}"},
{"lineNum":" 6522","line":""},
{"lineNum":" 6523","line":"template<class _RealType>"},
{"lineNum":" 6524","line":"template<class _InputIteratorB, class _InputIteratorW>"},
{"lineNum":" 6525","line":"piecewise_constant_distribution<_RealType>::param_type::param_type("},
{"lineNum":" 6526","line":"        _InputIteratorB __fB, _InputIteratorB __lB, _InputIteratorW __fW)"},
{"lineNum":" 6527","line":"    : __b_(__fB, __lB)"},
{"lineNum":" 6528","line":"{"},
{"lineNum":" 6529","line":"    if (__b_.size() < 2)"},
{"lineNum":" 6530","line":"    {"},
{"lineNum":" 6531","line":"        __b_.resize(2);"},
{"lineNum":" 6532","line":"        __b_[0] = 0;"},
{"lineNum":" 6533","line":"        __b_[1] = 1;"},
{"lineNum":" 6534","line":"        __densities_.assign(1, 1.0);"},
{"lineNum":" 6535","line":"        __areas_.assign(1, 0.0);"},
{"lineNum":" 6536","line":"    }"},
{"lineNum":" 6537","line":"    else"},
{"lineNum":" 6538","line":"    {"},
{"lineNum":" 6539","line":"        __densities_.reserve(__b_.size() - 1);"},
{"lineNum":" 6540","line":"        for (size_t __i = 0; __i < __b_.size() - 1; ++__i, ++__fW)"},
{"lineNum":" 6541","line":"            __densities_.push_back(*__fW);"},
{"lineNum":" 6542","line":"        __init();"},
{"lineNum":" 6543","line":"    }"},
{"lineNum":" 6544","line":"}"},
{"lineNum":" 6545","line":""},
{"lineNum":" 6546","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 6547","line":""},
{"lineNum":" 6548","line":"template<class _RealType>"},
{"lineNum":" 6549","line":"template<class _UnaryOperation>"},
{"lineNum":" 6550","line":"piecewise_constant_distribution<_RealType>::param_type::param_type("},
{"lineNum":" 6551","line":"        initializer_list<result_type> __bl, _UnaryOperation __fw)"},
{"lineNum":" 6552","line":"    : __b_(__bl.begin(), __bl.end())"},
{"lineNum":" 6553","line":"{"},
{"lineNum":" 6554","line":"    if (__b_.size() < 2)"},
{"lineNum":" 6555","line":"    {"},
{"lineNum":" 6556","line":"        __b_.resize(2);"},
{"lineNum":" 6557","line":"        __b_[0] = 0;"},
{"lineNum":" 6558","line":"        __b_[1] = 1;"},
{"lineNum":" 6559","line":"        __densities_.assign(1, 1.0);"},
{"lineNum":" 6560","line":"        __areas_.assign(1, 0.0);"},
{"lineNum":" 6561","line":"    }"},
{"lineNum":" 6562","line":"    else"},
{"lineNum":" 6563","line":"    {"},
{"lineNum":" 6564","line":"        __densities_.reserve(__b_.size() - 1);"},
{"lineNum":" 6565","line":"        for (size_t __i = 0; __i < __b_.size() - 1; ++__i)"},
{"lineNum":" 6566","line":"            __densities_.push_back(__fw((__b_[__i+1] + __b_[__i])*.5));"},
{"lineNum":" 6567","line":"        __init();"},
{"lineNum":" 6568","line":"    }"},
{"lineNum":" 6569","line":"}"},
{"lineNum":" 6570","line":""},
{"lineNum":" 6571","line":"#endif // _LIBCPP_CXX03_LANG"},
{"lineNum":" 6572","line":""},
{"lineNum":" 6573","line":"template<class _RealType>"},
{"lineNum":" 6574","line":"template<class _UnaryOperation>"},
{"lineNum":" 6575","line":"piecewise_constant_distribution<_RealType>::param_type::param_type("},
{"lineNum":" 6576","line":"        size_t __nw, result_type __xmin, result_type __xmax, _UnaryOperation __fw)"},
{"lineNum":" 6577","line":"    : __b_(__nw == 0 ? 2 : __nw + 1)"},
{"lineNum":" 6578","line":"{"},
{"lineNum":" 6579","line":"    size_t __n = __b_.size() - 1;"},
{"lineNum":" 6580","line":"    result_type __d = (__xmax - __xmin) / __n;"},
{"lineNum":" 6581","line":"    __densities_.reserve(__n);"},
{"lineNum":" 6582","line":"    for (size_t __i = 0; __i < __n; ++__i)"},
{"lineNum":" 6583","line":"    {"},
{"lineNum":" 6584","line":"        __b_[__i] = __xmin + __i * __d;"},
{"lineNum":" 6585","line":"        __densities_.push_back(__fw(__b_[__i] + __d*.5));"},
{"lineNum":" 6586","line":"    }"},
{"lineNum":" 6587","line":"    __b_[__n] = __xmax;"},
{"lineNum":" 6588","line":"    __init();"},
{"lineNum":" 6589","line":"}"},
{"lineNum":" 6590","line":""},
{"lineNum":" 6591","line":"template<class _RealType>"},
{"lineNum":" 6592","line":"template<class _URNG>"},
{"lineNum":" 6593","line":"_RealType"},
{"lineNum":" 6594","line":"piecewise_constant_distribution<_RealType>::operator()(_URNG& __g, const param_type& __p)"},
{"lineNum":" 6595","line":"{"},
{"lineNum":" 6596","line":"    typedef uniform_real_distribution<result_type> _Gen;"},
{"lineNum":" 6597","line":"    result_type __u = _Gen()(__g);"},
{"lineNum":" 6598","line":"    ptrdiff_t __k = _VSTD::upper_bound(__p.__areas_.begin(), __p.__areas_.end(),"},
{"lineNum":" 6599","line":"                                      __u) - __p.__areas_.begin() - 1;"},
{"lineNum":" 6600","line":"    return (__u - __p.__areas_[__k]) / __p.__densities_[__k] + __p.__b_[__k];"},
{"lineNum":" 6601","line":"}"},
{"lineNum":" 6602","line":""},
{"lineNum":" 6603","line":"template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 6604","line":"basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 6605","line":"operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 6606","line":"           const piecewise_constant_distribution<_RT>& __x)"},
{"lineNum":" 6607","line":"{"},
{"lineNum":" 6608","line":"    __save_flags<_CharT, _Traits> __lx(__os);"},
{"lineNum":" 6609","line":"    typedef basic_ostream<_CharT, _Traits> _OStream;"},
{"lineNum":" 6610","line":"    __os.flags(_OStream::dec | _OStream::left | _OStream::fixed |"},
{"lineNum":" 6611","line":"               _OStream::scientific);"},
{"lineNum":" 6612","line":"    _CharT __sp = __os.widen(\' \');"},
{"lineNum":" 6613","line":"    __os.fill(__sp);"},
{"lineNum":" 6614","line":"    size_t __n = __x.__p_.__b_.size();"},
{"lineNum":" 6615","line":"    __os << __n;"},
{"lineNum":" 6616","line":"    for (size_t __i = 0; __i < __n; ++__i)"},
{"lineNum":" 6617","line":"        __os << __sp << __x.__p_.__b_[__i];"},
{"lineNum":" 6618","line":"    __n = __x.__p_.__densities_.size();"},
{"lineNum":" 6619","line":"    __os << __sp << __n;"},
{"lineNum":" 6620","line":"    for (size_t __i = 0; __i < __n; ++__i)"},
{"lineNum":" 6621","line":"        __os << __sp << __x.__p_.__densities_[__i];"},
{"lineNum":" 6622","line":"    __n = __x.__p_.__areas_.size();"},
{"lineNum":" 6623","line":"    __os << __sp << __n;"},
{"lineNum":" 6624","line":"    for (size_t __i = 0; __i < __n; ++__i)"},
{"lineNum":" 6625","line":"        __os << __sp << __x.__p_.__areas_[__i];"},
{"lineNum":" 6626","line":"    return __os;"},
{"lineNum":" 6627","line":"}"},
{"lineNum":" 6628","line":""},
{"lineNum":" 6629","line":"template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 6630","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 6631","line":"operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 6632","line":"           piecewise_constant_distribution<_RT>& __x)"},
{"lineNum":" 6633","line":"{"},
{"lineNum":" 6634","line":"    typedef piecewise_constant_distribution<_RT> _Eng;"},
{"lineNum":" 6635","line":"    typedef typename _Eng::result_type result_type;"},
{"lineNum":" 6636","line":"    __save_flags<_CharT, _Traits> __lx(__is);"},
{"lineNum":" 6637","line":"    typedef basic_istream<_CharT, _Traits> _Istream;"},
{"lineNum":" 6638","line":"    __is.flags(_Istream::dec | _Istream::skipws);"},
{"lineNum":" 6639","line":"    size_t __n;"},
{"lineNum":" 6640","line":"    __is >> __n;"},
{"lineNum":" 6641","line":"    vector<result_type> __b(__n);"},
{"lineNum":" 6642","line":"    for (size_t __i = 0; __i < __n; ++__i)"},
{"lineNum":" 6643","line":"        __is >> __b[__i];"},
{"lineNum":" 6644","line":"    __is >> __n;"},
{"lineNum":" 6645","line":"    vector<result_type> __densities(__n);"},
{"lineNum":" 6646","line":"    for (size_t __i = 0; __i < __n; ++__i)"},
{"lineNum":" 6647","line":"        __is >> __densities[__i];"},
{"lineNum":" 6648","line":"    __is >> __n;"},
{"lineNum":" 6649","line":"    vector<result_type> __areas(__n);"},
{"lineNum":" 6650","line":"    for (size_t __i = 0; __i < __n; ++__i)"},
{"lineNum":" 6651","line":"        __is >> __areas[__i];"},
{"lineNum":" 6652","line":"    if (!__is.fail())"},
{"lineNum":" 6653","line":"    {"},
{"lineNum":" 6654","line":"        swap(__x.__p_.__b_, __b);"},
{"lineNum":" 6655","line":"        swap(__x.__p_.__densities_, __densities);"},
{"lineNum":" 6656","line":"        swap(__x.__p_.__areas_, __areas);"},
{"lineNum":" 6657","line":"    }"},
{"lineNum":" 6658","line":"    return __is;"},
{"lineNum":" 6659","line":"}"},
{"lineNum":" 6660","line":""},
{"lineNum":" 6661","line":"// piecewise_linear_distribution"},
{"lineNum":" 6662","line":""},
{"lineNum":" 6663","line":"template<class _RealType = double>"},
{"lineNum":" 6664","line":"class _LIBCPP_TEMPLATE_VIS piecewise_linear_distribution"},
{"lineNum":" 6665","line":"{"},
{"lineNum":" 6666","line":"public:"},
{"lineNum":" 6667","line":"    // types"},
{"lineNum":" 6668","line":"    typedef _RealType result_type;"},
{"lineNum":" 6669","line":""},
{"lineNum":" 6670","line":"    class _LIBCPP_TEMPLATE_VIS param_type"},
{"lineNum":" 6671","line":"    {"},
{"lineNum":" 6672","line":"        vector<result_type> __b_;"},
{"lineNum":" 6673","line":"        vector<result_type> __densities_;"},
{"lineNum":" 6674","line":"        vector<result_type> __areas_;"},
{"lineNum":" 6675","line":"    public:"},
{"lineNum":" 6676","line":"        typedef piecewise_linear_distribution distribution_type;"},
{"lineNum":" 6677","line":""},
{"lineNum":" 6678","line":"        param_type();"},
{"lineNum":" 6679","line":"        template<class _InputIteratorB, class _InputIteratorW>"},
{"lineNum":" 6680","line":"            param_type(_InputIteratorB __fB, _InputIteratorB __lB,"},
{"lineNum":" 6681","line":"                       _InputIteratorW __fW);"},
{"lineNum":" 6682","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 6683","line":"        template<class _UnaryOperation>"},
{"lineNum":" 6684","line":"            param_type(initializer_list<result_type> __bl, _UnaryOperation __fw);"},
{"lineNum":" 6685","line":"#endif // _LIBCPP_CXX03_LANG"},
{"lineNum":" 6686","line":"        template<class _UnaryOperation>"},
{"lineNum":" 6687","line":"            param_type(size_t __nw, result_type __xmin, result_type __xmax,"},
{"lineNum":" 6688","line":"                       _UnaryOperation __fw);"},
{"lineNum":" 6689","line":"        param_type(param_type const&) = default;"},
{"lineNum":" 6690","line":"        param_type & operator=(const param_type& __rhs);"},
{"lineNum":" 6691","line":""},
{"lineNum":" 6692","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6693","line":"        vector<result_type> intervals() const {return __b_;}"},
{"lineNum":" 6694","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6695","line":"        vector<result_type> densities() const {return __densities_;}"},
{"lineNum":" 6696","line":""},
{"lineNum":" 6697","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6698","line":"            bool operator==(const param_type& __x, const param_type& __y)"},
{"lineNum":" 6699","line":"            {return __x.__densities_ == __y.__densities_ && __x.__b_ == __y.__b_;}"},
{"lineNum":" 6700","line":"        friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6701","line":"            bool operator!=(const param_type& __x, const param_type& __y)"},
{"lineNum":" 6702","line":"            {return !(__x == __y);}"},
{"lineNum":" 6703","line":""},
{"lineNum":" 6704","line":"    private:"},
{"lineNum":" 6705","line":"        void __init();"},
{"lineNum":" 6706","line":""},
{"lineNum":" 6707","line":"        friend class piecewise_linear_distribution;"},
{"lineNum":" 6708","line":""},
{"lineNum":" 6709","line":"        template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 6710","line":"        friend"},
{"lineNum":" 6711","line":"        basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 6712","line":"        operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 6713","line":"                   const piecewise_linear_distribution<_RT>& __x);"},
{"lineNum":" 6714","line":""},
{"lineNum":" 6715","line":"        template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 6716","line":"        friend"},
{"lineNum":" 6717","line":"        basic_istream<_CharT, _Traits>&"},
{"lineNum":" 6718","line":"        operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 6719","line":"                   piecewise_linear_distribution<_RT>& __x);"},
{"lineNum":" 6720","line":"    };"},
{"lineNum":" 6721","line":""},
{"lineNum":" 6722","line":"private:"},
{"lineNum":" 6723","line":"    param_type __p_;"},
{"lineNum":" 6724","line":""},
{"lineNum":" 6725","line":"public:"},
{"lineNum":" 6726","line":"    // constructor and reset functions"},
{"lineNum":" 6727","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6728","line":"    piecewise_linear_distribution() {}"},
{"lineNum":" 6729","line":"    template<class _InputIteratorB, class _InputIteratorW>"},
{"lineNum":" 6730","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6731","line":"        piecewise_linear_distribution(_InputIteratorB __fB,"},
{"lineNum":" 6732","line":"                                      _InputIteratorB __lB,"},
{"lineNum":" 6733","line":"                                      _InputIteratorW __fW)"},
{"lineNum":" 6734","line":"        : __p_(__fB, __lB, __fW) {}"},
{"lineNum":" 6735","line":""},
{"lineNum":" 6736","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 6737","line":"    template<class _UnaryOperation>"},
{"lineNum":" 6738","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6739","line":"        piecewise_linear_distribution(initializer_list<result_type> __bl,"},
{"lineNum":" 6740","line":"                                      _UnaryOperation __fw)"},
{"lineNum":" 6741","line":"        : __p_(__bl, __fw) {}"},
{"lineNum":" 6742","line":"#endif // _LIBCPP_CXX03_LANG"},
{"lineNum":" 6743","line":""},
{"lineNum":" 6744","line":"    template<class _UnaryOperation>"},
{"lineNum":" 6745","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6746","line":"        piecewise_linear_distribution(size_t __nw, result_type __xmin,"},
{"lineNum":" 6747","line":"                                      result_type __xmax, _UnaryOperation __fw)"},
{"lineNum":" 6748","line":"        : __p_(__nw, __xmin, __xmax, __fw) {}"},
{"lineNum":" 6749","line":""},
{"lineNum":" 6750","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6751","line":"    explicit piecewise_linear_distribution(const param_type& __p)"},
{"lineNum":" 6752","line":"        : __p_(__p) {}"},
{"lineNum":" 6753","line":""},
{"lineNum":" 6754","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6755","line":"    void reset() {}"},
{"lineNum":" 6756","line":""},
{"lineNum":" 6757","line":"    // generating functions"},
{"lineNum":" 6758","line":"    template<class _URNG>"},
{"lineNum":" 6759","line":"        _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6760","line":"        result_type operator()(_URNG& __g)"},
{"lineNum":" 6761","line":"        {return (*this)(__g, __p_);}"},
{"lineNum":" 6762","line":"    template<class _URNG> result_type operator()(_URNG& __g, const param_type& __p);"},
{"lineNum":" 6763","line":""},
{"lineNum":" 6764","line":"    // property functions"},
{"lineNum":" 6765","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6766","line":"    vector<result_type> intervals() const {return __p_.intervals();}"},
{"lineNum":" 6767","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6768","line":"    vector<result_type> densities() const {return __p_.densities();}"},
{"lineNum":" 6769","line":""},
{"lineNum":" 6770","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6771","line":"    param_type param() const {return __p_;}"},
{"lineNum":" 6772","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6773","line":"    void param(const param_type& __p) {__p_ = __p;}"},
{"lineNum":" 6774","line":""},
{"lineNum":" 6775","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6776","line":"    result_type min() const {return __p_.__b_.front();}"},
{"lineNum":" 6777","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6778","line":"    result_type max() const {return __p_.__b_.back();}"},
{"lineNum":" 6779","line":""},
{"lineNum":" 6780","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6781","line":"        bool operator==(const piecewise_linear_distribution& __x,"},
{"lineNum":" 6782","line":"                        const piecewise_linear_distribution& __y)"},
{"lineNum":" 6783","line":"        {return __x.__p_ == __y.__p_;}"},
{"lineNum":" 6784","line":"    friend _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 6785","line":"        bool operator!=(const piecewise_linear_distribution& __x,"},
{"lineNum":" 6786","line":"                        const piecewise_linear_distribution& __y)"},
{"lineNum":" 6787","line":"        {return !(__x == __y);}"},
{"lineNum":" 6788","line":""},
{"lineNum":" 6789","line":"    template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 6790","line":"    friend"},
{"lineNum":" 6791","line":"    basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 6792","line":"    operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 6793","line":"               const piecewise_linear_distribution<_RT>& __x);"},
{"lineNum":" 6794","line":""},
{"lineNum":" 6795","line":"    template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 6796","line":"    friend"},
{"lineNum":" 6797","line":"    basic_istream<_CharT, _Traits>&"},
{"lineNum":" 6798","line":"    operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 6799","line":"               piecewise_linear_distribution<_RT>& __x);"},
{"lineNum":" 6800","line":"};"},
{"lineNum":" 6801","line":""},
{"lineNum":" 6802","line":"template<class _RealType>"},
{"lineNum":" 6803","line":"typename piecewise_linear_distribution<_RealType>::param_type &"},
{"lineNum":" 6804","line":"piecewise_linear_distribution<_RealType>::param_type::operator="},
{"lineNum":" 6805","line":"                                                       (const param_type& __rhs)"},
{"lineNum":" 6806","line":"{"},
{"lineNum":" 6807","line":"//  These can throw"},
{"lineNum":" 6808","line":"    __b_.reserve        (__rhs.__b_.size ());"},
{"lineNum":" 6809","line":"    __densities_.reserve(__rhs.__densities_.size());"},
{"lineNum":" 6810","line":"    __areas_.reserve    (__rhs.__areas_.size());"},
{"lineNum":" 6811","line":""},
{"lineNum":" 6812","line":"//  These can not throw"},
{"lineNum":" 6813","line":"    __b_         = __rhs.__b_;"},
{"lineNum":" 6814","line":"    __densities_ = __rhs.__densities_;"},
{"lineNum":" 6815","line":"    __areas_     =  __rhs.__areas_;"},
{"lineNum":" 6816","line":"    return *this;"},
{"lineNum":" 6817","line":"}"},
{"lineNum":" 6818","line":""},
{"lineNum":" 6819","line":""},
{"lineNum":" 6820","line":"template<class _RealType>"},
{"lineNum":" 6821","line":"void"},
{"lineNum":" 6822","line":"piecewise_linear_distribution<_RealType>::param_type::__init()"},
{"lineNum":" 6823","line":"{"},
{"lineNum":" 6824","line":"    __areas_.assign(__densities_.size() - 1, result_type());"},
{"lineNum":" 6825","line":"    result_type _Sp = 0;"},
{"lineNum":" 6826","line":"    for (size_t __i = 0; __i < __areas_.size(); ++__i)"},
{"lineNum":" 6827","line":"    {"},
{"lineNum":" 6828","line":"        __areas_[__i] = (__densities_[__i+1] + __densities_[__i]) *"},
{"lineNum":" 6829","line":"                        (__b_[__i+1] - __b_[__i]) * .5;"},
{"lineNum":" 6830","line":"        _Sp += __areas_[__i];"},
{"lineNum":" 6831","line":"    }"},
{"lineNum":" 6832","line":"    for (size_t __i = __areas_.size(); __i > 1;)"},
{"lineNum":" 6833","line":"    {"},
{"lineNum":" 6834","line":"        --__i;"},
{"lineNum":" 6835","line":"        __areas_[__i] = __areas_[__i-1] / _Sp;"},
{"lineNum":" 6836","line":"    }"},
{"lineNum":" 6837","line":"    __areas_[0] = 0;"},
{"lineNum":" 6838","line":"    for (size_t __i = 1; __i < __areas_.size(); ++__i)"},
{"lineNum":" 6839","line":"        __areas_[__i] += __areas_[__i-1];"},
{"lineNum":" 6840","line":"    for (size_t __i = 0; __i < __densities_.size(); ++__i)"},
{"lineNum":" 6841","line":"        __densities_[__i] /= _Sp;"},
{"lineNum":" 6842","line":"}"},
{"lineNum":" 6843","line":""},
{"lineNum":" 6844","line":"template<class _RealType>"},
{"lineNum":" 6845","line":"piecewise_linear_distribution<_RealType>::param_type::param_type()"},
{"lineNum":" 6846","line":"    : __b_(2),"},
{"lineNum":" 6847","line":"      __densities_(2, 1.0),"},
{"lineNum":" 6848","line":"      __areas_(1, 0.0)"},
{"lineNum":" 6849","line":"{"},
{"lineNum":" 6850","line":"    __b_[1] = 1;"},
{"lineNum":" 6851","line":"}"},
{"lineNum":" 6852","line":""},
{"lineNum":" 6853","line":"template<class _RealType>"},
{"lineNum":" 6854","line":"template<class _InputIteratorB, class _InputIteratorW>"},
{"lineNum":" 6855","line":"piecewise_linear_distribution<_RealType>::param_type::param_type("},
{"lineNum":" 6856","line":"        _InputIteratorB __fB, _InputIteratorB __lB, _InputIteratorW __fW)"},
{"lineNum":" 6857","line":"    : __b_(__fB, __lB)"},
{"lineNum":" 6858","line":"{"},
{"lineNum":" 6859","line":"    if (__b_.size() < 2)"},
{"lineNum":" 6860","line":"    {"},
{"lineNum":" 6861","line":"        __b_.resize(2);"},
{"lineNum":" 6862","line":"        __b_[0] = 0;"},
{"lineNum":" 6863","line":"        __b_[1] = 1;"},
{"lineNum":" 6864","line":"        __densities_.assign(2, 1.0);"},
{"lineNum":" 6865","line":"        __areas_.assign(1, 0.0);"},
{"lineNum":" 6866","line":"    }"},
{"lineNum":" 6867","line":"    else"},
{"lineNum":" 6868","line":"    {"},
{"lineNum":" 6869","line":"        __densities_.reserve(__b_.size());"},
{"lineNum":" 6870","line":"        for (size_t __i = 0; __i < __b_.size(); ++__i, ++__fW)"},
{"lineNum":" 6871","line":"            __densities_.push_back(*__fW);"},
{"lineNum":" 6872","line":"        __init();"},
{"lineNum":" 6873","line":"    }"},
{"lineNum":" 6874","line":"}"},
{"lineNum":" 6875","line":""},
{"lineNum":" 6876","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":" 6877","line":""},
{"lineNum":" 6878","line":"template<class _RealType>"},
{"lineNum":" 6879","line":"template<class _UnaryOperation>"},
{"lineNum":" 6880","line":"piecewise_linear_distribution<_RealType>::param_type::param_type("},
{"lineNum":" 6881","line":"        initializer_list<result_type> __bl, _UnaryOperation __fw)"},
{"lineNum":" 6882","line":"    : __b_(__bl.begin(), __bl.end())"},
{"lineNum":" 6883","line":"{"},
{"lineNum":" 6884","line":"    if (__b_.size() < 2)"},
{"lineNum":" 6885","line":"    {"},
{"lineNum":" 6886","line":"        __b_.resize(2);"},
{"lineNum":" 6887","line":"        __b_[0] = 0;"},
{"lineNum":" 6888","line":"        __b_[1] = 1;"},
{"lineNum":" 6889","line":"        __densities_.assign(2, 1.0);"},
{"lineNum":" 6890","line":"        __areas_.assign(1, 0.0);"},
{"lineNum":" 6891","line":"    }"},
{"lineNum":" 6892","line":"    else"},
{"lineNum":" 6893","line":"    {"},
{"lineNum":" 6894","line":"        __densities_.reserve(__b_.size());"},
{"lineNum":" 6895","line":"        for (size_t __i = 0; __i < __b_.size(); ++__i)"},
{"lineNum":" 6896","line":"            __densities_.push_back(__fw(__b_[__i]));"},
{"lineNum":" 6897","line":"        __init();"},
{"lineNum":" 6898","line":"    }"},
{"lineNum":" 6899","line":"}"},
{"lineNum":" 6900","line":""},
{"lineNum":" 6901","line":"#endif // _LIBCPP_CXX03_LANG"},
{"lineNum":" 6902","line":""},
{"lineNum":" 6903","line":"template<class _RealType>"},
{"lineNum":" 6904","line":"template<class _UnaryOperation>"},
{"lineNum":" 6905","line":"piecewise_linear_distribution<_RealType>::param_type::param_type("},
{"lineNum":" 6906","line":"        size_t __nw, result_type __xmin, result_type __xmax, _UnaryOperation __fw)"},
{"lineNum":" 6907","line":"    : __b_(__nw == 0 ? 2 : __nw + 1)"},
{"lineNum":" 6908","line":"{"},
{"lineNum":" 6909","line":"    size_t __n = __b_.size() - 1;"},
{"lineNum":" 6910","line":"    result_type __d = (__xmax - __xmin) / __n;"},
{"lineNum":" 6911","line":"    __densities_.reserve(__b_.size());"},
{"lineNum":" 6912","line":"    for (size_t __i = 0; __i < __n; ++__i)"},
{"lineNum":" 6913","line":"    {"},
{"lineNum":" 6914","line":"        __b_[__i] = __xmin + __i * __d;"},
{"lineNum":" 6915","line":"        __densities_.push_back(__fw(__b_[__i]));"},
{"lineNum":" 6916","line":"    }"},
{"lineNum":" 6917","line":"    __b_[__n] = __xmax;"},
{"lineNum":" 6918","line":"    __densities_.push_back(__fw(__b_[__n]));"},
{"lineNum":" 6919","line":"    __init();"},
{"lineNum":" 6920","line":"}"},
{"lineNum":" 6921","line":""},
{"lineNum":" 6922","line":"template<class _RealType>"},
{"lineNum":" 6923","line":"template<class _URNG>"},
{"lineNum":" 6924","line":"_RealType"},
{"lineNum":" 6925","line":"piecewise_linear_distribution<_RealType>::operator()(_URNG& __g, const param_type& __p)"},
{"lineNum":" 6926","line":"{"},
{"lineNum":" 6927","line":"    typedef uniform_real_distribution<result_type> _Gen;"},
{"lineNum":" 6928","line":"    result_type __u = _Gen()(__g);"},
{"lineNum":" 6929","line":"    ptrdiff_t __k = _VSTD::upper_bound(__p.__areas_.begin(), __p.__areas_.end(),"},
{"lineNum":" 6930","line":"                                      __u) - __p.__areas_.begin() - 1;"},
{"lineNum":" 6931","line":"    __u -= __p.__areas_[__k];"},
{"lineNum":" 6932","line":"    const result_type __dk = __p.__densities_[__k];"},
{"lineNum":" 6933","line":"    const result_type __dk1 = __p.__densities_[__k+1];"},
{"lineNum":" 6934","line":"    const result_type __deltad = __dk1 - __dk;"},
{"lineNum":" 6935","line":"    const result_type __bk = __p.__b_[__k];"},
{"lineNum":" 6936","line":"    if (__deltad == 0)"},
{"lineNum":" 6937","line":"        return __u / __dk + __bk;"},
{"lineNum":" 6938","line":"    const result_type __bk1 = __p.__b_[__k+1];"},
{"lineNum":" 6939","line":"    const result_type __deltab = __bk1 - __bk;"},
{"lineNum":" 6940","line":"    return (__bk * __dk1 - __bk1 * __dk +"},
{"lineNum":" 6941","line":"        _VSTD::sqrt(__deltab * (__deltab * __dk * __dk + 2 * __deltad * __u))) /"},
{"lineNum":" 6942","line":"        __deltad;"},
{"lineNum":" 6943","line":"}"},
{"lineNum":" 6944","line":""},
{"lineNum":" 6945","line":"template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 6946","line":"basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 6947","line":"operator<<(basic_ostream<_CharT, _Traits>& __os,"},
{"lineNum":" 6948","line":"           const piecewise_linear_distribution<_RT>& __x)"},
{"lineNum":" 6949","line":"{"},
{"lineNum":" 6950","line":"    __save_flags<_CharT, _Traits> __lx(__os);"},
{"lineNum":" 6951","line":"    typedef basic_ostream<_CharT, _Traits> _OStream;"},
{"lineNum":" 6952","line":"    __os.flags(_OStream::dec | _OStream::left | _OStream::fixed |"},
{"lineNum":" 6953","line":"               _OStream::scientific);"},
{"lineNum":" 6954","line":"    _CharT __sp = __os.widen(\' \');"},
{"lineNum":" 6955","line":"    __os.fill(__sp);"},
{"lineNum":" 6956","line":"    size_t __n = __x.__p_.__b_.size();"},
{"lineNum":" 6957","line":"    __os << __n;"},
{"lineNum":" 6958","line":"    for (size_t __i = 0; __i < __n; ++__i)"},
{"lineNum":" 6959","line":"        __os << __sp << __x.__p_.__b_[__i];"},
{"lineNum":" 6960","line":"    __n = __x.__p_.__densities_.size();"},
{"lineNum":" 6961","line":"    __os << __sp << __n;"},
{"lineNum":" 6962","line":"    for (size_t __i = 0; __i < __n; ++__i)"},
{"lineNum":" 6963","line":"        __os << __sp << __x.__p_.__densities_[__i];"},
{"lineNum":" 6964","line":"    __n = __x.__p_.__areas_.size();"},
{"lineNum":" 6965","line":"    __os << __sp << __n;"},
{"lineNum":" 6966","line":"    for (size_t __i = 0; __i < __n; ++__i)"},
{"lineNum":" 6967","line":"        __os << __sp << __x.__p_.__areas_[__i];"},
{"lineNum":" 6968","line":"    return __os;"},
{"lineNum":" 6969","line":"}"},
{"lineNum":" 6970","line":""},
{"lineNum":" 6971","line":"template <class _CharT, class _Traits, class _RT>"},
{"lineNum":" 6972","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 6973","line":"operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 6974","line":"           piecewise_linear_distribution<_RT>& __x)"},
{"lineNum":" 6975","line":"{"},
{"lineNum":" 6976","line":"    typedef piecewise_linear_distribution<_RT> _Eng;"},
{"lineNum":" 6977","line":"    typedef typename _Eng::result_type result_type;"},
{"lineNum":" 6978","line":"    __save_flags<_CharT, _Traits> __lx(__is);"},
{"lineNum":" 6979","line":"    typedef basic_istream<_CharT, _Traits> _Istream;"},
{"lineNum":" 6980","line":"    __is.flags(_Istream::dec | _Istream::skipws);"},
{"lineNum":" 6981","line":"    size_t __n;"},
{"lineNum":" 6982","line":"    __is >> __n;"},
{"lineNum":" 6983","line":"    vector<result_type> __b(__n);"},
{"lineNum":" 6984","line":"    for (size_t __i = 0; __i < __n; ++__i)"},
{"lineNum":" 6985","line":"        __is >> __b[__i];"},
{"lineNum":" 6986","line":"    __is >> __n;"},
{"lineNum":" 6987","line":"    vector<result_type> __densities(__n);"},
{"lineNum":" 6988","line":"    for (size_t __i = 0; __i < __n; ++__i)"},
{"lineNum":" 6989","line":"        __is >> __densities[__i];"},
{"lineNum":" 6990","line":"    __is >> __n;"},
{"lineNum":" 6991","line":"    vector<result_type> __areas(__n);"},
{"lineNum":" 6992","line":"    for (size_t __i = 0; __i < __n; ++__i)"},
{"lineNum":" 6993","line":"        __is >> __areas[__i];"},
{"lineNum":" 6994","line":"    if (!__is.fail())"},
{"lineNum":" 6995","line":"    {"},
{"lineNum":" 6996","line":"        swap(__x.__p_.__b_, __b);"},
{"lineNum":" 6997","line":"        swap(__x.__p_.__densities_, __densities);"},
{"lineNum":" 6998","line":"        swap(__x.__p_.__areas_, __areas);"},
{"lineNum":" 6999","line":"    }"},
{"lineNum":" 7000","line":"    return __is;"},
{"lineNum":" 7001","line":"}"},
{"lineNum":" 7002","line":""},
{"lineNum":" 7003","line":"_LIBCPP_END_NAMESPACE_STD"},
{"lineNum":" 7004","line":""},
{"lineNum":" 7005","line":"_LIBCPP_POP_MACROS"},
{"lineNum":" 7006","line":""},
{"lineNum":" 7007","line":"#endif // _LIBCPP_RANDOM"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 18, "covered" : 0,};
var merged_data = [];
