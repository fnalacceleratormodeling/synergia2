var data = {lines:[
{"lineNum":"    1","line":""},
{"lineNum":"    2","line":"#include \"mx_tree.h\""},
{"lineNum":"    3","line":"#include \"mx_parse.h\""},
{"lineNum":"    4","line":""},
{"lineNum":"    5","line":"#include <iostream>"},
{"lineNum":"    6","line":"#include <stdexcept>"},
{"lineNum":"    7","line":"#include <cassert>"},
{"lineNum":"    8","line":""},
{"lineNum":"    9","line":"#include <boost/algorithm/string.hpp>"},
{"lineNum":"   10","line":""},
{"lineNum":"   11","line":"#include \"synergia/foundation/physical_constants.h\""},
{"lineNum":"   12","line":"#include \"synergia/foundation/four_momentum.h\""},
{"lineNum":"   13","line":""},
{"lineNum":"   14","line":"using namespace synergia;"},
{"lineNum":"   15","line":"using namespace std;"},
{"lineNum":"   16","line":""},
{"lineNum":"   17","line":"using boost::any;"},
{"lineNum":"   18","line":"using boost::any_cast;"},
{"lineNum":"   19","line":"using boost::get;"},
{"lineNum":"   20","line":""},
{"lineNum":"   21","line":""},
{"lineNum":"   22","line":"// helper"},
{"lineNum":"   23","line":"namespace synergia"},
{"lineNum":"   24","line":"{"},
{"lineNum":"   25","line":"  namespace"},
{"lineNum":"   26","line":"  {"},
{"lineNum":"   27","line":"    // deduct an expression and replace it with a number if all through"},
{"lineNum":"   28","line":"    mx_expr simplify( mx_expr const & e, MadX const & mx )"},
{"lineNum":"   29","line":"    {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   30","line":"      try"},
{"lineNum":"   31","line":"      {"},
{"lineNum":"   32","line":"        double r = boost::apply_visitor( mx_calculator(mx), e );"},
{"lineNum":"   33","line":"        return mx_expr(r);"},
{"lineNum":"   34","line":"      }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   35","line":"      catch(...)"},
{"lineNum":"   36","line":"      {"},
{"lineNum":"   37","line":"        return e;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   38","line":"      }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   39","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   40","line":""},
{"lineNum":"   41","line":"    template<typename T>"},
{"lineNum":"   42","line":"    void insert_attr(T & t, mx_attr const & attr, MadX const & mx)"},
{"lineNum":"   43","line":"    {"},
{"lineNum":"   44","line":"      if( attr.type() == MX_ATTR_STRING )","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   45","line":"      {"},
{"lineNum":"   46","line":"        t.insert_attribute( attr.name(), any_cast<string>(attr.value()) );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   47","line":"      }"},
{"lineNum":"   48","line":"      else if( attr.type() == MX_ATTR_PREDEFINED )"},
{"lineNum":"   49","line":"      {"},
{"lineNum":"   50","line":"        t.insert_attribute( attr.name(), any_cast<mx_keyword>(attr.value()).name );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   51","line":"      }"},
{"lineNum":"   52","line":"      else if( attr.type() == MX_ATTR_NUMBER )"},
{"lineNum":"   53","line":"      {"},
{"lineNum":"   54","line":"        mx_expr e = simplify( any_cast<mx_expr>(attr.value()), mx );","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   55","line":"        t.insert_attribute( attr.name(), e );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   56","line":"      }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   57","line":"      else if( attr.type() == MX_ATTR_LAZY_NUMBER )"},
{"lineNum":"   58","line":"      {"},
{"lineNum":"   59","line":"        t.insert_attribute( attr.name(), any_cast<mx_expr>(attr.value()) );","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   60","line":"      }"},
{"lineNum":"   61","line":"      else if( attr.type() == MX_ATTR_ARRAY )"},
{"lineNum":"   62","line":"      {"},
{"lineNum":"   63","line":"        mx_exprs es = any_cast<mx_exprs>(attr.value());"},
{"lineNum":"   64","line":"        for( mx_exprs::iterator it = es.begin()","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   65","line":"           ; it != es.end(); ++it )"},
{"lineNum":"   66","line":"        {"},
{"lineNum":"   67","line":"          mx_expr e = simplify( *it, mx );","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   68","line":"          *it = e;"},
{"lineNum":"   69","line":"        }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   70","line":"        t.insert_attribute( attr.name(), es );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   71","line":"      }"},
{"lineNum":"   72","line":"      else if( attr.type() == MX_ATTR_LAZY_ARRAY )"},
{"lineNum":"   73","line":"      {"},
{"lineNum":"   74","line":"        mx_exprs es = any_cast<mx_exprs>(attr.value());"},
{"lineNum":"   75","line":"        t.insert_attribute( attr.name(), es );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   76","line":"      }"},
{"lineNum":"   77","line":"    }"},
{"lineNum":"   78","line":""},
{"lineNum":"   79","line":"  }"},
{"lineNum":"   80","line":"}"},
{"lineNum":"   81","line":""},
{"lineNum":"   82","line":""},
{"lineNum":"   83","line":"void mx_logic::set(mx_expr const & l, logic_op_t o, mx_expr const & r)"},
{"lineNum":"   84","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   85","line":"  lhs = l; rhs = r; op = o; use_preset = false;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   86","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   87","line":""},
{"lineNum":"   88","line":"bool mx_logic::evaluate(MadX const & mx) const"},
{"lineNum":"   89","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   90","line":"  if( use_preset ) return pre;","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   91","line":""},
{"lineNum":"   92","line":"  assert( op!=NULL );"},
{"lineNum":"   93","line":""},
{"lineNum":"   94","line":"  double l = boost::apply_visitor( mx_calculator(mx, 0.0), lhs );"},
{"lineNum":"   95","line":"  double r = boost::apply_visitor( mx_calculator(mx, 0.0), rhs );"},
{"lineNum":"   96","line":""},
{"lineNum":"   97","line":"  return op(l, r);","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   98","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   99","line":""},
{"lineNum":"  100","line":"// attributes"},
{"lineNum":"  101","line":"void mx_attr::set_attr(std::string const & name, boost::any const & val)"},
{"lineNum":"  102","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  103","line":"  name_ = name;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  104","line":"  value_ = val;"},
{"lineNum":"  105","line":""},
{"lineNum":"  106","line":"  transform(name_.begin(), name_.end(), name_.begin(), ::tolower);"},
{"lineNum":"  107","line":""},
{"lineNum":"  108","line":"  if( val.type() == typeid(std::string) )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  109","line":"    type_ = MX_ATTR_STRING;"},
{"lineNum":"  110","line":"  else if( val.type() == typeid(mx_expr) )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  111","line":"    type_ = MX_ATTR_NUMBER;"},
{"lineNum":"  112","line":"  else if( val.type() == typeid(mx_exprs) )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  113","line":"    type_ = MX_ATTR_ARRAY;"},
{"lineNum":"  114","line":"  else if(  val.type() == typeid(mx_keyword)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  115","line":"         && (  any_cast<mx_keyword>(val).tag == MX_KW_PARTICLE","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  116","line":"            || any_cast<mx_keyword>(val).tag == MX_KW_MP_TYPE  ) )","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  117","line":"    type_ = MX_ATTR_PREDEFINED;"},
{"lineNum":"  118","line":"  else"},
{"lineNum":"  119","line":"    throw std::runtime_error(\"Unknown attribute value type for \" + name);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  120","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  121","line":""},
{"lineNum":"  122","line":"void mx_attr::set_lazy_attr(std::string const & name, boost::any const & val)"},
{"lineNum":"  123","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  124","line":"  name_ = name;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  125","line":"  value_ = val;"},
{"lineNum":"  126","line":""},
{"lineNum":"  127","line":"  transform(name_.begin(), name_.end(), name_.begin(), ::tolower);"},
{"lineNum":"  128","line":""},
{"lineNum":"  129","line":"  if( val.type() == typeid(std::string) )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  130","line":"    type_ = MX_ATTR_STRING;      // strings are immediate"},
{"lineNum":"  131","line":"  else if( val.type() == typeid(mx_expr) )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  132","line":"    type_ = MX_ATTR_LAZY_NUMBER;"},
{"lineNum":"  133","line":"  else if( val.type() == typeid(mx_exprs) )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  134","line":"    type_ = MX_ATTR_LAZY_ARRAY;"},
{"lineNum":"  135","line":"  else if(  val.type() == typeid(mx_keyword)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  136","line":"         && (  any_cast<mx_keyword>(val).tag == MX_KW_PARTICLE","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  137","line":"            || any_cast<mx_keyword>(val).tag == MX_KW_MP_TYPE  ) )","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  138","line":"    type_ = MX_ATTR_PREDEFINED;  // all predefines are immediate"},
{"lineNum":"  139","line":"  else"},
{"lineNum":"  140","line":"    throw std::runtime_error(\"Unknown lazy attribute value type for \" + name);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  141","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  142","line":""},
{"lineNum":"  143","line":""},
{"lineNum":"  144","line":"void mx_line::interpret(MadX & mx)"},
{"lineNum":"  145","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  146","line":"  MadX_line new_line(mx);"},
{"lineNum":"  147","line":"  seq.interpret(mx, new_line, 1);"},
{"lineNum":"  148","line":"  mx.insert_line(name, new_line);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  149","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  150","line":""},
{"lineNum":"  151","line":"void mx_line_seq::insert_member(int op, mx_line_member const & member)"},
{"lineNum":"  152","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  153","line":"  members.push_back( make_pair(member, op) );"},
{"lineNum":"  154","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  155","line":""},
{"lineNum":"  156","line":"void mx_line_seq::interpret(MadX const & mx, MadX_line & line, int op)"},
{"lineNum":"  157","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  158","line":"  if( op==0 ) return;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  159","line":""},
{"lineNum":"  160","line":"  if( op>0 )  // repeat op times","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  161","line":"  {"},
{"lineNum":"  162","line":"    for(int z=0; z<op; ++z)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  163","line":"    {"},
{"lineNum":"  164","line":"      for( mx_line_members::const_iterator it = members.begin()","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  165","line":"         ; it!=members.end(); ++it )"},
{"lineNum":"  166","line":"      {"},
{"lineNum":"  167","line":"        mx_line_member member = it->first;"},
{"lineNum":"  168","line":"        int op = it->second;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  169","line":"        member.interpret(mx, line, op);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  170","line":"      }"},
{"lineNum":"  171","line":"    }"},
{"lineNum":"  172","line":"    return;"},
{"lineNum":"  173","line":"  }"},
{"lineNum":"  174","line":""},
{"lineNum":"  175","line":"  if( op<0 )  // reverse then repeat"},
{"lineNum":"  176","line":"  {"},
{"lineNum":"  177","line":"    for(int z=0; z>op; --z)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  178","line":"    {"},
{"lineNum":"  179","line":"      for( mx_line_members::reverse_iterator it = members.rbegin()","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  180","line":"         ; it!=members.rend(); ++it )"},
{"lineNum":"  181","line":"      {"},
{"lineNum":"  182","line":"        mx_line_member member = it->first;"},
{"lineNum":"  183","line":"        int op = it->second;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  184","line":"        member.interpret(mx, line, op);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  185","line":"      }"},
{"lineNum":"  186","line":"    }"},
{"lineNum":"  187","line":"    return;"},
{"lineNum":"  188","line":"  }"},
{"lineNum":"  189","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  190","line":""},
{"lineNum":"  191","line":"void mx_line_member::interpret(MadX const & mx, MadX_line & line, int op)"},
{"lineNum":"  192","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  193","line":"  if( op==0 ) return;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  194","line":""},
{"lineNum":"  195","line":"  if( tag==MX_LINE_MEMBER_NAME )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  196","line":"  {"},
{"lineNum":"  197","line":"    // member is a name/reference"},
{"lineNum":"  198","line":"    string name = any_cast<string>(member);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  199","line":"    MadX_entry_type type = mx.entry_type(name);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  200","line":""},
{"lineNum":"  201","line":"    // does the name refer to a madx command?"},
{"lineNum":"  202","line":"    if( type==ENTRY_COMMAND )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  203","line":"    {"},
{"lineNum":"  204","line":"      // ok it is a command"},
{"lineNum":"  205","line":"      if( mx.command(name, true).is_element() )","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  206","line":"      {"},
{"lineNum":"  207","line":"        // now it is a real element"},
{"lineNum":"  208","line":"        if( op!=1 )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  209","line":"          throw runtime_error(\"Line op only applies to sublines, not to elements!\");","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  210","line":""},
{"lineNum":"  211","line":"        // push to the line"},
{"lineNum":"  212","line":"        line.insert_element( name );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  213","line":"      }"},
{"lineNum":"  214","line":"      else"},
{"lineNum":"  215","line":"      {"},
{"lineNum":"  216","line":"        throw runtime_error(\"Line member \'\" + name + \"\' is not an element\");","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  217","line":"      }"},
{"lineNum":"  218","line":"    }"},
{"lineNum":"  219","line":"    // or the name referes to a pre-exisitng line"},
{"lineNum":"  220","line":"    else if( type==ENTRY_LINE )"},
{"lineNum":"  221","line":"    {"},
{"lineNum":"  222","line":"      MadX_line const & subline = mx.line(name);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  223","line":"      size_t ne = subline.element_count();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  224","line":"      int repeat = (op>0) ? op : -op;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  225","line":""},
{"lineNum":"  226","line":"      for(int z=0; z<repeat; ++z)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  227","line":"      {"},
{"lineNum":"  228","line":"        for(size_t i=0; i<ne; ++i)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  229","line":"          line.insert_element( subline.element_name( (op>0) ? (i) : (ne-1-i) ) );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  230","line":"      }"},
{"lineNum":"  231","line":"    }"},
{"lineNum":"  232","line":"    // TODO: for now, we accept the sequence name as a simple line member"},
{"lineNum":"  233","line":"    // Needs more works!"},
{"lineNum":"  234","line":"    else if( type==ENTRY_SEQUENCE )"},
{"lineNum":"  235","line":"    {"},
{"lineNum":"  236","line":"      line.insert_element( name );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  237","line":"    }"},
{"lineNum":"  238","line":"    // something we dont support"},
{"lineNum":"  239","line":"    else"},
{"lineNum":"  240","line":"    {"},
{"lineNum":"  241","line":"      // TODO: for now, accept all names whether it is valid or not!!"},
{"lineNum":"  242","line":"      //throw runtime_error(\"Line member \'\" + name + \"\' does not exist or not correct type\");"},
{"lineNum":"  243","line":"    }"},
{"lineNum":"  244","line":"  }"},
{"lineNum":"  245","line":"  else"},
{"lineNum":"  246","line":"  {"},
{"lineNum":"  247","line":"    // if it is not a name, it must be a seq"},
{"lineNum":"  248","line":"    any_cast<mx_line_seq>(member).interpret(mx, line, op);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  249","line":"  }"},
{"lineNum":"  250","line":""},
{"lineNum":"  251","line":"  return;"},
{"lineNum":"  252","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  253","line":""},
{"lineNum":"  254","line":"// command"},
{"lineNum":"  255","line":"void mx_command::set_label(string const & label)"},
{"lineNum":"  256","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  257","line":"  label_   = label;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  258","line":"  labeled_ = true;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  259","line":"  transform( label_.begin(), label_.end(), label_.begin(), ::tolower );"},
{"lineNum":"  260","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  261","line":""},
{"lineNum":"  262","line":"void mx_command::set_keyword(mx_keyword const & keyword)"},
{"lineNum":"  263","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  264","line":"  if( keyword.tag == MX_KW_NONE || keyword.tag == MX_KW_PARTICLE )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  265","line":"    throw std::runtime_error(\"Invalid keyword type\");","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  266","line":""},
{"lineNum":"  267","line":"  mx_cmd_type t = (keyword.tag == MX_KW_ELEMENT) ? MX_CMD_ELEMENT"},
{"lineNum":"  268","line":"                : (keyword.tag == MX_KW_COMMAND) ? MX_CMD_EXECUTABLE : MX_CMD_ELEMENT_REF;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  269","line":""},
{"lineNum":"  270","line":"  set_keyword( keyword.name, t );"},
{"lineNum":"  271","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  272","line":""},
{"lineNum":"  273","line":"void mx_command::set_keyword(string const & keyword, mx_cmd_type tag)"},
{"lineNum":"  274","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  275","line":"  if( tag!=MX_CMD_ELEMENT && tag!=MX_CMD_EXECUTABLE && tag!=MX_CMD_ELEMENT_REF )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  276","line":"    throw std::runtime_error(\"Unknown keyword type\");","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  277","line":""},
{"lineNum":"  278","line":"  keyed_   = true;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  279","line":"  keyword_ = keyword;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  280","line":"  type_    = tag;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  281","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  282","line":""},
{"lineNum":"  283","line":"void mx_command::ins_attr(mx_attr const & attr)"},
{"lineNum":"  284","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  285","line":"  attrs_.push_back( attr );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  286","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  287","line":""},
{"lineNum":"  288","line":"MadX_command mx_command::convert(MadX const & mx) const"},
{"lineNum":"  289","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  290","line":"    // prepare MadX_command object"},
{"lineNum":"  291","line":"    MadX_command cmd;"},
{"lineNum":"  292","line":""},
{"lineNum":"  293","line":"    cmd.set_label( label_ );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  294","line":"    cmd.set_name( keyword_, ELEMENT );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  295","line":""},
{"lineNum":"  296","line":"    for( attrs_t::const_iterator it = attrs_.begin()","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  297","line":"       ; it != attrs_.end(); ++it )"},
{"lineNum":"  298","line":"    {"},
{"lineNum":"  299","line":"      mx_attr attr = *it;"},
{"lineNum":"  300","line":""},
{"lineNum":"  301","line":"      if (attr.name() == \"from\")","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  302","line":"      {"},
{"lineNum":"  303","line":"        string from = mx_expr_refstr(any_cast<mx_expr>(attr.value()));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  304","line":"        attr.set_attr(\"from\", from);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  305","line":"      }"},
{"lineNum":"  306","line":""},
{"lineNum":"  307","line":"      insert_attr(cmd, attr, mx);"},
{"lineNum":"  308","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  309","line":""},
{"lineNum":"  310","line":"    return cmd;"},
{"lineNum":"  311","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  312","line":""},
{"lineNum":"  313","line":"void mx_command::interpret(MadX & mx)"},
{"lineNum":"  314","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  315","line":"  // create an MadX_command object from mx_command"},
{"lineNum":"  316","line":"  MadX_command new_cmd = convert(mx);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  317","line":""},
{"lineNum":"  318","line":"  // type of the command?"},
{"lineNum":"  319","line":"  if( type_ == MX_CMD_VARIABLE )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  320","line":"  {"},
{"lineNum":"  321","line":"    mx_attr attr = attrs_[0];"},
{"lineNum":"  322","line":"    insert_attr(mx, attr, mx);"},
{"lineNum":"  323","line":"  }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  324","line":"  else if ( type_ == MX_CMD_ELEMENT )"},
{"lineNum":"  325","line":"  {"},
{"lineNum":"  326","line":"    // unlabeled class? -- it is a warning and will be skipped"},
{"lineNum":"  327","line":"    if ( !labeled_ )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  328","line":"    {"},
{"lineNum":"  329","line":"      cout << \"statment illegal in the context (declaring the element \'\""},
{"lineNum":"  330","line":"           << keyword_ << \"\' without a label), will be skipped\\n\";"},
{"lineNum":"  331","line":"      return;"},
{"lineNum":"  332","line":"    }"},
{"lineNum":"  333","line":""},
{"lineNum":"  334","line":"    // insert a label"},
{"lineNum":"  335","line":"    mx.insert_label(label_, new_cmd);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  336","line":""},
{"lineNum":"  337","line":"    // building a sequence?"},
{"lineNum":"  338","line":"    if ( mx.building_sequence() )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  339","line":"    {"},
{"lineNum":"  340","line":"      double at = new_cmd.attribute_as_number(\"at\");","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  341","line":"      string from = new_cmd.attribute_as_string(\"from\", \"\");","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  342","line":""},
{"lineNum":"  343","line":"      // label_, at, from"},
{"lineNum":"  344","line":"      mx.append_sequence_element( label_, at, from );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  345","line":"    }"},
{"lineNum":"  346","line":"  }"},
{"lineNum":"  347","line":"  else if ( type_ == MX_CMD_ELEMENT_REF )"},
{"lineNum":"  348","line":"  {"},
{"lineNum":"  349","line":"    // type of the referenced entry"},
{"lineNum":"  350","line":"    MadX_entry_type ref_type = mx.entry_type(keyword_);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  351","line":""},
{"lineNum":"  352","line":"    if ( labeled_ )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  353","line":"    {"},
{"lineNum":"  354","line":"      // check ref type"},
{"lineNum":"  355","line":"      if (ref_type != ENTRY_COMMAND)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  356","line":"        throw runtime_error(\"unknown class type \" + keyword_ + \".\");","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  357","line":""},
{"lineNum":"  358","line":"      // create a new element instance"},
{"lineNum":"  359","line":"      MadX_command ori_cmd = mx.command(keyword_);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  360","line":""},
{"lineNum":"  361","line":"      new_cmd.merge(ori_cmd);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  362","line":"      new_cmd.set_name( ori_cmd.name(), ELEMENT );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  363","line":""},
{"lineNum":"  364","line":"      mx.insert_label(label_, new_cmd);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  365","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  366","line":"    else if ( !mx.building_sequence() )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  367","line":"    {"},
{"lineNum":"  368","line":"      // check ref type"},
{"lineNum":"  369","line":"      if (ref_type != ENTRY_COMMAND)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  370","line":"      {"},
{"lineNum":"  371","line":"        cout << \"warning: unknown class type \" << keyword_ << \"\\n\";"},
{"lineNum":"  372","line":"        return;"},
{"lineNum":"  373","line":"      }"},
{"lineNum":"  374","line":""},
{"lineNum":"  375","line":"      // merge with the existing instance"},
{"lineNum":"  376","line":"      mx.fuse_command( keyword_, new_cmd );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  377","line":"    }"},
{"lineNum":"  378","line":""},
{"lineNum":"  379","line":"    // building a sequence?"},
{"lineNum":"  380","line":"    if ( mx.building_sequence() )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  381","line":"    {"},
{"lineNum":"  382","line":"      if (ref_type != ENTRY_COMMAND && ref_type != ENTRY_SEQUENCE)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  383","line":"        throw runtime_error(\"unknown class type \" + keyword_ + \".\");","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  384","line":""},
{"lineNum":"  385","line":"      double at = new_cmd.attribute_as_number(\"at\");","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  386","line":"      string from = new_cmd.attribute_as_string(\"from\", \"\");","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  387","line":""},
{"lineNum":"  388","line":"      // label_ or keyword_"},
{"lineNum":"  389","line":"      mx.append_sequence_element( (labeled_ ? label_ : keyword_), at, from );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  390","line":"    }"},
{"lineNum":"  391","line":"  }"},
{"lineNum":"  392","line":"  else  // execute the command"},
{"lineNum":"  393","line":"  {"},
{"lineNum":"  394","line":"    execute(mx);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  395","line":""},
{"lineNum":"  396","line":"    //mx.insert_command(new_cmd);"},
{"lineNum":"  397","line":"  }"},
{"lineNum":"  398","line":""},
{"lineNum":"  399","line":"  return;"},
{"lineNum":"  400","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  401","line":""},
{"lineNum":"  402","line":"void mx_command::execute(MadX & mx)"},
{"lineNum":"  403","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  404","line":"  if( keyword_ == \"call\" )","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  405","line":"  {"},
{"lineNum":"  406","line":"    // pull in the sub-file"},
{"lineNum":"  407","line":"    for( attrs_t::const_iterator it = attrs_.begin()","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  408","line":"       ; it != attrs_.end(); ++it )"},
{"lineNum":"  409","line":"    {"},
{"lineNum":"  410","line":"      if( it->name() == \"file\" )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  411","line":"      {"},
{"lineNum":"  412","line":"        string fname = boost::any_cast<string>(it->value());"},
{"lineNum":"  413","line":"        mx_tree subroutine;"},
{"lineNum":"  414","line":"        parse_int_madx_file(fname, subroutine);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  415","line":"        subroutine.interpret(mx);"},
{"lineNum":"  416","line":"        return;"},
{"lineNum":"  417","line":"      }"},
{"lineNum":"  418","line":"    }"},
{"lineNum":"  419","line":"    throw runtime_error(\"Error executing command \'call\'\");","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  420","line":"  }"},
{"lineNum":"  421","line":"  else if( keyword_ == \"sequence\" )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  422","line":"  {"},
{"lineNum":"  423","line":"    double length = 0.0;"},
{"lineNum":"  424","line":"    string refer  = string(\"\");"},
{"lineNum":"  425","line":"    string refpos = string(\"\");"},
{"lineNum":"  426","line":""},
{"lineNum":"  427","line":"    // the \"refer\" attribute is an unquoted string, not a reference"},
{"lineNum":"  428","line":"    for( attrs_t::iterator it = attrs_.begin()","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  429","line":"       ; it != attrs_.end(); ++it )"},
{"lineNum":"  430","line":"    {"},
{"lineNum":"  431","line":"      if( it->name() == \"refer\" )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  432","line":"      {"},
{"lineNum":"  433","line":"        if( it->value().type() == typeid(string) )","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  434","line":"        {"},
{"lineNum":"  435","line":"          refer = boost::any_cast<string>(it->value());"},
{"lineNum":"  436","line":"        }"},
{"lineNum":"  437","line":"        else if( it->value().type() == typeid(mx_expr) )","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  438","line":"        {"},
{"lineNum":"  439","line":"          try"},
{"lineNum":"  440","line":"          {"},
{"lineNum":"  441","line":"            mx_expr ex = any_cast<mx_expr>(it->value());"},
{"lineNum":"  442","line":""},
{"lineNum":"  443","line":"            // this line causes the final extracted string to be random characters"},
{"lineNum":"  444","line":"            // if compiled with os x clang compiler"},
{"lineNum":"  445","line":"            // ex = get<nop_t>(get<nop_t>(get<nop_t>(ex).expr).expr).expr;"},
{"lineNum":"  446","line":""},
{"lineNum":"  447","line":"            // fix to the above issue"},
{"lineNum":"  448","line":"            ex = get<nop_t>(ex).expr;"},
{"lineNum":"  449","line":"            ex = get<nop_t>(ex).expr;"},
{"lineNum":"  450","line":"            ex = get<nop_t>(ex).expr;"},
{"lineNum":"  451","line":""},
{"lineNum":"  452","line":"            refer = boost::get<string>( ex );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  453","line":"            it->set_attr(\"refer\", refer);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  454","line":"          }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  455","line":"          catch(...)"},
{"lineNum":"  456","line":"          {"},
{"lineNum":"  457","line":"            throw runtime_error(\"The \'refer\' attribute of sequence \'\"","class":"lineNoCov","hits":"0","possible_hits":"5",},
{"lineNum":"  458","line":"                + label_ + \"\' is not a string\");","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  459","line":"          }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  460","line":"        }"},
{"lineNum":"  461","line":"        else"},
{"lineNum":"  462","line":"        {"},
{"lineNum":"  463","line":"          throw runtime_error(\"The \'refer\' attribute of sequence \'\"","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  464","line":"              + label_ + \"\' is not a string\");","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  465","line":"        }"},
{"lineNum":"  466","line":"      }"},
{"lineNum":"  467","line":""},
{"lineNum":"  468","line":"      if( it->name() == \"refpos\" )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  469","line":"      {"},
{"lineNum":"  470","line":"        if( it->value().type() == typeid(string) )","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  471","line":"        {"},
{"lineNum":"  472","line":"          refpos = boost::any_cast<string>(it->value());"},
{"lineNum":"  473","line":"        }"},
{"lineNum":"  474","line":"        else if( it->value().type() == typeid(mx_expr) )","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  475","line":"        {"},
{"lineNum":"  476","line":"          try"},
{"lineNum":"  477","line":"          {"},
{"lineNum":"  478","line":"            mx_expr ex = any_cast<mx_expr>(it->value());"},
{"lineNum":"  479","line":"            ex = get<nop_t>(ex).expr;"},
{"lineNum":"  480","line":"            ex = get<nop_t>(ex).expr;"},
{"lineNum":"  481","line":"            ex = get<nop_t>(ex).expr;"},
{"lineNum":"  482","line":"            refpos = boost::get<string>( ex );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  483","line":"            it->set_attr(\"refpos\", refpos);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  484","line":"          }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  485","line":"          catch(...)"},
{"lineNum":"  486","line":"          {"},
{"lineNum":"  487","line":"            throw runtime_error(\"The \'refpos\' attribute of sequence \'\"","class":"lineNoCov","hits":"0","possible_hits":"5",},
{"lineNum":"  488","line":"                + label_ + \"\' is not a string\");","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  489","line":"          }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  490","line":"        }"},
{"lineNum":"  491","line":"        else"},
{"lineNum":"  492","line":"        {"},
{"lineNum":"  493","line":"          throw runtime_error(\"The \'refpos\' attribute of sequence \'\"","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  494","line":"              + label_ + \"\' is not a string\");","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  495","line":"        }"},
{"lineNum":"  496","line":"      }"},
{"lineNum":"  497","line":""},
{"lineNum":"  498","line":"      if( it->name() == \"length\" || it->name() == \"l\" )","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  499","line":"      {"},
{"lineNum":"  500","line":"        try"},
{"lineNum":"  501","line":"        {"},
{"lineNum":"  502","line":"          mx_expr e = boost::any_cast<mx_expr>( it->value() );"},
{"lineNum":"  503","line":"          length = boost::apply_visitor(mx_calculator(mx), e);"},
{"lineNum":"  504","line":"        }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  505","line":"        catch(...)"},
{"lineNum":"  506","line":"        {"},
{"lineNum":"  507","line":"          throw runtime_error(\"The \'length\' attribute of sequence \'\"","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  508","line":"              + label_ + \"\' is not a number\");","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  509","line":"        }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  510","line":"      }"},
{"lineNum":"  511","line":""},
{"lineNum":"  512","line":"    } // end of attr iter loop"},
{"lineNum":"  513","line":""},
{"lineNum":"  514","line":"    transform( refer .begin(), refer .end(), refer .begin(), ::tolower );"},
{"lineNum":"  515","line":"    transform( refpos.begin(), refpos.end(), refpos.begin(), ::tolower );"},
{"lineNum":"  516","line":""},
{"lineNum":"  517","line":"    if( length < 0.0 )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  518","line":"      throw runtime_error(\"The \'length\' attribute of sequence \'\"","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  519","line":"          + label_ + \"\' is not a valid number\");","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  520","line":""},
{"lineNum":"  521","line":"    // tells madx object to start building sequence"},
{"lineNum":"  522","line":"    mx.start_sequence( label_, length, refer, refpos );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  523","line":"  }"},
{"lineNum":"  524","line":"  else if( keyword_ == \"endsequence\" )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  525","line":"  {"},
{"lineNum":"  526","line":"    mx.end_sequence();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  527","line":"  }"},
{"lineNum":"  528","line":"  else if( keyword_ == \"beam\" )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  529","line":"  {"},
{"lineNum":"  530","line":"    // beam can always be referenced with \'beam\'"},
{"lineNum":"  531","line":"    if( !labeled_ )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  532","line":"    {"},
{"lineNum":"  533","line":"      label_ = \"beam\";","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  534","line":"      labeled_ = true;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  535","line":"    }"},
{"lineNum":"  536","line":""},
{"lineNum":"  537","line":"    // build attributes of beam"},
{"lineNum":"  538","line":"    double mass = 0, charge = 0, energy = 0, pc = 0, gamma = 0;"},
{"lineNum":"  539","line":"    bool have_charge = false;"},
{"lineNum":"  540","line":"    for ( attrs_t::const_iterator it = attrs_.begin()","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  541","line":"        ; it != attrs_.end(); ++it )"},
{"lineNum":"  542","line":"    {"},
{"lineNum":"  543","line":"      if ( it->name() == \"particle\" )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  544","line":"      {"},
{"lineNum":"  545","line":"        string particle = any_cast<mx_keyword>( it->value() ).name;"},
{"lineNum":"  546","line":"        if (particle == \"proton\") {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  547","line":"          mass = pconstants::mp;"},
{"lineNum":"  548","line":"          charge = pconstants::proton_charge;"},
{"lineNum":"  549","line":"        } else if (particle == \"antiproton\") {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  550","line":"          mass = pconstants::mp;"},
{"lineNum":"  551","line":"          charge = pconstants::antiproton_charge;"},
{"lineNum":"  552","line":"        } else if (particle == \"electron\") {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  553","line":"          mass = pconstants::me;"},
{"lineNum":"  554","line":"          charge = pconstants::electron_charge;"},
{"lineNum":"  555","line":"        } else if (particle == \"positron\") {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  556","line":"          mass = pconstants::me;"},
{"lineNum":"  557","line":"          charge = pconstants::positron_charge;"},
{"lineNum":"  558","line":"        } else if (particle == \"negmuon\") {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  559","line":"          mass = pconstants::mmu;"},
{"lineNum":"  560","line":"          charge = pconstants::muon_charge;"},
{"lineNum":"  561","line":"        } else if (particle == \"posmuon\") {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  562","line":"          mass = pconstants::mmu;"},
{"lineNum":"  563","line":"          charge = pconstants::antimuon_charge;"},
{"lineNum":"  564","line":"        } else {"},
{"lineNum":"  565","line":"          throw runtime_error(\"Unknown particle type \" + particle);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  566","line":"        }"},
{"lineNum":"  567","line":"      }"},
{"lineNum":"  568","line":"      else if ( it->name() == \"mass\")","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  569","line":"      {"},
{"lineNum":"  570","line":"        mx_expr e = boost::any_cast<mx_expr>( it->value() );"},
{"lineNum":"  571","line":"        mass = boost::apply_visitor(mx_calculator(mx), e);"},
{"lineNum":"  572","line":"      }"},
{"lineNum":"  573","line":"      else if ( it->name() == \"charge\")","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  574","line":"      {"},
{"lineNum":"  575","line":"        mx_expr e = boost::any_cast<mx_expr>( it->value() );"},
{"lineNum":"  576","line":"        charge = boost::apply_visitor(mx_calculator(mx), e);"},
{"lineNum":"  577","line":"        have_charge = true;"},
{"lineNum":"  578","line":"      }"},
{"lineNum":"  579","line":"      else if ( it->name() == \"energy\")","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  580","line":"      {"},
{"lineNum":"  581","line":"        mx_expr e = boost::any_cast<mx_expr>( it->value() );"},
{"lineNum":"  582","line":"        energy = boost::apply_visitor(mx_calculator(mx), e);"},
{"lineNum":"  583","line":"      }"},
{"lineNum":"  584","line":"      else if ( it->name() == \"pc\")","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  585","line":"      {"},
{"lineNum":"  586","line":"        mx_expr e = boost::any_cast<mx_expr>( it->value() );"},
{"lineNum":"  587","line":"        pc = boost::apply_visitor(mx_calculator(mx), e);"},
{"lineNum":"  588","line":"      }"},
{"lineNum":"  589","line":"      else if ( it->name() == \"gamma\")","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  590","line":"      {"},
{"lineNum":"  591","line":"        mx_expr e = boost::any_cast<mx_expr>( it->value() );"},
{"lineNum":"  592","line":"        gamma = boost::apply_visitor(mx_calculator(mx), e);"},
{"lineNum":"  593","line":"      }"},
{"lineNum":"  594","line":"    }"},
{"lineNum":"  595","line":""},
{"lineNum":"  596","line":"    // makes no change if the particle type is absent"},
{"lineNum":"  597","line":"    if( mass!=0 )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  598","line":"    {"},
{"lineNum":"  599","line":"      Four_momentum four_momentum(mass);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  600","line":""},
{"lineNum":"  601","line":"      if (energy > 0) four_momentum.set_total_energy(energy);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  602","line":"      if (pc > 0)     four_momentum.set_momentum(pc);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  603","line":"      if (gamma > 0)  four_momentum.set_gamma(gamma);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  604","line":""},
{"lineNum":"  605","line":"      mx_attr attr;"},
{"lineNum":"  606","line":""},
{"lineNum":"  607","line":"      if (energy == 0)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  608","line":"      {"},
{"lineNum":"  609","line":"        attr.set_attr( \"energy\", mx_expr(four_momentum.get_total_energy()) );","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  610","line":"        ins_attr(attr);"},
{"lineNum":"  611","line":"      }"},
{"lineNum":"  612","line":""},
{"lineNum":"  613","line":"      if (pc == 0)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  614","line":"      {"},
{"lineNum":"  615","line":"        attr.set_attr( \"pc\", mx_expr(four_momentum.get_momentum()) );","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  616","line":"        ins_attr(attr);"},
{"lineNum":"  617","line":"      }"},
{"lineNum":"  618","line":""},
{"lineNum":"  619","line":"      if (gamma == 0)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  620","line":"      {"},
{"lineNum":"  621","line":"        attr.set_attr( \"gamma\", mx_expr(four_momentum.get_gamma()) );","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  622","line":"        ins_attr(attr);"},
{"lineNum":"  623","line":"      }"},
{"lineNum":"  624","line":""},
{"lineNum":"  625","line":"      if (!have_charge)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  626","line":"      {"},
{"lineNum":"  627","line":"          attr.set_attr( \"charge\", mx_expr(charge));","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  628","line":"          ins_attr(attr);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  629","line":"      }"},
{"lineNum":"  630","line":""},
{"lineNum":"  631","line":"      // insert a global variable brho to the madx object"},
{"lineNum":"  632","line":"      stringstream ss;"},
{"lineNum":"  633","line":"      ss.precision(18);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  634","line":"      ss << 1e9/pconstants::c << \"*beam->pc\";","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  635","line":""},
{"lineNum":"  636","line":"      mx_expr expr;"},
{"lineNum":"  637","line":"      parse_expression( ss.str(), expr );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  638","line":"      mx.insert_variable( \"brho\", expr );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  639","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  640","line":""},
{"lineNum":"  641","line":"    // insert beam as a label"},
{"lineNum":"  642","line":"    MadX_command new_cmd = convert(mx);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  643","line":"    mx.insert_label(label_, new_cmd);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  644","line":"  }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  645","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  646","line":""},
{"lineNum":"  647","line":"void mx_command::print() const"},
{"lineNum":"  648","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  649","line":"  if( labeled_ )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  650","line":"    cout << label_ << \" : \";"},
{"lineNum":"  651","line":""},
{"lineNum":"  652","line":"  if( keyed_ )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  653","line":"    cout << keyword_ << \", \";"},
{"lineNum":"  654","line":""},
{"lineNum":"  655","line":"  for( attrs_t::const_iterator it = attrs_.begin();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  656","line":"       it != attrs_.end(); ++it )"},
{"lineNum":"  657","line":"  {"},
{"lineNum":"  658","line":"    cout << it->name() << \" = \" << \"xxx, \";"},
{"lineNum":"  659","line":"  }"},
{"lineNum":"  660","line":""},
{"lineNum":"  661","line":"  cout << \"\\n\";"},
{"lineNum":"  662","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  663","line":""},
{"lineNum":"  664","line":"// if_block"},
{"lineNum":"  665","line":"bool mx_if_block::evaluate_logic(MadX const & mx) const"},
{"lineNum":"  666","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  667","line":"  return logic_expr.evaluate(mx);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  668","line":"}"},
{"lineNum":"  669","line":""},
{"lineNum":"  670","line":"void mx_if_block::interpret_block(MadX & mx)"},
{"lineNum":"  671","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  672","line":"  block.interpret(mx);"},
{"lineNum":"  673","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  674","line":""},
{"lineNum":"  675","line":"void mx_if_block::print_logic() const"},
{"lineNum":"  676","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  677","line":"  //cout << logic_expr;"},
{"lineNum":"  678","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  679","line":""},
{"lineNum":"  680","line":"void mx_if_block::print_block() const"},
{"lineNum":"  681","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  682","line":"  block.print();"},
{"lineNum":"  683","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  684","line":""},
{"lineNum":"  685","line":"// if-elseif-else"},
{"lineNum":"  686","line":"void mx_if::assign_if(mx_logic const & logic, mx_tree const & block)"},
{"lineNum":"  687","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  688","line":"  if_ = mx_if_block(logic, block);","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  689","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  690","line":""},
{"lineNum":"  691","line":"void mx_if::assign_elseif(mx_logic const & logic, mx_tree const & block)"},
{"lineNum":"  692","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  693","line":"  elseif_.push_back(mx_if_block(logic, block));","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  694","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  695","line":""},
{"lineNum":"  696","line":"void mx_if::assign_else(mx_tree const & block)"},
{"lineNum":"  697","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  698","line":"  else_ = mx_if_block(true, block);","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  699","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  700","line":""},
{"lineNum":"  701","line":"void mx_if::interpret(MadX & mx)"},
{"lineNum":"  702","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  703","line":"  if( !if_.valid() )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  704","line":"    throw runtime_error(\"mx_if::interpret() Invalid if command\");","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  705","line":""},
{"lineNum":"  706","line":"  if( if_.evaluate_logic(mx) )","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  707","line":"  {"},
{"lineNum":"  708","line":"    if_.interpret_block(mx);"},
{"lineNum":"  709","line":"  }"},
{"lineNum":"  710","line":"  else if( !elseif_.empty() )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  711","line":"  {"},
{"lineNum":"  712","line":"    for( mx_if_block_v::iterator it = elseif_.begin();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  713","line":"         it != elseif_.end();"},
{"lineNum":"  714","line":"         ++it )"},
{"lineNum":"  715","line":"    {"},
{"lineNum":"  716","line":"      if( it->evaluate_logic(mx) )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  717","line":"      {"},
{"lineNum":"  718","line":"        it->interpret_block(mx);"},
{"lineNum":"  719","line":"      }"},
{"lineNum":"  720","line":"    }"},
{"lineNum":"  721","line":"  }"},
{"lineNum":"  722","line":"  else if( else_.valid() )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  723","line":"  {"},
{"lineNum":"  724","line":"    else_.interpret_block(mx);"},
{"lineNum":"  725","line":"  }"},
{"lineNum":"  726","line":""},
{"lineNum":"  727","line":"  return;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  728","line":"}"},
{"lineNum":"  729","line":""},
{"lineNum":"  730","line":"void mx_if::print() const"},
{"lineNum":"  731","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  732","line":"  if( !if_.valid() )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  733","line":"    throw runtime_error(\"mx_if::print() Invalid if command\");","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  734","line":""},
{"lineNum":"  735","line":"  cout << \"if (\";"},
{"lineNum":"  736","line":"  if_.print_logic();"},
{"lineNum":"  737","line":"  cout << \")\\n{\\n\";"},
{"lineNum":"  738","line":"  if_.print_block();"},
{"lineNum":"  739","line":"  cout << \"}\\n\";"},
{"lineNum":"  740","line":""},
{"lineNum":"  741","line":"  for( mx_if_block_v::const_iterator it = elseif_.begin();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  742","line":"       it != elseif_.end(); ++it )"},
{"lineNum":"  743","line":"  {"},
{"lineNum":"  744","line":"    cout << \"elseif (\";"},
{"lineNum":"  745","line":"    it->print_logic();"},
{"lineNum":"  746","line":"    cout << \")\\n{\\n\";"},
{"lineNum":"  747","line":"    it->print_block();"},
{"lineNum":"  748","line":"    cout << \"}\\n\";"},
{"lineNum":"  749","line":"  }"},
{"lineNum":"  750","line":""},
{"lineNum":"  751","line":"  if( else_.valid() )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  752","line":"  {"},
{"lineNum":"  753","line":"    cout << \"else\\n{\\n\";"},
{"lineNum":"  754","line":"    else_.print_block();"},
{"lineNum":"  755","line":"    cout << \"}\\n\";"},
{"lineNum":"  756","line":"  }"},
{"lineNum":"  757","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  758","line":""},
{"lineNum":"  759","line":"// while"},
{"lineNum":"  760","line":"void mx_while::assign(mx_logic const & logic, mx_tree const & block)"},
{"lineNum":"  761","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  762","line":"  while_ = mx_if_block(logic, block);","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  763","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  764","line":""},
{"lineNum":"  765","line":"void mx_while::interpret(MadX & mx)"},
{"lineNum":"  766","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  767","line":"  return;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  768","line":"}"},
{"lineNum":"  769","line":""},
{"lineNum":"  770","line":"void mx_while::print() const"},
{"lineNum":"  771","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  772","line":"  if( !while_.valid() )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  773","line":"    throw runtime_error(\"mx_while::print() Invalid while command\");","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  774","line":""},
{"lineNum":"  775","line":"  cout << \"while (\";"},
{"lineNum":"  776","line":"  while_.print_logic();"},
{"lineNum":"  777","line":"  cout << \")\\n{\\n\";"},
{"lineNum":"  778","line":"  while_.print_block();"},
{"lineNum":"  779","line":"  cout << \"}\\n\";"},
{"lineNum":"  780","line":"}"},
{"lineNum":"  781","line":""},
{"lineNum":"  782","line":"// statement"},
{"lineNum":"  783","line":"void mx_statement::assign(mx_command const & st)"},
{"lineNum":"  784","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  785","line":"  value = any(st);"},
{"lineNum":"  786","line":"  type = MX_COMMAND;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  787","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  788","line":""},
{"lineNum":"  789","line":"void mx_statement::assign(mx_if const & st)"},
{"lineNum":"  790","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  791","line":"  value = any(st);"},
{"lineNum":"  792","line":"  type = MX_IF;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  793","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  794","line":""},
{"lineNum":"  795","line":"void mx_statement::assign(mx_while const & st)"},
{"lineNum":"  796","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  797","line":"  value = any(st);"},
{"lineNum":"  798","line":"  type = MX_WHILE;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  799","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  800","line":""},
{"lineNum":"  801","line":"void mx_statement::assign(mx_line const & st)"},
{"lineNum":"  802","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  803","line":"  value = any(st);"},
{"lineNum":"  804","line":"  type = MX_LINE;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  805","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  806","line":""},
{"lineNum":"  807","line":"void mx_statement::interpret(MadX & mx)"},
{"lineNum":"  808","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  809","line":"  switch( type )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  810","line":"  {"},
{"lineNum":"  811","line":"  case MX_COMMAND:"},
{"lineNum":"  812","line":"    boost::any_cast<mx_command>(value).interpret(mx);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  813","line":"    break;"},
{"lineNum":"  814","line":"  case MX_LINE:"},
{"lineNum":"  815","line":"    boost::any_cast<mx_line>(value).interpret(mx);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  816","line":"    break;"},
{"lineNum":"  817","line":"  case MX_IF:"},
{"lineNum":"  818","line":"    boost::any_cast<mx_if>(value).interpret(mx);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  819","line":"    break;"},
{"lineNum":"  820","line":"  case MX_WHILE:"},
{"lineNum":"  821","line":"    boost::any_cast<mx_while>(value).interpret(mx);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  822","line":"    break;"},
{"lineNum":"  823","line":"  case MX_NULL:"},
{"lineNum":"  824","line":"    break;"},
{"lineNum":"  825","line":"  default:"},
{"lineNum":"  826","line":"    throw runtime_error(\"mx_statement::interpret()  Unknown statement type\");","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  827","line":"  }"},
{"lineNum":"  828","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  829","line":""},
{"lineNum":"  830","line":"void mx_statement::print() const"},
{"lineNum":"  831","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  832","line":"  if( type==MX_COMMAND )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  833","line":"    return boost::any_cast<mx_command>(value).print();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  834","line":"  else if( type==MX_IF )"},
{"lineNum":"  835","line":"    return boost::any_cast<mx_if>(value).print();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  836","line":"  else if( type==MX_WHILE )"},
{"lineNum":"  837","line":"    return boost::any_cast<mx_while>(value).print();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  838","line":"  else"},
{"lineNum":"  839","line":"    throw runtime_error(\"mx_statement::print()  Unknown statement type\");","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  840","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  841","line":""},
{"lineNum":"  842","line":"// tree"},
{"lineNum":"  843","line":"void mx_tree::interpret(MadX & mx)"},
{"lineNum":"  844","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  845","line":"  for( mx_statements_t::iterator it = statements.begin()","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  846","line":"     ; it != statements.end(); ++it )"},
{"lineNum":"  847","line":"  {"},
{"lineNum":"  848","line":"    auto type = it->get_type();"},
{"lineNum":"  849","line":"    if (type==MX_COMMAND || type==MX_IF || type==MX_WHILE)","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  850","line":"    {"},
{"lineNum":"  851","line":"        it->interpret(mx);","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  852","line":"    }"},
{"lineNum":"  853","line":"  }"},
{"lineNum":"  854","line":""},
{"lineNum":"  855","line":"  for( mx_statements_t::iterator it = statements.begin()","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  856","line":"     ; it != statements.end(); ++it )"},
{"lineNum":"  857","line":"  {"},
{"lineNum":"  858","line":"    auto type = it->get_type();"},
{"lineNum":"  859","line":"    if (type!=MX_COMMAND && type!=MX_IF && type!=MX_WHILE)","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  860","line":"    {"},
{"lineNum":"  861","line":"        it->interpret(mx);","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  862","line":"    }"},
{"lineNum":"  863","line":"  }"},
{"lineNum":"  864","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  865","line":""},
{"lineNum":"  866","line":"void mx_tree::print() const"},
{"lineNum":"  867","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  868","line":"  for_each(statements.begin(), statements.end(), detail::print<mx_statement>);"},
{"lineNum":"  869","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  870","line":""},
{"lineNum":"  871","line":""},
{"lineNum":"  872","line":""},
{"lineNum":"  873","line":""},
{"lineNum":"  874","line":""},
{"lineNum":"  875","line":""},
{"lineNum":"  876","line":""},
{"lineNum":"  877","line":""},
{"lineNum":"  878","line":""},
{"lineNum":"  879","line":""},
{"lineNum":"  880","line":""},
{"lineNum":"  881","line":""},
{"lineNum":"  882","line":""},
{"lineNum":"  883","line":""},
{"lineNum":"  884","line":""},
{"lineNum":"  885","line":""},
{"lineNum":"  886","line":""},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:41", "instrumented" : 303, "covered" : 0,};
var merged_data = [];
