var data = {lines:[
{"lineNum":"    1","line":"// -*- C++ -*-"},
{"lineNum":"    2","line":"//===--------------------------- sstream ----------------------------------===//"},
{"lineNum":"    3","line":"//"},
{"lineNum":"    4","line":"// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions."},
{"lineNum":"    5","line":"// See https://llvm.org/LICENSE.txt for license information."},
{"lineNum":"    6","line":"// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception"},
{"lineNum":"    7","line":"//"},
{"lineNum":"    8","line":"//===----------------------------------------------------------------------===//"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"#ifndef _LIBCPP_SSTREAM"},
{"lineNum":"   11","line":"#define _LIBCPP_SSTREAM"},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"/*"},
{"lineNum":"   14","line":"    sstream synopsis"},
{"lineNum":"   15","line":""},
{"lineNum":"   16","line":"template <class charT, class traits = char_traits<charT>, class Allocator = allocator<charT> >"},
{"lineNum":"   17","line":"class basic_stringbuf"},
{"lineNum":"   18","line":"    : public basic_streambuf<charT, traits>"},
{"lineNum":"   19","line":"{"},
{"lineNum":"   20","line":"public:"},
{"lineNum":"   21","line":"    typedef charT                          char_type;"},
{"lineNum":"   22","line":"    typedef traits                         traits_type;"},
{"lineNum":"   23","line":"    typedef typename traits_type::int_type int_type;"},
{"lineNum":"   24","line":"    typedef typename traits_type::pos_type pos_type;"},
{"lineNum":"   25","line":"    typedef typename traits_type::off_type off_type;"},
{"lineNum":"   26","line":"    typedef Allocator                      allocator_type;"},
{"lineNum":"   27","line":""},
{"lineNum":"   28","line":"    // 27.8.1.1 [stringbuf.cons], constructors:"},
{"lineNum":"   29","line":"    explicit basic_stringbuf(ios_base::openmode which = ios_base::in | ios_base::out); // before C++20"},
{"lineNum":"   30","line":"    basic_stringbuf() : basic_stringbuf(ios_base::in | ios_base::out) {}               // C++20"},
{"lineNum":"   31","line":"    explicit basic_stringbuf(ios_base::openmode which);                                // C++20"},
{"lineNum":"   32","line":"    explicit basic_stringbuf(const basic_string<char_type, traits_type, allocator_type>& str,"},
{"lineNum":"   33","line":"                             ios_base::openmode which = ios_base::in | ios_base::out);"},
{"lineNum":"   34","line":"    basic_stringbuf(basic_stringbuf&& rhs);"},
{"lineNum":"   35","line":""},
{"lineNum":"   36","line":"    // 27.8.1.2 Assign and swap:"},
{"lineNum":"   37","line":"    basic_stringbuf& operator=(basic_stringbuf&& rhs);"},
{"lineNum":"   38","line":"    void swap(basic_stringbuf& rhs);"},
{"lineNum":"   39","line":""},
{"lineNum":"   40","line":"    // 27.8.1.3 Get and set:"},
{"lineNum":"   41","line":"    basic_string<char_type, traits_type, allocator_type> str() const;"},
{"lineNum":"   42","line":"    void str(const basic_string<char_type, traits_type, allocator_type>& s);"},
{"lineNum":"   43","line":""},
{"lineNum":"   44","line":"protected:"},
{"lineNum":"   45","line":"    // 27.8.1.4 Overridden virtual functions:"},
{"lineNum":"   46","line":"    virtual int_type underflow();"},
{"lineNum":"   47","line":"    virtual int_type pbackfail(int_type c = traits_type::eof());"},
{"lineNum":"   48","line":"    virtual int_type overflow (int_type c = traits_type::eof());"},
{"lineNum":"   49","line":"    virtual basic_streambuf<char_type, traits_type>* setbuf(char_type*, streamsize);"},
{"lineNum":"   50","line":"    virtual pos_type seekoff(off_type off, ios_base::seekdir way,"},
{"lineNum":"   51","line":"                             ios_base::openmode which = ios_base::in | ios_base::out);"},
{"lineNum":"   52","line":"    virtual pos_type seekpos(pos_type sp,"},
{"lineNum":"   53","line":"                             ios_base::openmode which = ios_base::in | ios_base::out);"},
{"lineNum":"   54","line":"};"},
{"lineNum":"   55","line":""},
{"lineNum":"   56","line":"template <class charT, class traits, class Allocator>"},
{"lineNum":"   57","line":"  void swap(basic_stringbuf<charT, traits, Allocator>& x,"},
{"lineNum":"   58","line":"            basic_stringbuf<charT, traits, Allocator>& y);"},
{"lineNum":"   59","line":""},
{"lineNum":"   60","line":"typedef basic_stringbuf<char>    stringbuf;"},
{"lineNum":"   61","line":"typedef basic_stringbuf<wchar_t> wstringbuf;"},
{"lineNum":"   62","line":""},
{"lineNum":"   63","line":"template <class charT, class traits = char_traits<charT>, class Allocator = allocator<charT> >"},
{"lineNum":"   64","line":"class basic_istringstream"},
{"lineNum":"   65","line":"    : public basic_istream<charT, traits>"},
{"lineNum":"   66","line":"{"},
{"lineNum":"   67","line":"public:"},
{"lineNum":"   68","line":"    typedef charT                          char_type;"},
{"lineNum":"   69","line":"    typedef traits                         traits_type;"},
{"lineNum":"   70","line":"    typedef typename traits_type::int_type int_type;"},
{"lineNum":"   71","line":"    typedef typename traits_type::pos_type pos_type;"},
{"lineNum":"   72","line":"    typedef typename traits_type::off_type off_type;"},
{"lineNum":"   73","line":"    typedef Allocator                      allocator_type;"},
{"lineNum":"   74","line":""},
{"lineNum":"   75","line":"    // 27.8.2.1 Constructors:"},
{"lineNum":"   76","line":"    explicit basic_istringstream(ios_base::openmode which = ios_base::in); // before C++20"},
{"lineNum":"   77","line":"    basic_istringstream() : basic_istringstream(ios_base::in) {}           // C++20"},
{"lineNum":"   78","line":"    explicit basic_istringstream(ios_base::openmode which);                // C++20"},
{"lineNum":"   79","line":""},
{"lineNum":"   80","line":"    explicit basic_istringstream(const basic_string<char_type, traits_type,allocator_type>& str,"},
{"lineNum":"   81","line":"                                 ios_base::openmode which = ios_base::in);"},
{"lineNum":"   82","line":"    basic_istringstream(basic_istringstream&& rhs);"},
{"lineNum":"   83","line":""},
{"lineNum":"   84","line":"    // 27.8.2.2 Assign and swap:"},
{"lineNum":"   85","line":"    basic_istringstream& operator=(basic_istringstream&& rhs);"},
{"lineNum":"   86","line":"    void swap(basic_istringstream& rhs);"},
{"lineNum":"   87","line":""},
{"lineNum":"   88","line":"    // 27.8.2.3 Members:"},
{"lineNum":"   89","line":"    basic_stringbuf<char_type, traits_type, allocator_type>* rdbuf() const;"},
{"lineNum":"   90","line":"    basic_string<char_type, traits_type, allocator_type> str() const;"},
{"lineNum":"   91","line":"    void str(const basic_string<char_type, traits_type, allocator_type>& s);"},
{"lineNum":"   92","line":"};"},
{"lineNum":"   93","line":""},
{"lineNum":"   94","line":"template <class charT, class traits, class Allocator>"},
{"lineNum":"   95","line":"  void swap(basic_istringstream<charT, traits, Allocator>& x,"},
{"lineNum":"   96","line":"            basic_istringstream<charT, traits, Allocator>& y);"},
{"lineNum":"   97","line":""},
{"lineNum":"   98","line":"typedef basic_istringstream<char>    istringstream;"},
{"lineNum":"   99","line":"typedef basic_istringstream<wchar_t> wistringstream;"},
{"lineNum":"  100","line":""},
{"lineNum":"  101","line":"template <class charT, class traits = char_traits<charT>, class Allocator = allocator<charT> >"},
{"lineNum":"  102","line":"class basic_ostringstream"},
{"lineNum":"  103","line":"    : public basic_ostream<charT, traits>"},
{"lineNum":"  104","line":"{"},
{"lineNum":"  105","line":"public:"},
{"lineNum":"  106","line":"    // types:"},
{"lineNum":"  107","line":"    typedef charT                          char_type;"},
{"lineNum":"  108","line":"    typedef traits                         traits_type;"},
{"lineNum":"  109","line":"    typedef typename traits_type::int_type int_type;"},
{"lineNum":"  110","line":"    typedef typename traits_type::pos_type pos_type;"},
{"lineNum":"  111","line":"    typedef typename traits_type::off_type off_type;"},
{"lineNum":"  112","line":"    typedef Allocator                      allocator_type;"},
{"lineNum":"  113","line":""},
{"lineNum":"  114","line":"    // 27.8.3.1 Constructors/destructor:"},
{"lineNum":"  115","line":"    explicit basic_ostringstream(ios_base::openmode which = ios_base::out); // before C++20"},
{"lineNum":"  116","line":"    basic_ostringstream() : basic_ostringstream(ios_base::out) {}           // C++20"},
{"lineNum":"  117","line":"    explicit basic_ostringstream(ios_base::openmode which);                 // C++20"},
{"lineNum":"  118","line":""},
{"lineNum":"  119","line":"    explicit basic_ostringstream(const basic_string<char_type, traits_type, allocator_type>& str,"},
{"lineNum":"  120","line":"                                 ios_base::openmode which = ios_base::out);"},
{"lineNum":"  121","line":"    basic_ostringstream(basic_ostringstream&& rhs);"},
{"lineNum":"  122","line":""},
{"lineNum":"  123","line":"    // 27.8.3.2 Assign/swap:"},
{"lineNum":"  124","line":"    basic_ostringstream& operator=(basic_ostringstream&& rhs);"},
{"lineNum":"  125","line":"    void swap(basic_ostringstream& rhs);"},
{"lineNum":"  126","line":""},
{"lineNum":"  127","line":"    // 27.8.3.3 Members:"},
{"lineNum":"  128","line":"    basic_stringbuf<char_type, traits_type, allocator_type>* rdbuf() const;"},
{"lineNum":"  129","line":"    basic_string<char_type, traits_type, allocator_type> str() const;"},
{"lineNum":"  130","line":"    void str(const basic_string<char_type, traits_type, allocator_type>& s);"},
{"lineNum":"  131","line":"};"},
{"lineNum":"  132","line":""},
{"lineNum":"  133","line":"template <class charT, class traits, class Allocator>"},
{"lineNum":"  134","line":"  void swap(basic_ostringstream<charT, traits, Allocator>& x,"},
{"lineNum":"  135","line":"            basic_ostringstream<charT, traits, Allocator>& y);"},
{"lineNum":"  136","line":""},
{"lineNum":"  137","line":"typedef basic_ostringstream<char>    ostringstream;"},
{"lineNum":"  138","line":"typedef basic_ostringstream<wchar_t> wostringstream;"},
{"lineNum":"  139","line":""},
{"lineNum":"  140","line":"template <class charT, class traits = char_traits<charT>, class Allocator = allocator<charT> >"},
{"lineNum":"  141","line":"class basic_stringstream"},
{"lineNum":"  142","line":"    : public basic_iostream<charT, traits>"},
{"lineNum":"  143","line":"{"},
{"lineNum":"  144","line":"public:"},
{"lineNum":"  145","line":"    // types:"},
{"lineNum":"  146","line":"    typedef charT                          char_type;"},
{"lineNum":"  147","line":"    typedef traits                         traits_type;"},
{"lineNum":"  148","line":"    typedef typename traits_type::int_type int_type;"},
{"lineNum":"  149","line":"    typedef typename traits_type::pos_type pos_type;"},
{"lineNum":"  150","line":"    typedef typename traits_type::off_type off_type;"},
{"lineNum":"  151","line":"    typedef Allocator                      allocator_type;"},
{"lineNum":"  152","line":""},
{"lineNum":"  153","line":"    // constructors/destructor"},
{"lineNum":"  154","line":"    explicit basic_stringstream(ios_base::openmode which = ios_base::out | ios_base::in); // before C++20"},
{"lineNum":"  155","line":"    basic_stringstream() : basic_stringstream(ios_base::out | ios_base::in) {}            // C++20"},
{"lineNum":"  156","line":"    explicit basic_stringstream(ios_base::openmode which);                                // C++20"},
{"lineNum":"  157","line":""},
{"lineNum":"  158","line":"    explicit basic_stringstream(const basic_string<char_type, traits_type, allocator_type>& str,"},
{"lineNum":"  159","line":"                                ios_base::openmode which = ios_base::out|ios_base::in);"},
{"lineNum":"  160","line":"    basic_stringstream(basic_stringstream&& rhs);"},
{"lineNum":"  161","line":""},
{"lineNum":"  162","line":"    // 27.8.5.1 Assign/swap:"},
{"lineNum":"  163","line":"    basic_stringstream& operator=(basic_stringstream&& rhs);"},
{"lineNum":"  164","line":"    void swap(basic_stringstream& rhs);"},
{"lineNum":"  165","line":""},
{"lineNum":"  166","line":"    // Members:"},
{"lineNum":"  167","line":"    basic_stringbuf<char_type, traits_type, allocator_type>* rdbuf() const;"},
{"lineNum":"  168","line":"    basic_string<char_type, traits_type, allocator_type> str() const;"},
{"lineNum":"  169","line":"    void str(const basic_string<char_type, traits_type, allocator_type>& str);"},
{"lineNum":"  170","line":"};"},
{"lineNum":"  171","line":""},
{"lineNum":"  172","line":"template <class charT, class traits, class Allocator>"},
{"lineNum":"  173","line":"  void swap(basic_stringstream<charT, traits, Allocator>& x,"},
{"lineNum":"  174","line":"            basic_stringstream<charT, traits, Allocator>& y);"},
{"lineNum":"  175","line":""},
{"lineNum":"  176","line":"typedef basic_stringstream<char>    stringstream;"},
{"lineNum":"  177","line":"typedef basic_stringstream<wchar_t> wstringstream;"},
{"lineNum":"  178","line":""},
{"lineNum":"  179","line":"}  // std"},
{"lineNum":"  180","line":""},
{"lineNum":"  181","line":"*/"},
{"lineNum":"  182","line":""},
{"lineNum":"  183","line":"#include <__config>"},
{"lineNum":"  184","line":"#include <istream>"},
{"lineNum":"  185","line":"#include <ostream>"},
{"lineNum":"  186","line":"#include <string>"},
{"lineNum":"  187","line":""},
{"lineNum":"  188","line":"#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)"},
{"lineNum":"  189","line":"#pragma GCC system_header"},
{"lineNum":"  190","line":"#endif"},
{"lineNum":"  191","line":""},
{"lineNum":"  192","line":"_LIBCPP_PUSH_MACROS"},
{"lineNum":"  193","line":"#include <__undef_macros>"},
{"lineNum":"  194","line":""},
{"lineNum":"  195","line":""},
{"lineNum":"  196","line":"_LIBCPP_BEGIN_NAMESPACE_STD"},
{"lineNum":"  197","line":""},
{"lineNum":"  198","line":"// basic_stringbuf"},
{"lineNum":"  199","line":""},
{"lineNum":"  200","line":"template <class _CharT, class _Traits, class _Allocator>"},
{"lineNum":"  201","line":"class _LIBCPP_TEMPLATE_VIS basic_stringbuf"},
{"lineNum":"  202","line":"    : public basic_streambuf<_CharT, _Traits>"},
{"lineNum":"  203","line":"{"},
{"lineNum":"  204","line":"public:"},
{"lineNum":"  205","line":"    typedef _CharT                         char_type;"},
{"lineNum":"  206","line":"    typedef _Traits                        traits_type;"},
{"lineNum":"  207","line":"    typedef typename traits_type::int_type int_type;"},
{"lineNum":"  208","line":"    typedef typename traits_type::pos_type pos_type;"},
{"lineNum":"  209","line":"    typedef typename traits_type::off_type off_type;"},
{"lineNum":"  210","line":"    typedef _Allocator                     allocator_type;"},
{"lineNum":"  211","line":""},
{"lineNum":"  212","line":"    typedef basic_string<char_type, traits_type, allocator_type> string_type;"},
{"lineNum":"  213","line":""},
{"lineNum":"  214","line":"private:"},
{"lineNum":"  215","line":""},
{"lineNum":"  216","line":"    string_type __str_;"},
{"lineNum":"  217","line":"    mutable char_type* __hm_;"},
{"lineNum":"  218","line":"    ios_base::openmode __mode_;"},
{"lineNum":"  219","line":""},
{"lineNum":"  220","line":"public:"},
{"lineNum":"  221","line":"    // 30.8.2.1 [stringbuf.cons], constructors"},
{"lineNum":"  222","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  223","line":"    basic_stringbuf()"},
{"lineNum":"  224","line":"        : __hm_(nullptr), __mode_(ios_base::in | ios_base::out) {}"},
{"lineNum":"  225","line":""},
{"lineNum":"  226","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  227","line":"    explicit basic_stringbuf(ios_base::openmode __wch)","class":"lineNoCov","hits":"0","possible_hits":"46",},
{"lineNum":"  228","line":"        : __hm_(nullptr), __mode_(__wch) {}","class":"lineNoCov","hits":"0","possible_hits":"46",},
{"lineNum":"  229","line":""},
{"lineNum":"  230","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  231","line":"    explicit basic_stringbuf(const string_type& __s,","class":"lineNoCov","hits":"0","possible_hits":"8",},
{"lineNum":"  232","line":"                             ios_base::openmode __wch = ios_base::in | ios_base::out)"},
{"lineNum":"  233","line":"        : __str_(__s.get_allocator()), __hm_(nullptr), __mode_(__wch)","class":"lineNoCov","hits":"0","possible_hits":"8",},
{"lineNum":"  234","line":"    {","class":"lineNoCov","hits":"0","possible_hits":"9",},
{"lineNum":"  235","line":"        str(__s);","class":"lineNoCov","hits":"0","possible_hits":"8",},
{"lineNum":"  236","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"8",},
{"lineNum":"  237","line":""},
{"lineNum":"  238","line":"    basic_stringbuf(basic_stringbuf&& __rhs);"},
{"lineNum":"  239","line":""},
{"lineNum":"  240","line":"    // 27.8.1.2 Assign and swap:"},
{"lineNum":"  241","line":"    basic_stringbuf& operator=(basic_stringbuf&& __rhs);"},
{"lineNum":"  242","line":"    void swap(basic_stringbuf& __rhs);"},
{"lineNum":"  243","line":""},
{"lineNum":"  244","line":"    // 27.8.1.3 Get and set:"},
{"lineNum":"  245","line":"    string_type str() const;"},
{"lineNum":"  246","line":"    void str(const string_type& __s);"},
{"lineNum":"  247","line":""},
{"lineNum":"  248","line":"protected:"},
{"lineNum":"  249","line":"    // 27.8.1.4 Overridden virtual functions:"},
{"lineNum":"  250","line":"    virtual int_type underflow();"},
{"lineNum":"  251","line":"    virtual int_type pbackfail(int_type __c = traits_type::eof());"},
{"lineNum":"  252","line":"    virtual int_type overflow (int_type __c = traits_type::eof());"},
{"lineNum":"  253","line":"    virtual pos_type seekoff(off_type __off, ios_base::seekdir __way,"},
{"lineNum":"  254","line":"                             ios_base::openmode __wch = ios_base::in | ios_base::out);"},
{"lineNum":"  255","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  256","line":"    virtual pos_type seekpos(pos_type __sp,"},
{"lineNum":"  257","line":"                             ios_base::openmode __wch = ios_base::in | ios_base::out) {","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  258","line":"        return seekoff(__sp, ios_base::beg, __wch);","class":"lineNoCov","hits":"0","possible_hits":"22",},
{"lineNum":"  259","line":"    }"},
{"lineNum":"  260","line":"};"},
{"lineNum":"  261","line":""},
{"lineNum":"  262","line":"template <class _CharT, class _Traits, class _Allocator>"},
{"lineNum":"  263","line":"basic_stringbuf<_CharT, _Traits, _Allocator>::basic_stringbuf(basic_stringbuf&& __rhs)"},
{"lineNum":"  264","line":"    : __mode_(__rhs.__mode_)"},
{"lineNum":"  265","line":"{"},
{"lineNum":"  266","line":"    char_type* __p = const_cast<char_type*>(__rhs.__str_.data());"},
{"lineNum":"  267","line":"    ptrdiff_t __binp = -1;"},
{"lineNum":"  268","line":"    ptrdiff_t __ninp = -1;"},
{"lineNum":"  269","line":"    ptrdiff_t __einp = -1;"},
{"lineNum":"  270","line":"    if (__rhs.eback() != nullptr)"},
{"lineNum":"  271","line":"    {"},
{"lineNum":"  272","line":"        __binp = __rhs.eback() - __p;"},
{"lineNum":"  273","line":"        __ninp = __rhs.gptr() - __p;"},
{"lineNum":"  274","line":"        __einp = __rhs.egptr() - __p;"},
{"lineNum":"  275","line":"    }"},
{"lineNum":"  276","line":"    ptrdiff_t __bout = -1;"},
{"lineNum":"  277","line":"    ptrdiff_t __nout = -1;"},
{"lineNum":"  278","line":"    ptrdiff_t __eout = -1;"},
{"lineNum":"  279","line":"    if (__rhs.pbase() != nullptr)"},
{"lineNum":"  280","line":"    {"},
{"lineNum":"  281","line":"        __bout = __rhs.pbase() - __p;"},
{"lineNum":"  282","line":"        __nout = __rhs.pptr() - __p;"},
{"lineNum":"  283","line":"        __eout = __rhs.epptr() - __p;"},
{"lineNum":"  284","line":"    }"},
{"lineNum":"  285","line":"    ptrdiff_t __hm = __rhs.__hm_ == nullptr ? -1 : __rhs.__hm_ - __p;"},
{"lineNum":"  286","line":"    __str_ = _VSTD::move(__rhs.__str_);"},
{"lineNum":"  287","line":"    __p = const_cast<char_type*>(__str_.data());"},
{"lineNum":"  288","line":"    if (__binp != -1)"},
{"lineNum":"  289","line":"        this->setg(__p + __binp, __p + __ninp, __p + __einp);"},
{"lineNum":"  290","line":"    if (__bout != -1)"},
{"lineNum":"  291","line":"    {"},
{"lineNum":"  292","line":"        this->setp(__p + __bout, __p + __eout);"},
{"lineNum":"  293","line":"        this->__pbump(__nout);"},
{"lineNum":"  294","line":"    }"},
{"lineNum":"  295","line":"    __hm_ = __hm == -1 ? nullptr : __p + __hm;"},
{"lineNum":"  296","line":"    __p = const_cast<char_type*>(__rhs.__str_.data());"},
{"lineNum":"  297","line":"    __rhs.setg(__p, __p, __p);"},
{"lineNum":"  298","line":"    __rhs.setp(__p, __p);"},
{"lineNum":"  299","line":"    __rhs.__hm_ = __p;"},
{"lineNum":"  300","line":"    this->pubimbue(__rhs.getloc());"},
{"lineNum":"  301","line":"}"},
{"lineNum":"  302","line":""},
{"lineNum":"  303","line":"template <class _CharT, class _Traits, class _Allocator>"},
{"lineNum":"  304","line":"basic_stringbuf<_CharT, _Traits, _Allocator>&"},
{"lineNum":"  305","line":"basic_stringbuf<_CharT, _Traits, _Allocator>::operator=(basic_stringbuf&& __rhs)"},
{"lineNum":"  306","line":"{"},
{"lineNum":"  307","line":"    char_type* __p = const_cast<char_type*>(__rhs.__str_.data());"},
{"lineNum":"  308","line":"    ptrdiff_t __binp = -1;"},
{"lineNum":"  309","line":"    ptrdiff_t __ninp = -1;"},
{"lineNum":"  310","line":"    ptrdiff_t __einp = -1;"},
{"lineNum":"  311","line":"    if (__rhs.eback() != nullptr)"},
{"lineNum":"  312","line":"    {"},
{"lineNum":"  313","line":"        __binp = __rhs.eback() - __p;"},
{"lineNum":"  314","line":"        __ninp = __rhs.gptr() - __p;"},
{"lineNum":"  315","line":"        __einp = __rhs.egptr() - __p;"},
{"lineNum":"  316","line":"    }"},
{"lineNum":"  317","line":"    ptrdiff_t __bout = -1;"},
{"lineNum":"  318","line":"    ptrdiff_t __nout = -1;"},
{"lineNum":"  319","line":"    ptrdiff_t __eout = -1;"},
{"lineNum":"  320","line":"    if (__rhs.pbase() != nullptr)"},
{"lineNum":"  321","line":"    {"},
{"lineNum":"  322","line":"        __bout = __rhs.pbase() - __p;"},
{"lineNum":"  323","line":"        __nout = __rhs.pptr() - __p;"},
{"lineNum":"  324","line":"        __eout = __rhs.epptr() - __p;"},
{"lineNum":"  325","line":"    }"},
{"lineNum":"  326","line":"    ptrdiff_t __hm = __rhs.__hm_ == nullptr ? -1 : __rhs.__hm_ - __p;"},
{"lineNum":"  327","line":"    __str_ = _VSTD::move(__rhs.__str_);"},
{"lineNum":"  328","line":"    __p = const_cast<char_type*>(__str_.data());"},
{"lineNum":"  329","line":"    if (__binp != -1)"},
{"lineNum":"  330","line":"        this->setg(__p + __binp, __p + __ninp, __p + __einp);"},
{"lineNum":"  331","line":"    else"},
{"lineNum":"  332","line":"        this->setg(nullptr, nullptr, nullptr);"},
{"lineNum":"  333","line":"    if (__bout != -1)"},
{"lineNum":"  334","line":"    {"},
{"lineNum":"  335","line":"        this->setp(__p + __bout, __p + __eout);"},
{"lineNum":"  336","line":"        this->__pbump(__nout);"},
{"lineNum":"  337","line":"    }"},
{"lineNum":"  338","line":"    else"},
{"lineNum":"  339","line":"        this->setp(nullptr, nullptr);"},
{"lineNum":"  340","line":""},
{"lineNum":"  341","line":"    __hm_ = __hm == -1 ? nullptr : __p + __hm;"},
{"lineNum":"  342","line":"    __mode_ = __rhs.__mode_;"},
{"lineNum":"  343","line":"    __p = const_cast<char_type*>(__rhs.__str_.data());"},
{"lineNum":"  344","line":"    __rhs.setg(__p, __p, __p);"},
{"lineNum":"  345","line":"    __rhs.setp(__p, __p);"},
{"lineNum":"  346","line":"    __rhs.__hm_ = __p;"},
{"lineNum":"  347","line":"    this->pubimbue(__rhs.getloc());"},
{"lineNum":"  348","line":"    return *this;"},
{"lineNum":"  349","line":"}"},
{"lineNum":"  350","line":""},
{"lineNum":"  351","line":"template <class _CharT, class _Traits, class _Allocator>"},
{"lineNum":"  352","line":"void"},
{"lineNum":"  353","line":"basic_stringbuf<_CharT, _Traits, _Allocator>::swap(basic_stringbuf& __rhs)"},
{"lineNum":"  354","line":"{"},
{"lineNum":"  355","line":"    char_type* __p = const_cast<char_type*>(__rhs.__str_.data());"},
{"lineNum":"  356","line":"    ptrdiff_t __rbinp = -1;"},
{"lineNum":"  357","line":"    ptrdiff_t __rninp = -1;"},
{"lineNum":"  358","line":"    ptrdiff_t __reinp = -1;"},
{"lineNum":"  359","line":"    if (__rhs.eback() != nullptr)"},
{"lineNum":"  360","line":"    {"},
{"lineNum":"  361","line":"        __rbinp = __rhs.eback() - __p;"},
{"lineNum":"  362","line":"        __rninp = __rhs.gptr() - __p;"},
{"lineNum":"  363","line":"        __reinp = __rhs.egptr() - __p;"},
{"lineNum":"  364","line":"    }"},
{"lineNum":"  365","line":"    ptrdiff_t __rbout = -1;"},
{"lineNum":"  366","line":"    ptrdiff_t __rnout = -1;"},
{"lineNum":"  367","line":"    ptrdiff_t __reout = -1;"},
{"lineNum":"  368","line":"    if (__rhs.pbase() != nullptr)"},
{"lineNum":"  369","line":"    {"},
{"lineNum":"  370","line":"        __rbout = __rhs.pbase() - __p;"},
{"lineNum":"  371","line":"        __rnout = __rhs.pptr() - __p;"},
{"lineNum":"  372","line":"        __reout = __rhs.epptr() - __p;"},
{"lineNum":"  373","line":"    }"},
{"lineNum":"  374","line":"    ptrdiff_t __rhm = __rhs.__hm_ == nullptr ? -1 : __rhs.__hm_ - __p;"},
{"lineNum":"  375","line":"    __p = const_cast<char_type*>(__str_.data());"},
{"lineNum":"  376","line":"    ptrdiff_t __lbinp = -1;"},
{"lineNum":"  377","line":"    ptrdiff_t __lninp = -1;"},
{"lineNum":"  378","line":"    ptrdiff_t __leinp = -1;"},
{"lineNum":"  379","line":"    if (this->eback() != nullptr)"},
{"lineNum":"  380","line":"    {"},
{"lineNum":"  381","line":"        __lbinp = this->eback() - __p;"},
{"lineNum":"  382","line":"        __lninp = this->gptr() - __p;"},
{"lineNum":"  383","line":"        __leinp = this->egptr() - __p;"},
{"lineNum":"  384","line":"    }"},
{"lineNum":"  385","line":"    ptrdiff_t __lbout = -1;"},
{"lineNum":"  386","line":"    ptrdiff_t __lnout = -1;"},
{"lineNum":"  387","line":"    ptrdiff_t __leout = -1;"},
{"lineNum":"  388","line":"    if (this->pbase() != nullptr)"},
{"lineNum":"  389","line":"    {"},
{"lineNum":"  390","line":"        __lbout = this->pbase() - __p;"},
{"lineNum":"  391","line":"        __lnout = this->pptr() - __p;"},
{"lineNum":"  392","line":"        __leout = this->epptr() - __p;"},
{"lineNum":"  393","line":"    }"},
{"lineNum":"  394","line":"    ptrdiff_t __lhm = __hm_ == nullptr ? -1 : __hm_ - __p;"},
{"lineNum":"  395","line":"    _VSTD::swap(__mode_, __rhs.__mode_);"},
{"lineNum":"  396","line":"    __str_.swap(__rhs.__str_);"},
{"lineNum":"  397","line":"    __p = const_cast<char_type*>(__str_.data());"},
{"lineNum":"  398","line":"    if (__rbinp != -1)"},
{"lineNum":"  399","line":"        this->setg(__p + __rbinp, __p + __rninp, __p + __reinp);"},
{"lineNum":"  400","line":"    else"},
{"lineNum":"  401","line":"        this->setg(nullptr, nullptr, nullptr);"},
{"lineNum":"  402","line":"    if (__rbout != -1)"},
{"lineNum":"  403","line":"    {"},
{"lineNum":"  404","line":"        this->setp(__p + __rbout, __p + __reout);"},
{"lineNum":"  405","line":"        this->__pbump(__rnout);"},
{"lineNum":"  406","line":"    }"},
{"lineNum":"  407","line":"    else"},
{"lineNum":"  408","line":"        this->setp(nullptr, nullptr);"},
{"lineNum":"  409","line":"    __hm_ = __rhm == -1 ? nullptr : __p + __rhm;"},
{"lineNum":"  410","line":"    __p = const_cast<char_type*>(__rhs.__str_.data());"},
{"lineNum":"  411","line":"    if (__lbinp != -1)"},
{"lineNum":"  412","line":"        __rhs.setg(__p + __lbinp, __p + __lninp, __p + __leinp);"},
{"lineNum":"  413","line":"    else"},
{"lineNum":"  414","line":"        __rhs.setg(nullptr, nullptr, nullptr);"},
{"lineNum":"  415","line":"    if (__lbout != -1)"},
{"lineNum":"  416","line":"    {"},
{"lineNum":"  417","line":"        __rhs.setp(__p + __lbout, __p + __leout);"},
{"lineNum":"  418","line":"        __rhs.__pbump(__lnout);"},
{"lineNum":"  419","line":"    }"},
{"lineNum":"  420","line":"    else"},
{"lineNum":"  421","line":"        __rhs.setp(nullptr, nullptr);"},
{"lineNum":"  422","line":"    __rhs.__hm_ = __lhm == -1 ? nullptr : __p + __lhm;"},
{"lineNum":"  423","line":"    locale __tl = __rhs.getloc();"},
{"lineNum":"  424","line":"    __rhs.pubimbue(this->getloc());"},
{"lineNum":"  425","line":"    this->pubimbue(__tl);"},
{"lineNum":"  426","line":"}"},
{"lineNum":"  427","line":""},
{"lineNum":"  428","line":"template <class _CharT, class _Traits, class _Allocator>"},
{"lineNum":"  429","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  430","line":"void"},
{"lineNum":"  431","line":"swap(basic_stringbuf<_CharT, _Traits, _Allocator>& __x,"},
{"lineNum":"  432","line":"     basic_stringbuf<_CharT, _Traits, _Allocator>& __y)"},
{"lineNum":"  433","line":"{"},
{"lineNum":"  434","line":"    __x.swap(__y);"},
{"lineNum":"  435","line":"}"},
{"lineNum":"  436","line":""},
{"lineNum":"  437","line":"template <class _CharT, class _Traits, class _Allocator>"},
{"lineNum":"  438","line":"basic_string<_CharT, _Traits, _Allocator>"},
{"lineNum":"  439","line":"basic_stringbuf<_CharT, _Traits, _Allocator>::str() const"},
{"lineNum":"  440","line":"{","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  441","line":"    if (__mode_ & ios_base::out)","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  442","line":"    {"},
{"lineNum":"  443","line":"        if (__hm_ < this->pptr())","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  444","line":"            __hm_ = this->pptr();","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  445","line":"        return string_type(this->pbase(), __hm_, __str_.get_allocator());"},
{"lineNum":"  446","line":"    }"},
{"lineNum":"  447","line":"    else if (__mode_ & ios_base::in)","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  448","line":"        return string_type(this->eback(), this->egptr(), __str_.get_allocator());","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  449","line":"    return string_type(__str_.get_allocator());","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  450","line":"}","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  451","line":""},
{"lineNum":"  452","line":"template <class _CharT, class _Traits, class _Allocator>"},
{"lineNum":"  453","line":"void"},
{"lineNum":"  454","line":"basic_stringbuf<_CharT, _Traits, _Allocator>::str(const string_type& __s)"},
{"lineNum":"  455","line":"{","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  456","line":"    __str_ = __s;","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  457","line":"    __hm_ = nullptr;","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  458","line":"    if (__mode_ & ios_base::in)","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  459","line":"    {"},
{"lineNum":"  460","line":"        __hm_ = const_cast<char_type*>(__str_.data()) + __str_.size();","class":"lineNoCov","hits":"0","possible_hits":"7",},
{"lineNum":"  461","line":"        this->setg(const_cast<char_type*>(__str_.data()),"},
{"lineNum":"  462","line":"                   const_cast<char_type*>(__str_.data()),"},
{"lineNum":"  463","line":"                   __hm_);"},
{"lineNum":"  464","line":"    }"},
{"lineNum":"  465","line":"    if (__mode_ & ios_base::out)","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  466","line":"    {"},
{"lineNum":"  467","line":"        typename string_type::size_type __sz = __str_.size();"},
{"lineNum":"  468","line":"        __hm_ = const_cast<char_type*>(__str_.data()) + __sz;","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  469","line":"        __str_.resize(__str_.capacity());"},
{"lineNum":"  470","line":"        this->setp(const_cast<char_type*>(__str_.data()),"},
{"lineNum":"  471","line":"                   const_cast<char_type*>(__str_.data()) + __str_.size());","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  472","line":"        if (__mode_ & (ios_base::app | ios_base::ate))","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  473","line":"        {"},
{"lineNum":"  474","line":"            while (__sz > INT_MAX)","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  475","line":"            {"},
{"lineNum":"  476","line":"                this->pbump(INT_MAX);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  477","line":"                __sz -= INT_MAX;"},
{"lineNum":"  478","line":"            }"},
{"lineNum":"  479","line":"            if (__sz > 0)","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  480","line":"                this->pbump(__sz);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  481","line":"        }"},
{"lineNum":"  482","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  483","line":"}","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  484","line":""},
{"lineNum":"  485","line":"template <class _CharT, class _Traits, class _Allocator>"},
{"lineNum":"  486","line":"typename basic_stringbuf<_CharT, _Traits, _Allocator>::int_type"},
{"lineNum":"  487","line":"basic_stringbuf<_CharT, _Traits, _Allocator>::underflow()"},
{"lineNum":"  488","line":"{","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  489","line":"    if (__hm_ < this->pptr())","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  490","line":"        __hm_ = this->pptr();","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  491","line":"    if (__mode_ & ios_base::in)","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  492","line":"    {"},
{"lineNum":"  493","line":"        if (this->egptr() < __hm_)","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  494","line":"            this->setg(this->eback(), this->gptr(), __hm_);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  495","line":"        if (this->gptr() < this->egptr())","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  496","line":"            return traits_type::to_int_type(*this->gptr());","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  497","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  498","line":"    return traits_type::eof();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  499","line":"}","class":"lineNoCov","hits":"0","possible_hits":"23",},
{"lineNum":"  500","line":""},
{"lineNum":"  501","line":"template <class _CharT, class _Traits, class _Allocator>"},
{"lineNum":"  502","line":"typename basic_stringbuf<_CharT, _Traits, _Allocator>::int_type"},
{"lineNum":"  503","line":"basic_stringbuf<_CharT, _Traits, _Allocator>::pbackfail(int_type __c)"},
{"lineNum":"  504","line":"{","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  505","line":"    if (__hm_ < this->pptr())","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  506","line":"        __hm_ = this->pptr();","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  507","line":"    if (this->eback() < this->gptr())","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  508","line":"    {"},
{"lineNum":"  509","line":"        if (traits_type::eq_int_type(__c, traits_type::eof()))","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  510","line":"        {"},
{"lineNum":"  511","line":"            this->setg(this->eback(), this->gptr()-1, __hm_);","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  512","line":"            return traits_type::not_eof(__c);"},
{"lineNum":"  513","line":"        }"},
{"lineNum":"  514","line":"        if ((__mode_ & ios_base::out) ||","class":"lineNoCov","hits":"0","possible_hits":"22",},
{"lineNum":"  515","line":"            traits_type::eq(traits_type::to_char_type(__c), this->gptr()[-1]))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  516","line":"        {"},
{"lineNum":"  517","line":"            this->setg(this->eback(), this->gptr()-1, __hm_);","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  518","line":"            *this->gptr() = traits_type::to_char_type(__c);","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  519","line":"            return __c;"},
{"lineNum":"  520","line":"        }"},
{"lineNum":"  521","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  522","line":"    return traits_type::eof();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  523","line":"}","class":"lineNoCov","hits":"0","possible_hits":"32",},
{"lineNum":"  524","line":""},
{"lineNum":"  525","line":"template <class _CharT, class _Traits, class _Allocator>"},
{"lineNum":"  526","line":"typename basic_stringbuf<_CharT, _Traits, _Allocator>::int_type"},
{"lineNum":"  527","line":"basic_stringbuf<_CharT, _Traits, _Allocator>::overflow(int_type __c)"},
{"lineNum":"  528","line":"{","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  529","line":"    if (!traits_type::eq_int_type(__c, traits_type::eof()))","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  530","line":"    {"},
{"lineNum":"  531","line":"        ptrdiff_t __ninp = this->gptr()  - this->eback();","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  532","line":"        if (this->pptr() == this->epptr())","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  533","line":"        {"},
{"lineNum":"  534","line":"            if (!(__mode_ & ios_base::out))","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  535","line":"                return traits_type::eof();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  536","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  537","line":"            try"},
{"lineNum":"  538","line":"            {"},
{"lineNum":"  539","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  540","line":"                ptrdiff_t __nout = this->pptr()  - this->pbase();"},
{"lineNum":"  541","line":"                ptrdiff_t __hm = __hm_ - this->pbase();","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  542","line":"                __str_.push_back(char_type());","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  543","line":"                __str_.resize(__str_.capacity());","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  544","line":"                char_type* __p = const_cast<char_type*>(__str_.data());"},
{"lineNum":"  545","line":"                this->setp(__p, __p + __str_.size());","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  546","line":"                this->__pbump(__nout);"},
{"lineNum":"  547","line":"                __hm_ = this->pbase() + __hm;","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  548","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  549","line":"            }","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  550","line":"            catch (...)"},
{"lineNum":"  551","line":"            {"},
{"lineNum":"  552","line":"                return traits_type::eof();"},
{"lineNum":"  553","line":"            }","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  554","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  555","line":"        }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  556","line":"        __hm_ = _VSTD::max(this->pptr() + 1, __hm_);","class":"lineNoCov","hits":"0","possible_hits":"21",},
{"lineNum":"  557","line":"        if (__mode_ & ios_base::in)","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  558","line":"        {"},
{"lineNum":"  559","line":"            char_type* __p = const_cast<char_type*>(__str_.data());","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  560","line":"            this->setg(__p, __p + __ninp, __hm_);","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  561","line":"        }"},
{"lineNum":"  562","line":"        return this->sputc(traits_type::to_char_type(__c));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  563","line":"    }"},
{"lineNum":"  564","line":"    return traits_type::not_eof(__c);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  565","line":"}","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  566","line":""},
{"lineNum":"  567","line":"template <class _CharT, class _Traits, class _Allocator>"},
{"lineNum":"  568","line":"typename basic_stringbuf<_CharT, _Traits, _Allocator>::pos_type"},
{"lineNum":"  569","line":"basic_stringbuf<_CharT, _Traits, _Allocator>::seekoff(off_type __off,"},
{"lineNum":"  570","line":"                                                      ios_base::seekdir __way,"},
{"lineNum":"  571","line":"                                                      ios_base::openmode __wch)"},
{"lineNum":"  572","line":"{","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  573","line":"    if (__hm_ < this->pptr())","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  574","line":"        __hm_ = this->pptr();","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  575","line":"    if ((__wch & (ios_base::in | ios_base::out)) == 0)","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  576","line":"        return pos_type(-1);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  577","line":"    if ((__wch & (ios_base::in | ios_base::out)) == (ios_base::in | ios_base::out)","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  578","line":"        && __way == ios_base::cur)","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  579","line":"        return pos_type(-1);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  580","line":"    const ptrdiff_t __hm = __hm_ == nullptr ? 0 : __hm_ - __str_.data();","class":"lineNoCov","hits":"0","possible_hits":"23",},
{"lineNum":"  581","line":"    off_type __noff;"},
{"lineNum":"  582","line":"    switch (__way)","class":"lineNoCov","hits":"0","possible_hits":"22",},
{"lineNum":"  583","line":"    {"},
{"lineNum":"  584","line":"    case ios_base::beg:"},
{"lineNum":"  585","line":"        __noff = 0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  586","line":"        break;"},
{"lineNum":"  587","line":"    case ios_base::cur:"},
{"lineNum":"  588","line":"        if (__wch & ios_base::in)","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  589","line":"            __noff = this->gptr() - this->eback();","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  590","line":"        else"},
{"lineNum":"  591","line":"            __noff = this->pptr() - this->pbase();","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  592","line":"        break;"},
{"lineNum":"  593","line":"    case ios_base::end:"},
{"lineNum":"  594","line":"        __noff = __hm;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  595","line":"        break;"},
{"lineNum":"  596","line":"    default:"},
{"lineNum":"  597","line":"        return pos_type(-1);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  598","line":"    }"},
{"lineNum":"  599","line":"    __noff += __off;"},
{"lineNum":"  600","line":"    if (__noff < 0 || __hm < __noff)","class":"lineNoCov","hits":"0","possible_hits":"34",},
{"lineNum":"  601","line":"        return pos_type(-1);"},
{"lineNum":"  602","line":"    if (__noff != 0)","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  603","line":"    {"},
{"lineNum":"  604","line":"        if ((__wch & ios_base::in) && this->gptr() == nullptr)","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  605","line":"            return pos_type(-1);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  606","line":"        if ((__wch & ios_base::out) && this->pptr() == nullptr)","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  607","line":"            return pos_type(-1);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  608","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  609","line":"    if (__wch & ios_base::in)","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  610","line":"        this->setg(this->eback(), this->eback() + __noff, __hm_);","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  611","line":"    if (__wch & ios_base::out)","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  612","line":"    {"},
{"lineNum":"  613","line":"        this->setp(this->pbase(), this->epptr());","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  614","line":"        this->pbump(__noff);"},
{"lineNum":"  615","line":"    }"},
{"lineNum":"  616","line":"    return pos_type(__noff);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  617","line":"}","class":"lineNoCov","hits":"0","possible_hits":"21",},
{"lineNum":"  618","line":""},
{"lineNum":"  619","line":"// basic_istringstream"},
{"lineNum":"  620","line":""},
{"lineNum":"  621","line":"template <class _CharT, class _Traits, class _Allocator>"},
{"lineNum":"  622","line":"class _LIBCPP_TEMPLATE_VIS basic_istringstream"},
{"lineNum":"  623","line":"    : public basic_istream<_CharT, _Traits>"},
{"lineNum":"  624","line":"{"},
{"lineNum":"  625","line":"public:"},
{"lineNum":"  626","line":"    typedef _CharT                         char_type;"},
{"lineNum":"  627","line":"    typedef _Traits                        traits_type;"},
{"lineNum":"  628","line":"    typedef typename traits_type::int_type int_type;"},
{"lineNum":"  629","line":"    typedef typename traits_type::pos_type pos_type;"},
{"lineNum":"  630","line":"    typedef typename traits_type::off_type off_type;"},
{"lineNum":"  631","line":"    typedef _Allocator                     allocator_type;"},
{"lineNum":"  632","line":""},
{"lineNum":"  633","line":"    typedef basic_string<char_type, traits_type, allocator_type> string_type;"},
{"lineNum":"  634","line":""},
{"lineNum":"  635","line":"private:"},
{"lineNum":"  636","line":"    basic_stringbuf<char_type, traits_type, allocator_type> __sb_;"},
{"lineNum":"  637","line":""},
{"lineNum":"  638","line":"public:"},
{"lineNum":"  639","line":"    // 30.8.3.1 [istringstream.cons], constructors"},
{"lineNum":"  640","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  641","line":"    basic_istringstream()"},
{"lineNum":"  642","line":"        : basic_istream<_CharT, _Traits>(&__sb_), __sb_(ios_base::in) {}"},
{"lineNum":"  643","line":""},
{"lineNum":"  644","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  645","line":"    explicit basic_istringstream(ios_base::openmode __wch)"},
{"lineNum":"  646","line":"        : basic_istream<_CharT, _Traits>(&__sb_), __sb_(__wch | ios_base::in) {}"},
{"lineNum":"  647","line":""},
{"lineNum":"  648","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  649","line":"    explicit basic_istringstream(const string_type& __s,"},
{"lineNum":"  650","line":"                                 ios_base::openmode __wch = ios_base::in)"},
{"lineNum":"  651","line":"        : basic_istream<_CharT, _Traits>(&__sb_)","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  652","line":"        , __sb_(__s, __wch | ios_base::in)","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  653","line":"    { }","class":"lineNoCov","hits":"0","possible_hits":"29",},
{"lineNum":"  654","line":""},
{"lineNum":"  655","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  656","line":"    basic_istringstream(basic_istringstream&& __rhs)"},
{"lineNum":"  657","line":"        : basic_istream<_CharT, _Traits>(_VSTD::move(__rhs))"},
{"lineNum":"  658","line":"        , __sb_(_VSTD::move(__rhs.__sb_))"},
{"lineNum":"  659","line":"    {"},
{"lineNum":"  660","line":"        basic_istream<_CharT, _Traits>::set_rdbuf(&__sb_);"},
{"lineNum":"  661","line":"    }"},
{"lineNum":"  662","line":""},
{"lineNum":"  663","line":"    // 27.8.2.2 Assign and swap:"},
{"lineNum":"  664","line":"    basic_istringstream& operator=(basic_istringstream&& __rhs) {"},
{"lineNum":"  665","line":"        basic_istream<char_type, traits_type>::operator=(_VSTD::move(__rhs));"},
{"lineNum":"  666","line":"        __sb_ = _VSTD::move(__rhs.__sb_);"},
{"lineNum":"  667","line":"        return *this;"},
{"lineNum":"  668","line":"    }"},
{"lineNum":"  669","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  670","line":"    void swap(basic_istringstream& __rhs) {"},
{"lineNum":"  671","line":"        basic_istream<char_type, traits_type>::swap(__rhs);"},
{"lineNum":"  672","line":"        __sb_.swap(__rhs.__sb_);"},
{"lineNum":"  673","line":"    }"},
{"lineNum":"  674","line":""},
{"lineNum":"  675","line":"    // 27.8.2.3 Members:"},
{"lineNum":"  676","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  677","line":"    basic_stringbuf<char_type, traits_type, allocator_type>* rdbuf() const {"},
{"lineNum":"  678","line":"        return const_cast<basic_stringbuf<char_type, traits_type, allocator_type>*>(&__sb_);"},
{"lineNum":"  679","line":"    }"},
{"lineNum":"  680","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  681","line":"    string_type str() const {"},
{"lineNum":"  682","line":"        return __sb_.str();"},
{"lineNum":"  683","line":"    }"},
{"lineNum":"  684","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  685","line":"    void str(const string_type& __s) {"},
{"lineNum":"  686","line":"        __sb_.str(__s);"},
{"lineNum":"  687","line":"    }"},
{"lineNum":"  688","line":"};"},
{"lineNum":"  689","line":""},
{"lineNum":"  690","line":"template <class _CharT, class _Traits, class _Allocator>"},
{"lineNum":"  691","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  692","line":"void"},
{"lineNum":"  693","line":"swap(basic_istringstream<_CharT, _Traits, _Allocator>& __x,"},
{"lineNum":"  694","line":"     basic_istringstream<_CharT, _Traits, _Allocator>& __y)"},
{"lineNum":"  695","line":"{"},
{"lineNum":"  696","line":"    __x.swap(__y);"},
{"lineNum":"  697","line":"}"},
{"lineNum":"  698","line":""},
{"lineNum":"  699","line":"// basic_ostringstream"},
{"lineNum":"  700","line":""},
{"lineNum":"  701","line":"template <class _CharT, class _Traits, class _Allocator>"},
{"lineNum":"  702","line":"class _LIBCPP_TEMPLATE_VIS basic_ostringstream"},
{"lineNum":"  703","line":"    : public basic_ostream<_CharT, _Traits>"},
{"lineNum":"  704","line":"{"},
{"lineNum":"  705","line":"public:"},
{"lineNum":"  706","line":"    typedef _CharT                         char_type;"},
{"lineNum":"  707","line":"    typedef _Traits                        traits_type;"},
{"lineNum":"  708","line":"    typedef typename traits_type::int_type int_type;"},
{"lineNum":"  709","line":"    typedef typename traits_type::pos_type pos_type;"},
{"lineNum":"  710","line":"    typedef typename traits_type::off_type off_type;"},
{"lineNum":"  711","line":"    typedef _Allocator                     allocator_type;"},
{"lineNum":"  712","line":""},
{"lineNum":"  713","line":"    typedef basic_string<char_type, traits_type, allocator_type> string_type;"},
{"lineNum":"  714","line":""},
{"lineNum":"  715","line":"private:"},
{"lineNum":"  716","line":"    basic_stringbuf<char_type, traits_type, allocator_type> __sb_;"},
{"lineNum":"  717","line":""},
{"lineNum":"  718","line":"public:"},
{"lineNum":"  719","line":"    // 30.8.4.1 [ostringstream.cons], constructors"},
{"lineNum":"  720","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  721","line":"    basic_ostringstream()"},
{"lineNum":"  722","line":"        : basic_ostream<_CharT, _Traits>(&__sb_), __sb_(ios_base::out) {}","class":"lineNoCov","hits":"0","possible_hits":"46",},
{"lineNum":"  723","line":""},
{"lineNum":"  724","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  725","line":"    explicit basic_ostringstream(ios_base::openmode __wch)"},
{"lineNum":"  726","line":"        : basic_ostream<_CharT, _Traits>(&__sb_), __sb_(__wch | ios_base::out) {}"},
{"lineNum":"  727","line":""},
{"lineNum":"  728","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  729","line":"    explicit basic_ostringstream(const string_type& __s,"},
{"lineNum":"  730","line":"                                 ios_base::openmode __wch = ios_base::out)"},
{"lineNum":"  731","line":"        : basic_ostream<_CharT, _Traits>(&__sb_)"},
{"lineNum":"  732","line":"        , __sb_(__s, __wch | ios_base::out)"},
{"lineNum":"  733","line":"    { }"},
{"lineNum":"  734","line":""},
{"lineNum":"  735","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  736","line":"    basic_ostringstream(basic_ostringstream&& __rhs)"},
{"lineNum":"  737","line":"        : basic_ostream<_CharT, _Traits>(_VSTD::move(__rhs))"},
{"lineNum":"  738","line":"        , __sb_(_VSTD::move(__rhs.__sb_))"},
{"lineNum":"  739","line":"    {"},
{"lineNum":"  740","line":"        basic_ostream<_CharT, _Traits>::set_rdbuf(&__sb_);"},
{"lineNum":"  741","line":"    }"},
{"lineNum":"  742","line":""},
{"lineNum":"  743","line":"    // 27.8.2.2 Assign and swap:"},
{"lineNum":"  744","line":"    basic_ostringstream& operator=(basic_ostringstream&& __rhs) {"},
{"lineNum":"  745","line":"        basic_ostream<char_type, traits_type>::operator=(_VSTD::move(__rhs));"},
{"lineNum":"  746","line":"        __sb_ = _VSTD::move(__rhs.__sb_);"},
{"lineNum":"  747","line":"        return *this;"},
{"lineNum":"  748","line":"    }"},
{"lineNum":"  749","line":""},
{"lineNum":"  750","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  751","line":"    void swap(basic_ostringstream& __rhs) {"},
{"lineNum":"  752","line":"        basic_ostream<char_type, traits_type>::swap(__rhs);"},
{"lineNum":"  753","line":"        __sb_.swap(__rhs.__sb_);"},
{"lineNum":"  754","line":"    }"},
{"lineNum":"  755","line":""},
{"lineNum":"  756","line":"    // 27.8.2.3 Members:"},
{"lineNum":"  757","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  758","line":"    basic_stringbuf<char_type, traits_type, allocator_type>* rdbuf() const {"},
{"lineNum":"  759","line":"        return const_cast<basic_stringbuf<char_type, traits_type, allocator_type>*>(&__sb_);"},
{"lineNum":"  760","line":"    }"},
{"lineNum":"  761","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  762","line":"    string_type str() const {"},
{"lineNum":"  763","line":"        return __sb_.str();","class":"lineNoCov","hits":"0","possible_hits":"35",},
{"lineNum":"  764","line":"    }"},
{"lineNum":"  765","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  766","line":"    void str(const string_type& __s) {"},
{"lineNum":"  767","line":"        __sb_.str(__s);"},
{"lineNum":"  768","line":"    }"},
{"lineNum":"  769","line":"};"},
{"lineNum":"  770","line":""},
{"lineNum":"  771","line":"template <class _CharT, class _Traits, class _Allocator>"},
{"lineNum":"  772","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  773","line":"void"},
{"lineNum":"  774","line":"swap(basic_ostringstream<_CharT, _Traits, _Allocator>& __x,"},
{"lineNum":"  775","line":"     basic_ostringstream<_CharT, _Traits, _Allocator>& __y)"},
{"lineNum":"  776","line":"{"},
{"lineNum":"  777","line":"    __x.swap(__y);"},
{"lineNum":"  778","line":"}"},
{"lineNum":"  779","line":""},
{"lineNum":"  780","line":"// basic_stringstream"},
{"lineNum":"  781","line":""},
{"lineNum":"  782","line":"template <class _CharT, class _Traits, class _Allocator>"},
{"lineNum":"  783","line":"class _LIBCPP_TEMPLATE_VIS basic_stringstream"},
{"lineNum":"  784","line":"    : public basic_iostream<_CharT, _Traits>"},
{"lineNum":"  785","line":"{"},
{"lineNum":"  786","line":"public:"},
{"lineNum":"  787","line":"    typedef _CharT                         char_type;"},
{"lineNum":"  788","line":"    typedef _Traits                        traits_type;"},
{"lineNum":"  789","line":"    typedef typename traits_type::int_type int_type;"},
{"lineNum":"  790","line":"    typedef typename traits_type::pos_type pos_type;"},
{"lineNum":"  791","line":"    typedef typename traits_type::off_type off_type;"},
{"lineNum":"  792","line":"    typedef _Allocator                     allocator_type;"},
{"lineNum":"  793","line":""},
{"lineNum":"  794","line":"    typedef basic_string<char_type, traits_type, allocator_type> string_type;"},
{"lineNum":"  795","line":""},
{"lineNum":"  796","line":"private:"},
{"lineNum":"  797","line":"    basic_stringbuf<char_type, traits_type, allocator_type> __sb_;"},
{"lineNum":"  798","line":""},
{"lineNum":"  799","line":"public:"},
{"lineNum":"  800","line":"    // 30.8.5.1 [stringstream.cons], constructors"},
{"lineNum":"  801","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  802","line":"    basic_stringstream()"},
{"lineNum":"  803","line":"        : basic_iostream<_CharT, _Traits>(&__sb_), __sb_(ios_base::in | ios_base::out) {}","class":"lineNoCov","hits":"0","possible_hits":"91",},
{"lineNum":"  804","line":""},
{"lineNum":"  805","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  806","line":"    explicit basic_stringstream(ios_base::openmode __wch)"},
{"lineNum":"  807","line":"        : basic_iostream<_CharT, _Traits>(&__sb_), __sb_(__wch) {}"},
{"lineNum":"  808","line":""},
{"lineNum":"  809","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  810","line":"    explicit basic_stringstream(const string_type& __s,"},
{"lineNum":"  811","line":"                                ios_base::openmode __wch = ios_base::in | ios_base::out)"},
{"lineNum":"  812","line":"        : basic_iostream<_CharT, _Traits>(&__sb_)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  813","line":"        , __sb_(__s, __wch)"},
{"lineNum":"  814","line":"    { }","class":"lineNoCov","hits":"0","possible_hits":"10",},
{"lineNum":"  815","line":""},
{"lineNum":"  816","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  817","line":"    basic_stringstream(basic_stringstream&& __rhs)"},
{"lineNum":"  818","line":"        : basic_iostream<_CharT, _Traits>(_VSTD::move(__rhs))"},
{"lineNum":"  819","line":"        , __sb_(_VSTD::move(__rhs.__sb_))"},
{"lineNum":"  820","line":"    {"},
{"lineNum":"  821","line":"        basic_istream<_CharT, _Traits>::set_rdbuf(&__sb_);"},
{"lineNum":"  822","line":"    }"},
{"lineNum":"  823","line":""},
{"lineNum":"  824","line":"    // 27.8.2.2 Assign and swap:"},
{"lineNum":"  825","line":"    basic_stringstream& operator=(basic_stringstream&& __rhs) {"},
{"lineNum":"  826","line":"        basic_iostream<char_type, traits_type>::operator=(_VSTD::move(__rhs));"},
{"lineNum":"  827","line":"        __sb_ = _VSTD::move(__rhs.__sb_);"},
{"lineNum":"  828","line":"        return *this;"},
{"lineNum":"  829","line":"    }"},
{"lineNum":"  830","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  831","line":"    void swap(basic_stringstream& __rhs) {"},
{"lineNum":"  832","line":"        basic_iostream<char_type, traits_type>::swap(__rhs);"},
{"lineNum":"  833","line":"        __sb_.swap(__rhs.__sb_);"},
{"lineNum":"  834","line":"    }"},
{"lineNum":"  835","line":""},
{"lineNum":"  836","line":"    // 27.8.2.3 Members:"},
{"lineNum":"  837","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  838","line":"    basic_stringbuf<char_type, traits_type, allocator_type>* rdbuf() const {"},
{"lineNum":"  839","line":"        return const_cast<basic_stringbuf<char_type, traits_type, allocator_type>*>(&__sb_);"},
{"lineNum":"  840","line":"    }"},
{"lineNum":"  841","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  842","line":"    string_type str() const {"},
{"lineNum":"  843","line":"        return __sb_.str();","class":"lineNoCov","hits":"0","possible_hits":"48",},
{"lineNum":"  844","line":"    }"},
{"lineNum":"  845","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  846","line":"    void str(const string_type& __s) {"},
{"lineNum":"  847","line":"        __sb_.str(__s);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  848","line":"    }"},
{"lineNum":"  849","line":"};"},
{"lineNum":"  850","line":""},
{"lineNum":"  851","line":"template <class _CharT, class _Traits, class _Allocator>"},
{"lineNum":"  852","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  853","line":"void"},
{"lineNum":"  854","line":"swap(basic_stringstream<_CharT, _Traits, _Allocator>& __x,"},
{"lineNum":"  855","line":"     basic_stringstream<_CharT, _Traits, _Allocator>& __y)"},
{"lineNum":"  856","line":"{"},
{"lineNum":"  857","line":"    __x.swap(__y);"},
{"lineNum":"  858","line":"}"},
{"lineNum":"  859","line":""},
{"lineNum":"  860","line":"#if defined(_LIBCPP_ABI_ENABLE_ADDITIONAL_IOSTREAM_EXPLICIT_INSTANTIATIONS_1)"},
{"lineNum":"  861","line":"_LIBCPP_EXTERN_TEMPLATE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS basic_stringbuf<char>)"},
{"lineNum":"  862","line":"_LIBCPP_EXTERN_TEMPLATE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS basic_stringstream<char>)"},
{"lineNum":"  863","line":"_LIBCPP_EXTERN_TEMPLATE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS basic_ostringstream<char>)"},
{"lineNum":"  864","line":"_LIBCPP_EXTERN_TEMPLATE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS basic_istringstream<char>)"},
{"lineNum":"  865","line":"#endif"},
{"lineNum":"  866","line":""},
{"lineNum":"  867","line":"_LIBCPP_END_NAMESPACE_STD"},
{"lineNum":"  868","line":""},
{"lineNum":"  869","line":"_LIBCPP_POP_MACROS"},
{"lineNum":"  870","line":""},
{"lineNum":"  871","line":"#endif // _LIBCPP_SSTREAM"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:41", "instrumented" : 116, "covered" : 0,};
var merged_data = [];
