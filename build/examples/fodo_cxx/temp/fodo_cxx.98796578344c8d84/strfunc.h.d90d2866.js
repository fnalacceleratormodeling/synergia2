var data = {lines:[
{"lineNum":"    1","line":"// Tencent is pleased to support the open source community by making RapidJSON available."},
{"lineNum":"    2","line":"//"},
{"lineNum":"    3","line":"// Copyright (C) 2015 THL A29 Limited, a Tencent company, and Milo Yip. All rights reserved."},
{"lineNum":"    4","line":"//"},
{"lineNum":"    5","line":"// Licensed under the MIT License (the \"License\"); you may not use this file except"},
{"lineNum":"    6","line":"// in compliance with the License. You may obtain a copy of the License at"},
{"lineNum":"    7","line":"//"},
{"lineNum":"    8","line":"// http://opensource.org/licenses/MIT"},
{"lineNum":"    9","line":"//"},
{"lineNum":"   10","line":"// Unless required by applicable law or agreed to in writing, software distributed"},
{"lineNum":"   11","line":"// under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR"},
{"lineNum":"   12","line":"// CONDITIONS OF ANY KIND, either express or implied. See the License for the"},
{"lineNum":"   13","line":"// specific language governing permissions and limitations under the License."},
{"lineNum":"   14","line":""},
{"lineNum":"   15","line":"#ifndef CEREAL_RAPIDJSON_INTERNAL_STRFUNC_H_"},
{"lineNum":"   16","line":"#define CEREAL_RAPIDJSON_INTERNAL_STRFUNC_H_"},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"#include \"../stream.h\""},
{"lineNum":"   19","line":"#include <cwchar>"},
{"lineNum":"   20","line":""},
{"lineNum":"   21","line":"CEREAL_RAPIDJSON_NAMESPACE_BEGIN"},
{"lineNum":"   22","line":"namespace internal {"},
{"lineNum":"   23","line":""},
{"lineNum":"   24","line":"//! Custom strlen() which works on different character types."},
{"lineNum":"   25","line":"/*! \\tparam Ch Character type (e.g. char, wchar_t, short)"},
{"lineNum":"   26","line":"    \\param s Null-terminated input string."},
{"lineNum":"   27","line":"    \\return Number of characters in the string."},
{"lineNum":"   28","line":"    \\note This has the same semantics as strlen(), the return value is not number of Unicode codepoints."},
{"lineNum":"   29","line":"*/"},
{"lineNum":"   30","line":"template <typename Ch>"},
{"lineNum":"   31","line":"inline SizeType StrLen(const Ch* s) {"},
{"lineNum":"   32","line":"    CEREAL_RAPIDJSON_ASSERT(s != 0);"},
{"lineNum":"   33","line":"    const Ch* p = s;"},
{"lineNum":"   34","line":"    while (*p) ++p;"},
{"lineNum":"   35","line":"    return SizeType(p - s);"},
{"lineNum":"   36","line":"}"},
{"lineNum":"   37","line":""},
{"lineNum":"   38","line":"template <>"},
{"lineNum":"   39","line":"inline SizeType StrLen(const char* s) {"},
{"lineNum":"   40","line":"    return SizeType(std::strlen(s));","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   41","line":"}"},
{"lineNum":"   42","line":""},
{"lineNum":"   43","line":"template <>"},
{"lineNum":"   44","line":"inline SizeType StrLen(const wchar_t* s) {"},
{"lineNum":"   45","line":"    return SizeType(std::wcslen(s));"},
{"lineNum":"   46","line":"}"},
{"lineNum":"   47","line":""},
{"lineNum":"   48","line":"//! Returns number of code points in a encoded string."},
{"lineNum":"   49","line":"template<typename Encoding>"},
{"lineNum":"   50","line":"bool CountStringCodePoint(const typename Encoding::Ch* s, SizeType length, SizeType* outCount) {"},
{"lineNum":"   51","line":"    CEREAL_RAPIDJSON_ASSERT(s != 0);"},
{"lineNum":"   52","line":"    CEREAL_RAPIDJSON_ASSERT(outCount != 0);"},
{"lineNum":"   53","line":"    GenericStringStream<Encoding> is(s);"},
{"lineNum":"   54","line":"    const typename Encoding::Ch* end = s + length;"},
{"lineNum":"   55","line":"    SizeType count = 0;"},
{"lineNum":"   56","line":"    while (is.src_ < end) {"},
{"lineNum":"   57","line":"        unsigned codepoint;"},
{"lineNum":"   58","line":"        if (!Encoding::Decode(is, &codepoint))"},
{"lineNum":"   59","line":"            return false;"},
{"lineNum":"   60","line":"        count++;"},
{"lineNum":"   61","line":"    }"},
{"lineNum":"   62","line":"    *outCount = count;"},
{"lineNum":"   63","line":"    return true;"},
{"lineNum":"   64","line":"}"},
{"lineNum":"   65","line":""},
{"lineNum":"   66","line":"} // namespace internal"},
{"lineNum":"   67","line":"CEREAL_RAPIDJSON_NAMESPACE_END"},
{"lineNum":"   68","line":""},
{"lineNum":"   69","line":"#endif // CEREAL_RAPIDJSON_INTERNAL_STRFUNC_H_"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 1, "covered" : 0,};
var merged_data = [];
