var data = {lines:[
{"lineNum":"    1","line":"#include \"hdf5_file.h\""},
{"lineNum":"    2","line":"#include \"synergia/utils/multi_array_typedefs.h\""},
{"lineNum":"    3","line":"#include \"synergia/utils/hdf5_misc.h\""},
{"lineNum":"    4","line":""},
{"lineNum":"    5","line":"#include <thread>"},
{"lineNum":"    6","line":""},
{"lineNum":"    7","line":"Hdf5_file::Hdf5_file(","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"    8","line":"        std::string const& file_name,"},
{"lineNum":"    9","line":"        Flag flag,"},
{"lineNum":"   10","line":"        Commxx const& c )"},
{"lineNum":"   11","line":"    : comm(std::make_shared<Commxx>(c))"},
{"lineNum":"   12","line":"    , file_name(file_name)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   13","line":"    , h5file()"},
{"lineNum":"   14","line":"    , root_rank(c.size()-1)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   15","line":"    , is_open(false)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   16","line":"    , current_flag(flag)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   17","line":"#ifdef USE_PARALLEL_HDF5"},
{"lineNum":"   18","line":"    , has_file(true)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   19","line":"#else"},
{"lineNum":"   20","line":"    , has_file(c.rank() == root_rank)"},
{"lineNum":"   21","line":"#endif"},
{"lineNum":"   22","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   23","line":"    // turn off the automatic error printing"},
{"lineNum":"   24","line":"    H5Eset_auto(H5E_DEFAULT, NULL, NULL);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   25","line":""},
{"lineNum":"   26","line":"    // open file"},
{"lineNum":"   27","line":"    open(flag);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   28","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   29","line":""},
{"lineNum":"   30","line":"Hdf5_file::Hdf5_file(","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   31","line":"        std::string const& file_name,"},
{"lineNum":"   32","line":"        Flag flag,"},
{"lineNum":"   33","line":"        std::shared_ptr<Commxx> const& c )"},
{"lineNum":"   34","line":"    : comm(c)"},
{"lineNum":"   35","line":"    , file_name(file_name)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   36","line":"    , h5file()"},
{"lineNum":"   37","line":"    , root_rank(c->size()-1)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   38","line":"    , is_open(false)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   39","line":"    , current_flag(flag)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   40","line":"#ifdef USE_PARALLEL_HDF5"},
{"lineNum":"   41","line":"    , has_file(true)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   42","line":"#else"},
{"lineNum":"   43","line":"    , has_file(c->rank() == root_rank)"},
{"lineNum":"   44","line":"#endif"},
{"lineNum":"   45","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   46","line":"    // turn off the automatic error printing"},
{"lineNum":"   47","line":"    H5Eset_auto(H5E_DEFAULT, NULL, NULL);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   48","line":""},
{"lineNum":"   49","line":"    // open file"},
{"lineNum":"   50","line":"    open(flag);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   51","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   52","line":""},
{"lineNum":"   53","line":"void Hdf5_file::open(Flag flag)"},
{"lineNum":"   54","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   55","line":"    // open file on this rank?"},
{"lineNum":"   56","line":"    if (!has_file) return;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   57","line":""},
{"lineNum":"   58","line":"    // already opened"},
{"lineNum":"   59","line":"    if (is_open) close();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   60","line":""},
{"lineNum":"   61","line":"    int attempts = 0;"},
{"lineNum":"   62","line":"    bool fail = true;"},
{"lineNum":"   63","line":""},
{"lineNum":"   64","line":"    while ((attempts < 5) && fail)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   65","line":"    {"},
{"lineNum":"   66","line":"        try"},
{"lineNum":"   67","line":"        {"},
{"lineNum":"   68","line":"            Hdf5_handler plist_id = H5Pcreate(H5P_FILE_ACCESS);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   69","line":""},
{"lineNum":"   70","line":"#ifdef USE_PARALLEL_HDF5"},
{"lineNum":"   71","line":"            MPI_Info info = MPI_INFO_NULL;"},
{"lineNum":"   72","line":"            H5Pset_fapl_mpio(plist_id, *comm, info);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   73","line":"#endif"},
{"lineNum":"   74","line":""},
{"lineNum":"   75","line":"            if (flag == Hdf5_file::truncate)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   76","line":"            {"},
{"lineNum":"   77","line":"                // create"},
{"lineNum":"   78","line":"                h5file = H5Fcreate(file_name.c_str(), H5F_ACC_TRUNC, H5P_DEFAULT, plist_id);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   79","line":"                current_flag = Hdf5_file::read_write;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   80","line":"            }"},
{"lineNum":"   81","line":"            else"},
{"lineNum":"   82","line":"            {"},
{"lineNum":"   83","line":"                // open"},
{"lineNum":"   84","line":"                h5file = H5Fopen(file_name.c_str(), flag_to_h5_flags(flag), plist_id);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   85","line":"            }"},
{"lineNum":"   86","line":""},
{"lineNum":"   87","line":"            fail = false;"},
{"lineNum":"   88","line":"        }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   89","line":"        catch(Hdf5_exception & e)"},
{"lineNum":"   90","line":"        {"},
{"lineNum":"   91","line":"            ++attempts;"},
{"lineNum":"   92","line":"            fail = true;"},
{"lineNum":"   93","line":""},
{"lineNum":"   94","line":"            std::cout << e.what() << \"\\n\";","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   95","line":"            std::cout << \"caught hdf5 open file error, attempts number=\"","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   96","line":"                << attempts << \" on rank=\" << Commxx().rank() << std::endl;","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   97","line":""},
{"lineNum":"   98","line":"            std::this_thread::sleep_for(std::chrono::seconds(3));"},
{"lineNum":"   99","line":"        }","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  100","line":"    }"},
{"lineNum":"  101","line":""},
{"lineNum":"  102","line":"    is_open = true;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  103","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  104","line":""},
{"lineNum":"  105","line":"void Hdf5_file::close()"},
{"lineNum":"  106","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  107","line":"    if (is_open)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  108","line":"    {"},
{"lineNum":"  109","line":"        // delete all seq writers before closing the file,"},
{"lineNum":"  110","line":"        // otherwise reopening the file would cause error"},
{"lineNum":"  111","line":"        seq_writers.clear();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  112","line":"        h5file.close();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  113","line":"        is_open = false;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  114","line":"    }"},
{"lineNum":"  115","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  116","line":""},
{"lineNum":"  117","line":"void"},
{"lineNum":"  118","line":"Hdf5_file::flush() const"},
{"lineNum":"  119","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  120","line":"    if (is_open) H5Fflush(h5file.hid, H5F_SCOPE_GLOBAL);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  121","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  122","line":""},
{"lineNum":"  123","line":"#if 0"},
{"lineNum":"  124","line":"extern \"C\" herr_t get_member_names_callback(hid_t group, const char *name,"},
{"lineNum":"  125","line":"                                            const H5L_info_t *info,"},
{"lineNum":"  126","line":"                                            void *op_data)"},
{"lineNum":"  127","line":"{"},
{"lineNum":"  128","line":"    ((std::vector<std::string> *)op_data)->push_back(name);"},
{"lineNum":"  129","line":"    return 0;"},
{"lineNum":"  130","line":"}"},
{"lineNum":"  131","line":""},
{"lineNum":"  132","line":"std::vector<std::string>"},
{"lineNum":"  133","line":"Hdf5_file::get_member_names()"},
{"lineNum":"  134","line":"{"},
{"lineNum":"  135","line":"    std::vector<std::string> member_names;"},
{"lineNum":"  136","line":""},
{"lineNum":"  137","line":"    Hdf5_handler root_group = H5Gopen(h5file, \"/\", H5P_DEFAULT);"},
{"lineNum":"  138","line":"    herr_t status = H5Literate(root_group, H5_INDEX_NAME,"},
{"lineNum":"  139","line":"                               H5_ITER_NATIVE, NULL,"},
{"lineNum":"  140","line":"                               &get_member_names_callback,"},
{"lineNum":"  141","line":"                               (void *) &member_names);"},
{"lineNum":"  142","line":""},
{"lineNum":"  143","line":"    if (status < 0) throw Hdf5_exception(\"error at get hdf5 member names\");"},
{"lineNum":"  144","line":""},
{"lineNum":"  145","line":"    return member_names;"},
{"lineNum":"  146","line":"}"},
{"lineNum":"  147","line":""},
{"lineNum":"  148","line":"Hdf5_file::Atomic_type"},
{"lineNum":"  149","line":"Hdf5_file::get_atomic_type(std::string const& name)"},
{"lineNum":"  150","line":"{"},
{"lineNum":"  151","line":"    Hdf5_handler dataset  = H5Dopen(h5file, name.c_str(), H5P_DEFAULT);"},
{"lineNum":"  152","line":"    Hdf5_handler datatype = H5Dget_type(dataset);"},
{"lineNum":"  153","line":"    H5T_class_t the_class = H5Tget_class(datatype);"},
{"lineNum":"  154","line":""},
{"lineNum":"  155","line":"    Hdf5_file::Atomic_type retval;"},
{"lineNum":"  156","line":""},
{"lineNum":"  157","line":"    if (the_class == H5T_FLOAT)"},
{"lineNum":"  158","line":"    {"},
{"lineNum":"  159","line":"        retval = Hdf5_file::double_type;"},
{"lineNum":"  160","line":"    }"},
{"lineNum":"  161","line":"    else if (the_class == H5T_INTEGER)"},
{"lineNum":"  162","line":"    {"},
{"lineNum":"  163","line":"        retval = Hdf5_file::int_type;"},
{"lineNum":"  164","line":"    }"},
{"lineNum":"  165","line":"    else"},
{"lineNum":"  166","line":"    {"},
{"lineNum":"  167","line":"        throw std::runtime_error(\"Hdf5_file::get_atomic_type: type not handled\");"},
{"lineNum":"  168","line":"    }"},
{"lineNum":"  169","line":""},
{"lineNum":"  170","line":"    return retval;"},
{"lineNum":"  171","line":"}"},
{"lineNum":"  172","line":""},
{"lineNum":"  173","line":"std::vector<int>"},
{"lineNum":"  174","line":"Hdf5_file::get_dims(std::string const& name)"},
{"lineNum":"  175","line":"{"},
{"lineNum":"  176","line":"    Hdf5_handler dataset   = H5Dopen(h5file, name.c_str(), H5P_DEFAULT);"},
{"lineNum":"  177","line":"    Hdf5_handler dataspace = H5Dget_space(dataset);"},
{"lineNum":"  178","line":""},
{"lineNum":"  179","line":"    int rank = H5Sget_simple_extent_ndims(dataspace);"},
{"lineNum":"  180","line":"    std::vector<hsize_t> dims(rank);"},
{"lineNum":"  181","line":"    herr_t res = H5Sget_simple_extent_dims(dataspace, &dims[0], NULL);"},
{"lineNum":"  182","line":"    if (res<0) throw Hdf5_exception(\"error at getting dims\");"},
{"lineNum":"  183","line":""},
{"lineNum":"  184","line":"    std::vector<int > retval(rank);"},
{"lineNum":"  185","line":"    std::copy(dims.begin(), dims.end(), retval.begin());"},
{"lineNum":"  186","line":""},
{"lineNum":"  187","line":"    return retval;"},
{"lineNum":"  188","line":"}"},
{"lineNum":"  189","line":"#endif"},
{"lineNum":"  190","line":""},
{"lineNum":"  191","line":""},
{"lineNum":"  192","line":"#if 0"},
{"lineNum":"  193","line":"template<>"},
{"lineNum":"  194","line":"void Hdf5_file::read_array<double>(std::string const& name, double * const ptr)"},
{"lineNum":"  195","line":"{"},
{"lineNum":"  196","line":"    Hdf5_handler dataset     = H5Dopen(h5file, name.c_str(), H5P_DEFAULT);"},
{"lineNum":"  197","line":"    Hdf5_handler dataspace   = H5Dget_space(dataset);"},
{"lineNum":"  198","line":"    Hdf5_handler atomic_type = hdf5_atomic_data_type<double>();"},
{"lineNum":"  199","line":""},
{"lineNum":"  200","line":"    const int rank = 1;"},
{"lineNum":"  201","line":"    int file_rank = H5Sget_simple_extent_ndims(dataspace);"},
{"lineNum":"  202","line":""},
{"lineNum":"  203","line":"    if (file_rank != rank)"},
{"lineNum":"  204","line":"    {"},
{"lineNum":"  205","line":"        throw std::runtime_error("},
{"lineNum":"  206","line":"                \"Hdf5_file::read_array<double>: data to read has wrong rank\");"},
{"lineNum":"  207","line":"    }"},
{"lineNum":"  208","line":""},
{"lineNum":"  209","line":"    // dims"},
{"lineNum":"  210","line":"    std::vector<hsize_t> dims(rank);"},
{"lineNum":"  211","line":"    herr_t res = H5Sget_simple_extent_dims(dataspace, &dims[0], NULL);"},
{"lineNum":"  212","line":"    if (res < 0) throw Hdf5_exception(\"error getting dims from dataspace\");"},
{"lineNum":"  213","line":""},
{"lineNum":"  214","line":"    // memspace"},
{"lineNum":"  215","line":"    Hdf5_handler memspace = H5Screate_simple(rank, &dims[0], NULL);"},
{"lineNum":"  216","line":""},
{"lineNum":"  217","line":"    // read"},
{"lineNum":"  218","line":"    res = H5Dread(dataset, atomic_type, memspace, dataspace, H5P_DEFAULT, ptr);"},
{"lineNum":"  219","line":"    if (res < 0) throw Hdf5_exception(\"error reading from hdf5 file\");"},
{"lineNum":"  220","line":"}"},
{"lineNum":"  221","line":""},
{"lineNum":"  222","line":"template<>"},
{"lineNum":"  223","line":"void Hdf5_file::read_array<uint8_t>(std::string const& name, uint8_t* const ptr)"},
{"lineNum":"  224","line":"{"},
{"lineNum":"  225","line":"    Hdf5_handler dataset     = H5Dopen(h5file, name.c_str(), H5P_DEFAULT);"},
{"lineNum":"  226","line":"    Hdf5_handler dataspace   = H5Dget_space(dataset);"},
{"lineNum":"  227","line":"    Hdf5_handler atomic_type = hdf5_atomic_data_type<uint8_t>();"},
{"lineNum":"  228","line":""},
{"lineNum":"  229","line":"    const int rank = 1;"},
{"lineNum":"  230","line":"    int file_rank = H5Sget_simple_extent_ndims(dataspace);"},
{"lineNum":"  231","line":""},
{"lineNum":"  232","line":"    if (file_rank != rank)"},
{"lineNum":"  233","line":"    {"},
{"lineNum":"  234","line":"        throw std::runtime_error("},
{"lineNum":"  235","line":"                \"Hdf5_file::read_array<uint8_t>: data to read has wrong rank\");"},
{"lineNum":"  236","line":"    }"},
{"lineNum":"  237","line":""},
{"lineNum":"  238","line":"    // dims"},
{"lineNum":"  239","line":"    std::vector<hsize_t> dims(rank);"},
{"lineNum":"  240","line":"    herr_t res = H5Sget_simple_extent_dims(dataspace, &dims[0], NULL);"},
{"lineNum":"  241","line":"    if (res < 0) throw Hdf5_exception(\"error getting dims from dataspace\");"},
{"lineNum":"  242","line":""},
{"lineNum":"  243","line":"    // memspace"},
{"lineNum":"  244","line":"    Hdf5_handler memspace = H5Screate_simple(rank, &dims[0], NULL);"},
{"lineNum":"  245","line":""},
{"lineNum":"  246","line":"    // read"},
{"lineNum":"  247","line":"    res = H5Dread(dataset, atomic_type, memspace, dataspace, H5P_DEFAULT, ptr);"},
{"lineNum":"  248","line":"    if (res < 0) throw Hdf5_exception(\"error reading from hdf5 file\");"},
{"lineNum":"  249","line":"}"},
{"lineNum":"  250","line":""},
{"lineNum":"  251","line":"template<>"},
{"lineNum":"  252","line":"karray2d Hdf5_file::read<karray2d>(std::string const& name)"},
{"lineNum":"  253","line":"{"},
{"lineNum":"  254","line":"    Hdf5_handler dataset     = H5Dopen(h5file, name.c_str(), H5P_DEFAULT);"},
{"lineNum":"  255","line":"    Hdf5_handler dataspace   = H5Dget_space(dataset);"},
{"lineNum":"  256","line":"    Hdf5_handler atomic_type = hdf5_atomic_data_type<double>();"},
{"lineNum":"  257","line":""},
{"lineNum":"  258","line":"    const int rank = 2;"},
{"lineNum":"  259","line":"    int file_rank = H5Sget_simple_extent_ndims(dataspace);"},
{"lineNum":"  260","line":""},
{"lineNum":"  261","line":"    if (file_rank != rank)"},
{"lineNum":"  262","line":"    {"},
{"lineNum":"  263","line":"        throw std::runtime_error("},
{"lineNum":"  264","line":"                \"Hdf5_file::read<karray2d>: data to read has wrong rank\");"},
{"lineNum":"  265","line":"    }"},
{"lineNum":"  266","line":""},
{"lineNum":"  267","line":"    hsize_t dims[rank];"},
{"lineNum":"  268","line":"    herr_t res = H5Sget_simple_extent_dims(dataspace, dims, NULL);"},
{"lineNum":"  269","line":"    if (res < 0) throw Hdf5_exception();"},
{"lineNum":"  270","line":""},
{"lineNum":"  271","line":"    int storage_order = storage_order::hdf5_default;"},
{"lineNum":"  272","line":"    try { storage_order = read<int>(name + \"_storage_order\"); } catch (Hdf5_exception e) { }"},
{"lineNum":"  273","line":""},
{"lineNum":"  274","line":"    if (storage_order != storage_order::col)"},
{"lineNum":"  275","line":"    {"},
{"lineNum":"  276","line":"        throw std::runtime_error("},
{"lineNum":"  277","line":"                \"Hdf5_file::read<karray2d>: data to read has wrong storage order\");"},
{"lineNum":"  278","line":"    }"},
{"lineNum":"  279","line":""},
{"lineNum":"  280","line":"    karray2d retval(name, dims[0], dims[1]);"},
{"lineNum":"  281","line":""},
{"lineNum":"  282","line":"    Hdf5_handler memspace = H5Screate_simple(rank, dims, NULL);"},
{"lineNum":"  283","line":"    res = H5Dread(dataset, atomic_type, memspace, dataspace, H5P_DEFAULT, retval.data());"},
{"lineNum":"  284","line":""},
{"lineNum":"  285","line":"    if (res < 0) throw Hdf5_exception();"},
{"lineNum":"  286","line":""},
{"lineNum":"  287","line":"    return retval;"},
{"lineNum":"  288","line":"}"},
{"lineNum":"  289","line":""},
{"lineNum":"  290","line":"template<>"},
{"lineNum":"  291","line":"karray2d_row Hdf5_file::read<karray2d_row>(std::string const& name)"},
{"lineNum":"  292","line":"{"},
{"lineNum":"  293","line":"    Hdf5_handler dataset     = H5Dopen(h5file, name.c_str(), H5P_DEFAULT);"},
{"lineNum":"  294","line":"    Hdf5_handler dataspace   = H5Dget_space(dataset);"},
{"lineNum":"  295","line":"    Hdf5_handler atomic_type = hdf5_atomic_data_type<double>();"},
{"lineNum":"  296","line":""},
{"lineNum":"  297","line":"    const int rank = 2;"},
{"lineNum":"  298","line":"    int file_rank = H5Sget_simple_extent_ndims(dataspace);"},
{"lineNum":"  299","line":""},
{"lineNum":"  300","line":"    if (file_rank != rank)"},
{"lineNum":"  301","line":"    {"},
{"lineNum":"  302","line":"        throw std::runtime_error("},
{"lineNum":"  303","line":"                \"Hdf5_file::read<karray2d_row>: data to read has wrong rank\");"},
{"lineNum":"  304","line":"    }"},
{"lineNum":"  305","line":""},
{"lineNum":"  306","line":"    hsize_t dims[rank];"},
{"lineNum":"  307","line":"    herr_t res = H5Sget_simple_extent_dims(dataspace, dims, NULL);"},
{"lineNum":"  308","line":"    if (res < 0) throw Hdf5_exception();"},
{"lineNum":"  309","line":""},
{"lineNum":"  310","line":"    int storage_order = storage_order::hdf5_default;"},
{"lineNum":"  311","line":"    try { storage_order = read<int>(name + \"_storage_order\"); } catch (Hdf5_exception e) { }"},
{"lineNum":"  312","line":""},
{"lineNum":"  313","line":"    if (storage_order != storage_order::row)"},
{"lineNum":"  314","line":"    {"},
{"lineNum":"  315","line":"        throw std::runtime_error("},
{"lineNum":"  316","line":"                \"Hdf5_file::read<karray2d_row>: data to read has wrong storage order\");"},
{"lineNum":"  317","line":"    }"},
{"lineNum":"  318","line":""},
{"lineNum":"  319","line":"    karray2d_row retval(name, dims[0], dims[1]);"},
{"lineNum":"  320","line":""},
{"lineNum":"  321","line":"    Hdf5_handler memspace = H5Screate_simple(rank, dims, NULL);"},
{"lineNum":"  322","line":"    res = H5Dread(dataset, atomic_type, memspace, dataspace, H5P_DEFAULT, retval.data());"},
{"lineNum":"  323","line":""},
{"lineNum":"  324","line":"    if (res < 0) throw Hdf5_exception();"},
{"lineNum":"  325","line":""},
{"lineNum":"  326","line":"    return retval;"},
{"lineNum":"  327","line":"}"},
{"lineNum":"  328","line":"#endif"},
{"lineNum":"  329","line":""},
{"lineNum":"  330","line":""},
{"lineNum":"  331","line":""},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:41", "instrumented" : 46, "covered" : 0,};
var merged_data = [];
