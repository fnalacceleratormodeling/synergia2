var data = {lines:[
{"lineNum":"    1","line":"/*"},
{"lineNum":"    2","line":"//@HEADER"},
{"lineNum":"    3","line":"// ************************************************************************"},
{"lineNum":"    4","line":"//"},
{"lineNum":"    5","line":"//                        Kokkos v. 3.0"},
{"lineNum":"    6","line":"//       Copyright (2020) National Technology & Engineering"},
{"lineNum":"    7","line":"//               Solutions of Sandia, LLC (NTESS)."},
{"lineNum":"    8","line":"//"},
{"lineNum":"    9","line":"// Under the terms of Contract DE-NA0003525 with NTESS,"},
{"lineNum":"   10","line":"// the U.S. Government retains certain rights in this software."},
{"lineNum":"   11","line":"//"},
{"lineNum":"   12","line":"// Redistribution and use in source and binary forms, with or without"},
{"lineNum":"   13","line":"// modification, are permitted provided that the following conditions are"},
{"lineNum":"   14","line":"// met:"},
{"lineNum":"   15","line":"//"},
{"lineNum":"   16","line":"// 1. Redistributions of source code must retain the above copyright"},
{"lineNum":"   17","line":"// notice, this list of conditions and the following disclaimer."},
{"lineNum":"   18","line":"//"},
{"lineNum":"   19","line":"// 2. Redistributions in binary form must reproduce the above copyright"},
{"lineNum":"   20","line":"// notice, this list of conditions and the following disclaimer in the"},
{"lineNum":"   21","line":"// documentation and/or other materials provided with the distribution."},
{"lineNum":"   22","line":"//"},
{"lineNum":"   23","line":"// 3. Neither the name of the Corporation nor the names of the"},
{"lineNum":"   24","line":"// contributors may be used to endorse or promote products derived from"},
{"lineNum":"   25","line":"// this software without specific prior written permission."},
{"lineNum":"   26","line":"//"},
{"lineNum":"   27","line":"// THIS SOFTWARE IS PROVIDED BY NTESS \"AS IS\" AND ANY"},
{"lineNum":"   28","line":"// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE"},
{"lineNum":"   29","line":"// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR"},
{"lineNum":"   30","line":"// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL NTESS OR THE"},
{"lineNum":"   31","line":"// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,"},
{"lineNum":"   32","line":"// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,"},
{"lineNum":"   33","line":"// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR"},
{"lineNum":"   34","line":"// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF"},
{"lineNum":"   35","line":"// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING"},
{"lineNum":"   36","line":"// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS"},
{"lineNum":"   37","line":"// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."},
{"lineNum":"   38","line":"//"},
{"lineNum":"   39","line":"// Questions? Contact Christian R. Trott (crtrott@sandia.gov)"},
{"lineNum":"   40","line":"//"},
{"lineNum":"   41","line":"// ************************************************************************"},
{"lineNum":"   42","line":"//@HEADER"},
{"lineNum":"   43","line":"*/"},
{"lineNum":"   44","line":""},
{"lineNum":"   45","line":"#include <Kokkos_Macros.hpp>"},
{"lineNum":"   46","line":"#include <Kokkos_Tuners.hpp>"},
{"lineNum":"   47","line":"#include <impl/Kokkos_Profiling.hpp>"},
{"lineNum":"   48","line":"#if defined(KOKKOS_ENABLE_LIBDL)"},
{"lineNum":"   49","line":"#include <dlfcn.h>"},
{"lineNum":"   50","line":"#endif"},
{"lineNum":"   51","line":""},
{"lineNum":"   52","line":"#include <algorithm>"},
{"lineNum":"   53","line":"#include <array>"},
{"lineNum":"   54","line":"#include <cstring>"},
{"lineNum":"   55","line":"#include <iostream>"},
{"lineNum":"   56","line":"#include <stack>"},
{"lineNum":"   57","line":"#include <unordered_map>"},
{"lineNum":"   58","line":"#include <unordered_set>"},
{"lineNum":"   59","line":"#include <vector>"},
{"lineNum":"   60","line":"namespace Kokkos {"},
{"lineNum":"   61","line":""},
{"lineNum":"   62","line":"namespace Tools {"},
{"lineNum":"   63","line":""},
{"lineNum":"   64","line":"namespace Experimental {"},
{"lineNum":"   65","line":""},
{"lineNum":"   66","line":"namespace Impl {"},
{"lineNum":"   67","line":"void tool_invoked_fence(const uint32_t /* devID */) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   68","line":"  /**"},
{"lineNum":"   69","line":"   * Currently the function ignores the device ID,"},
{"lineNum":"   70","line":"   * Eventually we want to support fencing only"},
{"lineNum":"   71","line":"   * a given stream/resource"},
{"lineNum":"   72","line":"   */"},
{"lineNum":"   73","line":"  Kokkos::fence();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   74","line":"}"},
{"lineNum":"   75","line":"}  // namespace Impl"},
{"lineNum":"   76","line":"#ifdef KOKKOS_ENABLE_TUNING"},
{"lineNum":"   77","line":"static size_t kernel_name_context_variable_id;"},
{"lineNum":"   78","line":"static size_t kernel_type_context_variable_id;"},
{"lineNum":"   79","line":"static std::unordered_map<size_t, std::unordered_set<size_t>>"},
{"lineNum":"   80","line":"    features_per_context;"},
{"lineNum":"   81","line":"static std::unordered_set<size_t> active_features;"},
{"lineNum":"   82","line":"static std::unordered_map<size_t, VariableValue> feature_values;"},
{"lineNum":"   83","line":"static std::unordered_map<size_t, VariableInfo> variable_metadata;"},
{"lineNum":"   84","line":"#endif"},
{"lineNum":"   85","line":"static EventSet current_callbacks;"},
{"lineNum":"   86","line":"static EventSet backup_callbacks;"},
{"lineNum":"   87","line":"static EventSet no_profiling;"},
{"lineNum":"   88","line":"static Kokkos::Tools::Experimental::ToolSettings tool_requirements;"},
{"lineNum":"   89","line":"bool eventSetsEqual(const EventSet& l, const EventSet& r) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   90","line":"  return l.init == r.init && l.finalize == r.finalize &&","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   91","line":"         l.parse_args == r.parse_args && l.print_help == r.print_help &&"},
{"lineNum":"   92","line":"         l.begin_parallel_for == r.begin_parallel_for &&"},
{"lineNum":"   93","line":"         l.end_parallel_for == r.end_parallel_for &&"},
{"lineNum":"   94","line":"         l.begin_parallel_reduce == r.begin_parallel_reduce &&"},
{"lineNum":"   95","line":"         l.end_parallel_reduce == r.end_parallel_reduce &&"},
{"lineNum":"   96","line":"         l.begin_parallel_scan == r.begin_parallel_scan &&"},
{"lineNum":"   97","line":"         l.end_parallel_scan == r.end_parallel_scan &&"},
{"lineNum":"   98","line":"         l.push_region == r.push_region && l.pop_region == r.pop_region &&"},
{"lineNum":"   99","line":"         l.allocate_data == r.allocate_data &&"},
{"lineNum":"  100","line":"         l.deallocate_data == r.deallocate_data &&"},
{"lineNum":"  101","line":"         l.create_profile_section == r.create_profile_section &&"},
{"lineNum":"  102","line":"         l.start_profile_section == r.start_profile_section &&"},
{"lineNum":"  103","line":"         l.stop_profile_section == r.stop_profile_section &&"},
{"lineNum":"  104","line":"         l.destroy_profile_section == r.destroy_profile_section &&"},
{"lineNum":"  105","line":"         l.profile_event == r.profile_event &&"},
{"lineNum":"  106","line":"         l.begin_deep_copy == r.begin_deep_copy &&"},
{"lineNum":"  107","line":"         l.end_deep_copy == r.end_deep_copy && l.begin_fence == r.begin_fence &&"},
{"lineNum":"  108","line":"         l.end_fence == r.end_fence && l.sync_dual_view == r.sync_dual_view &&"},
{"lineNum":"  109","line":"         l.modify_dual_view == r.modify_dual_view &&"},
{"lineNum":"  110","line":"         l.declare_metadata == r.declare_metadata &&"},
{"lineNum":"  111","line":"         l.request_tool_settings == r.request_tool_settings &&"},
{"lineNum":"  112","line":"         l.provide_tool_programming_interface =="},
{"lineNum":"  113","line":"             r.provide_tool_programming_interface &&"},
{"lineNum":"  114","line":"         l.declare_input_type == r.declare_input_type &&"},
{"lineNum":"  115","line":"         l.declare_output_type == r.declare_output_type &&","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  116","line":"         l.end_tuning_context == r.end_tuning_context &&"},
{"lineNum":"  117","line":"         l.begin_tuning_context == r.begin_tuning_context &&"},
{"lineNum":"  118","line":"         l.request_output_values == r.request_output_values &&"},
{"lineNum":"  119","line":"         l.declare_optimization_goal == r.declare_optimization_goal;"},
{"lineNum":"  120","line":"}"},
{"lineNum":"  121","line":"enum class MayRequireGlobalFencing : bool { No, Yes };"},
{"lineNum":"  122","line":"template <typename Callback, typename... Args>"},
{"lineNum":"  123","line":"inline void invoke_kokkosp_callback("},
{"lineNum":"  124","line":"    MayRequireGlobalFencing may_require_global_fencing,"},
{"lineNum":"  125","line":"    const Callback& callback, Args&&... args) {"},
{"lineNum":"  126","line":"  if (callback != nullptr) {","class":"lineNoCov","hits":"0","possible_hits":"44",},
{"lineNum":"  127","line":"    // two clause if statement"},
{"lineNum":"  128","line":"    // may_require_global_fencing: \"if this callback ever needs a fence\", AND"},
{"lineNum":"  129","line":"    // if the tool requires global fencing (default true, but tools can"},
{"lineNum":"  130","line":"    // overwrite)"},
{"lineNum":"  131","line":"    if (may_require_global_fencing == MayRequireGlobalFencing::Yes &&","class":"lineNoCov","hits":"0","possible_hits":"16",},
{"lineNum":"  132","line":"        (Kokkos::Tools::Experimental::tool_requirements"},
{"lineNum":"  133","line":"             .requires_global_fencing)) {"},
{"lineNum":"  134","line":"      Kokkos::fence();","class":"lineNoCov","hits":"0","possible_hits":"16",},
{"lineNum":"  135","line":"    }"},
{"lineNum":"  136","line":"    (*callback)(std::forward<Args>(args)...);","class":"lineNoCov","hits":"0","possible_hits":"60",},
{"lineNum":"  137","line":"  }"},
{"lineNum":"  138","line":"}"},
{"lineNum":"  139","line":"}  // namespace Experimental"},
{"lineNum":"  140","line":"bool profileLibraryLoaded() {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  141","line":"  return !Experimental::eventSetsEqual(Experimental::current_callbacks,","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  142","line":"                                       Experimental::no_profiling);"},
{"lineNum":"  143","line":"}"},
{"lineNum":"  144","line":""},
{"lineNum":"  145","line":"void beginParallelFor(const std::string& kernelPrefix, const uint32_t devID,"},
{"lineNum":"  146","line":"                      uint64_t* kernelID) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  147","line":"  Experimental::invoke_kokkosp_callback("},
{"lineNum":"  148","line":"      Experimental::MayRequireGlobalFencing::Yes,"},
{"lineNum":"  149","line":"      Experimental::current_callbacks.begin_parallel_for, kernelPrefix.c_str(),"},
{"lineNum":"  150","line":"      devID, kernelID);"},
{"lineNum":"  151","line":"#ifdef KOKKOS_ENABLE_TUNING"},
{"lineNum":"  152","line":"  if (Kokkos::tune_internals()) {"},
{"lineNum":"  153","line":"    auto context_id = Experimental::get_new_context_id();"},
{"lineNum":"  154","line":"    Experimental::begin_context(context_id);"},
{"lineNum":"  155","line":"    Experimental::VariableValue contextValues[] = {"},
{"lineNum":"  156","line":"        Experimental::make_variable_value("},
{"lineNum":"  157","line":"            Experimental::kernel_name_context_variable_id, kernelPrefix),"},
{"lineNum":"  158","line":"        Experimental::make_variable_value("},
{"lineNum":"  159","line":"            Experimental::kernel_type_context_variable_id, \"parallel_for\")};"},
{"lineNum":"  160","line":"    Experimental::set_input_values(context_id, 2, contextValues);"},
{"lineNum":"  161","line":"  }"},
{"lineNum":"  162","line":"#endif"},
{"lineNum":"  163","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  164","line":""},
{"lineNum":"  165","line":"void endParallelFor(const uint64_t kernelID) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  166","line":"  Experimental::invoke_kokkosp_callback("},
{"lineNum":"  167","line":"      Experimental::MayRequireGlobalFencing::Yes,"},
{"lineNum":"  168","line":"      Experimental::current_callbacks.end_parallel_for, kernelID);"},
{"lineNum":"  169","line":"#ifdef KOKKOS_ENABLE_TUNING"},
{"lineNum":"  170","line":"  if (Kokkos::tune_internals()) {"},
{"lineNum":"  171","line":"    Experimental::end_context(Experimental::get_current_context_id());"},
{"lineNum":"  172","line":"  }"},
{"lineNum":"  173","line":"#endif"},
{"lineNum":"  174","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  175","line":""},
{"lineNum":"  176","line":"void beginParallelScan(const std::string& kernelPrefix, const uint32_t devID,"},
{"lineNum":"  177","line":"                       uint64_t* kernelID) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  178","line":"  Experimental::invoke_kokkosp_callback("},
{"lineNum":"  179","line":"      Experimental::MayRequireGlobalFencing::Yes,"},
{"lineNum":"  180","line":"      Experimental::current_callbacks.begin_parallel_scan, kernelPrefix.c_str(),"},
{"lineNum":"  181","line":"      devID, kernelID);"},
{"lineNum":"  182","line":"#ifdef KOKKOS_ENABLE_TUNING"},
{"lineNum":"  183","line":"  if (Kokkos::tune_internals()) {"},
{"lineNum":"  184","line":"    auto context_id = Experimental::get_new_context_id();"},
{"lineNum":"  185","line":"    Experimental::begin_context(context_id);"},
{"lineNum":"  186","line":"    Experimental::VariableValue contextValues[] = {"},
{"lineNum":"  187","line":"        Experimental::make_variable_value("},
{"lineNum":"  188","line":"            Experimental::kernel_name_context_variable_id, kernelPrefix),"},
{"lineNum":"  189","line":"        Experimental::make_variable_value("},
{"lineNum":"  190","line":"            Experimental::kernel_type_context_variable_id, \"parallel_for\")};"},
{"lineNum":"  191","line":"    Experimental::set_input_values(context_id, 2, contextValues);"},
{"lineNum":"  192","line":"  }"},
{"lineNum":"  193","line":"#endif"},
{"lineNum":"  194","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  195","line":""},
{"lineNum":"  196","line":"void endParallelScan(const uint64_t kernelID) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  197","line":"  Experimental::invoke_kokkosp_callback("},
{"lineNum":"  198","line":"      Experimental::MayRequireGlobalFencing::Yes,"},
{"lineNum":"  199","line":"      Experimental::current_callbacks.end_parallel_scan, kernelID);"},
{"lineNum":"  200","line":"#ifdef KOKKOS_ENABLE_TUNING"},
{"lineNum":"  201","line":"  if (Kokkos::tune_internals()) {"},
{"lineNum":"  202","line":"    Experimental::end_context(Experimental::get_current_context_id());"},
{"lineNum":"  203","line":"  }"},
{"lineNum":"  204","line":"#endif"},
{"lineNum":"  205","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  206","line":""},
{"lineNum":"  207","line":"void beginParallelReduce(const std::string& kernelPrefix, const uint32_t devID,"},
{"lineNum":"  208","line":"                         uint64_t* kernelID) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  209","line":"  Experimental::invoke_kokkosp_callback("},
{"lineNum":"  210","line":"      Experimental::MayRequireGlobalFencing::Yes,"},
{"lineNum":"  211","line":"      Experimental::current_callbacks.begin_parallel_reduce,"},
{"lineNum":"  212","line":"      kernelPrefix.c_str(), devID, kernelID);"},
{"lineNum":"  213","line":"#ifdef KOKKOS_ENABLE_TUNING"},
{"lineNum":"  214","line":"  if (Kokkos::tune_internals()) {"},
{"lineNum":"  215","line":"    auto context_id = Experimental::get_new_context_id();"},
{"lineNum":"  216","line":"    Experimental::begin_context(context_id);"},
{"lineNum":"  217","line":"    Experimental::VariableValue contextValues[] = {"},
{"lineNum":"  218","line":"        Experimental::make_variable_value("},
{"lineNum":"  219","line":"            Experimental::kernel_name_context_variable_id, kernelPrefix),"},
{"lineNum":"  220","line":"        Experimental::make_variable_value("},
{"lineNum":"  221","line":"            Experimental::kernel_type_context_variable_id, \"parallel_for\")};"},
{"lineNum":"  222","line":"    Experimental::set_input_values(context_id, 2, contextValues);"},
{"lineNum":"  223","line":"  }"},
{"lineNum":"  224","line":"#endif"},
{"lineNum":"  225","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  226","line":""},
{"lineNum":"  227","line":"void endParallelReduce(const uint64_t kernelID) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  228","line":"  Experimental::invoke_kokkosp_callback("},
{"lineNum":"  229","line":"      Experimental::MayRequireGlobalFencing::Yes,"},
{"lineNum":"  230","line":"      Experimental::current_callbacks.end_parallel_reduce, kernelID);"},
{"lineNum":"  231","line":"#ifdef KOKKOS_ENABLE_TUNING"},
{"lineNum":"  232","line":"  if (Kokkos::tune_internals()) {"},
{"lineNum":"  233","line":"    Experimental::end_context(Experimental::get_current_context_id());"},
{"lineNum":"  234","line":"  }"},
{"lineNum":"  235","line":"#endif"},
{"lineNum":"  236","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  237","line":""},
{"lineNum":"  238","line":"void pushRegion(const std::string& kName) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  239","line":"  Experimental::invoke_kokkosp_callback("},
{"lineNum":"  240","line":"      Experimental::MayRequireGlobalFencing::Yes,"},
{"lineNum":"  241","line":"      Experimental::current_callbacks.push_region, kName.c_str());"},
{"lineNum":"  242","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  243","line":""},
{"lineNum":"  244","line":"void popRegion() {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  245","line":"  Experimental::invoke_kokkosp_callback("},
{"lineNum":"  246","line":"      Experimental::MayRequireGlobalFencing::Yes,"},
{"lineNum":"  247","line":"      Experimental::current_callbacks.pop_region);"},
{"lineNum":"  248","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  249","line":""},
{"lineNum":"  250","line":"void allocateData(const SpaceHandle space, const std::string label,"},
{"lineNum":"  251","line":"                  const void* ptr, const uint64_t size) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  252","line":"  Experimental::invoke_kokkosp_callback("},
{"lineNum":"  253","line":"      Experimental::MayRequireGlobalFencing::No,"},
{"lineNum":"  254","line":"      Experimental::current_callbacks.allocate_data, space, label.c_str(), ptr,"},
{"lineNum":"  255","line":"      size);"},
{"lineNum":"  256","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  257","line":""},
{"lineNum":"  258","line":"void deallocateData(const SpaceHandle space, const std::string label,"},
{"lineNum":"  259","line":"                    const void* ptr, const uint64_t size) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  260","line":"  Experimental::invoke_kokkosp_callback("},
{"lineNum":"  261","line":"      Experimental::MayRequireGlobalFencing::No,"},
{"lineNum":"  262","line":"      Experimental::current_callbacks.deallocate_data, space, label.c_str(),"},
{"lineNum":"  263","line":"      ptr, size);"},
{"lineNum":"  264","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  265","line":""},
{"lineNum":"  266","line":"void beginDeepCopy(const SpaceHandle dst_space, const std::string dst_label,"},
{"lineNum":"  267","line":"                   const void* dst_ptr, const SpaceHandle src_space,"},
{"lineNum":"  268","line":"                   const std::string src_label, const void* src_ptr,"},
{"lineNum":"  269","line":"                   const uint64_t size) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  270","line":"  Experimental::invoke_kokkosp_callback("},
{"lineNum":"  271","line":"      Experimental::MayRequireGlobalFencing::No,"},
{"lineNum":"  272","line":"      Experimental::current_callbacks.begin_deep_copy, dst_space,"},
{"lineNum":"  273","line":"      dst_label.c_str(), dst_ptr, src_space, src_label.c_str(), src_ptr, size);"},
{"lineNum":"  274","line":"#ifdef KOKKOS_ENABLE_TUNING"},
{"lineNum":"  275","line":"  if (Experimental::current_callbacks.begin_deep_copy != nullptr) {"},
{"lineNum":"  276","line":"    if (Kokkos::tune_internals()) {"},
{"lineNum":"  277","line":"      auto context_id = Experimental::get_new_context_id();"},
{"lineNum":"  278","line":"      Experimental::begin_context(context_id);"},
{"lineNum":"  279","line":"      Experimental::VariableValue contextValues[] = {"},
{"lineNum":"  280","line":"          Experimental::make_variable_value("},
{"lineNum":"  281","line":"              Experimental::kernel_name_context_variable_id,"},
{"lineNum":"  282","line":"              \"deep_copy_kernel\"),"},
{"lineNum":"  283","line":"          Experimental::make_variable_value("},
{"lineNum":"  284","line":"              Experimental::kernel_type_context_variable_id, \"deep_copy\")};"},
{"lineNum":"  285","line":"      Experimental::set_input_values(context_id, 2, contextValues);"},
{"lineNum":"  286","line":"    }"},
{"lineNum":"  287","line":"  }"},
{"lineNum":"  288","line":"#endif"},
{"lineNum":"  289","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  290","line":""},
{"lineNum":"  291","line":"void endDeepCopy() {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  292","line":"  Experimental::invoke_kokkosp_callback("},
{"lineNum":"  293","line":"      Experimental::MayRequireGlobalFencing::No,"},
{"lineNum":"  294","line":"      Experimental::current_callbacks.end_deep_copy);"},
{"lineNum":"  295","line":"#ifdef KOKKOS_ENABLE_TUNING"},
{"lineNum":"  296","line":"  if (Experimental::current_callbacks.end_deep_copy != nullptr) {"},
{"lineNum":"  297","line":"    if (Kokkos::tune_internals()) {"},
{"lineNum":"  298","line":"      Experimental::end_context(Experimental::get_current_context_id());"},
{"lineNum":"  299","line":"    }"},
{"lineNum":"  300","line":"  }"},
{"lineNum":"  301","line":"#endif"},
{"lineNum":"  302","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  303","line":""},
{"lineNum":"  304","line":"void beginFence(const std::string name, const uint32_t deviceId,"},
{"lineNum":"  305","line":"                uint64_t* handle) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  306","line":"  Experimental::invoke_kokkosp_callback("},
{"lineNum":"  307","line":"      Experimental::MayRequireGlobalFencing::No,"},
{"lineNum":"  308","line":"      Experimental::current_callbacks.begin_fence, name.c_str(), deviceId,"},
{"lineNum":"  309","line":"      handle);"},
{"lineNum":"  310","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  311","line":""},
{"lineNum":"  312","line":"void endFence(const uint64_t handle) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  313","line":"  Experimental::invoke_kokkosp_callback("},
{"lineNum":"  314","line":"      Experimental::MayRequireGlobalFencing::No,"},
{"lineNum":"  315","line":"      Experimental::current_callbacks.end_fence, handle);"},
{"lineNum":"  316","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  317","line":""},
{"lineNum":"  318","line":"void createProfileSection(const std::string& sectionName, uint32_t* secID) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  319","line":"  Experimental::invoke_kokkosp_callback("},
{"lineNum":"  320","line":"      Experimental::MayRequireGlobalFencing::No,"},
{"lineNum":"  321","line":"      Experimental::current_callbacks.create_profile_section,"},
{"lineNum":"  322","line":"      sectionName.c_str(), secID);"},
{"lineNum":"  323","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  324","line":""},
{"lineNum":"  325","line":"void startSection(const uint32_t secID) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  326","line":"  Experimental::invoke_kokkosp_callback("},
{"lineNum":"  327","line":"      Experimental::MayRequireGlobalFencing::No,"},
{"lineNum":"  328","line":"      Experimental::current_callbacks.start_profile_section, secID);"},
{"lineNum":"  329","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  330","line":""},
{"lineNum":"  331","line":"void stopSection(const uint32_t secID) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  332","line":"  Experimental::invoke_kokkosp_callback("},
{"lineNum":"  333","line":"      Experimental::MayRequireGlobalFencing::No,"},
{"lineNum":"  334","line":"      Experimental::current_callbacks.stop_profile_section, secID);"},
{"lineNum":"  335","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  336","line":""},
{"lineNum":"  337","line":"void destroyProfileSection(const uint32_t secID) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  338","line":"  Experimental::invoke_kokkosp_callback("},
{"lineNum":"  339","line":"      Experimental::MayRequireGlobalFencing::No,"},
{"lineNum":"  340","line":"      Experimental::current_callbacks.destroy_profile_section, secID);"},
{"lineNum":"  341","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  342","line":""},
{"lineNum":"  343","line":"void markEvent(const std::string& eventName) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  344","line":"  Experimental::invoke_kokkosp_callback("},
{"lineNum":"  345","line":"      Experimental::MayRequireGlobalFencing::No,"},
{"lineNum":"  346","line":"      Experimental::current_callbacks.profile_event, eventName.c_str());"},
{"lineNum":"  347","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  348","line":""},
{"lineNum":"  349","line":"bool printHelp(const std::string& args) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  350","line":"  if (Experimental::current_callbacks.print_help == nullptr) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  351","line":"    return false;"},
{"lineNum":"  352","line":"  }"},
{"lineNum":"  353","line":"  std::string arg0  = args.substr(0, args.find_first_of(\' \'));"},
{"lineNum":"  354","line":"  const char* carg0 = arg0.c_str();"},
{"lineNum":"  355","line":"  Experimental::invoke_kokkosp_callback("},
{"lineNum":"  356","line":"      Experimental::MayRequireGlobalFencing::No,"},
{"lineNum":"  357","line":"      Experimental::current_callbacks.print_help, const_cast<char*>(carg0));"},
{"lineNum":"  358","line":"  return true;"},
{"lineNum":"  359","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  360","line":""},
{"lineNum":"  361","line":"void parseArgs(int _argc, char** _argv) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  362","line":"  if (Experimental::current_callbacks.parse_args != nullptr && _argc > 0) {","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  363","line":"    Experimental::invoke_kokkosp_callback("},
{"lineNum":"  364","line":"        Experimental::MayRequireGlobalFencing::No,"},
{"lineNum":"  365","line":"        Experimental::current_callbacks.parse_args, _argc, _argv);"},
{"lineNum":"  366","line":"  }"},
{"lineNum":"  367","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  368","line":""},
{"lineNum":"  369","line":"void parseArgs(const std::string& args) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  370","line":"  if (Experimental::current_callbacks.parse_args == nullptr) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  371","line":"    return;"},
{"lineNum":"  372","line":"  }"},
{"lineNum":"  373","line":"  using strvec_t = std::vector<std::string>;"},
{"lineNum":"  374","line":"  auto tokenize  = [](const std::string& line, const std::string& delimiters) {"},
{"lineNum":"  375","line":"    strvec_t _result{};"},
{"lineNum":"  376","line":"    std::size_t _bidx = 0;  // position that is the beginning of the new string"},
{"lineNum":"  377","line":"    std::size_t _didx = 0;  // position of the delimiter in the string"},
{"lineNum":"  378","line":"    while (_bidx < line.length() && _didx < line.length()) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  379","line":"      // find the first character (starting at _didx) that is not a delimiter"},
{"lineNum":"  380","line":"      _bidx = line.find_first_not_of(delimiters, _didx);"},
{"lineNum":"  381","line":"      // if no more non-delimiter chars, done"},
{"lineNum":"  382","line":"      if (_bidx == std::string::npos) break;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  383","line":"      // starting at the position of the new string, find the next delimiter"},
{"lineNum":"  384","line":"      _didx = line.find_first_of(delimiters, _bidx);"},
{"lineNum":"  385","line":"      // starting at the position of the new string, get the characters"},
{"lineNum":"  386","line":"      // between this position and the next delimiter"},
{"lineNum":"  387","line":"      std::string _tmp = line.substr(_bidx, _didx - _bidx);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  388","line":"      // don\'t add empty strings"},
{"lineNum":"  389","line":"      if (!_tmp.empty()) _result.emplace_back(_tmp);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  390","line":"    }"},
{"lineNum":"  391","line":"    return _result;"},
{"lineNum":"  392","line":"  };","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  393","line":"  auto vargs = tokenize(args, \" \\t\");"},
{"lineNum":"  394","line":"  if (vargs.size() == 0) return;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  395","line":"  auto _argc          = static_cast<int>(vargs.size());"},
{"lineNum":"  396","line":"  char** _argv        = new char*[_argc + 1];","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  397","line":"  _argv[vargs.size()] = nullptr;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  398","line":"  for (int i = 0; i < _argc; ++i) {","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  399","line":"    auto& _str = vargs.at(i);"},
{"lineNum":"  400","line":"    _argv[i]   = new char[_str.length() + 1];","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  401","line":"    std::memcpy(_argv[i], _str.c_str(), _str.length() * sizeof(char));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  402","line":"    _argv[i][_str.length()] = \'\\0\';","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  403","line":"  }"},
{"lineNum":"  404","line":"  parseArgs(_argc, _argv);"},
{"lineNum":"  405","line":"  for (int i = 0; i < _argc; ++i) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  406","line":"    delete[] _argv[i];","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  407","line":"  }"},
{"lineNum":"  408","line":"  delete[] _argv;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  409","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  410","line":""},
{"lineNum":"  411","line":"SpaceHandle make_space_handle(const char* space_name) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  412","line":"  SpaceHandle handle;"},
{"lineNum":"  413","line":"  strncpy(handle.name, space_name, 63);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  414","line":"  return handle;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  415","line":"}"},
{"lineNum":"  416","line":""},
{"lineNum":"  417","line":"template <typename Callback>"},
{"lineNum":"  418","line":"void lookup_function(void* dlopen_handle, const std::string& basename,"},
{"lineNum":"  419","line":"                     Callback& callback) {"},
{"lineNum":"  420","line":"#ifdef KOKKOS_ENABLE_LIBDL"},
{"lineNum":"  421","line":"  // dlsym returns a pointer to an object, while we want to assign to"},
{"lineNum":"  422","line":"  // pointer to function A direct cast will give warnings hence, we have to"},
{"lineNum":"  423","line":"  // workaround the issue by casting pointer to pointers."},
{"lineNum":"  424","line":"  void* p  = dlsym(dlopen_handle, basename.c_str());","class":"lineNoCov","hits":"0","possible_hits":"28",},
{"lineNum":"  425","line":"  callback = *reinterpret_cast<Callback*>(&p);","class":"lineNoCov","hits":"0","possible_hits":"28",},
{"lineNum":"  426","line":"#endif"},
{"lineNum":"  427","line":"}"},
{"lineNum":"  428","line":""},
{"lineNum":"  429","line":"void initialize(const std::string& profileLibrary) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  430","line":"  // Make sure initialize calls happens only once"},
{"lineNum":"  431","line":"  static int is_initialized = 0;"},
{"lineNum":"  432","line":"  if (is_initialized) return;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  433","line":"  is_initialized = 1;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  434","line":""},
{"lineNum":"  435","line":"#ifdef KOKKOS_ENABLE_LIBDL"},
{"lineNum":"  436","line":"  void* firstProfileLibrary = nullptr;"},
{"lineNum":"  437","line":""},
{"lineNum":"  438","line":"  if (profileLibrary.empty()) return;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  439","line":""},
{"lineNum":"  440","line":"  char* envProfileLibrary = const_cast<char*>(profileLibrary.c_str());"},
{"lineNum":"  441","line":""},
{"lineNum":"  442","line":"  char* envProfileCopy ="},
{"lineNum":"  443","line":"      (char*)malloc(sizeof(char) * (strlen(envProfileLibrary) + 1));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  444","line":"  sprintf(envProfileCopy, \"%s\", envProfileLibrary);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  445","line":""},
{"lineNum":"  446","line":"  char* profileLibraryName = strtok(envProfileCopy, \";\");","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  447","line":""},
{"lineNum":"  448","line":"  if ((profileLibraryName != nullptr) &&","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  449","line":"      (strcmp(profileLibraryName, \"\") != 0)) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  450","line":"    firstProfileLibrary = dlopen(profileLibraryName, RTLD_NOW | RTLD_GLOBAL);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  451","line":""},
{"lineNum":"  452","line":"    if (firstProfileLibrary == nullptr) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  453","line":"      std::cerr << \"Error: Unable to load KokkosP library: \""},
{"lineNum":"  454","line":"                << profileLibraryName << std::endl;"},
{"lineNum":"  455","line":"      std::cerr << \"dlopen(\" << profileLibraryName"},
{"lineNum":"  456","line":"                << \", RTLD_NOW | RTLD_GLOBAL) failed with \" << dlerror()","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  457","line":"                << \'\\n\';"},
{"lineNum":"  458","line":"    } else {"},
{"lineNum":"  459","line":"#ifdef KOKKOS_ENABLE_PROFILING_LOAD_PRINT"},
{"lineNum":"  460","line":"      std::cout << \"KokkosP: Library Loaded: \" << profileLibraryName"},
{"lineNum":"  461","line":"                << std::endl;"},
{"lineNum":"  462","line":"#endif"},
{"lineNum":"  463","line":"      lookup_function("},
{"lineNum":"  464","line":"          firstProfileLibrary, \"kokkosp_begin_parallel_scan\","},
{"lineNum":"  465","line":"          Kokkos::Tools::Experimental::current_callbacks.begin_parallel_scan);"},
{"lineNum":"  466","line":"      lookup_function("},
{"lineNum":"  467","line":"          firstProfileLibrary, \"kokkosp_begin_parallel_for\","},
{"lineNum":"  468","line":"          Kokkos::Tools::Experimental::current_callbacks.begin_parallel_for);"},
{"lineNum":"  469","line":"      lookup_function("},
{"lineNum":"  470","line":"          firstProfileLibrary, \"kokkosp_begin_parallel_reduce\","},
{"lineNum":"  471","line":"          Kokkos::Tools::Experimental::current_callbacks.begin_parallel_reduce);"},
{"lineNum":"  472","line":"      lookup_function("},
{"lineNum":"  473","line":"          firstProfileLibrary, \"kokkosp_end_parallel_scan\","},
{"lineNum":"  474","line":"          Kokkos::Tools::Experimental::current_callbacks.end_parallel_scan);"},
{"lineNum":"  475","line":"      lookup_function("},
{"lineNum":"  476","line":"          firstProfileLibrary, \"kokkosp_end_parallel_for\","},
{"lineNum":"  477","line":"          Kokkos::Tools::Experimental::current_callbacks.end_parallel_for);"},
{"lineNum":"  478","line":"      lookup_function("},
{"lineNum":"  479","line":"          firstProfileLibrary, \"kokkosp_end_parallel_reduce\","},
{"lineNum":"  480","line":"          Kokkos::Tools::Experimental::current_callbacks.end_parallel_reduce);"},
{"lineNum":"  481","line":""},
{"lineNum":"  482","line":"      lookup_function(firstProfileLibrary, \"kokkosp_init_library\","},
{"lineNum":"  483","line":"                      Kokkos::Tools::Experimental::current_callbacks.init);"},
{"lineNum":"  484","line":"      lookup_function(firstProfileLibrary, \"kokkosp_finalize_library\","},
{"lineNum":"  485","line":"                      Kokkos::Tools::Experimental::current_callbacks.finalize);"},
{"lineNum":"  486","line":""},
{"lineNum":"  487","line":"      lookup_function("},
{"lineNum":"  488","line":"          firstProfileLibrary, \"kokkosp_push_profile_region\","},
{"lineNum":"  489","line":"          Kokkos::Tools::Experimental::current_callbacks.push_region);"},
{"lineNum":"  490","line":"      lookup_function("},
{"lineNum":"  491","line":"          firstProfileLibrary, \"kokkosp_pop_profile_region\","},
{"lineNum":"  492","line":"          Kokkos::Tools::Experimental::current_callbacks.pop_region);"},
{"lineNum":"  493","line":"      lookup_function("},
{"lineNum":"  494","line":"          firstProfileLibrary, \"kokkosp_allocate_data\","},
{"lineNum":"  495","line":"          Kokkos::Tools::Experimental::current_callbacks.allocate_data);"},
{"lineNum":"  496","line":"      lookup_function("},
{"lineNum":"  497","line":"          firstProfileLibrary, \"kokkosp_deallocate_data\","},
{"lineNum":"  498","line":"          Kokkos::Tools::Experimental::current_callbacks.deallocate_data);"},
{"lineNum":"  499","line":""},
{"lineNum":"  500","line":"      lookup_function("},
{"lineNum":"  501","line":"          firstProfileLibrary, \"kokkosp_begin_deep_copy\","},
{"lineNum":"  502","line":"          Kokkos::Tools::Experimental::current_callbacks.begin_deep_copy);"},
{"lineNum":"  503","line":"      lookup_function("},
{"lineNum":"  504","line":"          firstProfileLibrary, \"kokkosp_end_deep_copy\","},
{"lineNum":"  505","line":"          Kokkos::Tools::Experimental::current_callbacks.end_deep_copy);"},
{"lineNum":"  506","line":"      lookup_function("},
{"lineNum":"  507","line":"          firstProfileLibrary, \"kokkosp_begin_fence\","},
{"lineNum":"  508","line":"          Kokkos::Tools::Experimental::current_callbacks.begin_fence);"},
{"lineNum":"  509","line":"      lookup_function(firstProfileLibrary, \"kokkosp_end_fence\","},
{"lineNum":"  510","line":"                      Kokkos::Tools::Experimental::current_callbacks.end_fence);"},
{"lineNum":"  511","line":"      lookup_function("},
{"lineNum":"  512","line":"          firstProfileLibrary, \"kokkosp_dual_view_sync\","},
{"lineNum":"  513","line":"          Kokkos::Tools::Experimental::current_callbacks.sync_dual_view);"},
{"lineNum":"  514","line":"      lookup_function("},
{"lineNum":"  515","line":"          firstProfileLibrary, \"kokkosp_dual_view_modify\","},
{"lineNum":"  516","line":"          Kokkos::Tools::Experimental::current_callbacks.modify_dual_view);"},
{"lineNum":"  517","line":""},
{"lineNum":"  518","line":"      lookup_function("},
{"lineNum":"  519","line":"          firstProfileLibrary, \"kokkosp_declare_metadata\","},
{"lineNum":"  520","line":"          Kokkos::Tools::Experimental::current_callbacks.declare_metadata);"},
{"lineNum":"  521","line":"      lookup_function(firstProfileLibrary, \"kokkosp_create_profile_section\","},
{"lineNum":"  522","line":"                      Kokkos::Tools::Experimental::current_callbacks"},
{"lineNum":"  523","line":"                          .create_profile_section);"},
{"lineNum":"  524","line":"      lookup_function("},
{"lineNum":"  525","line":"          firstProfileLibrary, \"kokkosp_start_profile_section\","},
{"lineNum":"  526","line":"          Kokkos::Tools::Experimental::current_callbacks.start_profile_section);"},
{"lineNum":"  527","line":"      lookup_function("},
{"lineNum":"  528","line":"          firstProfileLibrary, \"kokkosp_stop_profile_section\","},
{"lineNum":"  529","line":"          Kokkos::Tools::Experimental::current_callbacks.stop_profile_section);"},
{"lineNum":"  530","line":"      lookup_function(firstProfileLibrary, \"kokkosp_destroy_profile_section\","},
{"lineNum":"  531","line":"                      Kokkos::Tools::Experimental::current_callbacks"},
{"lineNum":"  532","line":"                          .destroy_profile_section);"},
{"lineNum":"  533","line":""},
{"lineNum":"  534","line":"      lookup_function("},
{"lineNum":"  535","line":"          firstProfileLibrary, \"kokkosp_profile_event\","},
{"lineNum":"  536","line":"          Kokkos::Tools::Experimental::current_callbacks.profile_event);"},
{"lineNum":"  537","line":"#ifdef KOKKOS_ENABLE_TUNING"},
{"lineNum":"  538","line":"      lookup_function("},
{"lineNum":"  539","line":"          firstProfileLibrary, \"kokkosp_declare_output_type\","},
{"lineNum":"  540","line":"          Kokkos::Tools::Experimental::current_callbacks.declare_output_type);"},
{"lineNum":"  541","line":""},
{"lineNum":"  542","line":"      lookup_function("},
{"lineNum":"  543","line":"          firstProfileLibrary, \"kokkosp_declare_input_type\","},
{"lineNum":"  544","line":"          Kokkos::Tools::Experimental::current_callbacks.declare_input_type);"},
{"lineNum":"  545","line":"      lookup_function("},
{"lineNum":"  546","line":"          firstProfileLibrary, \"kokkosp_request_values\","},
{"lineNum":"  547","line":"          Kokkos::Tools::Experimental::current_callbacks.request_output_values);"},
{"lineNum":"  548","line":"      lookup_function("},
{"lineNum":"  549","line":"          firstProfileLibrary, \"kokkosp_end_context\","},
{"lineNum":"  550","line":"          Kokkos::Tools::Experimental::current_callbacks.end_tuning_context);"},
{"lineNum":"  551","line":"      lookup_function("},
{"lineNum":"  552","line":"          firstProfileLibrary, \"kokkosp_begin_context\","},
{"lineNum":"  553","line":"          Kokkos::Tools::Experimental::current_callbacks.begin_tuning_context);"},
{"lineNum":"  554","line":"      lookup_function(firstProfileLibrary, \"kokkosp_declare_optimization_goal\","},
{"lineNum":"  555","line":"                      Kokkos::Tools::Experimental::current_callbacks"},
{"lineNum":"  556","line":"                          .declare_optimization_goal);"},
{"lineNum":"  557","line":"#endif  // KOKKOS_ENABLE_TUNING"},
{"lineNum":"  558","line":""},
{"lineNum":"  559","line":"      lookup_function("},
{"lineNum":"  560","line":"          firstProfileLibrary, \"kokkosp_print_help\","},
{"lineNum":"  561","line":"          Kokkos::Tools::Experimental::current_callbacks.print_help);"},
{"lineNum":"  562","line":"      lookup_function("},
{"lineNum":"  563","line":"          firstProfileLibrary, \"kokkosp_parse_args\","},
{"lineNum":"  564","line":"          Kokkos::Tools::Experimental::current_callbacks.parse_args);"},
{"lineNum":"  565","line":"      lookup_function(firstProfileLibrary,"},
{"lineNum":"  566","line":"                      \"kokkosp_provide_tool_programming_interface\","},
{"lineNum":"  567","line":"                      Kokkos::Tools::Experimental::current_callbacks"},
{"lineNum":"  568","line":"                          .provide_tool_programming_interface);"},
{"lineNum":"  569","line":"      lookup_function("},
{"lineNum":"  570","line":"          firstProfileLibrary, \"kokkosp_request_tool_settings\","},
{"lineNum":"  571","line":"          Kokkos::Tools::Experimental::current_callbacks.request_tool_settings);"},
{"lineNum":"  572","line":"    }"},
{"lineNum":"  573","line":"  }"},
{"lineNum":"  574","line":"#else"},
{"lineNum":"  575","line":"  (void)profileLibrary;"},
{"lineNum":"  576","line":"#endif  // KOKKOS_ENABLE_LIBDL"},
{"lineNum":"  577","line":"  Experimental::invoke_kokkosp_callback("},
{"lineNum":"  578","line":"      Kokkos::Tools::Experimental::MayRequireGlobalFencing::No,"},
{"lineNum":"  579","line":"      Kokkos::Tools::Experimental::current_callbacks.init, 0,"},
{"lineNum":"  580","line":"      (uint64_t)KOKKOSP_INTERFACE_VERSION, (uint32_t)0, nullptr);"},
{"lineNum":"  581","line":""},
{"lineNum":"  582","line":"  Experimental::tool_requirements.requires_global_fencing = true;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  583","line":""},
{"lineNum":"  584","line":"  Experimental::invoke_kokkosp_callback("},
{"lineNum":"  585","line":"      Experimental::MayRequireGlobalFencing::No,"},
{"lineNum":"  586","line":"      Experimental::current_callbacks.request_tool_settings, 1,"},
{"lineNum":"  587","line":"      &Experimental::tool_requirements);"},
{"lineNum":"  588","line":""},
{"lineNum":"  589","line":"  Experimental::ToolProgrammingInterface actions;"},
{"lineNum":"  590","line":"  actions.fence = &Experimental::Impl::tool_invoked_fence;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  591","line":""},
{"lineNum":"  592","line":"  Experimental::invoke_kokkosp_callback("},
{"lineNum":"  593","line":"      Experimental::MayRequireGlobalFencing::No,"},
{"lineNum":"  594","line":"      Experimental::current_callbacks.provide_tool_programming_interface, 1,"},
{"lineNum":"  595","line":"      actions);"},
{"lineNum":"  596","line":""},
{"lineNum":"  597","line":"#ifdef KOKKOS_ENABLE_TUNING"},
{"lineNum":"  598","line":"  Experimental::VariableInfo kernel_name;"},
{"lineNum":"  599","line":"  kernel_name.type = Experimental::ValueType::kokkos_value_string;"},
{"lineNum":"  600","line":"  kernel_name.category ="},
{"lineNum":"  601","line":"      Experimental::StatisticalCategory::kokkos_value_categorical;"},
{"lineNum":"  602","line":"  kernel_name.valueQuantity ="},
{"lineNum":"  603","line":"      Experimental::CandidateValueType::kokkos_value_unbounded;"},
{"lineNum":"  604","line":""},
{"lineNum":"  605","line":"  std::array<std::string, 4> candidate_values = {"},
{"lineNum":"  606","line":"      \"parallel_for\","},
{"lineNum":"  607","line":"      \"parallel_reduce\","},
{"lineNum":"  608","line":"      \"parallel_scan\","},
{"lineNum":"  609","line":"      \"parallel_copy\","},
{"lineNum":"  610","line":"  };"},
{"lineNum":"  611","line":""},
{"lineNum":"  612","line":"  Experimental::SetOrRange kernel_type_variable_candidates ="},
{"lineNum":"  613","line":"      Experimental::make_candidate_set(4, candidate_values.data());"},
{"lineNum":"  614","line":""},
{"lineNum":"  615","line":"  Experimental::kernel_name_context_variable_id ="},
{"lineNum":"  616","line":"      Experimental::declare_input_type(\"kokkos.kernel_name\", kernel_name);"},
{"lineNum":"  617","line":""},
{"lineNum":"  618","line":"  Experimental::VariableInfo kernel_type;"},
{"lineNum":"  619","line":"  kernel_type.type = Experimental::ValueType::kokkos_value_string;"},
{"lineNum":"  620","line":"  kernel_type.category ="},
{"lineNum":"  621","line":"      Experimental::StatisticalCategory::kokkos_value_categorical;"},
{"lineNum":"  622","line":"  kernel_type.valueQuantity ="},
{"lineNum":"  623","line":"      Experimental::CandidateValueType::kokkos_value_set;"},
{"lineNum":"  624","line":"  kernel_type.candidates = kernel_type_variable_candidates;"},
{"lineNum":"  625","line":"  Experimental::kernel_type_context_variable_id ="},
{"lineNum":"  626","line":"      Experimental::declare_input_type(\"kokkos.kernel_type\", kernel_type);"},
{"lineNum":"  627","line":""},
{"lineNum":"  628","line":"#endif"},
{"lineNum":"  629","line":""},
{"lineNum":"  630","line":"  Experimental::no_profiling.init     = nullptr;"},
{"lineNum":"  631","line":"  Experimental::no_profiling.finalize = nullptr;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  632","line":""},
{"lineNum":"  633","line":"  Experimental::no_profiling.begin_parallel_for    = nullptr;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  634","line":"  Experimental::no_profiling.begin_parallel_scan   = nullptr;"},
{"lineNum":"  635","line":"  Experimental::no_profiling.begin_parallel_reduce = nullptr;"},
{"lineNum":"  636","line":"  Experimental::no_profiling.end_parallel_scan     = nullptr;"},
{"lineNum":"  637","line":"  Experimental::no_profiling.end_parallel_for      = nullptr;"},
{"lineNum":"  638","line":"  Experimental::no_profiling.end_parallel_reduce   = nullptr;"},
{"lineNum":"  639","line":""},
{"lineNum":"  640","line":"  Experimental::no_profiling.push_region     = nullptr;"},
{"lineNum":"  641","line":"  Experimental::no_profiling.pop_region      = nullptr;"},
{"lineNum":"  642","line":"  Experimental::no_profiling.allocate_data   = nullptr;"},
{"lineNum":"  643","line":"  Experimental::no_profiling.deallocate_data = nullptr;"},
{"lineNum":"  644","line":""},
{"lineNum":"  645","line":"  Experimental::no_profiling.begin_deep_copy = nullptr;"},
{"lineNum":"  646","line":"  Experimental::no_profiling.end_deep_copy   = nullptr;"},
{"lineNum":"  647","line":""},
{"lineNum":"  648","line":"  Experimental::no_profiling.create_profile_section  = nullptr;"},
{"lineNum":"  649","line":"  Experimental::no_profiling.start_profile_section   = nullptr;"},
{"lineNum":"  650","line":"  Experimental::no_profiling.stop_profile_section    = nullptr;"},
{"lineNum":"  651","line":"  Experimental::no_profiling.destroy_profile_section = nullptr;"},
{"lineNum":"  652","line":""},
{"lineNum":"  653","line":"  Experimental::no_profiling.profile_event = nullptr;"},
{"lineNum":"  654","line":""},
{"lineNum":"  655","line":"  Experimental::no_profiling.declare_input_type    = nullptr;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  656","line":"  Experimental::no_profiling.declare_output_type   = nullptr;"},
{"lineNum":"  657","line":"  Experimental::no_profiling.request_output_values = nullptr;"},
{"lineNum":"  658","line":"  Experimental::no_profiling.end_tuning_context    = nullptr;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  659","line":"#ifdef KOKKOS_ENABLE_LIBDL"},
{"lineNum":"  660","line":"  free(envProfileCopy);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  661","line":"#endif"},
{"lineNum":"  662","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  663","line":""},
{"lineNum":"  664","line":"void finalize() {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  665","line":"  // Make sure finalize calls happens only once"},
{"lineNum":"  666","line":"  static int is_finalized = 0;"},
{"lineNum":"  667","line":"  if (is_finalized) return;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  668","line":"  is_finalized = 1;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  669","line":""},
{"lineNum":"  670","line":"  if (Experimental::current_callbacks.finalize != nullptr) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  671","line":"    Experimental::invoke_kokkosp_callback("},
{"lineNum":"  672","line":"        Experimental::MayRequireGlobalFencing::No,"},
{"lineNum":"  673","line":"        Experimental::current_callbacks.finalize);"},
{"lineNum":"  674","line":""},
{"lineNum":"  675","line":"    Experimental::pause_tools();"},
{"lineNum":"  676","line":"  }"},
{"lineNum":"  677","line":"#ifdef KOKKOS_ENABLE_TUNING"},
{"lineNum":"  678","line":"  // clean up string candidate set"},
{"lineNum":"  679","line":"  for (auto& metadata_pair : Experimental::variable_metadata) {"},
{"lineNum":"  680","line":"    auto metadata = metadata_pair.second;"},
{"lineNum":"  681","line":"    if ((metadata.type == Experimental::ValueType::kokkos_value_string) &&"},
{"lineNum":"  682","line":"        (metadata.valueQuantity =="},
{"lineNum":"  683","line":"         Experimental::CandidateValueType::kokkos_value_set)) {"},
{"lineNum":"  684","line":"      auto candidate_set = metadata.candidates.set;"},
{"lineNum":"  685","line":"      delete[] candidate_set.values.string_value;"},
{"lineNum":"  686","line":"    }"},
{"lineNum":"  687","line":"  }"},
{"lineNum":"  688","line":"#endif"},
{"lineNum":"  689","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  690","line":""},
{"lineNum":"  691","line":"void syncDualView(const std::string& label, const void* const ptr,"},
{"lineNum":"  692","line":"                  bool to_device) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  693","line":"  Experimental::invoke_kokkosp_callback("},
{"lineNum":"  694","line":"      Experimental::MayRequireGlobalFencing::No,"},
{"lineNum":"  695","line":"      Experimental::current_callbacks.sync_dual_view, label.c_str(), ptr,"},
{"lineNum":"  696","line":"      to_device);"},
{"lineNum":"  697","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  698","line":"void modifyDualView(const std::string& label, const void* const ptr,"},
{"lineNum":"  699","line":"                    bool on_device) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  700","line":"  Experimental::invoke_kokkosp_callback("},
{"lineNum":"  701","line":"      Experimental::MayRequireGlobalFencing::No,"},
{"lineNum":"  702","line":"      Experimental::current_callbacks.modify_dual_view, label.c_str(), ptr,"},
{"lineNum":"  703","line":"      on_device);"},
{"lineNum":"  704","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  705","line":""},
{"lineNum":"  706","line":"void declareMetadata(const std::string& key, const std::string& value) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  707","line":"  Experimental::invoke_kokkosp_callback("},
{"lineNum":"  708","line":"      Experimental::MayRequireGlobalFencing::No,"},
{"lineNum":"  709","line":"      Experimental::current_callbacks.declare_metadata, key.c_str(),"},
{"lineNum":"  710","line":"      value.c_str());"},
{"lineNum":"  711","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  712","line":""},
{"lineNum":"  713","line":"}  // namespace Tools"},
{"lineNum":"  714","line":""},
{"lineNum":"  715","line":"namespace Tools {"},
{"lineNum":"  716","line":"namespace Experimental {"},
{"lineNum":"  717","line":"void set_init_callback(initFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  718","line":"  current_callbacks.init = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  719","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  720","line":"void set_finalize_callback(finalizeFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  721","line":"  current_callbacks.finalize = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  722","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  723","line":"void set_parse_args_callback(parseArgsFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  724","line":"  current_callbacks.parse_args = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  725","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  726","line":"void set_print_help_callback(printHelpFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  727","line":"  current_callbacks.print_help = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  728","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  729","line":"void set_begin_parallel_for_callback(beginFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  730","line":"  current_callbacks.begin_parallel_for = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  731","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  732","line":"void set_end_parallel_for_callback(endFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  733","line":"  current_callbacks.end_parallel_for = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  734","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  735","line":"void set_begin_parallel_reduce_callback(beginFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  736","line":"  current_callbacks.begin_parallel_reduce = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  737","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  738","line":"void set_end_parallel_reduce_callback(endFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  739","line":"  current_callbacks.end_parallel_reduce = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  740","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  741","line":"void set_begin_parallel_scan_callback(beginFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  742","line":"  current_callbacks.begin_parallel_scan = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  743","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  744","line":"void set_end_parallel_scan_callback(endFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  745","line":"  current_callbacks.end_parallel_scan = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  746","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  747","line":"void set_push_region_callback(pushFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  748","line":"  current_callbacks.push_region = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  749","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  750","line":"void set_pop_region_callback(popFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  751","line":"  current_callbacks.pop_region = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  752","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  753","line":"void set_allocate_data_callback(allocateDataFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  754","line":"  current_callbacks.allocate_data = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  755","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  756","line":"void set_deallocate_data_callback(deallocateDataFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  757","line":"  current_callbacks.deallocate_data = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  758","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  759","line":"void set_create_profile_section_callback("},
{"lineNum":"  760","line":"    createProfileSectionFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  761","line":"  current_callbacks.create_profile_section = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  762","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  763","line":"void set_start_profile_section_callback(startProfileSectionFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  764","line":"  current_callbacks.start_profile_section = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  765","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  766","line":"void set_stop_profile_section_callback(stopProfileSectionFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  767","line":"  current_callbacks.stop_profile_section = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  768","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  769","line":"void set_destroy_profile_section_callback("},
{"lineNum":"  770","line":"    destroyProfileSectionFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  771","line":"  current_callbacks.destroy_profile_section = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  772","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  773","line":"void set_profile_event_callback(profileEventFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  774","line":"  current_callbacks.profile_event = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  775","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  776","line":"void set_begin_deep_copy_callback(beginDeepCopyFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  777","line":"  current_callbacks.begin_deep_copy = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  778","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  779","line":"void set_end_deep_copy_callback(endDeepCopyFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  780","line":"  current_callbacks.end_deep_copy = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  781","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  782","line":"void set_begin_fence_callback(beginFenceFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  783","line":"  current_callbacks.begin_fence = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  784","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  785","line":"void set_end_fence_callback(endFenceFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  786","line":"  current_callbacks.end_fence = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  787","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  788","line":""},
{"lineNum":"  789","line":"void set_dual_view_sync_callback(dualViewSyncFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  790","line":"  current_callbacks.sync_dual_view = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  791","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  792","line":"void set_dual_view_modify_callback(dualViewModifyFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  793","line":"  current_callbacks.modify_dual_view = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  794","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  795","line":"void set_declare_metadata_callback(declareMetadataFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  796","line":"  current_callbacks.declare_metadata = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  797","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  798","line":""},
{"lineNum":"  799","line":"void set_declare_output_type_callback(outputTypeDeclarationFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  800","line":"  current_callbacks.declare_output_type = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  801","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  802","line":"void set_declare_input_type_callback(inputTypeDeclarationFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  803","line":"  current_callbacks.declare_input_type = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  804","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  805","line":"void set_request_output_values_callback(requestValueFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  806","line":"  current_callbacks.request_output_values = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  807","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  808","line":"void set_end_context_callback(contextEndFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  809","line":"  current_callbacks.end_tuning_context = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  810","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  811","line":"void set_begin_context_callback(contextBeginFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  812","line":"  current_callbacks.begin_tuning_context = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  813","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  814","line":"void set_declare_optimization_goal_callback("},
{"lineNum":"  815","line":"    optimizationGoalDeclarationFunction callback) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  816","line":"  current_callbacks.declare_optimization_goal = callback;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  817","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  818","line":""},
{"lineNum":"  819","line":"void pause_tools() {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  820","line":"  backup_callbacks  = current_callbacks;","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  821","line":"  current_callbacks = no_profiling;","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  822","line":"}"},
{"lineNum":"  823","line":""},
{"lineNum":"  824","line":"void resume_tools() { current_callbacks = backup_callbacks; }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  825","line":""},
{"lineNum":"  826","line":"EventSet get_callbacks() { return current_callbacks; }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  827","line":"void set_callbacks(EventSet new_events) { current_callbacks = new_events; }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  828","line":"}  // namespace Experimental"},
{"lineNum":"  829","line":"}  // namespace Tools"},
{"lineNum":"  830","line":""},
{"lineNum":"  831","line":"namespace Profiling {"},
{"lineNum":"  832","line":"bool profileLibraryLoaded() { return Kokkos::Tools::profileLibraryLoaded(); }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  833","line":""},
{"lineNum":"  834","line":"void beginParallelFor(const std::string& kernelPrefix, const uint32_t devID,"},
{"lineNum":"  835","line":"                      uint64_t* kernelID) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  836","line":"  Kokkos::Tools::beginParallelFor(kernelPrefix, devID, kernelID);"},
{"lineNum":"  837","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  838","line":"void beginParallelReduce(const std::string& kernelPrefix, const uint32_t devID,"},
{"lineNum":"  839","line":"                         uint64_t* kernelID) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  840","line":"  Kokkos::Tools::beginParallelReduce(kernelPrefix, devID, kernelID);"},
{"lineNum":"  841","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  842","line":"void beginParallelScan(const std::string& kernelPrefix, const uint32_t devID,"},
{"lineNum":"  843","line":"                       uint64_t* kernelID) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  844","line":"  Kokkos::Tools::beginParallelScan(kernelPrefix, devID, kernelID);"},
{"lineNum":"  845","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  846","line":"void endParallelFor(const uint64_t kernelID) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  847","line":"  Kokkos::Tools::endParallelFor(kernelID);"},
{"lineNum":"  848","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  849","line":"void endParallelReduce(const uint64_t kernelID) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  850","line":"  Kokkos::Tools::endParallelReduce(kernelID);"},
{"lineNum":"  851","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  852","line":"void endParallelScan(const uint64_t kernelID) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  853","line":"  Kokkos::Tools::endParallelScan(kernelID);"},
{"lineNum":"  854","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  855","line":""},
{"lineNum":"  856","line":"void pushRegion(const std::string& kName) { Kokkos::Tools::pushRegion(kName); }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  857","line":"void popRegion() { Kokkos::Tools::popRegion(); }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  858","line":""},
{"lineNum":"  859","line":"void createProfileSection(const std::string& sectionName, uint32_t* secID) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  860","line":"  Kokkos::Tools::createProfileSection(sectionName, secID);"},
{"lineNum":"  861","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  862","line":"void destroyProfileSection(const uint32_t secID) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  863","line":"  Kokkos::Tools::destroyProfileSection(secID);"},
{"lineNum":"  864","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  865","line":""},
{"lineNum":"  866","line":"void startSection(const uint32_t secID) { Kokkos::Tools::startSection(secID); }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  867","line":""},
{"lineNum":"  868","line":"void stopSection(const uint32_t secID) { Kokkos::Tools::stopSection(secID); }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  869","line":""},
{"lineNum":"  870","line":"void markEvent(const std::string& eventName) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  871","line":"  Kokkos::Tools::markEvent(eventName);"},
{"lineNum":"  872","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  873","line":"void allocateData(const SpaceHandle handle, const std::string name,"},
{"lineNum":"  874","line":"                  const void* data, const uint64_t size) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  875","line":"  Kokkos::Tools::allocateData(handle, name, data, size);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  876","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  877","line":"void deallocateData(const SpaceHandle space, const std::string label,"},
{"lineNum":"  878","line":"                    const void* ptr, const uint64_t size) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  879","line":"  Kokkos::Tools::deallocateData(space, label, ptr, size);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  880","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  881","line":""},
{"lineNum":"  882","line":"void beginDeepCopy(const SpaceHandle dst_space, const std::string dst_label,"},
{"lineNum":"  883","line":"                   const void* dst_ptr, const SpaceHandle src_space,"},
{"lineNum":"  884","line":"                   const std::string src_label, const void* src_ptr,"},
{"lineNum":"  885","line":"                   const uint64_t size) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  886","line":"  Kokkos::Tools::beginDeepCopy(dst_space, dst_label, dst_ptr, src_space,","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  887","line":"                               src_label, src_ptr, size);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  888","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  889","line":"void endDeepCopy() { Kokkos::Tools::endDeepCopy(); }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  890","line":""},
{"lineNum":"  891","line":"void finalize() { Kokkos::Tools::finalize(); }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  892","line":"void initialize(const std::string& profileLibrary) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  893","line":"  Kokkos::Tools::initialize(profileLibrary);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  894","line":"}"},
{"lineNum":"  895","line":""},
{"lineNum":"  896","line":"bool printHelp(const std::string& args) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  897","line":"  return Kokkos::Tools::printHelp(args);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  898","line":"}"},
{"lineNum":"  899","line":"void parseArgs(const std::string& args) { Kokkos::Tools::parseArgs(args); }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  900","line":"void parseArgs(int _argc, char** _argv) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  901","line":"  Kokkos::Tools::parseArgs(_argc, _argv);"},
{"lineNum":"  902","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  903","line":""},
{"lineNum":"  904","line":"SpaceHandle make_space_handle(const char* space_name) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  905","line":"  return Kokkos::Tools::make_space_handle(space_name);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  906","line":"}"},
{"lineNum":"  907","line":"}  // namespace Profiling"},
{"lineNum":"  908","line":""},
{"lineNum":"  909","line":"}  // namespace Kokkos"},
{"lineNum":"  910","line":""},
{"lineNum":"  911","line":"// Tuning"},
{"lineNum":"  912","line":""},
{"lineNum":"  913","line":"namespace Kokkos {"},
{"lineNum":"  914","line":"namespace Tools {"},
{"lineNum":"  915","line":"namespace Experimental {"},
{"lineNum":"  916","line":"static size_t& get_context_counter() {"},
{"lineNum":"  917","line":"  static size_t x;"},
{"lineNum":"  918","line":"  return x;"},
{"lineNum":"  919","line":"}"},
{"lineNum":"  920","line":"static size_t& get_variable_counter() {"},
{"lineNum":"  921","line":"  static size_t x;"},
{"lineNum":"  922","line":"  return ++x;","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  923","line":"}"},
{"lineNum":"  924","line":""},
{"lineNum":"  925","line":"size_t get_new_context_id() { return ++get_context_counter(); }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  926","line":"size_t get_current_context_id() { return get_context_counter(); }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  927","line":"void decrement_current_context_id() { --get_context_counter(); }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  928","line":"size_t get_new_variable_id() { return get_variable_counter(); }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  929","line":""},
{"lineNum":"  930","line":"size_t declare_output_type(const std::string& variableName, VariableInfo info) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  931","line":"  size_t variableId = get_new_variable_id();"},
{"lineNum":"  932","line":"#ifdef KOKKOS_ENABLE_TUNING"},
{"lineNum":"  933","line":"  Experimental::invoke_kokkosp_callback("},
{"lineNum":"  934","line":"      Experimental::MayRequireGlobalFencing::No,"},
{"lineNum":"  935","line":"      Experimental::current_callbacks.declare_output_type, variableName.c_str(),"},
{"lineNum":"  936","line":"      variableId, &info);"},
{"lineNum":"  937","line":"  variable_metadata[variableId] = info;"},
{"lineNum":"  938","line":"#else"},
{"lineNum":"  939","line":"  (void)variableName;"},
{"lineNum":"  940","line":"  (void)info;"},
{"lineNum":"  941","line":"#endif"},
{"lineNum":"  942","line":"  return variableId;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  943","line":"}"},
{"lineNum":"  944","line":""},
{"lineNum":"  945","line":"size_t declare_input_type(const std::string& variableName, VariableInfo info) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  946","line":"  size_t variableId = get_new_variable_id();"},
{"lineNum":"  947","line":"#ifdef KOKKOS_ENABLE_TUNING"},
{"lineNum":"  948","line":"  Experimental::invoke_kokkosp_callback("},
{"lineNum":"  949","line":"      Experimental::MayRequireGlobalFencing::No,"},
{"lineNum":"  950","line":"      Experimental::current_callbacks.declare_input_type, variableName.c_str(),"},
{"lineNum":"  951","line":"      variableId, &info);"},
{"lineNum":"  952","line":"  variable_metadata[variableId] = info;"},
{"lineNum":"  953","line":"#else"},
{"lineNum":"  954","line":"  (void)variableName;"},
{"lineNum":"  955","line":"  (void)info;"},
{"lineNum":"  956","line":"#endif"},
{"lineNum":"  957","line":"  return variableId;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  958","line":"}"},
{"lineNum":"  959","line":""},
{"lineNum":"  960","line":"void set_input_values(size_t contextId, size_t count, VariableValue* values) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  961","line":"#ifdef KOKKOS_ENABLE_TUNING"},
{"lineNum":"  962","line":"  if (features_per_context.find(contextId) == features_per_context.end()) {"},
{"lineNum":"  963","line":"    features_per_context[contextId] = std::unordered_set<size_t>();"},
{"lineNum":"  964","line":"  }"},
{"lineNum":"  965","line":"  for (size_t x = 0; x < count; ++x) {"},
{"lineNum":"  966","line":"    values[x].metadata = &variable_metadata[values[x].type_id];"},
{"lineNum":"  967","line":"    features_per_context[contextId].insert(values[x].type_id);"},
{"lineNum":"  968","line":"    active_features.insert(values[x].type_id);"},
{"lineNum":"  969","line":"    feature_values[values[x].type_id] = values[x];"},
{"lineNum":"  970","line":"  }"},
{"lineNum":"  971","line":"#else"},
{"lineNum":"  972","line":"  (void)contextId;"},
{"lineNum":"  973","line":"  (void)count;"},
{"lineNum":"  974","line":"  (void)values;"},
{"lineNum":"  975","line":"#endif"},
{"lineNum":"  976","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  977","line":"#include <iostream>"},
{"lineNum":"  978","line":"void request_output_values(size_t contextId, size_t count,"},
{"lineNum":"  979","line":"                           VariableValue* values) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  980","line":"#ifdef KOKKOS_ENABLE_TUNING"},
{"lineNum":"  981","line":"  std::vector<size_t> context_ids;"},
{"lineNum":"  982","line":"  std::vector<VariableValue> context_values;"},
{"lineNum":"  983","line":"  for (auto id : active_features) {"},
{"lineNum":"  984","line":"    context_values.push_back(feature_values[id]);"},
{"lineNum":"  985","line":"  }"},
{"lineNum":"  986","line":"  if (Experimental::current_callbacks.request_output_values != nullptr) {"},
{"lineNum":"  987","line":"    for (size_t x = 0; x < count; ++x) {"},
{"lineNum":"  988","line":"      values[x].metadata = &variable_metadata[values[x].type_id];"},
{"lineNum":"  989","line":"    }"},
{"lineNum":"  990","line":"    Experimental::invoke_kokkosp_callback("},
{"lineNum":"  991","line":"        Experimental::MayRequireGlobalFencing::No,"},
{"lineNum":"  992","line":"        Experimental::current_callbacks.request_output_values, contextId,"},
{"lineNum":"  993","line":"        context_values.size(), context_values.data(), count, values);"},
{"lineNum":"  994","line":"  }"},
{"lineNum":"  995","line":"#else"},
{"lineNum":"  996","line":"  (void)contextId;"},
{"lineNum":"  997","line":"  (void)count;"},
{"lineNum":"  998","line":"  (void)values;"},
{"lineNum":"  999","line":"#endif"},
{"lineNum":" 1000","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1001","line":""},
{"lineNum":" 1002","line":"#ifdef KOKKOS_ENABLE_TUNING"},
{"lineNum":" 1003","line":"static std::unordered_map<size_t, size_t> optimization_goals;"},
{"lineNum":" 1004","line":"#endif"},
{"lineNum":" 1005","line":""},
{"lineNum":" 1006","line":"void begin_context(size_t contextId) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1007","line":"  Experimental::invoke_kokkosp_callback("},
{"lineNum":" 1008","line":"      Experimental::MayRequireGlobalFencing::No,"},
{"lineNum":" 1009","line":"      Experimental::current_callbacks.begin_tuning_context, contextId);"},
{"lineNum":" 1010","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1011","line":"void end_context(size_t contextId) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1012","line":"#ifdef KOKKOS_ENABLE_TUNING"},
{"lineNum":" 1013","line":"  for (auto id : features_per_context[contextId]) {"},
{"lineNum":" 1014","line":"    active_features.erase(id);"},
{"lineNum":" 1015","line":"  }"},
{"lineNum":" 1016","line":"  Experimental::invoke_kokkosp_callback("},
{"lineNum":" 1017","line":"      Experimental::MayRequireGlobalFencing::No,"},
{"lineNum":" 1018","line":"      Experimental::current_callbacks.end_tuning_context, contextId,"},
{"lineNum":" 1019","line":"      feature_values[optimization_goals[contextId]]);"},
{"lineNum":" 1020","line":"  optimization_goals.erase(contextId);"},
{"lineNum":" 1021","line":"  decrement_current_context_id();"},
{"lineNum":" 1022","line":"#else"},
{"lineNum":" 1023","line":"  (void)contextId;"},
{"lineNum":" 1024","line":"#endif"},
{"lineNum":" 1025","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1026","line":""},
{"lineNum":" 1027","line":"bool have_tuning_tool() {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1028","line":"#ifdef KOKKOS_ENABLE_TUNING"},
{"lineNum":" 1029","line":"  return (Experimental::current_callbacks.request_output_values != nullptr);"},
{"lineNum":" 1030","line":"#else"},
{"lineNum":" 1031","line":"  return false;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1032","line":"#endif"},
{"lineNum":" 1033","line":"}"},
{"lineNum":" 1034","line":""},
{"lineNum":" 1035","line":"VariableValue make_variable_value(size_t id, int64_t val) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1036","line":"  VariableValue variable_value;"},
{"lineNum":" 1037","line":"  variable_value.type_id         = id;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1038","line":"  variable_value.value.int_value = val;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1039","line":"  return variable_value;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1040","line":"}"},
{"lineNum":" 1041","line":"VariableValue make_variable_value(size_t id, double val) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1042","line":"  VariableValue variable_value;"},
{"lineNum":" 1043","line":"  variable_value.type_id            = id;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1044","line":"  variable_value.value.double_value = val;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1045","line":"  return variable_value;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1046","line":"}"},
{"lineNum":" 1047","line":"VariableValue make_variable_value(size_t id, const std::string& val) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1048","line":"  VariableValue variable_value;"},
{"lineNum":" 1049","line":"  variable_value.type_id = id;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1050","line":"  strncpy(variable_value.value.string_value, val.c_str(),","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 1051","line":"          KOKKOS_TOOLS_TUNING_STRING_LENGTH - 1);"},
{"lineNum":" 1052","line":"  return variable_value;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1053","line":"}"},
{"lineNum":" 1054","line":"SetOrRange make_candidate_set(size_t size, std::string* data) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1055","line":"  SetOrRange value_set;"},
{"lineNum":" 1056","line":"  value_set.set.values.string_value = new TuningString[size];","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1057","line":"  for (size_t x = 0; x < size; ++x) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 1058","line":"    strncpy(value_set.set.values.string_value[x], data[x].c_str(),","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1059","line":"            KOKKOS_TOOLS_TUNING_STRING_LENGTH - 1);"},
{"lineNum":" 1060","line":"  }"},
{"lineNum":" 1061","line":"  value_set.set.size = size;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1062","line":"  return value_set;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1063","line":"}"},
{"lineNum":" 1064","line":"SetOrRange make_candidate_set(size_t size, int64_t* data) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1065","line":"  SetOrRange value_set;"},
{"lineNum":" 1066","line":"  value_set.set.size             = size;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1067","line":"  value_set.set.values.int_value = data;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1068","line":"  return value_set;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1069","line":"}"},
{"lineNum":" 1070","line":"SetOrRange make_candidate_set(size_t size, double* data) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1071","line":"  SetOrRange value_set;"},
{"lineNum":" 1072","line":"  value_set.set.size                = size;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1073","line":"  value_set.set.values.double_value = data;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1074","line":"  return value_set;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1075","line":"}"},
{"lineNum":" 1076","line":"SetOrRange make_candidate_range(double lower, double upper, double step,"},
{"lineNum":" 1077","line":"                                bool openLower = false,"},
{"lineNum":" 1078","line":"                                bool openUpper = false) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1079","line":"  SetOrRange value_range;"},
{"lineNum":" 1080","line":"  value_range.range.lower.double_value = lower;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1081","line":"  value_range.range.upper.double_value = upper;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1082","line":"  value_range.range.step.double_value  = step;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1083","line":"  value_range.range.openLower          = openLower;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1084","line":"  value_range.range.openUpper          = openUpper;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1085","line":"  return value_range;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1086","line":"}"},
{"lineNum":" 1087","line":""},
{"lineNum":" 1088","line":"SetOrRange make_candidate_range(int64_t lower, int64_t upper, int64_t step,"},
{"lineNum":" 1089","line":"                                bool openLower = false,"},
{"lineNum":" 1090","line":"                                bool openUpper = false) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1091","line":"  SetOrRange value_range;"},
{"lineNum":" 1092","line":"  value_range.range.lower.int_value = lower;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1093","line":"  value_range.range.upper.int_value = upper;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1094","line":"  value_range.range.step.int_value  = step;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1095","line":"  value_range.range.openLower       = openLower;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1096","line":"  value_range.range.openUpper       = openUpper;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1097","line":"  return value_range;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1098","line":"}"},
{"lineNum":" 1099","line":""},
{"lineNum":" 1100","line":"size_t get_new_context_id();"},
{"lineNum":" 1101","line":"size_t get_current_context_id();"},
{"lineNum":" 1102","line":"void decrement_current_context_id();"},
{"lineNum":" 1103","line":"size_t get_new_variable_id();"},
{"lineNum":" 1104","line":"void declare_optimization_goal(const size_t context,"},
{"lineNum":" 1105","line":"                               const OptimizationGoal& goal) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1106","line":"#ifdef KOKKOS_ENABLE_TUNING"},
{"lineNum":" 1107","line":"  Experimental::invoke_kokkosp_callback("},
{"lineNum":" 1108","line":"      Experimental::MayRequireGlobalFencing::No,"},
{"lineNum":" 1109","line":"      Experimental::current_callbacks.declare_optimization_goal, context, goal);"},
{"lineNum":" 1110","line":"  optimization_goals[context] = goal.type_id;"},
{"lineNum":" 1111","line":"#else"},
{"lineNum":" 1112","line":"  (void)context;"},
{"lineNum":" 1113","line":"  (void)goal;"},
{"lineNum":" 1114","line":"#endif"},
{"lineNum":" 1115","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 1116","line":"}  // end namespace Experimental"},
{"lineNum":" 1117","line":"}  // end namespace Tools"},
{"lineNum":" 1118","line":""},
{"lineNum":" 1119","line":"}  // end namespace Kokkos"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:41", "instrumented" : 316, "covered" : 0,};
var merged_data = [];
