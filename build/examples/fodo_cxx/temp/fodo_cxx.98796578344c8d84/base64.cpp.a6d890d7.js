var data = {lines:[
{"lineNum":"    1","line":"/*"},
{"lineNum":"    2","line":"   base64.cpp and base64.h"},
{"lineNum":"    3","line":""},
{"lineNum":"    4","line":"   base64 encoding and decoding with C++."},
{"lineNum":"    5","line":""},
{"lineNum":"    6","line":"   Version: 1.01.00"},
{"lineNum":"    7","line":""},
{"lineNum":"    8","line":"   Copyright (C) 2004-2017 René Nyffenegger"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"   This source code is provided \'as-is\', without any express or implied"},
{"lineNum":"   11","line":"   warranty. In no event will the author be held liable for any damages"},
{"lineNum":"   12","line":"   arising from the use of this software."},
{"lineNum":"   13","line":""},
{"lineNum":"   14","line":"   Permission is granted to anyone to use this software for any purpose,"},
{"lineNum":"   15","line":"   including commercial applications, and to alter it and redistribute it"},
{"lineNum":"   16","line":"   freely, subject to the following restrictions:"},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"   1. The origin of this source code must not be misrepresented; you must not"},
{"lineNum":"   19","line":"      claim that you wrote the original source code. If you use this source code"},
{"lineNum":"   20","line":"      in a product, an acknowledgment in the product documentation would be"},
{"lineNum":"   21","line":"      appreciated but is not required."},
{"lineNum":"   22","line":""},
{"lineNum":"   23","line":"   2. Altered source versions must be plainly marked as such, and must not be"},
{"lineNum":"   24","line":"      misrepresented as being the original source code."},
{"lineNum":"   25","line":""},
{"lineNum":"   26","line":"   3. This notice may not be removed or altered from any source distribution."},
{"lineNum":"   27","line":""},
{"lineNum":"   28","line":"   René Nyffenegger rene.nyffenegger@adp-gmbh.ch"},
{"lineNum":"   29","line":""},
{"lineNum":"   30","line":"*/"},
{"lineNum":"   31","line":""},
{"lineNum":"   32","line":"#include \"base64.h\""},
{"lineNum":"   33","line":"#include <iostream>"},
{"lineNum":"   34","line":""},
{"lineNum":"   35","line":"static const std::string base64_chars ="},
{"lineNum":"   36","line":"             \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\""},
{"lineNum":"   37","line":"             \"abcdefghijklmnopqrstuvwxyz\""},
{"lineNum":"   38","line":"             \"0123456789+/\";"},
{"lineNum":"   39","line":""},
{"lineNum":"   40","line":""},
{"lineNum":"   41","line":"static inline bool is_base64(unsigned char c) {"},
{"lineNum":"   42","line":"  return (isalnum(c) || (c == \'+\') || (c == \'/\'));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   43","line":"}"},
{"lineNum":"   44","line":""},
{"lineNum":"   45","line":"std::string base64_encode(unsigned char const* bytes_to_encode, unsigned int in_len) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   46","line":"  std::string ret;"},
{"lineNum":"   47","line":"  int i = 0;"},
{"lineNum":"   48","line":"  int j = 0;"},
{"lineNum":"   49","line":"  unsigned char char_array_3[3];"},
{"lineNum":"   50","line":"  unsigned char char_array_4[4];"},
{"lineNum":"   51","line":""},
{"lineNum":"   52","line":"  while (in_len--) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   53","line":"    char_array_3[i++] = *(bytes_to_encode++);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   54","line":"    if (i == 3) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   55","line":"      char_array_4[0] = (char_array_3[0] & 0xfc) >> 2;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   56","line":"      char_array_4[1] = ((char_array_3[0] & 0x03) << 4) + ((char_array_3[1] & 0xf0) >> 4);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   57","line":"      char_array_4[2] = ((char_array_3[1] & 0x0f) << 2) + ((char_array_3[2] & 0xc0) >> 6);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   58","line":"      char_array_4[3] = char_array_3[2] & 0x3f;","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   59","line":""},
{"lineNum":"   60","line":"      for(i = 0; (i <4) ; i++)"},
{"lineNum":"   61","line":"        ret += base64_chars[char_array_4[i]];","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   62","line":"      i = 0;"},
{"lineNum":"   63","line":"    }"},
{"lineNum":"   64","line":"  }"},
{"lineNum":"   65","line":""},
{"lineNum":"   66","line":"  if (i)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   67","line":"  {"},
{"lineNum":"   68","line":"    for(j = i; j < 3; j++)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   69","line":"      char_array_3[j] = \'\\0\';","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   70","line":""},
{"lineNum":"   71","line":"    char_array_4[0] = ( char_array_3[0] & 0xfc) >> 2;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   72","line":"    char_array_4[1] = ((char_array_3[0] & 0x03) << 4) + ((char_array_3[1] & 0xf0) >> 4);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   73","line":"    char_array_4[2] = ((char_array_3[1] & 0x0f) << 2) + ((char_array_3[2] & 0xc0) >> 6);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   74","line":""},
{"lineNum":"   75","line":"    for (j = 0; (j < i + 1); j++)","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   76","line":"      ret += base64_chars[char_array_4[j]];","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   77","line":""},
{"lineNum":"   78","line":"    while((i++ < 3))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   79","line":"      ret += \'=\';"},
{"lineNum":"   80","line":""},
{"lineNum":"   81","line":"  }"},
{"lineNum":"   82","line":""},
{"lineNum":"   83","line":"  return ret;"},
{"lineNum":"   84","line":""},
{"lineNum":"   85","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   86","line":""},
{"lineNum":"   87","line":"std::string base64_decode(std::string const& encoded_string) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   88","line":"  size_t in_len = encoded_string.size();"},
{"lineNum":"   89","line":"  int i = 0;"},
{"lineNum":"   90","line":"  int j = 0;"},
{"lineNum":"   91","line":"  int in_ = 0;"},
{"lineNum":"   92","line":"  unsigned char char_array_4[4], char_array_3[3];"},
{"lineNum":"   93","line":"  std::string ret;"},
{"lineNum":"   94","line":""},
{"lineNum":"   95","line":"  while (in_len-- && ( encoded_string[in_] != \'=\') && is_base64(encoded_string[in_])) {","class":"lineNoCov","hits":"0","possible_hits":"5",},
{"lineNum":"   96","line":"    char_array_4[i++] = encoded_string[in_]; in_++;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   97","line":"    if (i ==4) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   98","line":"      for (i = 0; i <4; i++)"},
{"lineNum":"   99","line":"        char_array_4[i] = base64_chars.find(char_array_4[i]) & 0xff;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  100","line":""},
{"lineNum":"  101","line":"      char_array_3[0] = ( char_array_4[0] << 2       ) + ((char_array_4[1] & 0x30) >> 4);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  102","line":"      char_array_3[1] = ((char_array_4[1] & 0xf) << 4) + ((char_array_4[2] & 0x3c) >> 2);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  103","line":"      char_array_3[2] = ((char_array_4[2] & 0x3) << 6) +   char_array_4[3];","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  104","line":""},
{"lineNum":"  105","line":"      for (i = 0; (i < 3); i++)"},
{"lineNum":"  106","line":"        ret += char_array_3[i];"},
{"lineNum":"  107","line":"      i = 0;"},
{"lineNum":"  108","line":"    }"},
{"lineNum":"  109","line":"  }"},
{"lineNum":"  110","line":""},
{"lineNum":"  111","line":"  if (i) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  112","line":"    for (j = 0; j < i; j++)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  113","line":"      char_array_4[j] = base64_chars.find(char_array_4[j]) & 0xff;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  114","line":""},
{"lineNum":"  115","line":"    char_array_3[0] = (char_array_4[0] << 2) + ((char_array_4[1] & 0x30) >> 4);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  116","line":"    char_array_3[1] = ((char_array_4[1] & 0xf) << 4) + ((char_array_4[2] & 0x3c) >> 2);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  117","line":""},
{"lineNum":"  118","line":"    for (j = 0; (j < i - 1); j++) ret += char_array_3[j];","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  119","line":"  }"},
{"lineNum":"  120","line":""},
{"lineNum":"  121","line":"  return ret;"},
{"lineNum":"  122","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:41", "instrumented" : 35, "covered" : 0,};
var merged_data = [];
