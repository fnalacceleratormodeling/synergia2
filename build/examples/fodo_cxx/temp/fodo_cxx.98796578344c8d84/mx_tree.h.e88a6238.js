var data = {lines:[
{"lineNum":"    1","line":"#ifndef MX_PARSING_TREE_H"},
{"lineNum":"    2","line":"#define MX_PARSING_TREE_H"},
{"lineNum":"    3","line":""},
{"lineNum":"    4","line":"#include <string>"},
{"lineNum":"    5","line":"#include <vector>"},
{"lineNum":"    6","line":""},
{"lineNum":"    7","line":"#include <boost/any.hpp>"},
{"lineNum":"    8","line":"#include <boost/variant.hpp>"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"#include \"madx.h\""},
{"lineNum":"   11","line":"#include \"mx_expr.h\""},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"namespace synergia"},
{"lineNum":"   14","line":"{"},
{"lineNum":"   15","line":"  typedef bool(*logic_op_t)(double, double);"},
{"lineNum":"   16","line":""},
{"lineNum":"   17","line":"  enum mx_statement_type"},
{"lineNum":"   18","line":"    { MX_NULL"},
{"lineNum":"   19","line":"    , MX_COMMAND"},
{"lineNum":"   20","line":"    , MX_LINE"},
{"lineNum":"   21","line":"    , MX_IF"},
{"lineNum":"   22","line":"    , MX_WHILE"},
{"lineNum":"   23","line":"    , MX_MACRO };"},
{"lineNum":"   24","line":""},
{"lineNum":"   25","line":"  enum mx_attr_type"},
{"lineNum":"   26","line":"    { MX_ATTR_NULL"},
{"lineNum":"   27","line":"    , MX_ATTR_STRING"},
{"lineNum":"   28","line":"    , MX_ATTR_NUMBER"},
{"lineNum":"   29","line":"    , MX_ATTR_PREDEFINED"},
{"lineNum":"   30","line":"    , MX_ATTR_ARRAY"},
{"lineNum":"   31","line":"    , MX_ATTR_LAZY_NUMBER"},
{"lineNum":"   32","line":"    , MX_ATTR_LAZY_ARRAY };"},
{"lineNum":"   33","line":""},
{"lineNum":"   34","line":"  enum mx_cmd_type"},
{"lineNum":"   35","line":"    { MX_CMD_VARIABLE"},
{"lineNum":"   36","line":"    , MX_CMD_ELEMENT"},
{"lineNum":"   37","line":"    , MX_CMD_EXECUTABLE"},
{"lineNum":"   38","line":"    , MX_CMD_ELEMENT_REF };"},
{"lineNum":"   39","line":""},
{"lineNum":"   40","line":"  enum mx_keyword_type"},
{"lineNum":"   41","line":"    { MX_KW_NONE"},
{"lineNum":"   42","line":"    , MX_KW_ELEMENT"},
{"lineNum":"   43","line":"    , MX_KW_COMMAND"},
{"lineNum":"   44","line":"    , MX_KW_ELEMENT_REF"},
{"lineNum":"   45","line":"    , MX_KW_PARTICLE"},
{"lineNum":"   46","line":"    , MX_KW_MP_TYPE };"},
{"lineNum":"   47","line":""},
{"lineNum":"   48","line":"  enum mx_line_member_type"},
{"lineNum":"   49","line":"    { MX_LINE_MEMBER_NAME"},
{"lineNum":"   50","line":"    , MX_LINE_MEMBER_SEQ };"},
{"lineNum":"   51","line":""},
{"lineNum":"   52","line":"  struct mx_keyword;"},
{"lineNum":"   53","line":""},
{"lineNum":"   54","line":"  class mx_attr;"},
{"lineNum":"   55","line":"  class mx_command;"},
{"lineNum":"   56","line":"  class mx_line;"},
{"lineNum":"   57","line":"  class mx_line_member;"},
{"lineNum":"   58","line":"  class mx_line_seq;"},
{"lineNum":"   59","line":"  class mx_logic;"},
{"lineNum":"   60","line":"  class mx_if_block;"},
{"lineNum":"   61","line":"  class mx_if;"},
{"lineNum":"   62","line":"  class mx_while;"},
{"lineNum":"   63","line":"  class mx_statement;"},
{"lineNum":"   64","line":"  class mx_tree;"},
{"lineNum":"   65","line":""},
{"lineNum":"   66","line":"  namespace detail"},
{"lineNum":"   67","line":"  {"},
{"lineNum":"   68","line":"    template<typename T>"},
{"lineNum":"   69","line":"    void print(T const & t) { t.print(); }","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"   70","line":"  }"},
{"lineNum":"   71","line":"}"},
{"lineNum":"   72","line":""},
{"lineNum":"   73","line":"struct synergia::mx_keyword","class":"lineNoCov","hits":"0","possible_hits":"20",},
{"lineNum":"   74","line":"{"},
{"lineNum":"   75","line":"  mx_keyword() : name(), tag() { }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   76","line":"  mx_keyword(std::string const & k, mx_keyword_type t) : name(k), tag(t)","class":"lineNoCov","hits":"0","possible_hits":"86",},
{"lineNum":"   77","line":"    { std::transform( name.begin(), name.end(), name.begin(), ::tolower ); }"},
{"lineNum":"   78","line":""},
{"lineNum":"   79","line":"  std::string name;"},
{"lineNum":"   80","line":"  mx_keyword_type tag;"},
{"lineNum":"   81","line":"};"},
{"lineNum":"   82","line":""},
{"lineNum":"   83","line":"class synergia::mx_logic","class":"lineNoCov","hits":"0","possible_hits":"19",},
{"lineNum":"   84","line":"{"},
{"lineNum":"   85","line":"public:"},
{"lineNum":"   86","line":"  mx_logic(bool p = true)"},
{"lineNum":"   87","line":"    : lhs(0.0), rhs(0.0), op(), pre(p), use_preset(true) { }","class":"lineNoCov","hits":"0","possible_hits":"8",},
{"lineNum":"   88","line":"  mx_logic(mx_expr const & l, mx_expr const & r, logic_op_t o)"},
{"lineNum":"   89","line":"    : lhs(l), rhs(r), op(o), pre(true), use_preset(false) { }"},
{"lineNum":"   90","line":""},
{"lineNum":"   91","line":"  void set(mx_expr const & l, logic_op_t o, mx_expr const & r);"},
{"lineNum":"   92","line":"  bool evaluate(MadX const & mx) const;"},
{"lineNum":"   93","line":""},
{"lineNum":"   94","line":"private:"},
{"lineNum":"   95","line":"  mx_expr lhs;"},
{"lineNum":"   96","line":"  mx_expr rhs;"},
{"lineNum":"   97","line":"  logic_op_t op;"},
{"lineNum":"   98","line":"  bool pre;"},
{"lineNum":"   99","line":"  bool use_preset;"},
{"lineNum":"  100","line":"};"},
{"lineNum":"  101","line":""},
{"lineNum":"  102","line":"// statement could be a command, if- or while-"},
{"lineNum":"  103","line":"class synergia::mx_statement","class":"lineNoCov","hits":"0","possible_hits":"20",},
{"lineNum":"  104","line":"{"},
{"lineNum":"  105","line":"public:"},
{"lineNum":"  106","line":"  mx_statement()"},
{"lineNum":"  107","line":"    : value(), type(MX_NULL)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  108","line":"  { }"},
{"lineNum":"  109","line":"  mx_statement(mx_command const & st)"},
{"lineNum":"  110","line":"    : value(st), type(MX_COMMAND)"},
{"lineNum":"  111","line":"  { }"},
{"lineNum":"  112","line":"  mx_statement(mx_if const & st)"},
{"lineNum":"  113","line":"    : value(st), type(MX_IF)"},
{"lineNum":"  114","line":"  { }"},
{"lineNum":"  115","line":"  mx_statement(mx_while const & st)"},
{"lineNum":"  116","line":"    : value(st), type(MX_WHILE)"},
{"lineNum":"  117","line":"  { }"},
{"lineNum":"  118","line":"  mx_statement(mx_line const & st)"},
{"lineNum":"  119","line":"    : value(st), type(MX_LINE)"},
{"lineNum":"  120","line":"  { }"},
{"lineNum":"  121","line":""},
{"lineNum":"  122","line":"  void assign(mx_command const & st);"},
{"lineNum":"  123","line":"  void assign(mx_if const & st);"},
{"lineNum":"  124","line":"  void assign(mx_while const & st);"},
{"lineNum":"  125","line":"  void assign(mx_line const & st);"},
{"lineNum":"  126","line":""},
{"lineNum":"  127","line":"  void interpret(MadX & mx);"},
{"lineNum":"  128","line":"  void print() const;"},
{"lineNum":"  129","line":""},
{"lineNum":"  130","line":"  mx_statement_type get_type() const"},
{"lineNum":"  131","line":"  { return type; }","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  132","line":""},
{"lineNum":"  133","line":"private:"},
{"lineNum":"  134","line":"  boost::any value;"},
{"lineNum":"  135","line":"  mx_statement_type type;"},
{"lineNum":"  136","line":"};"},
{"lineNum":"  137","line":""},
{"lineNum":"  138","line":"typedef std::vector<synergia::mx_statement> mx_statements_t;"},
{"lineNum":"  139","line":""},
{"lineNum":"  140","line":"// vector or statements"},
{"lineNum":"  141","line":"class synergia::mx_tree","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  142","line":"{"},
{"lineNum":"  143","line":"public:"},
{"lineNum":"  144","line":"  mx_tree()"},
{"lineNum":"  145","line":"    : statements()"},
{"lineNum":"  146","line":"  { }"},
{"lineNum":"  147","line":"  mx_tree(mx_statements_t const & sts)"},
{"lineNum":"  148","line":"    : statements(sts)"},
{"lineNum":"  149","line":"  { }"},
{"lineNum":"  150","line":""},
{"lineNum":"  151","line":"  void push(mx_statement const & st);"},
{"lineNum":"  152","line":"  void interpret(MadX & mx);"},
{"lineNum":"  153","line":"  void print() const;"},
{"lineNum":"  154","line":""},
{"lineNum":"  155","line":"private:"},
{"lineNum":"  156","line":"  mx_statements_t statements;"},
{"lineNum":"  157","line":"};"},
{"lineNum":"  158","line":""},
{"lineNum":"  159","line":"// attributes for commands"},
{"lineNum":"  160","line":"class synergia::mx_attr","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"  161","line":"{"},
{"lineNum":"  162","line":"public:"},
{"lineNum":"  163","line":"  mx_attr()"},
{"lineNum":"  164","line":"    : type_(MX_ATTR_NULL), name_(), value_() { }","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  165","line":""},
{"lineNum":"  166","line":"  // modifier"},
{"lineNum":"  167","line":"  void set_attr(std::string const & name, boost::any const & val);"},
{"lineNum":"  168","line":"  void set_lazy_attr(std::string const & name, boost::any const & val);"},
{"lineNum":"  169","line":""},
{"lineNum":"  170","line":"  // accessor"},
{"lineNum":"  171","line":"  mx_attr_type type() const { return type_; }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  172","line":"  std::string  name() const { return name_; }","class":"lineNoCov","hits":"0","possible_hits":"25",},
{"lineNum":"  173","line":"  boost::any   value() const { return value_; }"},
{"lineNum":"  174","line":""},
{"lineNum":"  175","line":"private:"},
{"lineNum":"  176","line":"  mx_attr_type type_;"},
{"lineNum":"  177","line":"  std::string  name_;"},
{"lineNum":"  178","line":"  boost::any   value_;"},
{"lineNum":"  179","line":"};"},
{"lineNum":"  180","line":""},
{"lineNum":"  181","line":"// basic commands"},
{"lineNum":"  182","line":"typedef std::map<std::string, synergia::mx_attr> attr_map_t;"},
{"lineNum":"  183","line":"typedef std::vector<synergia::mx_attr>           attrs_t;"},
{"lineNum":"  184","line":""},
{"lineNum":"  185","line":"class synergia::mx_command","class":"lineNoCov","hits":"0","possible_hits":"5",},
{"lineNum":"  186","line":"{"},
{"lineNum":"  187","line":"public:"},
{"lineNum":"  188","line":"  mx_command()"},
{"lineNum":"  189","line":"    : type_(MX_CMD_VARIABLE), labeled_(false), label_(), keyed_(false), keyword_(), attrs_()","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  190","line":"  { }"},
{"lineNum":"  191","line":""},
{"lineNum":"  192","line":"  void set_label(std::string const & label);"},
{"lineNum":"  193","line":"  void set_keyword(mx_keyword const & keyword);"},
{"lineNum":"  194","line":"  void set_keyword(std::string const & keyword, mx_cmd_type tag);"},
{"lineNum":"  195","line":"  void ins_attr(mx_attr const & attr);"},
{"lineNum":"  196","line":""},
{"lineNum":"  197","line":"  bool has_label() const { return labeled_; }"},
{"lineNum":"  198","line":""},
{"lineNum":"  199","line":"  void interpret(MadX & mx);"},
{"lineNum":"  200","line":"  void execute(MadX & mx);"},
{"lineNum":"  201","line":"  void print() const;"},
{"lineNum":"  202","line":""},
{"lineNum":"  203","line":"  // convert to a MadX command object"},
{"lineNum":"  204","line":"  MadX_command convert(MadX const & mx) const;"},
{"lineNum":"  205","line":""},
{"lineNum":"  206","line":"private:"},
{"lineNum":"  207","line":"  mx_cmd_type  type_;"},
{"lineNum":"  208","line":"  bool         labeled_;"},
{"lineNum":"  209","line":"  std::string  label_;"},
{"lineNum":"  210","line":"  bool         keyed_;"},
{"lineNum":"  211","line":"  std::string  keyword_;"},
{"lineNum":"  212","line":"  attrs_t      attrs_;"},
{"lineNum":"  213","line":"};"},
{"lineNum":"  214","line":""},
{"lineNum":"  215","line":"class synergia::mx_line_member","class":"lineNoCov","hits":"0","possible_hits":"10",},
{"lineNum":"  216","line":"{"},
{"lineNum":"  217","line":"public:"},
{"lineNum":"  218","line":"  mx_line_member()"},
{"lineNum":"  219","line":"    : member(), tag(MX_LINE_MEMBER_NAME) { }"},
{"lineNum":"  220","line":"  mx_line_member(string_t const & name)"},
{"lineNum":"  221","line":"    : member(name), tag(MX_LINE_MEMBER_NAME) { }"},
{"lineNum":"  222","line":"  mx_line_member(mx_line_seq const & seq)"},
{"lineNum":"  223","line":"    : member(seq), tag(MX_LINE_MEMBER_SEQ) { }"},
{"lineNum":"  224","line":""},
{"lineNum":"  225","line":"  void interpret(MadX const & mx, MadX_line & line, int op=1);"},
{"lineNum":"  226","line":""},
{"lineNum":"  227","line":"private:"},
{"lineNum":"  228","line":"  boost::any member;  // either a name ref or a line object"},
{"lineNum":"  229","line":"#if __APPLE_CC__ == 6000"},
{"lineNum":"  230","line":"public:"},
{"lineNum":"  231","line":"#endif //  __APPLE_CC__ == 6000"},
{"lineNum":"  232","line":"  mx_line_member_type tag;"},
{"lineNum":"  233","line":"};"},
{"lineNum":"  234","line":""},
{"lineNum":"  235","line":"typedef std::vector<std::pair<synergia::mx_line_member, int> > mx_line_members;"},
{"lineNum":"  236","line":""},
{"lineNum":"  237","line":"class synergia::mx_line_seq","class":"lineNoCov","hits":"0","possible_hits":"10",},
{"lineNum":"  238","line":"{"},
{"lineNum":"  239","line":"public:"},
{"lineNum":"  240","line":"  mx_line_seq() : members() { }"},
{"lineNum":"  241","line":""},
{"lineNum":"  242","line":"  void insert_member(int op, mx_line_member const & member);"},
{"lineNum":"  243","line":"  void interpret(MadX const & mx, MadX_line & line, int op=1);"},
{"lineNum":"  244","line":""},
{"lineNum":"  245","line":"private:"},
{"lineNum":"  246","line":"  mx_line_members members;"},
{"lineNum":"  247","line":"};"},
{"lineNum":"  248","line":""},
{"lineNum":"  249","line":""},
{"lineNum":"  250","line":"class synergia::mx_line","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  251","line":"{"},
{"lineNum":"  252","line":"public:"},
{"lineNum":"  253","line":"  mx_line() { }"},
{"lineNum":"  254","line":"  mx_line(string_t const & name, mx_line_seq const & seq)"},
{"lineNum":"  255","line":"    : name(name), seq(seq) { }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  256","line":""},
{"lineNum":"  257","line":"  void interpret(MadX & mx);"},
{"lineNum":"  258","line":""},
{"lineNum":"  259","line":"private:"},
{"lineNum":"  260","line":"  std::string name;"},
{"lineNum":"  261","line":"  mx_line_seq seq;"},
{"lineNum":"  262","line":"};"},
{"lineNum":"  263","line":""},
{"lineNum":"  264","line":"// element block for building an if-elseif-else control statement"},
{"lineNum":"  265","line":"// an if-block contains an optional logic expression and a statement block"},
{"lineNum":"  266","line":"class synergia::mx_if_block","class":"lineNoCov","hits":"0","possible_hits":"19",},
{"lineNum":"  267","line":"{"},
{"lineNum":"  268","line":"public:"},
{"lineNum":"  269","line":"  mx_if_block()"},
{"lineNum":"  270","line":"    : logic_expr(), block(), valid_(false)","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  271","line":"  { }"},
{"lineNum":"  272","line":"  mx_if_block(mx_logic const & logic, mx_tree const & block)"},
{"lineNum":"  273","line":"    : logic_expr(logic), block(block), valid_(true)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  274","line":"  { }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  275","line":""},
{"lineNum":"  276","line":"  bool valid() const { return valid_; }","class":"lineNoCov","hits":"0","possible_hits":"5",},
{"lineNum":"  277","line":"  bool evaluate_logic(MadX const & mx) const;"},
{"lineNum":"  278","line":"  void interpret_block(MadX & mx);"},
{"lineNum":"  279","line":""},
{"lineNum":"  280","line":"  void print_logic() const;"},
{"lineNum":"  281","line":"  void print_block() const;"},
{"lineNum":"  282","line":""},
{"lineNum":"  283","line":"private:"},
{"lineNum":"  284","line":"  mx_logic logic_expr;"},
{"lineNum":"  285","line":"  mx_tree block;"},
{"lineNum":"  286","line":"  bool valid_;"},
{"lineNum":"  287","line":"};"},
{"lineNum":"  288","line":""},
{"lineNum":"  289","line":"typedef std::vector<synergia::mx_if_block> mx_if_block_v;"},
{"lineNum":"  290","line":""},
{"lineNum":"  291","line":"// if-(elseif-elseif-...)-else"},
{"lineNum":"  292","line":"class synergia::mx_if","class":"lineNoCov","hits":"0","possible_hits":"19",},
{"lineNum":"  293","line":"{"},
{"lineNum":"  294","line":"public:"},
{"lineNum":"  295","line":"  mx_if()"},
{"lineNum":"  296","line":"    : if_(), elseif_(), else_()"},
{"lineNum":"  297","line":"  { }"},
{"lineNum":"  298","line":""},
{"lineNum":"  299","line":"  void assign_if    (mx_logic const & logic, mx_tree const & block);"},
{"lineNum":"  300","line":"  void assign_elseif(mx_logic const & logic, mx_tree const & block);"},
{"lineNum":"  301","line":"  void assign_else  (mx_tree const & block);"},
{"lineNum":"  302","line":"  void interpret(MadX & mx);"},
{"lineNum":"  303","line":"  void print() const;"},
{"lineNum":"  304","line":""},
{"lineNum":"  305","line":"private:"},
{"lineNum":"  306","line":"  mx_if_block   if_;"},
{"lineNum":"  307","line":"  mx_if_block_v elseif_;"},
{"lineNum":"  308","line":"  mx_if_block   else_;"},
{"lineNum":"  309","line":"};"},
{"lineNum":"  310","line":""},
{"lineNum":"  311","line":"// while"},
{"lineNum":"  312","line":"class synergia::mx_while","class":"lineNoCov","hits":"0","possible_hits":"9",},
{"lineNum":"  313","line":"{"},
{"lineNum":"  314","line":"public:"},
{"lineNum":"  315","line":"  mx_while()"},
{"lineNum":"  316","line":"    : while_()"},
{"lineNum":"  317","line":"  { }"},
{"lineNum":"  318","line":""},
{"lineNum":"  319","line":"  void assign(mx_logic const & logic, mx_tree const & block);"},
{"lineNum":"  320","line":"  void interpret(MadX & mx);"},
{"lineNum":"  321","line":"  void print() const;"},
{"lineNum":"  322","line":""},
{"lineNum":"  323","line":"private:"},
{"lineNum":"  324","line":"  mx_if_block while_;"},
{"lineNum":"  325","line":"};"},
{"lineNum":"  326","line":""},
{"lineNum":"  327","line":"#endif"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:41", "instrumented" : 27, "covered" : 0,};
var merged_data = [];
