var data = {lines:[
{"lineNum":"    1","line":"#ifndef SYNERGIA_LIBFF_PATTERNED_PROPAGATOR_H"},
{"lineNum":"    2","line":"#define SYNERGIA_LIBFF_PATTERNED_PROPAGATOR_H"},
{"lineNum":"    3","line":""},
{"lineNum":"    4","line":"namespace pp_impl"},
{"lineNum":"    5","line":"{"},
{"lineNum":"    6","line":"    template<class T>"},
{"lineNum":"    7","line":"    using kf_t = void(*)(T const&, T&, T const&, T&, T const&, double const*);"},
{"lineNum":"    8","line":"}"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"template< class BUNCH,"},
{"lineNum":"   11","line":"          class gsv_t,"},
{"lineNum":"   12","line":"          pp_impl::kf_t<gsv_t> kf_gsv,"},
{"lineNum":"   13","line":"          pp_impl::kf_t<double> kf_d,"},
{"lineNum":"   14","line":"          int COMP = 1 >"},
{"lineNum":"   15","line":"struct FF_patterned_propagator"},
{"lineNum":"   16","line":"{"},
{"lineNum":"   17","line":"    using bp_t = typename BUNCH::bp_t;"},
{"lineNum":"   18","line":"    using parts_t = typename bp_t::parts_t;"},
{"lineNum":"   19","line":"    using const_masks_t = typename bp_t::const_masks_t;"},
{"lineNum":"   20","line":""},
{"lineNum":"   21","line":"    struct thin_kicker","class":"lineNoCov","hits":"0","possible_hits":"36",},
{"lineNum":"   22","line":"    {"},
{"lineNum":"   23","line":"        parts_t p;"},
{"lineNum":"   24","line":"        const_masks_t m;"},
{"lineNum":"   25","line":""},
{"lineNum":"   26","line":"        double k[COMP*2];"},
{"lineNum":"   27","line":""},
{"lineNum":"   28","line":"        thin_kicker(bp_t & bp, double const* str)"},
{"lineNum":"   29","line":"        : p(bp.parts), m(bp.masks)"},
{"lineNum":"   30","line":"        { for(int i=0; i<COMP*2; ++i) k[i] = str[i]; }","class":"lineNoCov","hits":"0","possible_hits":"24",},
{"lineNum":"   31","line":""},
{"lineNum":"   32","line":"        KOKKOS_INLINE_FUNCTION"},
{"lineNum":"   33","line":"        void operator() (const int idx) const"},
{"lineNum":"   34","line":"        {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   35","line":"            int i = idx * gsv_t::size();"},
{"lineNum":"   36","line":"            int mask = 0;"},
{"lineNum":"   37","line":"            for(int x=i; x<i+gsv_t::size(); ++x) mask |= m(x);","class":"lineNoCov","hits":"0","possible_hits":"28",},
{"lineNum":"   38","line":""},
{"lineNum":"   39","line":"            if(mask)","class":"lineNoCov","hits":"0","possible_hits":"28",},
{"lineNum":"   40","line":"            {"},
{"lineNum":"   41","line":"                gsv_t p0(&p(i, 0));"},
{"lineNum":"   42","line":"                gsv_t p1(&p(i, 1));"},
{"lineNum":"   43","line":"                gsv_t p2(&p(i, 2));"},
{"lineNum":"   44","line":"                gsv_t p3(&p(i, 3));"},
{"lineNum":"   45","line":"                gsv_t p5(&p(i, 5));"},
{"lineNum":"   46","line":""},
{"lineNum":"   47","line":"                kf_gsv(p0, p1, p2, p3, p5, k);","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"   48","line":""},
{"lineNum":"   49","line":"                p1.store(&p(i, 1));"},
{"lineNum":"   50","line":"                p3.store(&p(i, 3));"},
{"lineNum":"   51","line":"            }"},
{"lineNum":"   52","line":"        }","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   53","line":"    };"},
{"lineNum":"   54","line":""},
{"lineNum":"   55","line":"    struct simple_kicker","class":"lineNoCov","hits":"0","possible_hits":"18",},
{"lineNum":"   56","line":"    {"},
{"lineNum":"   57","line":"        parts_t p;"},
{"lineNum":"   58","line":"        const_masks_t m;"},
{"lineNum":"   59","line":""},
{"lineNum":"   60","line":"        double pref, mass, ref_cdt, len;"},
{"lineNum":"   61","line":"        double k[COMP*2];"},
{"lineNum":"   62","line":""},
{"lineNum":"   63","line":"        simple_kicker(bp_t & bp,"},
{"lineNum":"   64","line":"                double pref, double mass, double ref_cdt, double len,"},
{"lineNum":"   65","line":"                double const* str)"},
{"lineNum":"   66","line":"        : p(bp.parts), m(bp.masks), pref(pref), mass(mass)","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"   67","line":"        , ref_cdt(ref_cdt), len(len)","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"   68","line":"        { for(int i=0; i<COMP*2; ++i) k[i] = str[i]; }","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"   69","line":""},
{"lineNum":"   70","line":"        KOKKOS_INLINE_FUNCTION"},
{"lineNum":"   71","line":"        void operator() (const int idx) const"},
{"lineNum":"   72","line":"        {","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"   73","line":"            int i = idx * gsv_t::size();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   74","line":"            int mask = 0;"},
{"lineNum":"   75","line":"            for(int x=i; x<i+gsv_t::size(); ++x) mask |= m(x);","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"   76","line":""},
{"lineNum":"   77","line":"            if(mask)","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"   78","line":"            {"},
{"lineNum":"   79","line":"                gsv_t p0(&p(i, 0));"},
{"lineNum":"   80","line":"                gsv_t p1(&p(i, 1));"},
{"lineNum":"   81","line":"                gsv_t p2(&p(i, 2));"},
{"lineNum":"   82","line":"                gsv_t p3(&p(i, 3));"},
{"lineNum":"   83","line":"                gsv_t p4(&p(i, 4));"},
{"lineNum":"   84","line":"                gsv_t p5(&p(i, 5));"},
{"lineNum":"   85","line":""},
{"lineNum":"   86","line":"                FF_algorithm::drift_unit(","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   87","line":"                        p0, p1, p2, p3, p4, p5,"},
{"lineNum":"   88","line":"                        len*0.5, pref, mass, ref_cdt*0.5","class":"lineNoCov","hits":"0","possible_hits":"10",},
{"lineNum":"   89","line":"                );"},
{"lineNum":"   90","line":""},
{"lineNum":"   91","line":"                kf_gsv(p0, p1, p2, p3, p5, k);","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   92","line":""},
{"lineNum":"   93","line":"                FF_algorithm::drift_unit(","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   94","line":"                        p0, p1, p2, p3, p4, p5,"},
{"lineNum":"   95","line":"                        len*0.5, pref, mass, ref_cdt*0.5","class":"lineNoCov","hits":"0","possible_hits":"9",},
{"lineNum":"   96","line":"                );"},
{"lineNum":"   97","line":""},
{"lineNum":"   98","line":"                // drift updates x, y, and cdt"},
{"lineNum":"   99","line":"                // kick function updates xp and yp"},
{"lineNum":"  100","line":"                p0.store(&p(i, 0));"},
{"lineNum":"  101","line":"                p1.store(&p(i, 1));"},
{"lineNum":"  102","line":"                p2.store(&p(i, 2));"},
{"lineNum":"  103","line":"                p3.store(&p(i, 3));"},
{"lineNum":"  104","line":"                p4.store(&p(i, 4));"},
{"lineNum":"  105","line":"            }"},
{"lineNum":"  106","line":"        }","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  107","line":"    };"},
{"lineNum":"  108","line":""},
{"lineNum":"  109","line":""},
{"lineNum":"  110","line":"    struct yoshida_kicker","class":"lineNoCov","hits":"0","possible_hits":"18",},
{"lineNum":"  111","line":"    {"},
{"lineNum":"  112","line":"        parts_t p;"},
{"lineNum":"  113","line":"        const_masks_t m;"},
{"lineNum":"  114","line":""},
{"lineNum":"  115","line":"        double pref, mass, step_ref_cdt, step_len;"},
{"lineNum":"  116","line":"        double step_k[COMP*2];"},
{"lineNum":"  117","line":"        int steps;"},
{"lineNum":"  118","line":""},
{"lineNum":"  119","line":"        yoshida_kicker(bp_t & bp,"},
{"lineNum":"  120","line":"                double pref, double mass, double step_ref_cdt,"},
{"lineNum":"  121","line":"                double step_len, double const* step_str, int steps)"},
{"lineNum":"  122","line":"        : p(bp.parts), m(bp.masks), pref(pref), mass(mass)","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  123","line":"        , step_ref_cdt(step_ref_cdt), step_len(step_len)","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  124","line":"        , steps(steps)","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  125","line":"        { for(int i=0; i<COMP*2; ++i) step_k[i] = step_str[i]; }","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  126","line":""},
{"lineNum":"  127","line":"        KOKKOS_INLINE_FUNCTION"},
{"lineNum":"  128","line":"        void operator() (const int idx) const"},
{"lineNum":"  129","line":"        {","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  130","line":"            int i = idx * gsv_t::size();"},
{"lineNum":"  131","line":"            int mask = 0;"},
{"lineNum":"  132","line":"            for(int x=i; x<i+gsv_t::size(); ++x) mask |= m(x);","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  133","line":""},
{"lineNum":"  134","line":"            if(mask)","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  135","line":"            {"},
{"lineNum":"  136","line":"                gsv_t p0(&p(i, 0));"},
{"lineNum":"  137","line":"                gsv_t p1(&p(i, 1));"},
{"lineNum":"  138","line":"                gsv_t p2(&p(i, 2));"},
{"lineNum":"  139","line":"                gsv_t p3(&p(i, 3));"},
{"lineNum":"  140","line":"                gsv_t p4(&p(i, 4));"},
{"lineNum":"  141","line":"                gsv_t p5(&p(i, 5));"},
{"lineNum":"  142","line":""},
{"lineNum":"  143","line":"                FF_algorithm::yoshida6<gsv_t, kf_gsv, COMP>(","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  144","line":"                        p0, p1, p2, p3, p4, p5,"},
{"lineNum":"  145","line":"                        pref, mass, step_ref_cdt,","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  146","line":"                        step_len, step_k, steps );","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  147","line":""},
{"lineNum":"  148","line":"                p0.store(&p(i, 0));"},
{"lineNum":"  149","line":"                p1.store(&p(i, 1));"},
{"lineNum":"  150","line":"                p2.store(&p(i, 2));"},
{"lineNum":"  151","line":"                p3.store(&p(i, 3));"},
{"lineNum":"  152","line":"                p4.store(&p(i, 4));"},
{"lineNum":"  153","line":"            }"},
{"lineNum":"  154","line":"        }","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  155","line":"    };"},
{"lineNum":"  156","line":""},
{"lineNum":"  157","line":"    static void apply_thin_kick(BUNCH& bunch, ParticleGroup pg,"},
{"lineNum":"  158","line":"            double const* k)"},
{"lineNum":"  159","line":"    {","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  160","line":"        if(!bunch.get_local_num(pg)) return;","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  161","line":""},
{"lineNum":"  162","line":"        using exec = typename BUNCH::exec_space;"},
{"lineNum":"  163","line":"        auto range = Kokkos::RangePolicy<exec>(0, bunch.size_in_gsv(pg));","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  164","line":""},
{"lineNum":"  165","line":"        thin_kicker tk(bunch.get_bunch_particles(pg), k);","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  166","line":"        Kokkos::parallel_for(range, tk);","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  167","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  168","line":""},
{"lineNum":"  169","line":"    static void apply_simple_kick(BUNCH& bunch, ParticleGroup pg,"},
{"lineNum":"  170","line":"            double pref, double mass, double ref_cdt,"},
{"lineNum":"  171","line":"            double len, double const* k)"},
{"lineNum":"  172","line":"    {","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  173","line":"        if(!bunch.get_local_num(pg)) return;","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  174","line":""},
{"lineNum":"  175","line":"        using exec = typename BUNCH::exec_space;"},
{"lineNum":"  176","line":"        auto range = Kokkos::RangePolicy<exec>(0, bunch.size_in_gsv(pg));","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  177","line":""},
{"lineNum":"  178","line":"        simple_kicker sk("},
{"lineNum":"  179","line":"            bunch.get_bunch_particles(pg),"},
{"lineNum":"  180","line":"            pref, mass, ref_cdt, len, k"},
{"lineNum":"  181","line":"        );"},
{"lineNum":"  182","line":""},
{"lineNum":"  183","line":"        Kokkos::parallel_for(range, sk);","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  184","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  185","line":""},
{"lineNum":"  186","line":""},
{"lineNum":"  187","line":"    static void apply_yoshida_kick(BUNCH& bunch, ParticleGroup pg,"},
{"lineNum":"  188","line":"            double pref, double mass, double ref_cdt,"},
{"lineNum":"  189","line":"            double len, double const* str, int steps)"},
{"lineNum":"  190","line":"    {","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  191","line":"        if(!bunch.get_local_num(pg)) return;","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  192","line":""},
{"lineNum":"  193","line":"        double step_len = len / steps;"},
{"lineNum":"  194","line":"        double step_ref_cdt = ref_cdt / steps;"},
{"lineNum":"  195","line":"        double step_str[2*COMP];"},
{"lineNum":"  196","line":"        for(int i=0; i<2*COMP; ++i) step_str[i] = str[i]*step_len;","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  197","line":""},
{"lineNum":"  198","line":"        using exec = typename BUNCH::exec_space;"},
{"lineNum":"  199","line":"        auto range = Kokkos::RangePolicy<exec>(0, bunch.size_in_gsv(pg));","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  200","line":""},
{"lineNum":"  201","line":"        yoshida_kicker yk("},
{"lineNum":"  202","line":"            bunch.get_bunch_particles(pg),"},
{"lineNum":"  203","line":"            pref, mass, step_ref_cdt,"},
{"lineNum":"  204","line":"            step_len, step_str, steps"},
{"lineNum":"  205","line":"        );"},
{"lineNum":"  206","line":""},
{"lineNum":"  207","line":"        Kokkos::parallel_for(range, yk);","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  208","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  209","line":""},
{"lineNum":"  210","line":"    static void get_reference_cdt_zero("},
{"lineNum":"  211","line":"            Reference_particle& ref,"},
{"lineNum":"  212","line":"            double const* k)"},
{"lineNum":"  213","line":"    {","class":"lineNoCov","hits":"0","possible_hits":"10",},
{"lineNum":"  214","line":"        // propagate the bunch design reference particle"},
{"lineNum":"  215","line":"        double x  = ref.get_state()[0];","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  216","line":"        double xp = ref.get_state()[1];","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  217","line":"        double y  = ref.get_state()[2];","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  218","line":"        double yp = ref.get_state()[3];","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  219","line":"        double dpop = ref.get_state()[5];","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  220","line":""},
{"lineNum":"  221","line":"        kf_d(x, xp, y, yp, dpop, k);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  222","line":""},
{"lineNum":"  223","line":"        ref.set_state_xp(xp);","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  224","line":"        ref.set_state_yp(yp);","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  225","line":"        ref.set_state_cdt(0.0);","class":"lineNoCov","hits":"0","possible_hits":"20",},
{"lineNum":"  226","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  227","line":""},
{"lineNum":"  228","line":"    static double get_reference_cdt_simple("},
{"lineNum":"  229","line":"            Reference_particle& ref,"},
{"lineNum":"  230","line":"            double len, double const* k)"},
{"lineNum":"  231","line":"    {","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  232","line":"        double pref = ref.get_momentum();","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  233","line":"        double mass = ref.get_mass();","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  234","line":"        double cdt = 0.0;"},
{"lineNum":"  235","line":""},
{"lineNum":"  236","line":"        auto  st = ref.get_state();","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  237","line":""},
{"lineNum":"  238","line":"        // for >0 length, hk,vk is the strength/length of the kick"},
{"lineNum":"  239","line":"        double str[2*COMP];"},
{"lineNum":"  240","line":"        for(int i=0; i<2*COMP; ++i) str[i] = k[i]*len;","class":"lineNoCov","hits":"0","possible_hits":"14",},
{"lineNum":"  241","line":""},
{"lineNum":"  242","line":"        FF_algorithm::drift_unit("},
{"lineNum":"  243","line":"                st[0], st[1], st[2],"},
{"lineNum":"  244","line":"                st[3], cdt, st[5],"},
{"lineNum":"  245","line":"                len* 0.5, pref, mass, 0.0);","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  246","line":""},
{"lineNum":"  247","line":"        kf_d(st[0], st[1], st[2], st[3], st[5], str);"},
{"lineNum":"  248","line":""},
{"lineNum":"  249","line":"        FF_algorithm::drift_unit("},
{"lineNum":"  250","line":"                st[0], st[1], st[2],"},
{"lineNum":"  251","line":"                st[3], cdt, st[5],"},
{"lineNum":"  252","line":"                len* 0.5, pref, mass, 0.0);"},
{"lineNum":"  253","line":""},
{"lineNum":"  254","line":"        st[4] = cdt;","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  255","line":"        ref.set_state(st);","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  256","line":"        return cdt;","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  257","line":"    }"},
{"lineNum":"  258","line":""},
{"lineNum":"  259","line":""},
{"lineNum":"  260","line":"    // non zero length"},
{"lineNum":"  261","line":"    static double get_reference_cdt_yoshida("},
{"lineNum":"  262","line":"            Reference_particle& ref,"},
{"lineNum":"  263","line":"            double len, double const* k, int steps,"},
{"lineNum":"  264","line":"            bool use_drift = false)"},
{"lineNum":"  265","line":"    {","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  266","line":"        double pref = ref.get_momentum();","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  267","line":"        double mass = ref.get_mass();","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  268","line":"        double cdt = 0.0;","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  269","line":""},
{"lineNum":"  270","line":"        auto  st = ref.get_state();","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  271","line":""},
{"lineNum":"  272","line":"        // steps comes from base class, set in apply method"},
{"lineNum":"  273","line":"        double step_len = len / steps;","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  274","line":""},
{"lineNum":"  275","line":"        // for >0 length, hk,vk is the strength/length of the kick"},
{"lineNum":"  276","line":"        double step_str[2*COMP];"},
{"lineNum":"  277","line":"        for(int i=0; i<2*COMP; ++i) step_str[i] = k[i]*step_len;","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  278","line":""},
{"lineNum":"  279","line":"        // propagate"},
{"lineNum":"  280","line":"        if (use_drift)","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  281","line":"        {"},
{"lineNum":"  282","line":"            FF_algorithm::drift_unit("},
{"lineNum":"  283","line":"                    st[0], st[1], st[2],"},
{"lineNum":"  284","line":"                    st[3], cdt, st[5],"},
{"lineNum":"  285","line":"                    len, pref, mass, 0.0);"},
{"lineNum":"  286","line":""},
{"lineNum":"  287","line":"        }"},
{"lineNum":"  288","line":"        else"},
{"lineNum":"  289","line":"        {"},
{"lineNum":"  290","line":"            // hardcoded to use 6th order"},
{"lineNum":"  291","line":"            FF_algorithm::yoshida<double, kf_d, 6, COMP>("},
{"lineNum":"  292","line":"                    st[0], st[1], st[2],"},
{"lineNum":"  293","line":"                    st[3], cdt, st[5],"},
{"lineNum":"  294","line":"                    pref, mass, 0.0,"},
{"lineNum":"  295","line":"                    step_len, step_str, steps );"},
{"lineNum":"  296","line":"        }"},
{"lineNum":"  297","line":""},
{"lineNum":"  298","line":"        st[4] = cdt;","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  299","line":"        ref.set_state(st);","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  300","line":"        return cdt;","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  301","line":"    }"},
{"lineNum":"  302","line":""},
{"lineNum":"  303","line":"};"},
{"lineNum":"  304","line":""},
{"lineNum":"  305","line":"#endif"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 81, "covered" : 0,};
var merged_data = [];
