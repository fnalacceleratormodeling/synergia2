var data = {lines:[
{"lineNum":"    1","line":""},
{"lineNum":"    2","line":"#include \"madx.h\""},
{"lineNum":"    3","line":"#include \"mx_expr.h\""},
{"lineNum":"    4","line":""},
{"lineNum":"    5","line":"#include <cmath>"},
{"lineNum":"    6","line":"#include <limits>"},
{"lineNum":"    7","line":"#include <stdexcept>"},
{"lineNum":"    8","line":"#include <iostream>"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"using namespace synergia;"},
{"lineNum":"   11","line":"using namespace std;"},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":""},
{"lineNum":"   14","line":"//==========================================================================="},
{"lineNum":"   15","line":"// Static initializer"},
{"lineNum":"   16","line":""},
{"lineNum":"   17","line":"double MadX::nan = std::numeric_limits<double>::quiet_NaN();"},
{"lineNum":"   18","line":"string MadX::nst = string(\"!!!!*&^%&*IMANULLSTRING(*&*&^^^\");"},
{"lineNum":"   19","line":""},
{"lineNum":"   20","line":""},
{"lineNum":"   21","line":"//==========================================================================="},
{"lineNum":"   22","line":"// Helper functions"},
{"lineNum":"   23","line":""},
{"lineNum":"   24","line":"namespace"},
{"lineNum":"   25","line":"{"},
{"lineNum":"   26","line":"  double madx_nan = MadX::nan;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   27","line":"  string madx_nst = MadX::nst;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   28","line":""},
{"lineNum":"   29","line":"  string_t"},
{"lineNum":"   30","line":"    retrieve_string_from_map( value_map_t const & m"},
{"lineNum":"   31","line":"                            , string_t const & k"},
{"lineNum":"   32","line":"                            , string_t const & def )"},
{"lineNum":"   33","line":"  {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   34","line":"    string_t key(k);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   35","line":"    std::transform(key.begin(), key.end(), key.begin(), ::tolower);"},
{"lineNum":"   36","line":""},
{"lineNum":"   37","line":"    value_map_t::const_iterator it = m.find(key);"},
{"lineNum":"   38","line":"    if( it!=m.end() )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   39","line":"    {"},
{"lineNum":"   40","line":"      return boost::any_cast<string_t>(it->second.value);"},
{"lineNum":"   41","line":"    }"},
{"lineNum":"   42","line":"    else"},
{"lineNum":"   43","line":"    {"},
{"lineNum":"   44","line":"      if( def==madx_nst )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   45","line":"        throw std::runtime_error( \"retrieve string: cannot find attribute with name \" + key);","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   46","line":"      else"},
{"lineNum":"   47","line":"        return def;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   48","line":"    }"},
{"lineNum":"   49","line":"  }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   50","line":""},
{"lineNum":"   51","line":"  double"},
{"lineNum":"   52","line":"    retrieve_number_from_map( value_map_t const & m"},
{"lineNum":"   53","line":"                            , string_t const & k"},
{"lineNum":"   54","line":"                            , MadX const & global"},
{"lineNum":"   55","line":"                            , double def )"},
{"lineNum":"   56","line":"  {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   57","line":"    string_t key(k);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   58","line":"    std::transform(key.begin(), key.end(), key.begin(), ::tolower);"},
{"lineNum":"   59","line":""},
{"lineNum":"   60","line":"    value_map_t::const_iterator it = m.find(key);"},
{"lineNum":"   61","line":"    if( it!=m.end() )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   62","line":"    {"},
{"lineNum":"   63","line":"      if( it->second.type == NUMBER )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   64","line":"      {"},
{"lineNum":"   65","line":"        mx_expr e = boost::any_cast<mx_expr>(it->second.value);"},
{"lineNum":"   66","line":"        return boost::apply_visitor(mx_calculator(global, def), e);"},
{"lineNum":"   67","line":"      }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   68","line":"      else"},
{"lineNum":"   69","line":"      {"},
{"lineNum":"   70","line":"        throw std::runtime_error( \"the requested key \'\" + k + \"\' cannot be retrieved as a number\" );","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   71","line":"      }"},
{"lineNum":"   72","line":"    }"},
{"lineNum":"   73","line":"    else"},
{"lineNum":"   74","line":"    {"},
{"lineNum":"   75","line":"      if( std::isnan(def) )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   76","line":"        throw std::runtime_error( \"retrieve number: cannot find attribute with name \" + key);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   77","line":"      else"},
{"lineNum":"   78","line":"        return def;"},
{"lineNum":"   79","line":"    }"},
{"lineNum":"   80","line":"  }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   81","line":""},
{"lineNum":"   82","line":"  std::vector<double>"},
{"lineNum":"   83","line":"    retrieve_number_seq_from_map( value_map_t const & m"},
{"lineNum":"   84","line":"                                , string_t const & k"},
{"lineNum":"   85","line":"                                , MadX const & global"},
{"lineNum":"   86","line":"                                , double def )"},
{"lineNum":"   87","line":"  {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   88","line":"    string_t key(k);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   89","line":"    std::transform(key.begin(), key.end(), key.begin(), ::tolower);"},
{"lineNum":"   90","line":""},
{"lineNum":"   91","line":"    value_map_t::const_iterator it = m.find(key);"},
{"lineNum":"   92","line":"    if( it!=m.end() )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   93","line":"    {"},
{"lineNum":"   94","line":"     if( it->second.type == ARRAY )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   95","line":"      {"},
{"lineNum":"   96","line":"        mx_exprs es = boost::any_cast<mx_exprs>(it->second.value);"},
{"lineNum":"   97","line":"        std::vector<double> vd;"},
{"lineNum":"   98","line":""},
{"lineNum":"   99","line":"        for( mx_exprs::const_iterator it = es.begin()","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  100","line":"           ; it != es.end(); ++it )"},
{"lineNum":"  101","line":"        {"},
{"lineNum":"  102","line":"          vd.push_back( boost::apply_visitor(mx_calculator(global, def), *it) );"},
{"lineNum":"  103","line":"        }"},
{"lineNum":"  104","line":"        return vd;"},
{"lineNum":"  105","line":"      }"},
{"lineNum":"  106","line":"      else"},
{"lineNum":"  107","line":"      {"},
{"lineNum":"  108","line":"        throw std::runtime_error( \"the requested key \'\" + k + \"\' cannot be retrieved as a sequence of number\" );","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  109","line":"      }"},
{"lineNum":"  110","line":"    }"},
{"lineNum":"  111","line":"    else"},
{"lineNum":"  112","line":"    {"},
{"lineNum":"  113","line":"      if( std::isnan(def) )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  114","line":"        throw std::runtime_error( \"retrieve number sequence: cannot find attribute with name \" + key);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  115","line":"      else"},
{"lineNum":"  116","line":"      {"},
{"lineNum":"  117","line":"        vector<double> r(1);"},
{"lineNum":"  118","line":"        r[0] = def;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  119","line":"        return r;"},
{"lineNum":"  120","line":"      }"},
{"lineNum":"  121","line":"    }"},
{"lineNum":"  122","line":"  }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  123","line":""},
{"lineNum":"  124","line":"  MadX_command"},
{"lineNum":"  125","line":"    resolve_command(MadX_command const & cmd, MadX const & mx, bool resolve)"},
{"lineNum":"  126","line":"  {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  127","line":"    if( !resolve || !cmd.is_reference() )  return cmd;","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  128","line":""},
{"lineNum":"  129","line":"    MadX_command result = mx.command(cmd.name());","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  130","line":"    result.merge_with_overwrite(cmd);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  131","line":"    return result;"},
{"lineNum":"  132","line":"  }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  133","line":""},
{"lineNum":"  134","line":"}"},
{"lineNum":"  135","line":""},
{"lineNum":"  136","line":""},
{"lineNum":"  137","line":""},
{"lineNum":"  138","line":"//==========================================================================="},
{"lineNum":"  139","line":"// MadX_command"},
{"lineNum":"  140","line":""},
{"lineNum":"  141","line":"string_t"},
{"lineNum":"  142","line":"  MadX_command::name() const"},
{"lineNum":"  143","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  144","line":"  return name_;","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  145","line":"}"},
{"lineNum":"  146","line":""},
{"lineNum":"  147","line":"string_t"},
{"lineNum":"  148","line":"  MadX_command::label() const"},
{"lineNum":"  149","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  150","line":"  return label_;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  151","line":"}"},
{"lineNum":"  152","line":""},
{"lineNum":"  153","line":"size_t"},
{"lineNum":"  154","line":"  MadX_command::attribute_count() const"},
{"lineNum":"  155","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  156","line":"  return attributes_.size();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  157","line":"}"},
{"lineNum":"  158","line":""},
{"lineNum":"  159","line":"std::vector<string_t>"},
{"lineNum":"  160","line":"  MadX_command::attribute_names() const"},
{"lineNum":"  161","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  162","line":"  std::vector<string_t> names;"},
{"lineNum":"  163","line":"  for( value_map_t::const_iterator it = attributes_.begin()","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  164","line":"     ; it!= attributes_.end(); ++it )"},
{"lineNum":"  165","line":"    names.push_back(it->first);"},
{"lineNum":"  166","line":"  return names;"},
{"lineNum":"  167","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  168","line":""},
{"lineNum":"  169","line":"MadX_value_type"},
{"lineNum":"  170","line":"  MadX_command::attribute_type( string_t const & name ) const"},
{"lineNum":"  171","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  172","line":"  string_t key(name);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  173","line":"  std::transform(key.begin(), key.end(), key.begin(), ::tolower);"},
{"lineNum":"  174","line":""},
{"lineNum":"  175","line":"  value_map_t::const_iterator it = attributes_.find(key);"},
{"lineNum":"  176","line":"  if( it!=attributes_.end() )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  177","line":"  {"},
{"lineNum":"  178","line":"    return it->second.type;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  179","line":"  }"},
{"lineNum":"  180","line":"  else"},
{"lineNum":"  181","line":"  {"},
{"lineNum":"  182","line":"    throw std::runtime_error( \"MadX_command::attribute_type:\"","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  183","line":"        \" cannot find attribute with name \" + key);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  184","line":"  }"},
{"lineNum":"  185","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  186","line":""},
{"lineNum":"  187","line":"string_t"},
{"lineNum":"  188","line":"  MadX_command::attribute_as_string( string_t const & name ) const"},
{"lineNum":"  189","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  190","line":"  return retrieve_string_from_map( attributes_, name, madx_nst );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  191","line":"}"},
{"lineNum":"  192","line":""},
{"lineNum":"  193","line":"string_t"},
{"lineNum":"  194","line":"  MadX_command::attribute_as_string( string_t const & name, string_t const & def ) const"},
{"lineNum":"  195","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  196","line":"  return retrieve_string_from_map( attributes_, name, def );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  197","line":"}"},
{"lineNum":"  198","line":""},
{"lineNum":"  199","line":"double"},
{"lineNum":"  200","line":"  MadX_command::attribute_as_number( string_t const & name ) const"},
{"lineNum":"  201","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  202","line":"  return retrieve_number_from_map( attributes_, name, *mx, madx_nan );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  203","line":"}"},
{"lineNum":"  204","line":""},
{"lineNum":"  205","line":"double"},
{"lineNum":"  206","line":"  MadX_command::attribute_as_number( string_t const & name, double def ) const"},
{"lineNum":"  207","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  208","line":"  return retrieve_number_from_map(attributes_, name, *mx, def);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  209","line":"}"},
{"lineNum":"  210","line":""},
{"lineNum":"  211","line":"bool"},
{"lineNum":"  212","line":"  MadX_command::attribute_as_boolean( string_t const & name ) const"},
{"lineNum":"  213","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  214","line":"  return std::abs(retrieve_number_from_map(attributes_, name, *mx, madx_nan)) > 1e-10;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  215","line":"}"},
{"lineNum":"  216","line":""},
{"lineNum":"  217","line":"std::vector<double>"},
{"lineNum":"  218","line":"  MadX_command::attribute_as_number_seq( string_t const & name ) const"},
{"lineNum":"  219","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  220","line":"  return retrieve_number_seq_from_map(attributes_, name, *mx, madx_nan);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  221","line":"}"},
{"lineNum":"  222","line":""},
{"lineNum":"  223","line":"std::vector<double>"},
{"lineNum":"  224","line":"  MadX_command::attribute_as_number_seq( string_t const & name, double def ) const"},
{"lineNum":"  225","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  226","line":"  return retrieve_number_seq_from_map(attributes_, name, *mx, def);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  227","line":"}"},
{"lineNum":"  228","line":""},
{"lineNum":"  229","line":"void"},
{"lineNum":"  230","line":"  MadX_command::set_parent( MadX const & parent )"},
{"lineNum":"  231","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  232","line":"  mx = &parent;","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  233","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  234","line":""},
{"lineNum":"  235","line":"void"},
{"lineNum":"  236","line":"  MadX_command::set_name( string_t const & name, MadX_command_type type )"},
{"lineNum":"  237","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  238","line":"  name_ = name;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  239","line":"  std::transform(name_.begin(), name_.end(), name_.begin(), ::tolower);"},
{"lineNum":"  240","line":"  type_ = type;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  241","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  242","line":""},
{"lineNum":"  243","line":"void"},
{"lineNum":"  244","line":"  MadX_command::set_label( string_t const & label)"},
{"lineNum":"  245","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  246","line":"  label_ = label;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  247","line":"}"},
{"lineNum":"  248","line":""},
{"lineNum":"  249","line":"MadX_command_type"},
{"lineNum":"  250","line":"  MadX_command::type() const"},
{"lineNum":"  251","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  252","line":"  return type_;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  253","line":"}"},
{"lineNum":"  254","line":""},
{"lineNum":"  255","line":"bool"},
{"lineNum":"  256","line":"  MadX_command::is_element() const"},
{"lineNum":"  257","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  258","line":"  return type_ == ELEMENT;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  259","line":"}"},
{"lineNum":"  260","line":""},
{"lineNum":"  261","line":"bool"},
{"lineNum":"  262","line":"  MadX_command::is_reference() const"},
{"lineNum":"  263","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  264","line":"  return type_ == ELEMENT_REF;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  265","line":"}"},
{"lineNum":"  266","line":""},
{"lineNum":"  267","line":"bool"},
{"lineNum":"  268","line":"  MadX_command::is_command() const"},
{"lineNum":"  269","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  270","line":"  return type_ == EXECUTABLE;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  271","line":"}"},
{"lineNum":"  272","line":""},
{"lineNum":"  273","line":"void"},
{"lineNum":"  274","line":"  MadX_command::insert_attribute( string_t const & name, string_t const & value )"},
{"lineNum":"  275","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  276","line":"  string_t key(name);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  277","line":"  std::transform(key.begin(), key.end(), key.begin(), ::tolower);"},
{"lineNum":"  278","line":""},
{"lineNum":"  279","line":"  MadX_value v;"},
{"lineNum":"  280","line":"  v.value = boost::any(value);"},
{"lineNum":"  281","line":"  v.type  = value.empty() ? NONE : STRING;"},
{"lineNum":"  282","line":""},
{"lineNum":"  283","line":"  attributes_.insert(std::make_pair(key, v));","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  284","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  285","line":""},
{"lineNum":"  286","line":"void"},
{"lineNum":"  287","line":"  MadX_command::insert_attribute( string_t const & name, mx_expr const & value )"},
{"lineNum":"  288","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  289","line":"  string_t key(name);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  290","line":"  std::transform(key.begin(), key.end(), key.begin(), ::tolower);"},
{"lineNum":"  291","line":""},
{"lineNum":"  292","line":"  MadX_value v;"},
{"lineNum":"  293","line":"  v.value = boost::any(value);"},
{"lineNum":"  294","line":"  v.type  = NUMBER;"},
{"lineNum":"  295","line":""},
{"lineNum":"  296","line":"  attributes_.insert(std::make_pair(key, v));","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  297","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  298","line":""},
{"lineNum":"  299","line":"void"},
{"lineNum":"  300","line":"  MadX_command::insert_attribute( string_t const & name, mx_exprs const & value )"},
{"lineNum":"  301","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  302","line":"  string_t key(name);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  303","line":"  std::transform(key.begin(), key.end(), key.begin(), ::tolower);"},
{"lineNum":"  304","line":""},
{"lineNum":"  305","line":"  MadX_value v;"},
{"lineNum":"  306","line":"  v.value = boost::any(value);"},
{"lineNum":"  307","line":"  v.type  = ARRAY;"},
{"lineNum":"  308","line":""},
{"lineNum":"  309","line":"  attributes_.insert(std::make_pair(key, v));","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  310","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  311","line":""},
{"lineNum":"  312","line":"void"},
{"lineNum":"  313","line":"  MadX_command::merge_with_overwrite(MadX_command const & other)"},
{"lineNum":"  314","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  315","line":"  value_map_t map(other.attributes_);"},
{"lineNum":"  316","line":"  map.insert(attributes_.begin(), attributes_.end());"},
{"lineNum":"  317","line":"  std::swap(attributes_, map);"},
{"lineNum":"  318","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  319","line":""},
{"lineNum":"  320","line":"void"},
{"lineNum":"  321","line":"  MadX_command::merge(MadX_command const & other)"},
{"lineNum":"  322","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  323","line":"  attributes_.insert(other.attributes_.begin(), other.attributes_.end());"},
{"lineNum":"  324","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  325","line":""},
{"lineNum":"  326","line":""},
{"lineNum":"  327","line":"//==========================================================================="},
{"lineNum":"  328","line":"// MadX_line"},
{"lineNum":"  329","line":"size_t"},
{"lineNum":"  330","line":"  MadX_line::element_count() const"},
{"lineNum":"  331","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  332","line":"  return elements_.size();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  333","line":"}"},
{"lineNum":"  334","line":""},
{"lineNum":"  335","line":"string_t"},
{"lineNum":"  336","line":"  MadX_line::element_name(size_t idx) const"},
{"lineNum":"  337","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  338","line":"  return elements_[idx];","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  339","line":"}"},
{"lineNum":"  340","line":""},
{"lineNum":"  341","line":"MadX_command"},
{"lineNum":"  342","line":"  MadX_line::element(size_t idx, bool resolve) const"},
{"lineNum":"  343","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  344","line":"  return parent.command(elements_[idx], resolve);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  345","line":"}"},
{"lineNum":"  346","line":""},
{"lineNum":"  347","line":"void"},
{"lineNum":"  348","line":"  MadX_line::insert_element(string_t const & ele)"},
{"lineNum":"  349","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  350","line":"  string_t e(ele);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  351","line":"  std::transform(e.begin(), e.end(), e.begin(), ::tolower);"},
{"lineNum":"  352","line":""},
{"lineNum":"  353","line":"  elements_.push_back(e);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  354","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  355","line":""},
{"lineNum":"  356","line":"void"},
{"lineNum":"  357","line":"  MadX_line::print() const"},
{"lineNum":"  358","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  359","line":"  cout << \"( \";"},
{"lineNum":"  360","line":"  for( vector<string>::const_iterator it=elements_.begin()","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  361","line":"     ; it!=elements_.end(); ++it )"},
{"lineNum":"  362","line":"  {"},
{"lineNum":"  363","line":"    cout << *it;"},
{"lineNum":"  364","line":"    if( it+1 != elements_.end() ) cout << \", \";","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  365","line":"  }"},
{"lineNum":"  366","line":"  cout << \" )\\n\";"},
{"lineNum":"  367","line":"}"},
{"lineNum":"  368","line":""},
{"lineNum":"  369","line":"//==========================================================================="},
{"lineNum":"  370","line":"// MadX_sequence"},
{"lineNum":"  371","line":""},
{"lineNum":"  372","line":"string_t"},
{"lineNum":"  373","line":"  MadX_sequence::label() const"},
{"lineNum":"  374","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  375","line":"  return lbl;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  376","line":"}"},
{"lineNum":"  377","line":""},
{"lineNum":"  378","line":"double"},
{"lineNum":"  379","line":"  MadX_sequence::length() const"},
{"lineNum":"  380","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  381","line":"  return l;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  382","line":"}"},
{"lineNum":"  383","line":""},
{"lineNum":"  384","line":"size_t"},
{"lineNum":"  385","line":"  MadX_sequence::element_count() const"},
{"lineNum":"  386","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  387","line":"  return seq_.size();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  388","line":"}"},
{"lineNum":"  389","line":""},
{"lineNum":"  390","line":"MadX_command"},
{"lineNum":"  391","line":"  MadX_sequence::element(size_t idx) const"},
{"lineNum":"  392","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  393","line":"  return parent.command(seq_[idx].label);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  394","line":"}"},
{"lineNum":"  395","line":""},
{"lineNum":"  396","line":"double"},
{"lineNum":"  397","line":"  MadX_sequence::element_at(size_t idx) const"},
{"lineNum":"  398","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  399","line":"  return seq_[idx].at;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  400","line":"}"},
{"lineNum":"  401","line":""},
{"lineNum":"  402","line":"double"},
{"lineNum":"  403","line":"  MadX_sequence::element_from(size_t idx) const"},
{"lineNum":"  404","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  405","line":"  return seq_[idx].from;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  406","line":"}"},
{"lineNum":"  407","line":""},
{"lineNum":"  408","line":"string_t"},
{"lineNum":"  409","line":"  MadX_sequence::element_label(size_t idx) const"},
{"lineNum":"  410","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  411","line":"  return seq_[idx].label;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  412","line":"}"},
{"lineNum":"  413","line":""},
{"lineNum":"  414","line":"MadX_entry_type"},
{"lineNum":"  415","line":"  MadX_sequence::element_type(size_t idx) const"},
{"lineNum":"  416","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  417","line":"//  MadX_command const & cmd = element(idx);"},
{"lineNum":"  418","line":"//  std::string key = cmd.label();"},
{"lineNum":"  419","line":"//  if( key.empty() ) key = cmd.name();"},
{"lineNum":"  420","line":"  std::string key = seq_[idx].label;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  421","line":"  return parent.entry_type(key);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  422","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  423","line":""},
{"lineNum":"  424","line":"MadX_sequence_refer"},
{"lineNum":"  425","line":"  MadX_sequence::refer() const"},
{"lineNum":"  426","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  427","line":"  return r;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  428","line":"}"},
{"lineNum":"  429","line":""},
{"lineNum":"  430","line":"string"},
{"lineNum":"  431","line":"  MadX_sequence::refpos() const"},
{"lineNum":"  432","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  433","line":"  return rp;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  434","line":"}"},
{"lineNum":"  435","line":""},
{"lineNum":"  436","line":"void"},
{"lineNum":"  437","line":"  MadX_sequence::set_label(string_t const & label)"},
{"lineNum":"  438","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  439","line":"  lbl = label;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  440","line":"}"},
{"lineNum":"  441","line":""},
{"lineNum":"  442","line":"void"},
{"lineNum":"  443","line":"  MadX_sequence::set_length(double length)"},
{"lineNum":"  444","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  445","line":"  l = length;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  446","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  447","line":""},
{"lineNum":"  448","line":"void"},
{"lineNum":"  449","line":"  MadX_sequence::set_refer(MadX_sequence_refer refer)"},
{"lineNum":"  450","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  451","line":"  r = refer;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  452","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  453","line":""},
{"lineNum":"  454","line":"void"},
{"lineNum":"  455","line":"  MadX_sequence::set_refpos(string const & refpos)"},
{"lineNum":"  456","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  457","line":"  rp = refpos;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  458","line":"}"},
{"lineNum":"  459","line":""},
{"lineNum":"  460","line":"void"},
{"lineNum":"  461","line":"  MadX_sequence::add_element(string_t const & label, double at, string_t const & from)"},
{"lineNum":"  462","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  463","line":"  seq_.push_back( seq_element(label, at, from) );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  464","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  465","line":""},
{"lineNum":"  466","line":"void"},
{"lineNum":"  467","line":"  MadX_sequence::finalize()"},
{"lineNum":"  468","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  469","line":"  // resolve all the \'from\' references"},
{"lineNum":"  470","line":"  for (seq_ele_v_t::iterator it = seq_.begin(); it != seq_.end(); ++it)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  471","line":"  {"},
{"lineNum":"  472","line":"    if (!it->from_str.empty())","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  473","line":"    {"},
{"lineNum":"  474","line":"      bool found = false;"},
{"lineNum":"  475","line":""},
{"lineNum":"  476","line":"      for (seq_ele_v_t::const_iterator cit = seq_.begin(); cit != seq_.end(); ++cit)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  477","line":"      {"},
{"lineNum":"  478","line":"        if (cit == it) continue;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  479","line":""},
{"lineNum":"  480","line":"        if (cit->label == it->from_str)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  481","line":"        {"},
{"lineNum":"  482","line":"          it->from = cit->at;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  483","line":"          found = true;"},
{"lineNum":"  484","line":"          break;"},
{"lineNum":"  485","line":"        }"},
{"lineNum":"  486","line":"      }"},
{"lineNum":"  487","line":""},
{"lineNum":"  488","line":"      if (!found)"},
{"lineNum":"  489","line":"        throw runtime_error(\"fatal: \'from\' reference to unknown element: \" + it->from_str);","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  490","line":"    }"},
{"lineNum":"  491","line":"  }"},
{"lineNum":"  492","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  493","line":""},
{"lineNum":"  494","line":"void"},
{"lineNum":"  495","line":"  MadX_sequence::reset()"},
{"lineNum":"  496","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  497","line":"  lbl = string_t();"},
{"lineNum":"  498","line":"  l = 0.0;"},
{"lineNum":"  499","line":"  r = SEQ_REF_CENTRE;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  500","line":"  rp = string_t();"},
{"lineNum":"  501","line":"  seq_.clear();"},
{"lineNum":"  502","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  503","line":""},
{"lineNum":"  504","line":"void"},
{"lineNum":"  505","line":"  MadX_sequence::print() const"},
{"lineNum":"  506","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  507","line":""},
{"lineNum":"  508","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  509","line":""},
{"lineNum":"  510","line":""},
{"lineNum":"  511","line":"//==========================================================================="},
{"lineNum":"  512","line":"// MadX"},
{"lineNum":"  513","line":""},
{"lineNum":"  514","line":"string_t"},
{"lineNum":"  515","line":"  MadX::variable_as_string( string_t const & name ) const"},
{"lineNum":"  516","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  517","line":"  return retrieve_string_from_map( variables_, name, madx_nst );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  518","line":"}"},
{"lineNum":"  519","line":""},
{"lineNum":"  520","line":"string_t"},
{"lineNum":"  521","line":"  MadX::variable_as_string( string_t const & name, string_t const & def ) const"},
{"lineNum":"  522","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  523","line":"  return retrieve_string_from_map( variables_, name, def );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  524","line":"}"},
{"lineNum":"  525","line":""},
{"lineNum":"  526","line":"double"},
{"lineNum":"  527","line":"  MadX::variable_as_number( string_t const & name ) const"},
{"lineNum":"  528","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  529","line":"  return retrieve_number_from_map( variables_, name, *this, madx_nan );","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  530","line":"}"},
{"lineNum":"  531","line":""},
{"lineNum":"  532","line":"double"},
{"lineNum":"  533","line":"  MadX::variable_as_number( string_t const & name, double def ) const"},
{"lineNum":"  534","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  535","line":"  return retrieve_number_from_map( variables_, name, *this, def );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  536","line":"}"},
{"lineNum":"  537","line":""},
{"lineNum":"  538","line":"bool"},
{"lineNum":"  539","line":"  MadX::variable_as_boolean( string_t const & name ) const"},
{"lineNum":"  540","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  541","line":"  return std::abs(retrieve_number_from_map( variables_, name, *this, madx_nan )) > 1e-10;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  542","line":"}"},
{"lineNum":"  543","line":""},
{"lineNum":"  544","line":"std::vector<double>"},
{"lineNum":"  545","line":"  MadX::variable_as_number_seq( string_t const & name ) const"},
{"lineNum":"  546","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  547","line":"  return retrieve_number_seq_from_map( variables_, name, *this, madx_nan );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  548","line":"}"},
{"lineNum":"  549","line":""},
{"lineNum":"  550","line":"std::vector<double>"},
{"lineNum":"  551","line":"  MadX::variable_as_number_seq( string_t const & name, double def ) const"},
{"lineNum":"  552","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  553","line":"  return retrieve_number_seq_from_map( variables_, name, *this, def );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  554","line":"}"},
{"lineNum":"  555","line":""},
{"lineNum":"  556","line":"size_t"},
{"lineNum":"  557","line":"  MadX::command_count() const"},
{"lineNum":"  558","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  559","line":"  return cmd_seq_.size();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  560","line":"}"},
{"lineNum":"  561","line":""},
{"lineNum":"  562","line":"std::vector<string_t >"},
{"lineNum":"  563","line":"  MadX::commands() const"},
{"lineNum":"  564","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  565","line":"    std::vector<string_t > commands;"},
{"lineNum":"  566","line":"    for(commands_v_t::const_iterator it = cmd_seq_.begin();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  567","line":"            it != cmd_seq_.end(); ++it)"},
{"lineNum":"  568","line":"    {"},
{"lineNum":"  569","line":"        commands.push_back(it->name());"},
{"lineNum":"  570","line":"    }"},
{"lineNum":"  571","line":"    return commands;"},
{"lineNum":"  572","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  573","line":""},
{"lineNum":"  574","line":"MadX_command"},
{"lineNum":"  575","line":"  MadX::command( size_t idx, bool resolve ) const"},
{"lineNum":"  576","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  577","line":"  return resolve_command(cmd_seq_[idx], *this, resolve);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  578","line":"}"},
{"lineNum":"  579","line":""},
{"lineNum":"  580","line":"size_t"},
{"lineNum":"  581","line":"  MadX::label_count() const"},
{"lineNum":"  582","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  583","line":"  return cmd_map_.size();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  584","line":"}"},
{"lineNum":"  585","line":""},
{"lineNum":"  586","line":"std::vector<string_t>"},
{"lineNum":"  587","line":"  MadX::command_labels() const"},
{"lineNum":"  588","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  589","line":"  std::vector<string_t> labels;"},
{"lineNum":"  590","line":"  for( commands_m_t::const_iterator it = cmd_map_.begin()","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  591","line":"     ; it!=cmd_map_.end(); ++it )"},
{"lineNum":"  592","line":"    labels.push_back(it->first);"},
{"lineNum":"  593","line":"  return labels;"},
{"lineNum":"  594","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  595","line":""},
{"lineNum":"  596","line":"MadX_command"},
{"lineNum":"  597","line":"  MadX::command( string_t const & label, bool resolve ) const"},
{"lineNum":"  598","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  599","line":"  string_t key(label);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  600","line":"  std::transform( key.begin(), key.end(), key.begin(), ::tolower );"},
{"lineNum":"  601","line":""},
{"lineNum":"  602","line":"  commands_m_t::const_iterator it = cmd_map_.find(key);"},
{"lineNum":"  603","line":""},
{"lineNum":"  604","line":"  if( it!=cmd_map_.end() )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  605","line":"  {"},
{"lineNum":"  606","line":"    return resolve_command(it->second, *this, resolve);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  607","line":"  }"},
{"lineNum":"  608","line":"  else"},
{"lineNum":"  609","line":"  {"},
{"lineNum":"  610","line":"    throw std::runtime_error( \"cannot find command with label \" + key );","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  611","line":"  }"},
{"lineNum":"  612","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  613","line":""},
{"lineNum":"  614","line":"size_t"},
{"lineNum":"  615","line":"  MadX::line_count() const"},
{"lineNum":"  616","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  617","line":"  return lines_.size();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  618","line":"}"},
{"lineNum":"  619","line":""},
{"lineNum":"  620","line":"std::vector<string_t>"},
{"lineNum":"  621","line":"  MadX::line_labels() const"},
{"lineNum":"  622","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  623","line":"  std::vector<string_t> labels;"},
{"lineNum":"  624","line":"  for( lines_m_t::const_iterator it = lines_.begin()","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  625","line":"     ; it!=lines_.end(); ++it)"},
{"lineNum":"  626","line":"    labels.push_back(it->first);"},
{"lineNum":"  627","line":"  return labels;"},
{"lineNum":"  628","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  629","line":""},
{"lineNum":"  630","line":"MadX_line const &"},
{"lineNum":"  631","line":"  MadX::line( string_t const & line ) const"},
{"lineNum":"  632","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  633","line":"  string_t key(line);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  634","line":"  std::transform( key.begin(), key.end(), key.begin(), ::tolower );"},
{"lineNum":"  635","line":""},
{"lineNum":"  636","line":"  lines_m_t::const_iterator it = lines_.find(key);"},
{"lineNum":"  637","line":""},
{"lineNum":"  638","line":"  if( it!=lines_.end() )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  639","line":"    return it->second;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  640","line":"  else"},
{"lineNum":"  641","line":"    throw std::runtime_error( \"cannot find line with label \" + line );","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  642","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  643","line":""},
{"lineNum":"  644","line":"size_t"},
{"lineNum":"  645","line":"  MadX::sequence_count() const"},
{"lineNum":"  646","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  647","line":"  return seqs_.size();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  648","line":"}"},
{"lineNum":"  649","line":""},
{"lineNum":"  650","line":"std::vector<string_t>"},
{"lineNum":"  651","line":"  MadX::sequence_labels() const"},
{"lineNum":"  652","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  653","line":"  std::vector<string_t> labels;"},
{"lineNum":"  654","line":"  for( sequences_m_t::const_iterator it = seqs_.begin()","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  655","line":"     ; it!=seqs_.end(); ++it)"},
{"lineNum":"  656","line":"    labels.push_back(it->first);"},
{"lineNum":"  657","line":"  return labels;"},
{"lineNum":"  658","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  659","line":""},
{"lineNum":"  660","line":"MadX_sequence const &"},
{"lineNum":"  661","line":"  MadX::sequence( string_t const & seq ) const"},
{"lineNum":"  662","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  663","line":"  string_t key(seq);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  664","line":"  std::transform( key.begin(), key.end(), key.begin(), ::tolower );"},
{"lineNum":"  665","line":""},
{"lineNum":"  666","line":"  sequences_m_t::const_iterator it = seqs_.find(key);"},
{"lineNum":"  667","line":""},
{"lineNum":"  668","line":"  if( it!=seqs_.end() )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  669","line":"    return it->second;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  670","line":"  else"},
{"lineNum":"  671","line":"    throw std::runtime_error( \"cannot find sequence with label \" + seq );","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  672","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  673","line":""},
{"lineNum":"  674","line":"MadX_sequence const &"},
{"lineNum":"  675","line":"  MadX::current_sequence( ) const"},
{"lineNum":"  676","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  677","line":"  return cur_seq_;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  678","line":"}"},
{"lineNum":"  679","line":""},
{"lineNum":"  680","line":"MadX_sequence &"},
{"lineNum":"  681","line":"  MadX::current_sequence( )"},
{"lineNum":"  682","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  683","line":"  return cur_seq_;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  684","line":"}"},
{"lineNum":"  685","line":""},
{"lineNum":"  686","line":"bool"},
{"lineNum":"  687","line":"  MadX::building_sequence() const"},
{"lineNum":"  688","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  689","line":"  return building_seq_;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  690","line":"}"},
{"lineNum":"  691","line":""},
{"lineNum":"  692","line":"MadX_entry_type"},
{"lineNum":"  693","line":"  MadX::entry_type(string_t const & entry) const"},
{"lineNum":"  694","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  695","line":"  string_t key(entry);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  696","line":"  std::transform( key.begin(), key.end(), key.begin(), ::tolower );"},
{"lineNum":"  697","line":""},
{"lineNum":"  698","line":"  if( variables_.find(key) != variables_.end() )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  699","line":"    return ENTRY_VARIABLE;"},
{"lineNum":"  700","line":""},
{"lineNum":"  701","line":"  if( seqs_.find(key) != seqs_.end() )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  702","line":"    return ENTRY_SEQUENCE;"},
{"lineNum":"  703","line":""},
{"lineNum":"  704","line":"  if( lines_.find(key) != lines_.end() )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  705","line":"    return ENTRY_LINE;"},
{"lineNum":"  706","line":""},
{"lineNum":"  707","line":"  if( cmd_map_.find(key) != cmd_map_.end() )"},
{"lineNum":"  708","line":"    return ENTRY_COMMAND;"},
{"lineNum":"  709","line":""},
{"lineNum":"  710","line":"  return ENTRY_NULL;"},
{"lineNum":"  711","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  712","line":""},
{"lineNum":"  713","line":"void"},
{"lineNum":"  714","line":"  MadX::insert_variable(string_t const & name, string_t const & value)"},
{"lineNum":"  715","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  716","line":"  string_t key(name);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  717","line":"  std::transform( key.begin(), key.end(), key.begin(), ::tolower );"},
{"lineNum":"  718","line":""},
{"lineNum":"  719","line":"  MadX_value v;"},
{"lineNum":"  720","line":"  v.value = boost::any(value);"},
{"lineNum":"  721","line":"  v.type  = value.empty() ? NONE : STRING;"},
{"lineNum":"  722","line":""},
{"lineNum":"  723","line":"  variables_[key] = v;"},
{"lineNum":"  724","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  725","line":""},
{"lineNum":"  726","line":"void"},
{"lineNum":"  727","line":"  MadX::insert_variable(string_t const & name, mx_expr const & value)"},
{"lineNum":"  728","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  729","line":"  string_t key(name);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  730","line":"  std::transform( key.begin(), key.end(), key.begin(), ::tolower );"},
{"lineNum":"  731","line":""},
{"lineNum":"  732","line":"  MadX_value v;"},
{"lineNum":"  733","line":"  v.value = boost::any(value);"},
{"lineNum":"  734","line":"  v.type  = NUMBER;"},
{"lineNum":"  735","line":""},
{"lineNum":"  736","line":"  variables_[key] = v;"},
{"lineNum":"  737","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  738","line":""},
{"lineNum":"  739","line":"void"},
{"lineNum":"  740","line":"  MadX::insert_variable(string_t const & name, mx_exprs const & value)"},
{"lineNum":"  741","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  742","line":"  string_t key(name);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  743","line":"  std::transform( key.begin(), key.end(), key.begin(), ::tolower );"},
{"lineNum":"  744","line":""},
{"lineNum":"  745","line":"  MadX_value v;"},
{"lineNum":"  746","line":"  v.value = boost::any(value);"},
{"lineNum":"  747","line":"  v.type  = ARRAY;"},
{"lineNum":"  748","line":""},
{"lineNum":"  749","line":"  variables_[key] = v;"},
{"lineNum":"  750","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  751","line":""},
{"lineNum":"  752","line":"void"},
{"lineNum":"  753","line":"  MadX::insert_label(string_t const & name, MadX_command const & cmd)"},
{"lineNum":"  754","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  755","line":"  string_t key(name);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  756","line":"  std::transform( key.begin(), key.end(), key.begin(), ::tolower );"},
{"lineNum":"  757","line":""},
{"lineNum":"  758","line":"  cmd_map_[key] = cmd; // always overwrite"},
{"lineNum":"  759","line":"  cmd_map_[key].set_parent(*this);"},
{"lineNum":"  760","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  761","line":""},
{"lineNum":"  762","line":"void"},
{"lineNum":"  763","line":"  MadX::fuse_command(string_t const & name, MadX_command const & cmd)"},
{"lineNum":"  764","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  765","line":"  string_t key(name);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  766","line":"  std::transform( key.begin(), key.end(), key.begin(), ::tolower );"},
{"lineNum":"  767","line":""},
{"lineNum":"  768","line":"  commands_m_t::iterator it = cmd_map_.find( key );"},
{"lineNum":"  769","line":"  if( it!=cmd_map_.end() )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  770","line":"  {"},
{"lineNum":"  771","line":"    it->second.merge_with_overwrite( cmd );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  772","line":"  }"},
{"lineNum":"  773","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  774","line":""},
{"lineNum":"  775","line":"void"},
{"lineNum":"  776","line":"  MadX::insert_line(string_t const & name, MadX_line const & line)"},
{"lineNum":"  777","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  778","line":"  string_t key(name);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  779","line":"  std::transform( key.begin(), key.end(), key.begin(), ::tolower );"},
{"lineNum":"  780","line":""},
{"lineNum":"  781","line":"  lines_.insert( std::make_pair(key, line) );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  782","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  783","line":""},
{"lineNum":"  784","line":"void"},
{"lineNum":"  785","line":"  MadX::insert_command(MadX_command const & cmd)"},
{"lineNum":"  786","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  787","line":"  cmd_seq_.push_back(cmd);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  788","line":"  cmd_seq_.back().set_parent(*this);"},
{"lineNum":"  789","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  790","line":""},
{"lineNum":"  791","line":"void"},
{"lineNum":"  792","line":"  MadX::start_sequence( string_t const & label"},
{"lineNum":"  793","line":"                      , double length"},
{"lineNum":"  794","line":"                      , string_t const & refer"},
{"lineNum":"  795","line":"                      , string_t const & refpos )"},
{"lineNum":"  796","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  797","line":"  building_seq_ = true;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  798","line":"  cur_seq_.set_label(label);"},
{"lineNum":"  799","line":"  cur_seq_.set_length(length);"},
{"lineNum":"  800","line":"  cur_seq_.set_refpos(refpos);"},
{"lineNum":"  801","line":""},
{"lineNum":"  802","line":"  if( refer==\"entry\"  )      cur_seq_.set_refer(SEQ_REF_ENTRY);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  803","line":"  else if( refer==\"center\" ) cur_seq_.set_refer(SEQ_REF_CENTRE);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  804","line":"  else if( refer==\"exit\" )   cur_seq_.set_refer(SEQ_REF_EXIT);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  805","line":"  else                       cur_seq_.set_refer(SEQ_REF_CENTRE);"},
{"lineNum":"  806","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  807","line":""},
{"lineNum":"  808","line":"void"},
{"lineNum":"  809","line":"  MadX::append_sequence_element(string_t const & label, double at, string_t const & from)"},
{"lineNum":"  810","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  811","line":"  if( building_seq_ )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  812","line":"    cur_seq_.add_element(label, at, from);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  813","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  814","line":""},
{"lineNum":"  815","line":"void"},
{"lineNum":"  816","line":"  MadX::end_sequence()"},
{"lineNum":"  817","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  818","line":"  // done and insert the sequence to madx object"},
{"lineNum":"  819","line":"  building_seq_ = false;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  820","line":"  cur_seq_.finalize();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  821","line":"  seqs_.insert(std::make_pair(cur_seq_.label(), cur_seq_));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  822","line":"  cur_seq_.reset();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  823","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  824","line":""},
{"lineNum":"  825","line":"void"},
{"lineNum":"  826","line":"  MadX::print() const"},
{"lineNum":"  827","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  828","line":"  value_map_t::const_iterator it = variables_.begin();"},
{"lineNum":"  829","line":"  for(; it!=variables_.end(); ++it )","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  830","line":"  {"},
{"lineNum":"  831","line":"    std::string key = it->first;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  832","line":"    double val = variable_as_number(key);"},
{"lineNum":"  833","line":"    std::cout << key << \" = \" << val << \"\\n\";","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  834","line":"  }"},
{"lineNum":"  835","line":""},
{"lineNum":"  836","line":"  for( lines_m_t::const_iterator it=lines_.begin()","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  837","line":"     ; it!=lines_.end(); ++it )"},
{"lineNum":"  838","line":"  {"},
{"lineNum":"  839","line":"    cout << it->first << \" : line = \";"},
{"lineNum":"  840","line":"    it->second.print();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  841","line":"  }"},
{"lineNum":"  842","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  843","line":""},
{"lineNum":"  844","line":""},
{"lineNum":"  845","line":""},
{"lineNum":"  846","line":""},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:41", "instrumented" : 271, "covered" : 0,};
var merged_data = [];
