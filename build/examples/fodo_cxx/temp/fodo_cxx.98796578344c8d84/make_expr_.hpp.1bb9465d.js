var data = {lines:[
{"lineNum":"    1","line":"    ///////////////////////////////////////////////////////////////////////////////"},
{"lineNum":"    2","line":"    /// \\file make_expr_.hpp"},
{"lineNum":"    3","line":"    /// Contains definition of make_expr_\\<\\> class template."},
{"lineNum":"    4","line":"    //"},
{"lineNum":"    5","line":"    //  Copyright 2008 Eric Niebler. Distributed under the Boost"},
{"lineNum":"    6","line":"    //  Software License, Version 1.0. (See accompanying file"},
{"lineNum":"    7","line":"    //  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)"},
{"lineNum":"    8","line":"    template<"},
{"lineNum":"    9","line":"        typename Tag"},
{"lineNum":"   10","line":"      , typename Domain"},
{"lineNum":"   11","line":"        , typename A0 = void , typename A1 = void , typename A2 = void , typename A3 = void , typename A4 = void , typename A5 = void , typename A6 = void , typename A7 = void , typename A8 = void , typename A9 = void"},
{"lineNum":"   12","line":"      , typename _ = void"},
{"lineNum":"   13","line":"    >"},
{"lineNum":"   14","line":"    struct make_expr_"},
{"lineNum":"   15","line":"    {};"},
{"lineNum":"   16","line":"    template<typename Domain, typename A>"},
{"lineNum":"   17","line":"    struct make_expr_<tag::terminal, Domain, A"},
{"lineNum":"   18","line":"        , void , void , void , void , void , void , void , void , void , void>"},
{"lineNum":"   19","line":"    {"},
{"lineNum":"   20","line":"        typedef typename proto::detail::protoify<A, Domain>::result_type result_type;"},
{"lineNum":"   21","line":"        BOOST_FORCEINLINE"},
{"lineNum":"   22","line":"        result_type operator()(typename add_reference<A>::type a) const"},
{"lineNum":"   23","line":"        {"},
{"lineNum":"   24","line":"            return proto::detail::protoify<A, Domain>()(a);"},
{"lineNum":"   25","line":"        }"},
{"lineNum":"   26","line":"    };"},
{"lineNum":"   27","line":"    template<typename A>"},
{"lineNum":"   28","line":"    struct make_expr_<tag::terminal, deduce_domain, A"},
{"lineNum":"   29","line":"        , void , void , void , void , void , void , void , void , void , void>"},
{"lineNum":"   30","line":"      : make_expr_<tag::terminal, default_domain, A>"},
{"lineNum":"   31","line":"    {};"},
{"lineNum":"   32","line":"    template<typename Tag, typename Domain , typename A0>"},
{"lineNum":"   33","line":"    struct make_expr_<Tag, Domain , A0"},
{"lineNum":"   34","line":"        , void , void , void , void , void , void , void , void , void, void>"},
{"lineNum":"   35","line":"    {"},
{"lineNum":"   36","line":"        typedef"},
{"lineNum":"   37","line":"            list1<"},
{"lineNum":"   38","line":"                typename boost::proto::detail::protoify< A0 , Domain >::result_type"},
{"lineNum":"   39","line":"            >"},
{"lineNum":"   40","line":"        proto_args;"},
{"lineNum":"   41","line":"        typedef typename base_expr<Domain, Tag, proto_args>::type expr_type;"},
{"lineNum":"   42","line":"        typedef typename Domain::proto_generator proto_generator;"},
{"lineNum":"   43","line":"        typedef typename proto_generator::template result<proto_generator(expr_type)>::type result_type;"},
{"lineNum":"   44","line":"        BOOST_FORCEINLINE"},
{"lineNum":"   45","line":"        result_type operator()(typename add_reference<A0 >::type a0) const"},
{"lineNum":"   46","line":"        {"},
{"lineNum":"   47","line":"            expr_type const that = {"},
{"lineNum":"   48","line":"                boost::proto::detail::protoify< A0 , Domain >()(a0)"},
{"lineNum":"   49","line":"            };"},
{"lineNum":"   50","line":"            return proto_generator()(that);"},
{"lineNum":"   51","line":"        }"},
{"lineNum":"   52","line":"    };"},
{"lineNum":"   53","line":"    template<typename Tag , typename A0>"},
{"lineNum":"   54","line":"    struct make_expr_<Tag, deduce_domain , A0"},
{"lineNum":"   55","line":"        , void , void , void , void , void , void , void , void , void, void>"},
{"lineNum":"   56","line":"      : make_expr_<"},
{"lineNum":"   57","line":"            Tag"},
{"lineNum":"   58","line":"          , typename deduce_domain1<A0>::type"},
{"lineNum":"   59","line":"            , A0"},
{"lineNum":"   60","line":"        >"},
{"lineNum":"   61","line":"    {};"},
{"lineNum":"   62","line":"    template<typename Tag, typename Domain , typename A0 , typename A1>"},
{"lineNum":"   63","line":"    struct make_expr_<Tag, Domain , A0 , A1"},
{"lineNum":"   64","line":"        , void , void , void , void , void , void , void , void, void>"},
{"lineNum":"   65","line":"    {"},
{"lineNum":"   66","line":"        typedef"},
{"lineNum":"   67","line":"            list2<"},
{"lineNum":"   68","line":"                typename boost::proto::detail::protoify< A0 , Domain >::result_type , typename boost::proto::detail::protoify< A1 , Domain >::result_type"},
{"lineNum":"   69","line":"            >"},
{"lineNum":"   70","line":"        proto_args;"},
{"lineNum":"   71","line":"        typedef typename base_expr<Domain, Tag, proto_args>::type expr_type;"},
{"lineNum":"   72","line":"        typedef typename Domain::proto_generator proto_generator;"},
{"lineNum":"   73","line":"        typedef typename proto_generator::template result<proto_generator(expr_type)>::type result_type;"},
{"lineNum":"   74","line":"        BOOST_FORCEINLINE"},
{"lineNum":"   75","line":"        result_type operator()(typename add_reference<A0 >::type a0 , typename add_reference<A1 >::type a1) const"},
{"lineNum":"   76","line":"        {"},
{"lineNum":"   77","line":"            expr_type const that = {"},
{"lineNum":"   78","line":"                boost::proto::detail::protoify< A0 , Domain >()(a0) , boost::proto::detail::protoify< A1 , Domain >()(a1)"},
{"lineNum":"   79","line":"            };"},
{"lineNum":"   80","line":"            return proto_generator()(that);"},
{"lineNum":"   81","line":"        }"},
{"lineNum":"   82","line":"    };"},
{"lineNum":"   83","line":"    template<typename Tag , typename A0 , typename A1>"},
{"lineNum":"   84","line":"    struct make_expr_<Tag, deduce_domain , A0 , A1"},
{"lineNum":"   85","line":"        , void , void , void , void , void , void , void , void, void>"},
{"lineNum":"   86","line":"      : make_expr_<"},
{"lineNum":"   87","line":"            Tag"},
{"lineNum":"   88","line":"          , typename deduce_domain2<A0 , A1>::type"},
{"lineNum":"   89","line":"            , A0 , A1"},
{"lineNum":"   90","line":"        >"},
{"lineNum":"   91","line":"    {};"},
{"lineNum":"   92","line":"    template<typename Tag, typename Domain , typename A0 , typename A1 , typename A2>"},
{"lineNum":"   93","line":"    struct make_expr_<Tag, Domain , A0 , A1 , A2"},
{"lineNum":"   94","line":"        , void , void , void , void , void , void , void, void>"},
{"lineNum":"   95","line":"    {"},
{"lineNum":"   96","line":"        typedef"},
{"lineNum":"   97","line":"            list3<"},
{"lineNum":"   98","line":"                typename boost::proto::detail::protoify< A0 , Domain >::result_type , typename boost::proto::detail::protoify< A1 , Domain >::result_type , typename boost::proto::detail::protoify< A2 , Domain >::result_type"},
{"lineNum":"   99","line":"            >"},
{"lineNum":"  100","line":"        proto_args;"},
{"lineNum":"  101","line":"        typedef typename base_expr<Domain, Tag, proto_args>::type expr_type;"},
{"lineNum":"  102","line":"        typedef typename Domain::proto_generator proto_generator;"},
{"lineNum":"  103","line":"        typedef typename proto_generator::template result<proto_generator(expr_type)>::type result_type;"},
{"lineNum":"  104","line":"        BOOST_FORCEINLINE"},
{"lineNum":"  105","line":"        result_type operator()(typename add_reference<A0 >::type a0 , typename add_reference<A1 >::type a1 , typename add_reference<A2 >::type a2) const"},
{"lineNum":"  106","line":"        {"},
{"lineNum":"  107","line":"            expr_type const that = {"},
{"lineNum":"  108","line":"                boost::proto::detail::protoify< A0 , Domain >()(a0) , boost::proto::detail::protoify< A1 , Domain >()(a1) , boost::proto::detail::protoify< A2 , Domain >()(a2)"},
{"lineNum":"  109","line":"            };"},
{"lineNum":"  110","line":"            return proto_generator()(that);"},
{"lineNum":"  111","line":"        }"},
{"lineNum":"  112","line":"    };"},
{"lineNum":"  113","line":"    template<typename Tag , typename A0 , typename A1 , typename A2>"},
{"lineNum":"  114","line":"    struct make_expr_<Tag, deduce_domain , A0 , A1 , A2"},
{"lineNum":"  115","line":"        , void , void , void , void , void , void , void, void>"},
{"lineNum":"  116","line":"      : make_expr_<"},
{"lineNum":"  117","line":"            Tag"},
{"lineNum":"  118","line":"          , typename deduce_domain3<A0 , A1 , A2>::type"},
{"lineNum":"  119","line":"            , A0 , A1 , A2"},
{"lineNum":"  120","line":"        >"},
{"lineNum":"  121","line":"    {};"},
{"lineNum":"  122","line":"    template<typename Tag, typename Domain , typename A0 , typename A1 , typename A2 , typename A3>"},
{"lineNum":"  123","line":"    struct make_expr_<Tag, Domain , A0 , A1 , A2 , A3"},
{"lineNum":"  124","line":"        , void , void , void , void , void , void, void>"},
{"lineNum":"  125","line":"    {"},
{"lineNum":"  126","line":"        typedef"},
{"lineNum":"  127","line":"            list4<"},
{"lineNum":"  128","line":"                typename boost::proto::detail::protoify< A0 , Domain >::result_type , typename boost::proto::detail::protoify< A1 , Domain >::result_type , typename boost::proto::detail::protoify< A2 , Domain >::result_type , typename boost::proto::detail::protoify< A3 , Domain >::result_type"},
{"lineNum":"  129","line":"            >"},
{"lineNum":"  130","line":"        proto_args;"},
{"lineNum":"  131","line":"        typedef typename base_expr<Domain, Tag, proto_args>::type expr_type;"},
{"lineNum":"  132","line":"        typedef typename Domain::proto_generator proto_generator;"},
{"lineNum":"  133","line":"        typedef typename proto_generator::template result<proto_generator(expr_type)>::type result_type;"},
{"lineNum":"  134","line":"        BOOST_FORCEINLINE"},
{"lineNum":"  135","line":"        result_type operator()(typename add_reference<A0 >::type a0 , typename add_reference<A1 >::type a1 , typename add_reference<A2 >::type a2 , typename add_reference<A3 >::type a3) const"},
{"lineNum":"  136","line":"        {"},
{"lineNum":"  137","line":"            expr_type const that = {"},
{"lineNum":"  138","line":"                boost::proto::detail::protoify< A0 , Domain >()(a0) , boost::proto::detail::protoify< A1 , Domain >()(a1) , boost::proto::detail::protoify< A2 , Domain >()(a2) , boost::proto::detail::protoify< A3 , Domain >()(a3)"},
{"lineNum":"  139","line":"            };"},
{"lineNum":"  140","line":"            return proto_generator()(that);"},
{"lineNum":"  141","line":"        }"},
{"lineNum":"  142","line":"    };"},
{"lineNum":"  143","line":"    template<typename Tag , typename A0 , typename A1 , typename A2 , typename A3>"},
{"lineNum":"  144","line":"    struct make_expr_<Tag, deduce_domain , A0 , A1 , A2 , A3"},
{"lineNum":"  145","line":"        , void , void , void , void , void , void, void>"},
{"lineNum":"  146","line":"      : make_expr_<"},
{"lineNum":"  147","line":"            Tag"},
{"lineNum":"  148","line":"          , typename deduce_domain4<A0 , A1 , A2 , A3>::type"},
{"lineNum":"  149","line":"            , A0 , A1 , A2 , A3"},
{"lineNum":"  150","line":"        >"},
{"lineNum":"  151","line":"    {};"},
{"lineNum":"  152","line":"    template<typename Tag, typename Domain , typename A0 , typename A1 , typename A2 , typename A3 , typename A4>"},
{"lineNum":"  153","line":"    struct make_expr_<Tag, Domain , A0 , A1 , A2 , A3 , A4"},
{"lineNum":"  154","line":"        , void , void , void , void , void, void>"},
{"lineNum":"  155","line":"    {"},
{"lineNum":"  156","line":"        typedef"},
{"lineNum":"  157","line":"            list5<"},
{"lineNum":"  158","line":"                typename boost::proto::detail::protoify< A0 , Domain >::result_type , typename boost::proto::detail::protoify< A1 , Domain >::result_type , typename boost::proto::detail::protoify< A2 , Domain >::result_type , typename boost::proto::detail::protoify< A3 , Domain >::result_type , typename boost::proto::detail::protoify< A4 , Domain >::result_type"},
{"lineNum":"  159","line":"            >"},
{"lineNum":"  160","line":"        proto_args;"},
{"lineNum":"  161","line":"        typedef typename base_expr<Domain, Tag, proto_args>::type expr_type;"},
{"lineNum":"  162","line":"        typedef typename Domain::proto_generator proto_generator;"},
{"lineNum":"  163","line":"        typedef typename proto_generator::template result<proto_generator(expr_type)>::type result_type;"},
{"lineNum":"  164","line":"        BOOST_FORCEINLINE"},
{"lineNum":"  165","line":"        result_type operator()(typename add_reference<A0 >::type a0 , typename add_reference<A1 >::type a1 , typename add_reference<A2 >::type a2 , typename add_reference<A3 >::type a3 , typename add_reference<A4 >::type a4) const"},
{"lineNum":"  166","line":"        {"},
{"lineNum":"  167","line":"            expr_type const that = {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  168","line":"                boost::proto::detail::protoify< A0 , Domain >()(a0) , boost::proto::detail::protoify< A1 , Domain >()(a1) , boost::proto::detail::protoify< A2 , Domain >()(a2) , boost::proto::detail::protoify< A3 , Domain >()(a3) , boost::proto::detail::protoify< A4 , Domain >()(a4)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  169","line":"            };"},
{"lineNum":"  170","line":"            return proto_generator()(that);"},
{"lineNum":"  171","line":"        }"},
{"lineNum":"  172","line":"    };"},
{"lineNum":"  173","line":"    template<typename Tag , typename A0 , typename A1 , typename A2 , typename A3 , typename A4>"},
{"lineNum":"  174","line":"    struct make_expr_<Tag, deduce_domain , A0 , A1 , A2 , A3 , A4"},
{"lineNum":"  175","line":"        , void , void , void , void , void, void>"},
{"lineNum":"  176","line":"      : make_expr_<"},
{"lineNum":"  177","line":"            Tag"},
{"lineNum":"  178","line":"          , typename deduce_domain5<A0 , A1 , A2 , A3 , A4>::type"},
{"lineNum":"  179","line":"            , A0 , A1 , A2 , A3 , A4"},
{"lineNum":"  180","line":"        >"},
{"lineNum":"  181","line":"    {};"},
{"lineNum":"  182","line":"    template<typename Tag, typename Domain , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>"},
{"lineNum":"  183","line":"    struct make_expr_<Tag, Domain , A0 , A1 , A2 , A3 , A4 , A5"},
{"lineNum":"  184","line":"        , void , void , void , void, void>"},
{"lineNum":"  185","line":"    {"},
{"lineNum":"  186","line":"        typedef"},
{"lineNum":"  187","line":"            list6<"},
{"lineNum":"  188","line":"                typename boost::proto::detail::protoify< A0 , Domain >::result_type , typename boost::proto::detail::protoify< A1 , Domain >::result_type , typename boost::proto::detail::protoify< A2 , Domain >::result_type , typename boost::proto::detail::protoify< A3 , Domain >::result_type , typename boost::proto::detail::protoify< A4 , Domain >::result_type , typename boost::proto::detail::protoify< A5 , Domain >::result_type"},
{"lineNum":"  189","line":"            >"},
{"lineNum":"  190","line":"        proto_args;"},
{"lineNum":"  191","line":"        typedef typename base_expr<Domain, Tag, proto_args>::type expr_type;"},
{"lineNum":"  192","line":"        typedef typename Domain::proto_generator proto_generator;"},
{"lineNum":"  193","line":"        typedef typename proto_generator::template result<proto_generator(expr_type)>::type result_type;"},
{"lineNum":"  194","line":"        BOOST_FORCEINLINE"},
{"lineNum":"  195","line":"        result_type operator()(typename add_reference<A0 >::type a0 , typename add_reference<A1 >::type a1 , typename add_reference<A2 >::type a2 , typename add_reference<A3 >::type a3 , typename add_reference<A4 >::type a4 , typename add_reference<A5 >::type a5) const"},
{"lineNum":"  196","line":"        {"},
{"lineNum":"  197","line":"            expr_type const that = {"},
{"lineNum":"  198","line":"                boost::proto::detail::protoify< A0 , Domain >()(a0) , boost::proto::detail::protoify< A1 , Domain >()(a1) , boost::proto::detail::protoify< A2 , Domain >()(a2) , boost::proto::detail::protoify< A3 , Domain >()(a3) , boost::proto::detail::protoify< A4 , Domain >()(a4) , boost::proto::detail::protoify< A5 , Domain >()(a5)"},
{"lineNum":"  199","line":"            };"},
{"lineNum":"  200","line":"            return proto_generator()(that);"},
{"lineNum":"  201","line":"        }"},
{"lineNum":"  202","line":"    };"},
{"lineNum":"  203","line":"    template<typename Tag , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>"},
{"lineNum":"  204","line":"    struct make_expr_<Tag, deduce_domain , A0 , A1 , A2 , A3 , A4 , A5"},
{"lineNum":"  205","line":"        , void , void , void , void, void>"},
{"lineNum":"  206","line":"      : make_expr_<"},
{"lineNum":"  207","line":"            Tag"},
{"lineNum":"  208","line":"          , typename deduce_domain6<A0 , A1 , A2 , A3 , A4 , A5>::type"},
{"lineNum":"  209","line":"            , A0 , A1 , A2 , A3 , A4 , A5"},
{"lineNum":"  210","line":"        >"},
{"lineNum":"  211","line":"    {};"},
{"lineNum":"  212","line":"    template<typename Tag, typename Domain , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>"},
{"lineNum":"  213","line":"    struct make_expr_<Tag, Domain , A0 , A1 , A2 , A3 , A4 , A5 , A6"},
{"lineNum":"  214","line":"        , void , void , void, void>"},
{"lineNum":"  215","line":"    {"},
{"lineNum":"  216","line":"        typedef"},
{"lineNum":"  217","line":"            list7<"},
{"lineNum":"  218","line":"                typename boost::proto::detail::protoify< A0 , Domain >::result_type , typename boost::proto::detail::protoify< A1 , Domain >::result_type , typename boost::proto::detail::protoify< A2 , Domain >::result_type , typename boost::proto::detail::protoify< A3 , Domain >::result_type , typename boost::proto::detail::protoify< A4 , Domain >::result_type , typename boost::proto::detail::protoify< A5 , Domain >::result_type , typename boost::proto::detail::protoify< A6 , Domain >::result_type"},
{"lineNum":"  219","line":"            >"},
{"lineNum":"  220","line":"        proto_args;"},
{"lineNum":"  221","line":"        typedef typename base_expr<Domain, Tag, proto_args>::type expr_type;"},
{"lineNum":"  222","line":"        typedef typename Domain::proto_generator proto_generator;"},
{"lineNum":"  223","line":"        typedef typename proto_generator::template result<proto_generator(expr_type)>::type result_type;"},
{"lineNum":"  224","line":"        BOOST_FORCEINLINE"},
{"lineNum":"  225","line":"        result_type operator()(typename add_reference<A0 >::type a0 , typename add_reference<A1 >::type a1 , typename add_reference<A2 >::type a2 , typename add_reference<A3 >::type a3 , typename add_reference<A4 >::type a4 , typename add_reference<A5 >::type a5 , typename add_reference<A6 >::type a6) const"},
{"lineNum":"  226","line":"        {"},
{"lineNum":"  227","line":"            expr_type const that = {"},
{"lineNum":"  228","line":"                boost::proto::detail::protoify< A0 , Domain >()(a0) , boost::proto::detail::protoify< A1 , Domain >()(a1) , boost::proto::detail::protoify< A2 , Domain >()(a2) , boost::proto::detail::protoify< A3 , Domain >()(a3) , boost::proto::detail::protoify< A4 , Domain >()(a4) , boost::proto::detail::protoify< A5 , Domain >()(a5) , boost::proto::detail::protoify< A6 , Domain >()(a6)"},
{"lineNum":"  229","line":"            };"},
{"lineNum":"  230","line":"            return proto_generator()(that);"},
{"lineNum":"  231","line":"        }"},
{"lineNum":"  232","line":"    };"},
{"lineNum":"  233","line":"    template<typename Tag , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>"},
{"lineNum":"  234","line":"    struct make_expr_<Tag, deduce_domain , A0 , A1 , A2 , A3 , A4 , A5 , A6"},
{"lineNum":"  235","line":"        , void , void , void, void>"},
{"lineNum":"  236","line":"      : make_expr_<"},
{"lineNum":"  237","line":"            Tag"},
{"lineNum":"  238","line":"          , typename deduce_domain7<A0 , A1 , A2 , A3 , A4 , A5 , A6>::type"},
{"lineNum":"  239","line":"            , A0 , A1 , A2 , A3 , A4 , A5 , A6"},
{"lineNum":"  240","line":"        >"},
{"lineNum":"  241","line":"    {};"},
{"lineNum":"  242","line":"    template<typename Tag, typename Domain , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>"},
{"lineNum":"  243","line":"    struct make_expr_<Tag, Domain , A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7"},
{"lineNum":"  244","line":"        , void , void, void>"},
{"lineNum":"  245","line":"    {"},
{"lineNum":"  246","line":"        typedef"},
{"lineNum":"  247","line":"            list8<"},
{"lineNum":"  248","line":"                typename boost::proto::detail::protoify< A0 , Domain >::result_type , typename boost::proto::detail::protoify< A1 , Domain >::result_type , typename boost::proto::detail::protoify< A2 , Domain >::result_type , typename boost::proto::detail::protoify< A3 , Domain >::result_type , typename boost::proto::detail::protoify< A4 , Domain >::result_type , typename boost::proto::detail::protoify< A5 , Domain >::result_type , typename boost::proto::detail::protoify< A6 , Domain >::result_type , typename boost::proto::detail::protoify< A7 , Domain >::result_type"},
{"lineNum":"  249","line":"            >"},
{"lineNum":"  250","line":"        proto_args;"},
{"lineNum":"  251","line":"        typedef typename base_expr<Domain, Tag, proto_args>::type expr_type;"},
{"lineNum":"  252","line":"        typedef typename Domain::proto_generator proto_generator;"},
{"lineNum":"  253","line":"        typedef typename proto_generator::template result<proto_generator(expr_type)>::type result_type;"},
{"lineNum":"  254","line":"        BOOST_FORCEINLINE"},
{"lineNum":"  255","line":"        result_type operator()(typename add_reference<A0 >::type a0 , typename add_reference<A1 >::type a1 , typename add_reference<A2 >::type a2 , typename add_reference<A3 >::type a3 , typename add_reference<A4 >::type a4 , typename add_reference<A5 >::type a5 , typename add_reference<A6 >::type a6 , typename add_reference<A7 >::type a7) const"},
{"lineNum":"  256","line":"        {"},
{"lineNum":"  257","line":"            expr_type const that = {"},
{"lineNum":"  258","line":"                boost::proto::detail::protoify< A0 , Domain >()(a0) , boost::proto::detail::protoify< A1 , Domain >()(a1) , boost::proto::detail::protoify< A2 , Domain >()(a2) , boost::proto::detail::protoify< A3 , Domain >()(a3) , boost::proto::detail::protoify< A4 , Domain >()(a4) , boost::proto::detail::protoify< A5 , Domain >()(a5) , boost::proto::detail::protoify< A6 , Domain >()(a6) , boost::proto::detail::protoify< A7 , Domain >()(a7)"},
{"lineNum":"  259","line":"            };"},
{"lineNum":"  260","line":"            return proto_generator()(that);"},
{"lineNum":"  261","line":"        }"},
{"lineNum":"  262","line":"    };"},
{"lineNum":"  263","line":"    template<typename Tag , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>"},
{"lineNum":"  264","line":"    struct make_expr_<Tag, deduce_domain , A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7"},
{"lineNum":"  265","line":"        , void , void, void>"},
{"lineNum":"  266","line":"      : make_expr_<"},
{"lineNum":"  267","line":"            Tag"},
{"lineNum":"  268","line":"          , typename deduce_domain8<A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7>::type"},
{"lineNum":"  269","line":"            , A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7"},
{"lineNum":"  270","line":"        >"},
{"lineNum":"  271","line":"    {};"},
{"lineNum":"  272","line":"    template<typename Tag, typename Domain , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>"},
{"lineNum":"  273","line":"    struct make_expr_<Tag, Domain , A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8"},
{"lineNum":"  274","line":"        , void, void>"},
{"lineNum":"  275","line":"    {"},
{"lineNum":"  276","line":"        typedef"},
{"lineNum":"  277","line":"            list9<"},
{"lineNum":"  278","line":"                typename boost::proto::detail::protoify< A0 , Domain >::result_type , typename boost::proto::detail::protoify< A1 , Domain >::result_type , typename boost::proto::detail::protoify< A2 , Domain >::result_type , typename boost::proto::detail::protoify< A3 , Domain >::result_type , typename boost::proto::detail::protoify< A4 , Domain >::result_type , typename boost::proto::detail::protoify< A5 , Domain >::result_type , typename boost::proto::detail::protoify< A6 , Domain >::result_type , typename boost::proto::detail::protoify< A7 , Domain >::result_type , typename boost::proto::detail::protoify< A8 , Domain >::result_type"},
{"lineNum":"  279","line":"            >"},
{"lineNum":"  280","line":"        proto_args;"},
{"lineNum":"  281","line":"        typedef typename base_expr<Domain, Tag, proto_args>::type expr_type;"},
{"lineNum":"  282","line":"        typedef typename Domain::proto_generator proto_generator;"},
{"lineNum":"  283","line":"        typedef typename proto_generator::template result<proto_generator(expr_type)>::type result_type;"},
{"lineNum":"  284","line":"        BOOST_FORCEINLINE"},
{"lineNum":"  285","line":"        result_type operator()(typename add_reference<A0 >::type a0 , typename add_reference<A1 >::type a1 , typename add_reference<A2 >::type a2 , typename add_reference<A3 >::type a3 , typename add_reference<A4 >::type a4 , typename add_reference<A5 >::type a5 , typename add_reference<A6 >::type a6 , typename add_reference<A7 >::type a7 , typename add_reference<A8 >::type a8) const"},
{"lineNum":"  286","line":"        {"},
{"lineNum":"  287","line":"            expr_type const that = {"},
{"lineNum":"  288","line":"                boost::proto::detail::protoify< A0 , Domain >()(a0) , boost::proto::detail::protoify< A1 , Domain >()(a1) , boost::proto::detail::protoify< A2 , Domain >()(a2) , boost::proto::detail::protoify< A3 , Domain >()(a3) , boost::proto::detail::protoify< A4 , Domain >()(a4) , boost::proto::detail::protoify< A5 , Domain >()(a5) , boost::proto::detail::protoify< A6 , Domain >()(a6) , boost::proto::detail::protoify< A7 , Domain >()(a7) , boost::proto::detail::protoify< A8 , Domain >()(a8)"},
{"lineNum":"  289","line":"            };"},
{"lineNum":"  290","line":"            return proto_generator()(that);"},
{"lineNum":"  291","line":"        }"},
{"lineNum":"  292","line":"    };"},
{"lineNum":"  293","line":"    template<typename Tag , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>"},
{"lineNum":"  294","line":"    struct make_expr_<Tag, deduce_domain , A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8"},
{"lineNum":"  295","line":"        , void, void>"},
{"lineNum":"  296","line":"      : make_expr_<"},
{"lineNum":"  297","line":"            Tag"},
{"lineNum":"  298","line":"          , typename deduce_domain9<A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8>::type"},
{"lineNum":"  299","line":"            , A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8"},
{"lineNum":"  300","line":"        >"},
{"lineNum":"  301","line":"    {};"},
{"lineNum":"  302","line":"    template<typename Tag, typename Domain , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>"},
{"lineNum":"  303","line":"    struct make_expr_<Tag, Domain , A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9"},
{"lineNum":"  304","line":"        , void>"},
{"lineNum":"  305","line":"    {"},
{"lineNum":"  306","line":"        typedef"},
{"lineNum":"  307","line":"            list10<"},
{"lineNum":"  308","line":"                typename boost::proto::detail::protoify< A0 , Domain >::result_type , typename boost::proto::detail::protoify< A1 , Domain >::result_type , typename boost::proto::detail::protoify< A2 , Domain >::result_type , typename boost::proto::detail::protoify< A3 , Domain >::result_type , typename boost::proto::detail::protoify< A4 , Domain >::result_type , typename boost::proto::detail::protoify< A5 , Domain >::result_type , typename boost::proto::detail::protoify< A6 , Domain >::result_type , typename boost::proto::detail::protoify< A7 , Domain >::result_type , typename boost::proto::detail::protoify< A8 , Domain >::result_type , typename boost::proto::detail::protoify< A9 , Domain >::result_type"},
{"lineNum":"  309","line":"            >"},
{"lineNum":"  310","line":"        proto_args;"},
{"lineNum":"  311","line":"        typedef typename base_expr<Domain, Tag, proto_args>::type expr_type;"},
{"lineNum":"  312","line":"        typedef typename Domain::proto_generator proto_generator;"},
{"lineNum":"  313","line":"        typedef typename proto_generator::template result<proto_generator(expr_type)>::type result_type;"},
{"lineNum":"  314","line":"        BOOST_FORCEINLINE"},
{"lineNum":"  315","line":"        result_type operator()(typename add_reference<A0 >::type a0 , typename add_reference<A1 >::type a1 , typename add_reference<A2 >::type a2 , typename add_reference<A3 >::type a3 , typename add_reference<A4 >::type a4 , typename add_reference<A5 >::type a5 , typename add_reference<A6 >::type a6 , typename add_reference<A7 >::type a7 , typename add_reference<A8 >::type a8 , typename add_reference<A9 >::type a9) const"},
{"lineNum":"  316","line":"        {"},
{"lineNum":"  317","line":"            expr_type const that = {"},
{"lineNum":"  318","line":"                boost::proto::detail::protoify< A0 , Domain >()(a0) , boost::proto::detail::protoify< A1 , Domain >()(a1) , boost::proto::detail::protoify< A2 , Domain >()(a2) , boost::proto::detail::protoify< A3 , Domain >()(a3) , boost::proto::detail::protoify< A4 , Domain >()(a4) , boost::proto::detail::protoify< A5 , Domain >()(a5) , boost::proto::detail::protoify< A6 , Domain >()(a6) , boost::proto::detail::protoify< A7 , Domain >()(a7) , boost::proto::detail::protoify< A8 , Domain >()(a8) , boost::proto::detail::protoify< A9 , Domain >()(a9)"},
{"lineNum":"  319","line":"            };"},
{"lineNum":"  320","line":"            return proto_generator()(that);"},
{"lineNum":"  321","line":"        }"},
{"lineNum":"  322","line":"    };"},
{"lineNum":"  323","line":"    template<typename Tag , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>"},
{"lineNum":"  324","line":"    struct make_expr_<Tag, deduce_domain , A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9"},
{"lineNum":"  325","line":"        , void>"},
{"lineNum":"  326","line":"      : make_expr_<"},
{"lineNum":"  327","line":"            Tag"},
{"lineNum":"  328","line":"          , typename deduce_domain10<A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9>::type"},
{"lineNum":"  329","line":"            , A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9"},
{"lineNum":"  330","line":"        >"},
{"lineNum":"  331","line":"    {};"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:41", "instrumented" : 2, "covered" : 0,};
var merged_data = [];
