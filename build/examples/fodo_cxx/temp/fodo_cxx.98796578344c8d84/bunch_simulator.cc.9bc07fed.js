var data = {lines:[
{"lineNum":"    1","line":"#include <numeric>"},
{"lineNum":"    2","line":"#include <random>"},
{"lineNum":"    3","line":"#include <sstream>"},
{"lineNum":"    4","line":""},
{"lineNum":"    5","line":"#include \"synergia/simulation/bunch_simulator.h\""},
{"lineNum":"    6","line":"#include \"synergia/simulation/operator.h\""},
{"lineNum":"    7","line":"#include \"synergia/simulation/independent_operation.h\""},
{"lineNum":"    8","line":"#include \"synergia/bunch/populate_global.h\""},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"namespace impl {"},
{"lineNum":"   11","line":""},
{"lineNum":"   12","line":"    static std::random_device              rd;"},
{"lineNum":"   13","line":"    static std::mt19937                    gen(rd());","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   14","line":"    static std::uniform_int_distribution<> dis(0, 15);"},
{"lineNum":"   15","line":"    static std::uniform_int_distribution<> dis2(8, 11);"},
{"lineNum":"   16","line":""},
{"lineNum":"   17","line":"    std::string generate_uuid_v4() {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   18","line":"        std::stringstream ss;"},
{"lineNum":"   19","line":"        int i;"},
{"lineNum":"   20","line":"        ss << std::hex;"},
{"lineNum":"   21","line":"        for (i = 0; i < 8; i++) {"},
{"lineNum":"   22","line":"            ss << dis(gen);","class":"lineNoCov","hits":"0","possible_hits":"8",},
{"lineNum":"   23","line":"        }"},
{"lineNum":"   24","line":"        ss << \"-\";"},
{"lineNum":"   25","line":"        for (i = 0; i < 4; i++) {"},
{"lineNum":"   26","line":"            ss << dis(gen);","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   27","line":"        }"},
{"lineNum":"   28","line":"        ss << \"-4\";"},
{"lineNum":"   29","line":"        for (i = 0; i < 3; i++) {"},
{"lineNum":"   30","line":"            ss << dis(gen);","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   31","line":"        }"},
{"lineNum":"   32","line":"        ss << \"-\";"},
{"lineNum":"   33","line":"        ss << dis2(gen);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   34","line":"        for (i = 0; i < 3; i++) {"},
{"lineNum":"   35","line":"            ss << dis(gen);","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   36","line":"        }"},
{"lineNum":"   37","line":"        ss << \"-\";"},
{"lineNum":"   38","line":"        for (i = 0; i < 12; i++) {"},
{"lineNum":"   39","line":"            ss << dis(gen);","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"   40","line":"        };"},
{"lineNum":"   41","line":"        return ss.str();"},
{"lineNum":"   42","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   43","line":""},
{"lineNum":"   44","line":"    void divide_bunches(int size,"},
{"lineNum":"   45","line":"            size_t num_bunches_pri,"},
{"lineNum":"   46","line":"            size_t num_bunches_sec,"},
{"lineNum":"   47","line":"            std::vector<int> & p_ranks,"},
{"lineNum":"   48","line":"            std::vector<int> & s_ranks )"},
{"lineNum":"   49","line":"    {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   50","line":"        assert(size > 0);"},
{"lineNum":"   51","line":""},
{"lineNum":"   52","line":"        const size_t num_bunches = num_bunches_pri + num_bunches_sec;"},
{"lineNum":"   53","line":"        size_t st_start_rank = 0;"},
{"lineNum":"   54","line":""},
{"lineNum":"   55","line":"        if ( num_bunches == 0 )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   56","line":"        {"},
{"lineNum":"   57","line":"            // no bunch at all"},
{"lineNum":"   58","line":"            p_ranks.resize(0);"},
{"lineNum":"   59","line":"            s_ranks.resize(0);"},
{"lineNum":"   60","line":"            st_start_rank = 0;"},
{"lineNum":"   61","line":"        }"},
{"lineNum":"   62","line":"        else if ( size == 1 )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   63","line":"        {"},
{"lineNum":"   64","line":"            // all bunches on a single rank"},
{"lineNum":"   65","line":"            p_ranks.resize(num_bunches_pri ? 1 : 0);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   66","line":"            s_ranks.resize(num_bunches_sec ? 1 : 0);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   67","line":"            st_start_rank = 0;"},
{"lineNum":"   68","line":"        }"},
{"lineNum":"   69","line":"        else if ( size < num_bunches )","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   70","line":"        {"},
{"lineNum":"   71","line":"            // multiple ranks, each rank stores 1 train at max"},
{"lineNum":"   72","line":"            if (num_bunches % size != 0)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   73","line":"            {"},
{"lineNum":"   74","line":"                throw std::runtime_error(","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   75","line":"                        \"Bunch_simulator::create_bunch_train_simulator() \""},
{"lineNum":"   76","line":"                        \"the number of bunches must be divisible by the number of ranks\" );"},
{"lineNum":"   77","line":"            }"},
{"lineNum":"   78","line":""},
{"lineNum":"   79","line":"            int const bunch_per_rank = num_bunches / size;"},
{"lineNum":"   80","line":""},
{"lineNum":"   81","line":"            if (num_bunches_pri % bunch_per_rank != 0","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   82","line":"                    || num_bunches_sec % bunch_per_rank != 0 )","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   83","line":"            {"},
{"lineNum":"   84","line":"                throw std::runtime_error(","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   85","line":"                        \"Bunch_simulator::create_bunch_train_simulator() \""},
{"lineNum":"   86","line":"                        \"the number of bunches in primary or secondary train must be \""},
{"lineNum":"   87","line":"                        \"divisible by the number of bunches per rank\" );"},
{"lineNum":"   88","line":"            }"},
{"lineNum":"   89","line":""},
{"lineNum":"   90","line":"            p_ranks.resize(num_bunches_pri/bunch_per_rank);"},
{"lineNum":"   91","line":"            s_ranks.resize(num_bunches_sec/bunch_per_rank);"},
{"lineNum":"   92","line":"            st_start_rank = p_ranks.size();"},
{"lineNum":"   93","line":"        }"},
{"lineNum":"   94","line":"        else"},
{"lineNum":"   95","line":"        {"},
{"lineNum":"   96","line":"            // now size >= num_bunches, one bunch (or a fraciton of a bunch) per rank"},
{"lineNum":"   97","line":"            if (size % num_bunches != 0)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   98","line":"            {"},
{"lineNum":"   99","line":"                throw std::runtime_error(","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  100","line":"                        \"Bunch_simulator::create_bunch_train_simulator() \""},
{"lineNum":"  101","line":"                        \"the number of ranks must be divisible by the number of bunches\" );"},
{"lineNum":"  102","line":"            }"},
{"lineNum":"  103","line":""},
{"lineNum":"  104","line":"            int const rank_per_bunch = size / num_bunches;"},
{"lineNum":"  105","line":""},
{"lineNum":"  106","line":"            p_ranks.resize(rank_per_bunch * num_bunches_pri);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  107","line":"            s_ranks.resize(rank_per_bunch * num_bunches_sec);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  108","line":"            st_start_rank = p_ranks.size();"},
{"lineNum":"  109","line":"        }"},
{"lineNum":"  110","line":""},
{"lineNum":"  111","line":"        std::iota(p_ranks.begin(), p_ranks.end(), 0);"},
{"lineNum":"  112","line":"        std::iota(s_ranks.begin(), s_ranks.end(), st_start_rank);"},
{"lineNum":"  113","line":""},
{"lineNum":"  114","line":"        return;"},
{"lineNum":"  115","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  116","line":""},
{"lineNum":"  117","line":"}"},
{"lineNum":"  118","line":""},
{"lineNum":"  119","line":"Bunch_simulator"},
{"lineNum":"  120","line":"Bunch_simulator::create_empty_bunch_simulator()"},
{"lineNum":"  121","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  122","line":"    return construct( Reference_particle(),","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  123","line":"                      Reference_particle(),","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  124","line":"                      0,    // num_part"},
{"lineNum":"  125","line":"                      0,    // num_spectator"},
{"lineNum":"  126","line":"                      1.0,  // num_real_particle"},
{"lineNum":"  127","line":"                      0,    // primary bunch"},
{"lineNum":"  128","line":"                      0,    // secondary bunch"},
{"lineNum":"  129","line":"                      1.0, 1.0,  // spacing"},
{"lineNum":"  130","line":"                      Commxx() );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  131","line":"}"},
{"lineNum":"  132","line":""},
{"lineNum":"  133","line":"Bunch_simulator"},
{"lineNum":"  134","line":"Bunch_simulator::create_single_bunch_simulator("},
{"lineNum":"  135","line":"        Reference_particle const& ref,"},
{"lineNum":"  136","line":"        size_t num_particles,"},
{"lineNum":"  137","line":"        double num_real_particles,"},
{"lineNum":"  138","line":"        Commxx const& comm,"},
{"lineNum":"  139","line":"        size_t num_spectators)"},
{"lineNum":"  140","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  141","line":"    return construct( ref, ref,","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  142","line":"                      num_particles,"},
{"lineNum":"  143","line":"                      num_spectators,"},
{"lineNum":"  144","line":"                      num_real_particles,"},
{"lineNum":"  145","line":"                      1,   0,   // num_bunches"},
{"lineNum":"  146","line":"                      1.0, 1.0, // spacing"},
{"lineNum":"  147","line":"                      comm );"},
{"lineNum":"  148","line":"}"},
{"lineNum":"  149","line":""},
{"lineNum":"  150","line":""},
{"lineNum":"  151","line":"Bunch_simulator"},
{"lineNum":"  152","line":"Bunch_simulator::create_bunch_train_simulator("},
{"lineNum":"  153","line":"        Reference_particle const& ref,"},
{"lineNum":"  154","line":"        size_t num_particles,"},
{"lineNum":"  155","line":"        double num_real_particles,"},
{"lineNum":"  156","line":"        size_t num_bunches,"},
{"lineNum":"  157","line":"        double spacing,"},
{"lineNum":"  158","line":"        Commxx const& comm,"},
{"lineNum":"  159","line":"        size_t num_spectators)"},
{"lineNum":"  160","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  161","line":"    return construct( ref, ref,","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  162","line":"                      num_particles,"},
{"lineNum":"  163","line":"                      num_spectators,"},
{"lineNum":"  164","line":"                      num_real_particles,"},
{"lineNum":"  165","line":"                      num_bunches, 0, // num_bunches"},
{"lineNum":"  166","line":"                      spacing, 1.0,   // spacing"},
{"lineNum":"  167","line":"                      comm );"},
{"lineNum":"  168","line":"}"},
{"lineNum":"  169","line":""},
{"lineNum":"  170","line":"Bunch_simulator"},
{"lineNum":"  171","line":"Bunch_simulator::create_two_trains_simulator("},
{"lineNum":"  172","line":"        Reference_particle const& ref_pri,"},
{"lineNum":"  173","line":"        Reference_particle const& ref_sec,"},
{"lineNum":"  174","line":"        size_t num_particles,"},
{"lineNum":"  175","line":"        double num_real_particles,"},
{"lineNum":"  176","line":"        size_t num_bunches_pri,"},
{"lineNum":"  177","line":"        size_t num_bunches_sec,"},
{"lineNum":"  178","line":"        double spacing_pri,"},
{"lineNum":"  179","line":"        double spacing_sec,"},
{"lineNum":"  180","line":"        Commxx const& comm,"},
{"lineNum":"  181","line":"        size_t num_spectators)"},
{"lineNum":"  182","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  183","line":"    return construct( ref_pri, ref_sec,","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  184","line":"                      num_particles,"},
{"lineNum":"  185","line":"                      num_spectators,"},
{"lineNum":"  186","line":"                      num_real_particles,"},
{"lineNum":"  187","line":"                      num_bunches_pri,"},
{"lineNum":"  188","line":"                      num_bunches_sec,"},
{"lineNum":"  189","line":"                      spacing_pri,"},
{"lineNum":"  190","line":"                      spacing_sec,"},
{"lineNum":"  191","line":"                      comm );"},
{"lineNum":"  192","line":"}"},
{"lineNum":"  193","line":""},
{"lineNum":"  194","line":""},
{"lineNum":"  195","line":"Bunch_simulator"},
{"lineNum":"  196","line":"Bunch_simulator::construct("},
{"lineNum":"  197","line":"        Reference_particle const& ref_pri,"},
{"lineNum":"  198","line":"        Reference_particle const& ref_sec,"},
{"lineNum":"  199","line":"        size_t num_part,"},
{"lineNum":"  200","line":"        size_t num_spec,"},
{"lineNum":"  201","line":"        double num_real_part,"},
{"lineNum":"  202","line":"        size_t num_bunches_pri,"},
{"lineNum":"  203","line":"        size_t num_bunches_sec,"},
{"lineNum":"  204","line":"        double spacing_pri,"},
{"lineNum":"  205","line":"        double spacing_sec,"},
{"lineNum":"  206","line":"        Commxx const& comm)"},
{"lineNum":"  207","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  208","line":"    auto comm_ptr = std::make_shared<Commxx>(comm);"},
{"lineNum":"  209","line":""},
{"lineNum":"  210","line":"    std::vector<int> p_ranks;"},
{"lineNum":"  211","line":"    std::vector<int> s_ranks;"},
{"lineNum":"  212","line":""},
{"lineNum":"  213","line":"    impl::divide_bunches( comm.size(),","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  214","line":"            num_bunches_pri,"},
{"lineNum":"  215","line":"            num_bunches_sec,"},
{"lineNum":"  216","line":"            p_ranks,"},
{"lineNum":"  217","line":"            s_ranks );"},
{"lineNum":"  218","line":""},
{"lineNum":"  219","line":"    auto comm_pri = comm_ptr->group(p_ranks);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  220","line":"    auto comm_sec = comm_ptr->group(s_ranks);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  221","line":""},
{"lineNum":"  222","line":"    return Bunch_simulator( Bunch_train( ref_pri,","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  223","line":"                                         num_bunches_pri,"},
{"lineNum":"  224","line":"                                         num_part,"},
{"lineNum":"  225","line":"                                         num_real_part,"},
{"lineNum":"  226","line":"                                         spacing_pri,"},
{"lineNum":"  227","line":"                                         comm_pri,"},
{"lineNum":"  228","line":"                                         num_spec,"},
{"lineNum":"  229","line":"                                         0 ),"},
{"lineNum":"  230","line":"                            Bunch_train( ref_sec,","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  231","line":"                                         num_bunches_sec,"},
{"lineNum":"  232","line":"                                         num_part,"},
{"lineNum":"  233","line":"                                         num_real_part,"},
{"lineNum":"  234","line":"                                         spacing_sec,"},
{"lineNum":"  235","line":"                                         comm_sec,"},
{"lineNum":"  236","line":"                                         num_spec,"},
{"lineNum":"  237","line":"                                         1 ),"},
{"lineNum":"  238","line":"                            comm_ptr );"},
{"lineNum":"  239","line":""},
{"lineNum":"  240","line":""},
{"lineNum":"  241","line":""},
{"lineNum":"  242","line":"    // A more general approach to the above logic could be like:"},
{"lineNum":"  243","line":"    //"},
{"lineNum":"  244","line":"    // bunch_ranks[ti][bi][ri]:"},
{"lineNum":"  245","line":"    //"},
{"lineNum":"  246","line":"    //   stores the MPI rank in the simulator communicator of given"},
{"lineNum":"  247","line":"    //   bunch index and rank inex"},
{"lineNum":"  248","line":"    //"},
{"lineNum":"  249","line":"    //   ti - index of the train (0 or 1)"},
{"lineNum":"  250","line":"    //   bi - index of the bunch (0 to num_bunches of the train)"},
{"lineNum":"  251","line":"    //   ri - index from 0 to number of ranks of this bunch"},
{"lineNum":"  252","line":"    //"},
{"lineNum":"  253","line":"    // bunch_idx_map[ti][bi]"},
{"lineNum":"  254","line":"    //"},
{"lineNum":"  255","line":"    //   stores the array index in the local bunch array of the"},
{"lineNum":"  256","line":"    //   given train/bunch. -1 if the bunch is not present in the"},
{"lineNum":"  257","line":"    //   current rank"},
{"lineNum":"  258","line":"    //"},
{"lineNum":"  259","line":"    //   ti: index of the train, 0 or 1"},
{"lineNum":"  260","line":"    //   bi: index of the bunch, 0 to num_bunches in the train"},
{"lineNum":"  261","line":"    //"},
{"lineNum":"  262","line":"    // E.g.:"},
{"lineNum":"  263","line":"    //"},
{"lineNum":"  264","line":"    //   1. num_bunches_pri = 1, num_bunches_sec = 1"},
{"lineNum":"  265","line":"    //      total 2 bunches, 8 ranks (n_ranks > n_bunches)"},
{"lineNum":"  266","line":"    //"},
{"lineNum":"  267","line":"    //      bunch_ranks = {"},
{"lineNum":"  268","line":"    //          { {0, 1, 2, 3} },"},
{"lineNum":"  269","line":"    //          { {4, 5, 6, 7} }"},
{"lineNum":"  270","line":"    //      }"},
{"lineNum":"  271","line":"    //"},
{"lineNum":"  272","line":"    //      First bunch spans across 4 MPI processors of rank (0, 1,"},
{"lineNum":"  273","line":"    //      2, and 3), in the context of the bunch simulator"},
{"lineNum":"  274","line":"    //      communicator. The second bunch on rank (4, 5, 6, and 7)."},
{"lineNum":"  275","line":"    //"},
{"lineNum":"  276","line":"    //      bunch_idx_map = { {0}, {-1} } on rank 0"},
{"lineNum":"  277","line":"    //      bunch_idx_map = { {0}, {-1} } on rank 1"},
{"lineNum":"  278","line":"    //      bunch_idx_map = { {0}, {-1} } on rank 2"},
{"lineNum":"  279","line":"    //      bunch_idx_map = { {0}, {-1} } on rank 3"},
{"lineNum":"  280","line":"    //      bunch_idx_map = { {-1}, {0} } on rank 4"},
{"lineNum":"  281","line":"    //      bunch_idx_map = { {-1}, {0} } on rank 5"},
{"lineNum":"  282","line":"    //      bunch_idx_map = { {-1}, {0} } on rank 6"},
{"lineNum":"  283","line":"    //      bunch_idx_map = { {-1}, {0} } on rank 7"},
{"lineNum":"  284","line":"    //"},
{"lineNum":"  285","line":"    //"},
{"lineNum":"  286","line":"    //   2. num_bunches_pri = 2, num_bunches_sec = 2"},
{"lineNum":"  287","line":"    //      4 bunches, 4 ranks (n_ranks = n_bunches)"},
{"lineNum":"  288","line":"    //"},
{"lineNum":"  289","line":"    //      bunch_ranks = {"},
{"lineNum":"  290","line":"    //          { {0}, {1} },"},
{"lineNum":"  291","line":"    //          { {2}, {3} }"},
{"lineNum":"  292","line":"    //      }"},
{"lineNum":"  293","line":"    //"},
{"lineNum":"  294","line":"    //      Each of the bunch takes over a single rank from 0 to 3."},
{"lineNum":"  295","line":"    //"},
{"lineNum":"  296","line":"    //      bunch_idx_map = { { 0, -1}, {-1, -1} } on rank 0"},
{"lineNum":"  297","line":"    //      bunch_idx_map = { {-1,  0}, {-1, -1} } on rank 1"},
{"lineNum":"  298","line":"    //      bunch_idx_map = { {-1, -1}, { 0, -1} } on rank 2"},
{"lineNum":"  299","line":"    //      bunch_idx_map = { {-1, -1}, {-1,  0} } on rank 3"},
{"lineNum":"  300","line":"    //"},
{"lineNum":"  301","line":"    //"},
{"lineNum":"  302","line":"    //   3. num_bunches_pri = 2, num_bunches_sec = 2"},
{"lineNum":"  303","line":"    //      4 bunches, 2 ranks (n_ranks < n_bunches)"},
{"lineNum":"  304","line":"    //"},
{"lineNum":"  305","line":"    //      bunch_ranks = {"},
{"lineNum":"  306","line":"    //          { {0}, {0} },"},
{"lineNum":"  307","line":"    //          { {1], {1} }"},
{"lineNum":"  308","line":"    //      }"},
{"lineNum":"  309","line":"    //"},
{"lineNum":"  310","line":"    //      The first two bunches reside on rank 0, and the next two"},
{"lineNum":"  311","line":"    //      on rank 1."},
{"lineNum":"  312","line":"    //"},
{"lineNum":"  313","line":"    //      bunch_idx_map = { { 0,  1}, {-1, -1} } on rank 0"},
{"lineNum":"  314","line":"    //      bunch_idx_map = { {-1, -1}, { 0,  1} } on rank 1"},
{"lineNum":"  315","line":"    //"},
{"lineNum":"  316","line":"    //   4. num_bunches_pri = 4, num_bunches_sec = 2"},
{"lineNum":"  317","line":"    //      6 bunches, 3 ranks (n_ranks < n_bunches)"},
{"lineNum":"  318","line":"    //"},
{"lineNum":"  319","line":"    //      bunch_ranks = {"},
{"lineNum":"  320","line":"    //          { {0}, {0}, {1}, {1} },"},
{"lineNum":"  321","line":"    //          { {2}, {2} }"},
{"lineNum":"  322","line":"    //      }"},
{"lineNum":"  323","line":"    //"},
{"lineNum":"  324","line":"    //      bunch_idx_map = { { 0,  1, -1, -1}, {-1, -1} } on rank 0"},
{"lineNum":"  325","line":"    //      bunch_idx_map = { {-1, -1,  0,  1}, {-1, -1} } on rank 1"},
{"lineNum":"  326","line":"    //      bunch_idx_map = { {-1, -1, -1, -1}, { 0,  1} } on rank 2"},
{"lineNum":"  327","line":"    //"},
{"lineNum":"  328","line":"}","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  329","line":""},
{"lineNum":"  330","line":""},
{"lineNum":"  331","line":"Bunch_simulator::Bunch_simulator("},
{"lineNum":"  332","line":"        Bunch_train && pt,"},
{"lineNum":"  333","line":"        Bunch_train && st,"},
{"lineNum":"  334","line":"        std::shared_ptr<Commxx> const& comm )"},
{"lineNum":"  335","line":"    : uuid(impl::generate_uuid_v4())","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  336","line":"    , comm(std::move(comm))"},
{"lineNum":"  337","line":"    , trains{std::move(pt), std::move(st)}"},
{"lineNum":"  338","line":"    , diags_step_period()"},
{"lineNum":"  339","line":"    , diags_turn_listed()"},
{"lineNum":"  340","line":"    , diags_element()"},
{"lineNum":"  341","line":"    , prop_actions()"},
{"lineNum":"  342","line":"    , prop_actions_step_end()"},
{"lineNum":"  343","line":"    , prop_actions_turn_end()"},
{"lineNum":"  344","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  345","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  346","line":""},
{"lineNum":"  347","line":"int"},
{"lineNum":"  348","line":"Bunch_simulator::get_bunch_array_idx(int train, int bunch) const"},
{"lineNum":"  349","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  350","line":"    if (train > 1) return -1;","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  351","line":"    if (bunch >= trains[train].get_num_bunches()) return -1;","class":"lineNoCov","hits":"0","possible_hits":"8",},
{"lineNum":"  352","line":""},
{"lineNum":"  353","line":"    return trains[train].get_array_idx_of_bunch(bunch);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  354","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  355","line":""},
{"lineNum":"  356","line":"bool"},
{"lineNum":"  357","line":"Bunch_simulator::has_local_bunch(size_t train, size_t bunch) const"},
{"lineNum":"  358","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  359","line":"    return get_bunch_array_idx(train, bunch) != -1;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  360","line":"}"},
{"lineNum":"  361","line":""},
{"lineNum":"  362","line":"Bunch &"},
{"lineNum":"  363","line":"Bunch_simulator::get_bunch(size_t train, size_t bunch)"},
{"lineNum":"  364","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  365","line":"    auto idx = get_bunch_array_idx(train, bunch);"},
{"lineNum":"  366","line":"    if (idx == -1) throw std::runtime_error(\"bunch not avaialble on the rank\");","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  367","line":"    return trains[train][idx];","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  368","line":"}"},
{"lineNum":"  369","line":""},
{"lineNum":"  370","line":"Bunch const&"},
{"lineNum":"  371","line":"Bunch_simulator::get_bunch(size_t train, size_t bunch) const"},
{"lineNum":"  372","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  373","line":"    auto idx = get_bunch_array_idx(train, bunch);"},
{"lineNum":"  374","line":"    if (idx == -1) throw std::runtime_error(\"bunch not avaialble on the rank\");","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  375","line":"    return trains[train][idx];","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  376","line":"}"},
{"lineNum":"  377","line":""},
{"lineNum":"  378","line":"std::vector<int>"},
{"lineNum":"  379","line":"Bunch_simulator::get_bunch_ranks(size_t train, size_t bunch) const"},
{"lineNum":"  380","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  381","line":"    int rank_per_bunch = std::ceil( 1.0 * comm->size() /","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  382","line":"        (trains[0].get_num_bunches() + trains[1].get_num_bunches()) );","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  383","line":""},
{"lineNum":"  384","line":"    std::vector<int> ranks(rank_per_bunch);"},
{"lineNum":"  385","line":"    std::iota(ranks.begin(), ranks.end(), bunch*rank_per_bunch);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  386","line":""},
{"lineNum":"  387","line":"    return ranks;"},
{"lineNum":"  388","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  389","line":""},
{"lineNum":"  390","line":"void"},
{"lineNum":"  391","line":"Bunch_simulator::diag_action_step_and_turn(int turn_num, int step_num)"},
{"lineNum":"  392","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  393","line":"    for (auto const& dt : diags_step_period)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  394","line":"    {"},
{"lineNum":"  395","line":"        if (dt.trigger(turn_num, step_num))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  396","line":"        {"},
{"lineNum":"  397","line":"            trains[dt.train][dt.bunch]","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  398","line":"                .diag_update_and_write(dt.diag_id);"},
{"lineNum":"  399","line":"        }"},
{"lineNum":"  400","line":"    }"},
{"lineNum":"  401","line":""},
{"lineNum":"  402","line":"    for (auto const& dt : diags_turn_listed)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  403","line":"    {"},
{"lineNum":"  404","line":"        if (dt.trigger(turn_num, step_num))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  405","line":"        {"},
{"lineNum":"  406","line":"            trains[dt.train][dt.bunch]","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  407","line":"                .diag_update_and_write(dt.diag_id);"},
{"lineNum":"  408","line":"        }"},
{"lineNum":"  409","line":"    }"},
{"lineNum":"  410","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  411","line":""},
{"lineNum":"  412","line":"void"},
{"lineNum":"  413","line":"Bunch_simulator::diag_action_element(Lattice_element const& element)"},
{"lineNum":"  414","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  415","line":"    for (auto const& dt : diags_element)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  416","line":"    {"},
{"lineNum":"  417","line":"        if (dt.trigger(current_turn(), element))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  418","line":"        {"},
{"lineNum":"  419","line":"            trains[dt.train][dt.bunch]","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  420","line":"                .diag_update_and_write(dt.diag_id);"},
{"lineNum":"  421","line":"        }"},
{"lineNum":"  422","line":"    }"},
{"lineNum":"  423","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  424","line":""},
{"lineNum":"  425","line":""},
{"lineNum":"  426","line":"void"},
{"lineNum":"  427","line":"Bunch_simulator::diag_action_operator(Operator const& opr)"},
{"lineNum":"  428","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  429","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  430","line":""},
{"lineNum":"  431","line":"void"},
{"lineNum":"  432","line":"Bunch_simulator::diag_action_operation(Independent_operation const& opn)"},
{"lineNum":"  433","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  434","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  435","line":""},
{"lineNum":"  436","line":"void"},
{"lineNum":"  437","line":"Bunch_simulator::reg_prop_action_step_end(action_step_t fun)"},
{"lineNum":"  438","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  439","line":"    prop_actions_step_end.push_back(fun);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  440","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  441","line":""},
{"lineNum":"  442","line":"void"},
{"lineNum":"  443","line":"Bunch_simulator::reg_prop_action_turn_end(action_turn_t fun)"},
{"lineNum":"  444","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  445","line":"    prop_actions_turn_end.push_back(fun);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  446","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  447","line":""},
{"lineNum":"  448","line":"void"},
{"lineNum":"  449","line":"Bunch_simulator::reg_prop_action_step_end(action_data_step_t fun, void* data)"},
{"lineNum":"  450","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  451","line":"    using namespace std::placeholders;"},
{"lineNum":"  452","line":"    auto fun2 = std::bind(fun, _1, _2, _3, _4, data);"},
{"lineNum":"  453","line":"    prop_actions_step_end.push_back(fun2);"},
{"lineNum":"  454","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  455","line":""},
{"lineNum":"  456","line":"void"},
{"lineNum":"  457","line":"Bunch_simulator::reg_prop_action_turn_end(action_data_turn_t fun, void* data)"},
{"lineNum":"  458","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  459","line":"    using namespace std::placeholders;"},
{"lineNum":"  460","line":"    auto fun2 = std::bind(fun, _1, _2, _3, data);"},
{"lineNum":"  461","line":"    prop_actions_turn_end.push_back(fun2);"},
{"lineNum":"  462","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  463","line":""},
{"lineNum":"  464","line":"void"},
{"lineNum":"  465","line":"Bunch_simulator::prop_action_first(Lattice & lattice)"},
{"lineNum":"  466","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  467","line":"    if (prop_actions)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  468","line":"        prop_actions->first(*this, lattice);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  469","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  470","line":""},
{"lineNum":"  471","line":"void"},
{"lineNum":"  472","line":"Bunch_simulator::prop_action_step_end(Lattice & lattice, int turn, int step)"},
{"lineNum":"  473","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  474","line":"    if (prop_actions)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  475","line":"        prop_actions->step_end(*this, lattice, turn, step);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  476","line":""},
{"lineNum":"  477","line":"    for (auto const& action : prop_actions_step_end)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  478","line":"        action(*this, lattice, turn, step);"},
{"lineNum":"  479","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  480","line":""},
{"lineNum":"  481","line":"void"},
{"lineNum":"  482","line":"Bunch_simulator::prop_action_turn_end(Lattice & lattice, int turn)"},
{"lineNum":"  483","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  484","line":"    if (prop_actions)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  485","line":"        prop_actions->turn_end(*this, lattice, turn);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  486","line":""},
{"lineNum":"  487","line":"    for (auto const& action : prop_actions_turn_end)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  488","line":"        action(*this, lattice, turn);"},
{"lineNum":"  489","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  490","line":""},
{"lineNum":"  491","line":"void"},
{"lineNum":"  492","line":"Bunch_simulator::set_lattice_reference_particle(Reference_particle const& ref)"},
{"lineNum":"  493","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  494","line":"    for(auto & train : get_trains())"},
{"lineNum":"  495","line":"    {"},
{"lineNum":"  496","line":"        for(auto & bunch : train.get_bunches())","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  497","line":"        {"},
{"lineNum":"  498","line":"            bunch.set_design_reference_particle(ref);"},
{"lineNum":"  499","line":"        }"},
{"lineNum":"  500","line":"    }"},
{"lineNum":"  501","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  502","line":""},
{"lineNum":"  503","line":"namespace"},
{"lineNum":"  504","line":"{"},
{"lineNum":"  505","line":"    std::vector<Bunch const*>"},
{"lineNum":"  506","line":"    get_bunch_ptrs(std::array<Bunch_train, 2> const& trains)"},
{"lineNum":"  507","line":"    {"},
{"lineNum":"  508","line":"        std::vector<Bunch const*> bunches;"},
{"lineNum":"  509","line":""},
{"lineNum":"  510","line":"        for(auto const& t : trains)"},
{"lineNum":"  511","line":"            for(auto const& b : t.get_bunches())","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  512","line":"                bunches.push_back(&b);"},
{"lineNum":"  513","line":""},
{"lineNum":"  514","line":"        return bunches;"},
{"lineNum":"  515","line":"    }"},
{"lineNum":"  516","line":""},
{"lineNum":"  517","line":"    std::vector<Bunch*>"},
{"lineNum":"  518","line":"    get_bunch_ptrs(std::array<Bunch_train, 2>& trains)"},
{"lineNum":"  519","line":"    {"},
{"lineNum":"  520","line":"        std::vector<Bunch*> bunches;"},
{"lineNum":"  521","line":""},
{"lineNum":"  522","line":"        for(auto & t : trains)"},
{"lineNum":"  523","line":"            for(auto & b : t.get_bunches())","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  524","line":"                bunches.push_back(&b);"},
{"lineNum":"  525","line":""},
{"lineNum":"  526","line":"        return bunches;"},
{"lineNum":"  527","line":"    }"},
{"lineNum":"  528","line":"}"},
{"lineNum":"  529","line":""},
{"lineNum":"  530","line":"void"},
{"lineNum":"  531","line":"Bunch_simulator::save_checkpoint_particles(std::string const& fname) const"},
{"lineNum":"  532","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  533","line":"    Hdf5_file file(fname, Hdf5_file::truncate, *comm);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  534","line":"    auto bunches = get_bunch_ptrs(trains);"},
{"lineNum":"  535","line":""},
{"lineNum":"  536","line":"    for (int i=0; i<bunches.size(); ++i)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  537","line":"        bunches[i]->save_checkpoint_particles(file, i);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  538","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  539","line":""},
{"lineNum":"  540","line":"void"},
{"lineNum":"  541","line":"Bunch_simulator::load_checkpoint_particles(std::string const& fname)"},
{"lineNum":"  542","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  543","line":"    Hdf5_file file(fname, Hdf5_file::read_only, *comm);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  544","line":"    auto bunches = get_bunch_ptrs(trains);"},
{"lineNum":"  545","line":""},
{"lineNum":"  546","line":"    for (int i=0; i<bunches.size(); ++i)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  547","line":"        bunches[i]->load_checkpoint_particles(file, i);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  548","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  549","line":""},
{"lineNum":"  550","line":"void"},
{"lineNum":"  551","line":"Bunch_simulator::populate_6d("},
{"lineNum":"  552","line":"        uint64_t seed,"},
{"lineNum":"  553","line":"        const_karray1d means,"},
{"lineNum":"  554","line":"        const_karray2d_row covariances)"},
{"lineNum":"  555","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  556","line":"    karray1d limits(\"limits\", 6);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  557","line":"    for(int i=0; i<6; ++i) limits[i] = 0.0;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  558","line":""},
{"lineNum":"  559","line":"    populate_6d_truncated(","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  560","line":"            seed, means, covariances, limits);"},
{"lineNum":"  561","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  562","line":""},
{"lineNum":"  563","line":"void"},
{"lineNum":"  564","line":"Bunch_simulator::populate_6d_truncated("},
{"lineNum":"  565","line":"        uint64_t seed,"},
{"lineNum":"  566","line":"        const_karray1d means,"},
{"lineNum":"  567","line":"        const_karray2d_row covariances,"},
{"lineNum":"  568","line":"        const_karray1d limits)"},
{"lineNum":"  569","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  570","line":"    int train_idx = 0;"},
{"lineNum":"  571","line":""},
{"lineNum":"  572","line":"    for(auto & train : get_trains())","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  573","line":"    {"},
{"lineNum":"  574","line":"        for(auto & bunch : train.get_bunches())","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  575","line":"        {"},
{"lineNum":"  576","line":"            // assign unique particle ids across"},
{"lineNum":"  577","line":"            // the bunch simulator,"},
{"lineNum":"  578","line":"            bunch.assign_particle_ids(train_idx);"},
{"lineNum":"  579","line":""},
{"lineNum":"  580","line":"            // coordinated populate depends on the"},
{"lineNum":"  581","line":"            // global particle id"},
{"lineNum":"  582","line":"            populate_global_6d_truncated(seed,","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  583","line":"                    bunch, means, covariances, limits);"},
{"lineNum":"  584","line":"        }"},
{"lineNum":"  585","line":""},
{"lineNum":"  586","line":"        ++train_idx;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  587","line":"    }"},
{"lineNum":"  588","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  589","line":""},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 130, "covered" : 0,};
var merged_data = [];
