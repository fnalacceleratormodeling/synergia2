var data = {lines:[
{"lineNum":"    1","line":"// -*- C++ -*-"},
{"lineNum":"    2","line":"//===----------------------------------------------------------------------===//"},
{"lineNum":"    3","line":"//"},
{"lineNum":"    4","line":"// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions."},
{"lineNum":"    5","line":"// See https://llvm.org/LICENSE.txt for license information."},
{"lineNum":"    6","line":"// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception"},
{"lineNum":"    7","line":"//"},
{"lineNum":"    8","line":"//===----------------------------------------------------------------------===//"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"#ifndef _LIBCPP___ITERATOR_OSTREAMBUF_ITERATOR_H"},
{"lineNum":"   11","line":"#define _LIBCPP___ITERATOR_OSTREAMBUF_ITERATOR_H"},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"#include <__config>"},
{"lineNum":"   14","line":"#include <__iterator/iterator.h>"},
{"lineNum":"   15","line":"#include <__iterator/iterator_traits.h>"},
{"lineNum":"   16","line":"#include <iosfwd> // for forward declaration of basic_streambuf"},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)"},
{"lineNum":"   19","line":"#pragma GCC system_header"},
{"lineNum":"   20","line":"#endif"},
{"lineNum":"   21","line":""},
{"lineNum":"   22","line":"_LIBCPP_PUSH_MACROS"},
{"lineNum":"   23","line":"#include <__undef_macros>"},
{"lineNum":"   24","line":""},
{"lineNum":"   25","line":"_LIBCPP_BEGIN_NAMESPACE_STD"},
{"lineNum":"   26","line":""},
{"lineNum":"   27","line":"_LIBCPP_SUPPRESS_DEPRECATED_PUSH"},
{"lineNum":"   28","line":"template <class _CharT, class _Traits>"},
{"lineNum":"   29","line":"class _LIBCPP_TEMPLATE_VIS ostreambuf_iterator"},
{"lineNum":"   30","line":"#if _LIBCPP_STD_VER <= 14 || !defined(_LIBCPP_ABI_NO_ITERATOR_BASES)"},
{"lineNum":"   31","line":"    : public iterator<output_iterator_tag, void, void, void, void>"},
{"lineNum":"   32","line":"#endif"},
{"lineNum":"   33","line":"{"},
{"lineNum":"   34","line":"_LIBCPP_SUPPRESS_DEPRECATED_POP"},
{"lineNum":"   35","line":"public:"},
{"lineNum":"   36","line":"    typedef output_iterator_tag                 iterator_category;"},
{"lineNum":"   37","line":"    typedef void                                value_type;"},
{"lineNum":"   38","line":"#if _LIBCPP_STD_VER > 17"},
{"lineNum":"   39","line":"    typedef ptrdiff_t                           difference_type;"},
{"lineNum":"   40","line":"#else"},
{"lineNum":"   41","line":"    typedef void                                difference_type;"},
{"lineNum":"   42","line":"#endif"},
{"lineNum":"   43","line":"    typedef void                                pointer;"},
{"lineNum":"   44","line":"    typedef void                                reference;"},
{"lineNum":"   45","line":"    typedef _CharT                              char_type;"},
{"lineNum":"   46","line":"    typedef _Traits                             traits_type;"},
{"lineNum":"   47","line":"    typedef basic_streambuf<_CharT, _Traits>    streambuf_type;"},
{"lineNum":"   48","line":"    typedef basic_ostream<_CharT, _Traits>      ostream_type;"},
{"lineNum":"   49","line":""},
{"lineNum":"   50","line":"private:"},
{"lineNum":"   51","line":"    streambuf_type* __sbuf_;"},
{"lineNum":"   52","line":"public:"},
{"lineNum":"   53","line":"    _LIBCPP_INLINE_VISIBILITY ostreambuf_iterator(ostream_type& __s) _NOEXCEPT"},
{"lineNum":"   54","line":"        : __sbuf_(__s.rdbuf()) {}","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"   55","line":"    _LIBCPP_INLINE_VISIBILITY ostreambuf_iterator(streambuf_type* __s) _NOEXCEPT"},
{"lineNum":"   56","line":"        : __sbuf_(__s) {}"},
{"lineNum":"   57","line":"    _LIBCPP_INLINE_VISIBILITY ostreambuf_iterator& operator=(_CharT __c)"},
{"lineNum":"   58","line":"        {"},
{"lineNum":"   59","line":"            if (__sbuf_ && traits_type::eq_int_type(__sbuf_->sputc(__c), traits_type::eof()))"},
{"lineNum":"   60","line":"                __sbuf_ = nullptr;"},
{"lineNum":"   61","line":"            return *this;"},
{"lineNum":"   62","line":"        }"},
{"lineNum":"   63","line":"    _LIBCPP_INLINE_VISIBILITY ostreambuf_iterator& operator*()     {return *this;}"},
{"lineNum":"   64","line":"    _LIBCPP_INLINE_VISIBILITY ostreambuf_iterator& operator++()    {return *this;}"},
{"lineNum":"   65","line":"    _LIBCPP_INLINE_VISIBILITY ostreambuf_iterator& operator++(int) {return *this;}"},
{"lineNum":"   66","line":"    _LIBCPP_INLINE_VISIBILITY bool failed() const _NOEXCEPT {return __sbuf_ == nullptr;}","class":"lineNoCov","hits":"0","possible_hits":"11",},
{"lineNum":"   67","line":""},
{"lineNum":"   68","line":"    template <class _Ch, class _Tr>"},
{"lineNum":"   69","line":"    friend"},
{"lineNum":"   70","line":"    _LIBCPP_HIDDEN"},
{"lineNum":"   71","line":"    ostreambuf_iterator<_Ch, _Tr>"},
{"lineNum":"   72","line":"    __pad_and_output(ostreambuf_iterator<_Ch, _Tr> __s,"},
{"lineNum":"   73","line":"                     const _Ch* __ob, const _Ch* __op, const _Ch* __oe,"},
{"lineNum":"   74","line":"                     ios_base& __iob, _Ch __fl);"},
{"lineNum":"   75","line":"};"},
{"lineNum":"   76","line":""},
{"lineNum":"   77","line":"_LIBCPP_END_NAMESPACE_STD"},
{"lineNum":"   78","line":""},
{"lineNum":"   79","line":"_LIBCPP_POP_MACROS"},
{"lineNum":"   80","line":""},
{"lineNum":"   81","line":"#endif // _LIBCPP___ITERATOR_OSTREAMBUF_ITERATOR_H"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 2, "covered" : 0,};
var merged_data = [];
