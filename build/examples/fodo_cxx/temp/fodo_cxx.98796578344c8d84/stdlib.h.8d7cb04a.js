var data = {lines:[
{"lineNum":"    1","line":"// -*- C++ -*-"},
{"lineNum":"    2","line":"//===--------------------------- stdlib.h ---------------------------------===//"},
{"lineNum":"    3","line":"//"},
{"lineNum":"    4","line":"// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions."},
{"lineNum":"    5","line":"// See https://llvm.org/LICENSE.txt for license information."},
{"lineNum":"    6","line":"// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception"},
{"lineNum":"    7","line":"//"},
{"lineNum":"    8","line":"//===----------------------------------------------------------------------===//"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"#if defined(__need_malloc_and_calloc)"},
{"lineNum":"   11","line":""},
{"lineNum":"   12","line":"#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)"},
{"lineNum":"   13","line":"#pragma GCC system_header"},
{"lineNum":"   14","line":"#endif"},
{"lineNum":"   15","line":""},
{"lineNum":"   16","line":"#include_next <stdlib.h>"},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"#elif !defined(_LIBCPP_STDLIB_H)"},
{"lineNum":"   19","line":"#define _LIBCPP_STDLIB_H"},
{"lineNum":"   20","line":""},
{"lineNum":"   21","line":"/*"},
{"lineNum":"   22","line":"    stdlib.h synopsis"},
{"lineNum":"   23","line":""},
{"lineNum":"   24","line":"Macros:"},
{"lineNum":"   25","line":""},
{"lineNum":"   26","line":"    EXIT_FAILURE"},
{"lineNum":"   27","line":"    EXIT_SUCCESS"},
{"lineNum":"   28","line":"    MB_CUR_MAX"},
{"lineNum":"   29","line":"    NULL"},
{"lineNum":"   30","line":"    RAND_MAX"},
{"lineNum":"   31","line":""},
{"lineNum":"   32","line":"Types:"},
{"lineNum":"   33","line":""},
{"lineNum":"   34","line":"    size_t"},
{"lineNum":"   35","line":"    div_t"},
{"lineNum":"   36","line":"    ldiv_t"},
{"lineNum":"   37","line":"    lldiv_t                                                               // C99"},
{"lineNum":"   38","line":""},
{"lineNum":"   39","line":"double    atof (const char* nptr);"},
{"lineNum":"   40","line":"int       atoi (const char* nptr);"},
{"lineNum":"   41","line":"long      atol (const char* nptr);"},
{"lineNum":"   42","line":"long long atoll(const char* nptr);                                        // C99"},
{"lineNum":"   43","line":"double             strtod  (const char* restrict nptr, char** restrict endptr);"},
{"lineNum":"   44","line":"float              strtof  (const char* restrict nptr, char** restrict endptr); // C99"},
{"lineNum":"   45","line":"long double        strtold (const char* restrict nptr, char** restrict endptr); // C99"},
{"lineNum":"   46","line":"long               strtol  (const char* restrict nptr, char** restrict endptr, int base);"},
{"lineNum":"   47","line":"long long          strtoll (const char* restrict nptr, char** restrict endptr, int base); // C99"},
{"lineNum":"   48","line":"unsigned long      strtoul (const char* restrict nptr, char** restrict endptr, int base);"},
{"lineNum":"   49","line":"unsigned long long strtoull(const char* restrict nptr, char** restrict endptr, int base); // C99"},
{"lineNum":"   50","line":"int rand(void);"},
{"lineNum":"   51","line":"void srand(unsigned int seed);"},
{"lineNum":"   52","line":"void* calloc(size_t nmemb, size_t size);"},
{"lineNum":"   53","line":"void free(void* ptr);"},
{"lineNum":"   54","line":"void* malloc(size_t size);"},
{"lineNum":"   55","line":"void* realloc(void* ptr, size_t size);"},
{"lineNum":"   56","line":"void abort(void);"},
{"lineNum":"   57","line":"int atexit(void (*func)(void));"},
{"lineNum":"   58","line":"void exit(int status);"},
{"lineNum":"   59","line":"void _Exit(int status);"},
{"lineNum":"   60","line":"char* getenv(const char* name);"},
{"lineNum":"   61","line":"int system(const char* string);"},
{"lineNum":"   62","line":"void* bsearch(const void* key, const void* base, size_t nmemb, size_t size,"},
{"lineNum":"   63","line":"              int (*compar)(const void *, const void *));"},
{"lineNum":"   64","line":"void qsort(void* base, size_t nmemb, size_t size,"},
{"lineNum":"   65","line":"           int (*compar)(const void *, const void *));"},
{"lineNum":"   66","line":"int         abs(      int j);"},
{"lineNum":"   67","line":"long        abs(     long j);"},
{"lineNum":"   68","line":"long long   abs(long long j);                                             // C++0X"},
{"lineNum":"   69","line":"long       labs(     long j);"},
{"lineNum":"   70","line":"long long llabs(long long j);                                             // C99"},
{"lineNum":"   71","line":"div_t     div(      int numer,       int denom);"},
{"lineNum":"   72","line":"ldiv_t    div(     long numer,      long denom);"},
{"lineNum":"   73","line":"lldiv_t   div(long long numer, long long denom);                          // C++0X"},
{"lineNum":"   74","line":"ldiv_t   ldiv(     long numer,      long denom);"},
{"lineNum":"   75","line":"lldiv_t lldiv(long long numer, long long denom);                          // C99"},
{"lineNum":"   76","line":"int mblen(const char* s, size_t n);"},
{"lineNum":"   77","line":"int mbtowc(wchar_t* restrict pwc, const char* restrict s, size_t n);"},
{"lineNum":"   78","line":"int wctomb(char* s, wchar_t wchar);"},
{"lineNum":"   79","line":"size_t mbstowcs(wchar_t* restrict pwcs, const char* restrict s, size_t n);"},
{"lineNum":"   80","line":"size_t wcstombs(char* restrict s, const wchar_t* restrict pwcs, size_t n);"},
{"lineNum":"   81","line":"int at_quick_exit(void (*func)(void))                                     // C++11"},
{"lineNum":"   82","line":"void quick_exit(int status);                                              // C++11"},
{"lineNum":"   83","line":"void *aligned_alloc(size_t alignment, size_t size);                       // C11"},
{"lineNum":"   84","line":""},
{"lineNum":"   85","line":"*/"},
{"lineNum":"   86","line":""},
{"lineNum":"   87","line":"#include <__config>"},
{"lineNum":"   88","line":""},
{"lineNum":"   89","line":"#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)"},
{"lineNum":"   90","line":"#pragma GCC system_header"},
{"lineNum":"   91","line":"#endif"},
{"lineNum":"   92","line":""},
{"lineNum":"   93","line":"#include_next <stdlib.h>"},
{"lineNum":"   94","line":""},
{"lineNum":"   95","line":"#ifdef __cplusplus"},
{"lineNum":"   96","line":"extern \"C++\" {"},
{"lineNum":"   97","line":"// abs"},
{"lineNum":"   98","line":""},
{"lineNum":"   99","line":"#undef abs"},
{"lineNum":"  100","line":"#undef labs"},
{"lineNum":"  101","line":"#ifndef _LIBCPP_HAS_NO_LONG_LONG"},
{"lineNum":"  102","line":"#undef llabs"},
{"lineNum":"  103","line":"#endif"},
{"lineNum":"  104","line":""},
{"lineNum":"  105","line":"// MSVCRT already has the correct prototype in <stdlib.h> if __cplusplus is defined"},
{"lineNum":"  106","line":"#if !defined(_LIBCPP_MSVCRT) && !defined(__sun__)"},
{"lineNum":"  107","line":"inline _LIBCPP_INLINE_VISIBILITY long abs(long __x) _NOEXCEPT {"},
{"lineNum":"  108","line":"  return __builtin_labs(__x);"},
{"lineNum":"  109","line":"}"},
{"lineNum":"  110","line":"#ifndef _LIBCPP_HAS_NO_LONG_LONG"},
{"lineNum":"  111","line":"inline _LIBCPP_INLINE_VISIBILITY long long abs(long long __x) _NOEXCEPT {"},
{"lineNum":"  112","line":"  return __builtin_llabs(__x);"},
{"lineNum":"  113","line":"}"},
{"lineNum":"  114","line":"#endif // _LIBCPP_HAS_NO_LONG_LONG"},
{"lineNum":"  115","line":"#endif // !defined(_LIBCPP_MSVCRT) && !defined(__sun__)"},
{"lineNum":"  116","line":""},
{"lineNum":"  117","line":"#if !defined(__sun__)"},
{"lineNum":"  118","line":"inline _LIBCPP_INLINE_VISIBILITY float abs(float __lcpp_x) _NOEXCEPT {"},
{"lineNum":"  119","line":"  return __builtin_fabsf(__lcpp_x); // Use builtins to prevent needing math.h","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  120","line":"}"},
{"lineNum":"  121","line":""},
{"lineNum":"  122","line":"inline _LIBCPP_INLINE_VISIBILITY double abs(double __lcpp_x) _NOEXCEPT {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  123","line":"  return __builtin_fabs(__lcpp_x);","class":"lineNoCov","hits":"0","possible_hits":"214",},
{"lineNum":"  124","line":"}"},
{"lineNum":"  125","line":""},
{"lineNum":"  126","line":"inline _LIBCPP_INLINE_VISIBILITY long double"},
{"lineNum":"  127","line":"abs(long double __lcpp_x) _NOEXCEPT {"},
{"lineNum":"  128","line":"  return __builtin_fabsl(__lcpp_x);"},
{"lineNum":"  129","line":"}"},
{"lineNum":"  130","line":"#endif // !defined(__sun__)"},
{"lineNum":"  131","line":""},
{"lineNum":"  132","line":"// div"},
{"lineNum":"  133","line":""},
{"lineNum":"  134","line":"#undef div"},
{"lineNum":"  135","line":"#undef ldiv"},
{"lineNum":"  136","line":"#ifndef _LIBCPP_HAS_NO_LONG_LONG"},
{"lineNum":"  137","line":"#undef lldiv"},
{"lineNum":"  138","line":"#endif"},
{"lineNum":"  139","line":""},
{"lineNum":"  140","line":"// MSVCRT already has the correct prototype in <stdlib.h> if __cplusplus is defined"},
{"lineNum":"  141","line":"#if !defined(_LIBCPP_MSVCRT) && !defined(__sun__)"},
{"lineNum":"  142","line":"inline _LIBCPP_INLINE_VISIBILITY ldiv_t div(long __x, long __y) _NOEXCEPT {"},
{"lineNum":"  143","line":"  return ::ldiv(__x, __y);"},
{"lineNum":"  144","line":"}"},
{"lineNum":"  145","line":"#ifndef _LIBCPP_HAS_NO_LONG_LONG"},
{"lineNum":"  146","line":"inline _LIBCPP_INLINE_VISIBILITY lldiv_t div(long long __x,"},
{"lineNum":"  147","line":"                                             long long __y) _NOEXCEPT {"},
{"lineNum":"  148","line":"  return ::lldiv(__x, __y);"},
{"lineNum":"  149","line":"}"},
{"lineNum":"  150","line":"#endif // _LIBCPP_HAS_NO_LONG_LONG"},
{"lineNum":"  151","line":"#endif // _LIBCPP_MSVCRT / __sun__"},
{"lineNum":"  152","line":"} // extern \"C++\""},
{"lineNum":"  153","line":"#endif // __cplusplus"},
{"lineNum":"  154","line":""},
{"lineNum":"  155","line":"#endif // _LIBCPP_STDLIB_H"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 3, "covered" : 0,};
var merged_data = [];
