var data = {lines:[
{"lineNum":"    1","line":"#ifndef SYNERGIA_LATTICE_MAD8_H"},
{"lineNum":"    2","line":"#define SYNERGIA_LATTICE_MAD8_H"},
{"lineNum":"    3","line":""},
{"lineNum":"    4","line":"#include <string>"},
{"lineNum":"    5","line":"#include <vector>"},
{"lineNum":"    6","line":"#include <map>"},
{"lineNum":"    7","line":""},
{"lineNum":"    8","line":"#include <boost/any.hpp>"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"#include \"mx_expr.h\""},
{"lineNum":"   11","line":""},
{"lineNum":"   12","line":"namespace synergia"},
{"lineNum":"   13","line":"{"},
{"lineNum":"   14","line":"  struct MadX_value;"},
{"lineNum":"   15","line":"  class  MadX_command;"},
{"lineNum":"   16","line":"  class  MadX_line;"},
{"lineNum":"   17","line":"  class  MadX_sequence;"},
{"lineNum":"   18","line":"  class  MadX;"},
{"lineNum":"   19","line":""},
{"lineNum":"   20","line":"  enum MadX_value_type"},
{"lineNum":"   21","line":"  { NONE"},
{"lineNum":"   22","line":"  , BOOLEAN"},
{"lineNum":"   23","line":"  , INT"},
{"lineNum":"   24","line":"  , DOUBLE"},
{"lineNum":"   25","line":"  , NUMBER"},
{"lineNum":"   26","line":"  , STRING"},
{"lineNum":"   27","line":"  , DEFFERED_NUMBER"},
{"lineNum":"   28","line":"  , ARRAY"},
{"lineNum":"   29","line":"  , DEFFERED_ARRAY };"},
{"lineNum":"   30","line":""},
{"lineNum":"   31","line":"  enum MadX_command_type"},
{"lineNum":"   32","line":"  { NULL_COMMAND"},
{"lineNum":"   33","line":"  , ELEMENT"},
{"lineNum":"   34","line":"  , ELEMENT_REF"},
{"lineNum":"   35","line":"  , EXECUTABLE"},
{"lineNum":"   36","line":"  , SEQUENCE };"},
{"lineNum":"   37","line":""},
{"lineNum":"   38","line":"  enum MadX_sequence_refer"},
{"lineNum":"   39","line":"  { SEQ_REF_ENTRY"},
{"lineNum":"   40","line":"  , SEQ_REF_CENTRE"},
{"lineNum":"   41","line":"  , SEQ_REF_EXIT };"},
{"lineNum":"   42","line":""},
{"lineNum":"   43","line":"  enum MadX_entry_type"},
{"lineNum":"   44","line":"  { ENTRY_NULL"},
{"lineNum":"   45","line":"  , ENTRY_VARIABLE"},
{"lineNum":"   46","line":"  , ENTRY_COMMAND"},
{"lineNum":"   47","line":"  , ENTRY_LINE"},
{"lineNum":"   48","line":"  , ENTRY_SEQUENCE };"},
{"lineNum":"   49","line":"}"},
{"lineNum":"   50","line":""},
{"lineNum":"   51","line":"struct synergia::MadX_value","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"   52","line":"{"},
{"lineNum":"   53","line":"  boost::any      value;"},
{"lineNum":"   54","line":"  MadX_value_type type;"},
{"lineNum":"   55","line":"};"},
{"lineNum":"   56","line":""},
{"lineNum":"   57","line":"typedef std::string                              string_t;"},
{"lineNum":"   58","line":"typedef std::map<string_t, synergia::MadX_value> value_map_t;"},
{"lineNum":"   59","line":""},
{"lineNum":"   60","line":"class synergia::MadX_command","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"   61","line":"{"},
{"lineNum":"   62","line":"public:"},
{"lineNum":"   63","line":"  MadX_command(MadX * parent = NULL)"},
{"lineNum":"   64","line":"    : mx(parent)"},
{"lineNum":"   65","line":"    , name_()"},
{"lineNum":"   66","line":"    , label_()"},
{"lineNum":"   67","line":"    , type_(NULL_COMMAND)"},
{"lineNum":"   68","line":"    , attributes_()"},
{"lineNum":"   69","line":"  { }"},
{"lineNum":"   70","line":""},
{"lineNum":"   71","line":"  // accessor"},
{"lineNum":"   72","line":"  string_t name() const;"},
{"lineNum":"   73","line":"  string_t label() const;"},
{"lineNum":"   74","line":"  size_t   attribute_count() const;"},
{"lineNum":"   75","line":"  std::vector<string_t>"},
{"lineNum":"   76","line":"           attribute_names() const;"},
{"lineNum":"   77","line":"  MadX_value_type"},
{"lineNum":"   78","line":"           attribute_type(string_t const & name) const;"},
{"lineNum":"   79","line":"  string_t attribute_as_string(string_t const & name) const;"},
{"lineNum":"   80","line":"  string_t attribute_as_string(string_t const & name, string_t const & def) const;"},
{"lineNum":"   81","line":"  double   attribute_as_number(string_t const & name) const;"},
{"lineNum":"   82","line":"  double   attribute_as_number(string_t const & name, double def) const;"},
{"lineNum":"   83","line":"  bool     attribute_as_boolean(string_t const & name) const;"},
{"lineNum":"   84","line":"  std::vector<double> attribute_as_number_seq(string_t const & name) const;"},
{"lineNum":"   85","line":"  std::vector<double> attribute_as_number_seq(string_t const & name, double def) const;"},
{"lineNum":"   86","line":"  MadX_command_type type() const;"},
{"lineNum":"   87","line":"  bool is_element() const;"},
{"lineNum":"   88","line":"  bool is_reference() const;"},
{"lineNum":"   89","line":"  bool is_command() const;"},
{"lineNum":"   90","line":""},
{"lineNum":"   91","line":"  // modifier"},
{"lineNum":"   92","line":"  void set_parent(MadX const & parent);"},
{"lineNum":"   93","line":"  void set_name(string_t const & name, MadX_command_type cmd_type);"},
{"lineNum":"   94","line":"  void set_label(string_t const & label);"},
{"lineNum":"   95","line":"  void insert_attribute(string_t const & name, string_t const & val);"},
{"lineNum":"   96","line":"  void insert_attribute(string_t const & name, mx_expr  const & val);"},
{"lineNum":"   97","line":"  void insert_attribute(string_t const & name, mx_exprs const & val);"},
{"lineNum":"   98","line":"  void merge_with_overwrite(MadX_command const & other);"},
{"lineNum":"   99","line":"  void merge(MadX_command const & other);"},
{"lineNum":"  100","line":""},
{"lineNum":"  101","line":"private:"},
{"lineNum":"  102","line":"  const MadX *      mx;"},
{"lineNum":"  103","line":"  string_t          name_;"},
{"lineNum":"  104","line":"  string_t          label_;"},
{"lineNum":"  105","line":"  MadX_command_type type_;"},
{"lineNum":"  106","line":"  value_map_t       attributes_;"},
{"lineNum":"  107","line":"};"},
{"lineNum":"  108","line":""},
{"lineNum":"  109","line":"typedef std::pair<string_t, synergia::MadX_command> labeled_cmd_t;"},
{"lineNum":"  110","line":"typedef std::vector<labeled_cmd_t>                  labeled_cmd_v_t;"},
{"lineNum":"  111","line":"typedef std::vector<synergia::MadX_command>         commands_v_t;"},
{"lineNum":"  112","line":"typedef std::map<string_t, synergia::MadX_command>  commands_m_t;"},
{"lineNum":"  113","line":""},
{"lineNum":"  114","line":"class synergia::MadX_line","class":"lineNoCov","hits":"0","possible_hits":"7",},
{"lineNum":"  115","line":"{"},
{"lineNum":"  116","line":"public:"},
{"lineNum":"  117","line":"  MadX_line(MadX const & parent)"},
{"lineNum":"  118","line":"    : parent(parent), elements_() { }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  119","line":""},
{"lineNum":"  120","line":"  // accessor"},
{"lineNum":"  121","line":"  size_t       element_count() const;"},
{"lineNum":"  122","line":"  string_t     element_name(size_t idx) const;"},
{"lineNum":"  123","line":"  MadX_command element(size_t idx, bool resolve=true) const;"},
{"lineNum":"  124","line":""},
{"lineNum":"  125","line":"  // modifier"},
{"lineNum":"  126","line":"  void insert_element(string_t const & ele);"},
{"lineNum":"  127","line":""},
{"lineNum":"  128","line":"  // print"},
{"lineNum":"  129","line":"  void print() const;"},
{"lineNum":"  130","line":""},
{"lineNum":"  131","line":"private:"},
{"lineNum":"  132","line":""},
{"lineNum":"  133","line":"  MadX const & parent;"},
{"lineNum":"  134","line":"  std::vector<string_t>  elements_;"},
{"lineNum":"  135","line":"};"},
{"lineNum":"  136","line":""},
{"lineNum":"  137","line":"typedef std::map<string_t, synergia::MadX_line>    lines_m_t;"},
{"lineNum":"  138","line":""},
{"lineNum":"  139","line":"class synergia::MadX_sequence","class":"lineNoCov","hits":"0","possible_hits":"8",},
{"lineNum":"  140","line":"{"},
{"lineNum":"  141","line":"private:"},
{"lineNum":"  142","line":"  struct seq_element","class":"lineNoCov","hits":"0","possible_hits":"8",},
{"lineNum":"  143","line":"  {"},
{"lineNum":"  144","line":"    seq_element(std::string const & label_, double at_, std::string const & from_)"},
{"lineNum":"  145","line":"      : label(label_), from_str(from_), at(at_), from(0.0) { }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  146","line":""},
{"lineNum":"  147","line":"    std::string label;"},
{"lineNum":"  148","line":"    std::string from_str;"},
{"lineNum":"  149","line":"    double      at;"},
{"lineNum":"  150","line":"    double      from;"},
{"lineNum":"  151","line":"  };"},
{"lineNum":"  152","line":""},
{"lineNum":"  153","line":"  typedef std::vector<seq_element> seq_ele_v_t;"},
{"lineNum":"  154","line":""},
{"lineNum":"  155","line":"public:"},
{"lineNum":"  156","line":"  MadX_sequence(MadX const & parent)"},
{"lineNum":"  157","line":"    : parent(parent), lbl(), l(0.0), r(SEQ_REF_CENTRE), rp(), seq_() { }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  158","line":""},
{"lineNum":"  159","line":"  // accessor"},
{"lineNum":"  160","line":"  string_t label() const;"},
{"lineNum":"  161","line":"  double   length() const;"},
{"lineNum":"  162","line":"  size_t   element_count() const;"},
{"lineNum":"  163","line":"  MadX_command      element(size_t idx) const;"},
{"lineNum":"  164","line":"  double            element_at(size_t idx) const;"},
{"lineNum":"  165","line":"  double            element_from(size_t idx) const;"},
{"lineNum":"  166","line":"  string_t          element_label(size_t idx) const;"},
{"lineNum":"  167","line":"  MadX_entry_type   element_type(size_t idx) const;"},
{"lineNum":"  168","line":"  MadX_sequence_refer refer() const;"},
{"lineNum":"  169","line":"  string_t            refpos() const;"},
{"lineNum":"  170","line":""},
{"lineNum":"  171","line":"  // modifier"},
{"lineNum":"  172","line":"  void set_label(string_t const & label);"},
{"lineNum":"  173","line":"  void set_length(double length);"},
{"lineNum":"  174","line":"  void set_refer(MadX_sequence_refer ref);"},
{"lineNum":"  175","line":"  void set_refpos(string_t const & refpos);"},
{"lineNum":"  176","line":"  void add_element(string_t const & label, double at, string_t const & from);"},
{"lineNum":"  177","line":"  void finalize();"},
{"lineNum":"  178","line":"  void reset();"},
{"lineNum":"  179","line":""},
{"lineNum":"  180","line":"  // print"},
{"lineNum":"  181","line":"  void print() const;"},
{"lineNum":"  182","line":""},
{"lineNum":"  183","line":"private:"},
{"lineNum":"  184","line":"  MadX const & parent;"},
{"lineNum":"  185","line":"  string_t lbl;"},
{"lineNum":"  186","line":"  double l;"},
{"lineNum":"  187","line":"  MadX_sequence_refer r;"},
{"lineNum":"  188","line":"  string_t rp;"},
{"lineNum":"  189","line":"  seq_ele_v_t   seq_;"},
{"lineNum":"  190","line":"};"},
{"lineNum":"  191","line":""},
{"lineNum":"  192","line":"typedef std::map<string_t, synergia::MadX_sequence> sequences_m_t;"},
{"lineNum":"  193","line":""},
{"lineNum":"  194","line":"class synergia::MadX","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  195","line":"{"},
{"lineNum":"  196","line":"public:"},
{"lineNum":"  197","line":"  MadX()"},
{"lineNum":"  198","line":"    : variables_()"},
{"lineNum":"  199","line":"    , cmd_seq_()"},
{"lineNum":"  200","line":"    , cmd_map_()"},
{"lineNum":"  201","line":"    , lines_()"},
{"lineNum":"  202","line":"    , seqs_()"},
{"lineNum":"  203","line":"    , cur_seq_(*this)"},
{"lineNum":"  204","line":"    , building_seq_(false)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  205","line":"  { }"},
{"lineNum":"  206","line":""},
{"lineNum":"  207","line":"  // accessor"},
{"lineNum":"  208","line":"  string_t variable_as_string (string_t const & name) const;"},
{"lineNum":"  209","line":"  string_t variable_as_string (string_t const & name, string_t const & def) const;"},
{"lineNum":"  210","line":"  double   variable_as_number (string_t const & name) const;"},
{"lineNum":"  211","line":"  double   variable_as_number (string_t const & name, double def) const;"},
{"lineNum":"  212","line":"  bool     variable_as_boolean(string_t const & name) const;"},
{"lineNum":"  213","line":"  std::vector<double> variable_as_number_seq(string_t const & name) const;"},
{"lineNum":"  214","line":"  std::vector<double> variable_as_number_seq(string_t const & name, double def) const;"},
{"lineNum":"  215","line":""},
{"lineNum":"  216","line":"  size_t command_count() const;  // un-labeled commands"},
{"lineNum":"  217","line":"  std::vector<string_t > commands() const;"},
{"lineNum":"  218","line":"  MadX_command command(size_t idx, bool resolve = true) const;"},
{"lineNum":"  219","line":""},
{"lineNum":"  220","line":"  size_t label_count() const;    // labeled commands"},
{"lineNum":"  221","line":"  std::vector<string_t > command_labels() const;"},
{"lineNum":"  222","line":"  MadX_command command(string_t const & l, bool resolve = true) const;"},
{"lineNum":"  223","line":""},
{"lineNum":"  224","line":"  size_t line_count() const;     // labeled lines"},
{"lineNum":"  225","line":"  std::vector<string_t > line_labels() const;"},
{"lineNum":"  226","line":"  MadX_line const & line(string_t const & l) const;"},
{"lineNum":"  227","line":""},
{"lineNum":"  228","line":"  size_t sequence_count() const; // labeled sequences"},
{"lineNum":"  229","line":"  std::vector<string_t> sequence_labels() const;"},
{"lineNum":"  230","line":"  MadX_sequence const & sequence(string_t const & s) const;"},
{"lineNum":"  231","line":"  MadX_sequence const & current_sequence( ) const;"},
{"lineNum":"  232","line":"  MadX_sequence & current_sequence( );"},
{"lineNum":"  233","line":""},
{"lineNum":"  234","line":"  bool building_sequence() const;"},
{"lineNum":"  235","line":""},
{"lineNum":"  236","line":"  MadX_entry_type entry_type(string_t const & entry) const;"},
{"lineNum":"  237","line":""},
{"lineNum":"  238","line":"  void print() const;"},
{"lineNum":"  239","line":""},
{"lineNum":"  240","line":"  // modifier"},
{"lineNum":"  241","line":"  void insert_variable(string_t const & name, string_t const & value);"},
{"lineNum":"  242","line":"  void insert_variable(string_t const & name, mx_expr  const & value);"},
{"lineNum":"  243","line":"  void insert_variable(string_t const & name, mx_exprs const & value);"},
{"lineNum":"  244","line":"  void insert_label   (string_t const & name, MadX_command const & cmd);"},
{"lineNum":"  245","line":"  void insert_line    (string_t const & name, MadX_line const & line);"},
{"lineNum":"  246","line":"  void insert_command (MadX_command const & cmd);"},
{"lineNum":"  247","line":"  void fuse_command   (string_t const & name, MadX_command const & cmd);"},
{"lineNum":"  248","line":"                          // fuse all attr in cmd into label with the provided name"},
{"lineNum":"  249","line":""},
{"lineNum":"  250","line":"  void start_sequence( string_t const & label, double length"},
{"lineNum":"  251","line":"                     , string_t const & refer, string_t const & refpos );"},
{"lineNum":"  252","line":"  void append_sequence_element( string_t const & label, double at"},
{"lineNum":"  253","line":"                              , string_t const & from );"},
{"lineNum":"  254","line":"  void end_sequence();"},
{"lineNum":"  255","line":""},
{"lineNum":"  256","line":"  // alias"},
{"lineNum":"  257","line":"  void insert_attribute(string_t const & name, string_t const & value)"},
{"lineNum":"  258","line":"    { insert_variable(name, value); }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  259","line":"  void insert_attribute(string_t const & name, mx_expr  const & value)"},
{"lineNum":"  260","line":"    { insert_variable(name, value); }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  261","line":"  void insert_attribute(string_t const & name, mx_exprs const & value)"},
{"lineNum":"  262","line":"    { insert_variable(name, value); }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  263","line":""},
{"lineNum":"  264","line":"private:"},
{"lineNum":"  265","line":""},
{"lineNum":"  266","line":"public:"},
{"lineNum":"  267","line":"  static double   nan;  // not a number"},
{"lineNum":"  268","line":"  static string_t nst;  // not a string"},
{"lineNum":"  269","line":""},
{"lineNum":"  270","line":"private:"},
{"lineNum":"  271","line":"  value_map_t   variables_;"},
{"lineNum":"  272","line":"  commands_v_t  cmd_seq_;"},
{"lineNum":"  273","line":"  commands_m_t  cmd_map_;"},
{"lineNum":"  274","line":"  lines_m_t     lines_;"},
{"lineNum":"  275","line":"  sequences_m_t seqs_;"},
{"lineNum":"  276","line":"  MadX_sequence cur_seq_;       // sequence thats being built currently"},
{"lineNum":"  277","line":"  bool          building_seq_;  // currently building sequence?"},
{"lineNum":"  278","line":"};"},
{"lineNum":"  279","line":""},
{"lineNum":"  280","line":""},
{"lineNum":"  281","line":""},
{"lineNum":"  282","line":"#endif"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 13, "covered" : 0,};
var merged_data = [];
