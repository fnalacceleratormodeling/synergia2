var data = {lines:[
{"lineNum":"    1","line":"//===----------------------------------------------------------------------===//"},
{"lineNum":"    2","line":"//"},
{"lineNum":"    3","line":"// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions."},
{"lineNum":"    4","line":"// See https://llvm.org/LICENSE.txt for license information."},
{"lineNum":"    5","line":"// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception"},
{"lineNum":"    6","line":"//"},
{"lineNum":"    7","line":"//===----------------------------------------------------------------------===//"},
{"lineNum":"    8","line":""},
{"lineNum":"    9","line":"#ifndef _LIBCPP___UTILITY_SWAP_H"},
{"lineNum":"   10","line":"#define _LIBCPP___UTILITY_SWAP_H"},
{"lineNum":"   11","line":""},
{"lineNum":"   12","line":"#include <__config>"},
{"lineNum":"   13","line":"#include <__utility/declval.h>"},
{"lineNum":"   14","line":"#include <__utility/move.h>"},
{"lineNum":"   15","line":"#include <type_traits>"},
{"lineNum":"   16","line":"#include <cstddef>"},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)"},
{"lineNum":"   19","line":"#pragma GCC system_header"},
{"lineNum":"   20","line":"#endif"},
{"lineNum":"   21","line":""},
{"lineNum":"   22","line":"_LIBCPP_PUSH_MACROS"},
{"lineNum":"   23","line":"#include <__undef_macros>"},
{"lineNum":"   24","line":""},
{"lineNum":"   25","line":"_LIBCPP_BEGIN_NAMESPACE_STD"},
{"lineNum":"   26","line":""},
{"lineNum":"   27","line":"#ifndef _LIBCPP_CXX03_LANG"},
{"lineNum":"   28","line":"template <class _Tp>"},
{"lineNum":"   29","line":"using __swap_result_t = typename enable_if<is_move_constructible<_Tp>::value && is_move_assignable<_Tp>::value>::type;"},
{"lineNum":"   30","line":"#else"},
{"lineNum":"   31","line":"template <class>"},
{"lineNum":"   32","line":"using __swap_result_t = void;"},
{"lineNum":"   33","line":"#endif"},
{"lineNum":"   34","line":""},
{"lineNum":"   35","line":"template <class _Tp>"},
{"lineNum":"   36","line":"inline _LIBCPP_INLINE_VISIBILITY __swap_result_t<_Tp> _LIBCPP_CONSTEXPR_AFTER_CXX17 swap(_Tp& __x, _Tp& __y)"},
{"lineNum":"   37","line":"    _NOEXCEPT_(is_nothrow_move_constructible<_Tp>::value&& is_nothrow_move_assignable<_Tp>::value) {"},
{"lineNum":"   38","line":"  _Tp __t(_VSTD::move(__x));","class":"linePartCov","hits":"11","order":"218","possible_hits":"393",},
{"lineNum":"   39","line":"  __x = _VSTD::move(__y);","class":"linePartCov","hits":"14","order":"219","possible_hits":"1143",},
{"lineNum":"   40","line":"  __y = _VSTD::move(__t);","class":"linePartCov","hits":"11","order":"220","possible_hits":"1141",},
{"lineNum":"   41","line":"}"},
{"lineNum":"   42","line":""},
{"lineNum":"   43","line":"template <class _Tp, size_t _Np>"},
{"lineNum":"   44","line":"inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17 typename enable_if<__is_swappable<_Tp>::value>::type"},
{"lineNum":"   45","line":"swap(_Tp (&__a)[_Np], _Tp (&__b)[_Np]) _NOEXCEPT_(__is_nothrow_swappable<_Tp>::value) {"},
{"lineNum":"   46","line":"  for (size_t __i = 0; __i != _Np; ++__i) {"},
{"lineNum":"   47","line":"    swap(__a[__i], __b[__i]);"},
{"lineNum":"   48","line":"  }"},
{"lineNum":"   49","line":"}"},
{"lineNum":"   50","line":""},
{"lineNum":"   51","line":"_LIBCPP_END_NAMESPACE_STD"},
{"lineNum":"   52","line":""},
{"lineNum":"   53","line":"_LIBCPP_POP_MACROS"},
{"lineNum":"   54","line":""},
{"lineNum":"   55","line":"#endif // _LIBCPP___UTILITY_SWAP_H"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 3, "covered" : 3,};
var merged_data = [];
