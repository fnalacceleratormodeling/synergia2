var data = {lines:[
{"lineNum":"    1","line":"#ifndef WAKE_FIELD_H_"},
{"lineNum":"    2","line":"#define WAKE_FIELD_H_"},
{"lineNum":"    3","line":""},
{"lineNum":"    4","line":"#include \"mpi.h\""},
{"lineNum":"    5","line":""},
{"lineNum":"    6","line":"#include <string>"},
{"lineNum":"    7","line":"#include <vector>"},
{"lineNum":"    8","line":"#include \"synergia/utils/multi_array_typedefs.h\""},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"struct Wake_field","class":"lineNoCov","hits":"0","possible_hits":"5",},
{"lineNum":"   11","line":"{"},
{"lineNum":"   12","line":"    const std::string wake_file;"},
{"lineNum":"   13","line":"    const std::string wake_type;"},
{"lineNum":"   14","line":""},
{"lineNum":"   15","line":"    ///assume the  wake functions are stored using a quadratic grid"},
{"lineNum":"   16","line":"    /// z[i]= (i-istart)^2*delta_z+zstart for i>istart"},
{"lineNum":"   17","line":"    /// z[i]= -(i-istart)^2*delta_z+zstart  for i< istart"},
{"lineNum":"   18","line":"    int istart;"},
{"lineNum":"   19","line":"    double zstart;"},
{"lineNum":"   20","line":"    double delta_z;"},
{"lineNum":"   21","line":""},
{"lineNum":"   22","line":"    // number of terms"},
{"lineNum":"   23","line":"    int size_wake;"},
{"lineNum":"   24","line":""},
{"lineNum":"   25","line":"    // z_coord, z_wake, xw_lead, xw_trail, yw_lead, yw_trail"},
{"lineNum":"   26","line":"    // all in a single buffer."},
{"lineNum":"   27","line":"    //"},
{"lineNum":"   28","line":"    // total size = size_wake * 6. Fortran ordering."},
{"lineNum":"   29","line":"    //"},
{"lineNum":"   30","line":"    // x/yw_lead: wake term proportional with the displacement of"},
{"lineNum":"   31","line":"    //     the leading (source) particle"},
{"lineNum":"   32","line":"    //"},
{"lineNum":"   33","line":"    // x/yw_trail: wake term proportional with the displacement of"},
{"lineNum":"   34","line":"    //     the trailing (affected) particle"},
{"lineNum":"   35","line":"    //"},
{"lineNum":"   36","line":"    karray1d_dev terms;"},
{"lineNum":"   37","line":"    karray1d_hst h_terms;"},
{"lineNum":"   38","line":""},
{"lineNum":"   39","line":""},
{"lineNum":"   40","line":"#if 0"},
{"lineNum":"   41","line":"    // wake terms"},
{"lineNum":"   42","line":"    karray1d_dev z_coord;"},
{"lineNum":"   43","line":"    karray1d_dev z_wake;"},
{"lineNum":"   44","line":""},
{"lineNum":"   45","line":"    // wake term proportional with the displacement of the leading (source) particle"},
{"lineNum":"   46","line":"    karray1d_dev xw_lead;"},
{"lineNum":"   47","line":""},
{"lineNum":"   48","line":"    // wake term proportional with the displacement of the trailing (affected) particle"},
{"lineNum":"   49","line":"    karray1d_dev xw_trail;"},
{"lineNum":"   50","line":""},
{"lineNum":"   51","line":"    // wake term proportional with the displacement of the leading (source) particle"},
{"lineNum":"   52","line":"    karray1d_dev yw_lead;"},
{"lineNum":"   53","line":""},
{"lineNum":"   54","line":"    // wake term proportional with the displacement of the trail particle"},
{"lineNum":"   55","line":"    karray1d_dev yw_trail;"},
{"lineNum":"   56","line":""},
{"lineNum":"   57","line":"    // host mirrors"},
{"lineNum":"   58","line":"    karray1d_hst h_z_coord;"},
{"lineNum":"   59","line":"    karray1d_hst h_z_wake;"},
{"lineNum":"   60","line":"    karray1d_hst h_xw_lead;"},
{"lineNum":"   61","line":"    karray1d_hst h_xw_trail;"},
{"lineNum":"   62","line":"    karray1d_hst h_yw_lead;"},
{"lineNum":"   63","line":"    karray1d_hst h_yw_trail;"},
{"lineNum":"   64","line":"#endif"},
{"lineNum":"   65","line":""},
{"lineNum":"   66","line":""},
{"lineNum":"   67","line":"    Wake_field(std::string const& wake_file, std::string const& wake_type);"},
{"lineNum":"   68","line":""},
{"lineNum":"   69","line":"    void multiply_xw_lead(double mltp);"},
{"lineNum":"   70","line":"    void multiply_xw_trail(double mltp);"},
{"lineNum":"   71","line":"    void multiply_yw_lead(double mltp);"},
{"lineNum":"   72","line":"    void multiply_yw_trail(double mltp);"},
{"lineNum":"   73","line":"    void multiply_z_wake(double mltp);"},
{"lineNum":"   74","line":"};"},
{"lineNum":"   75","line":""},
{"lineNum":"   76","line":""},
{"lineNum":"   77","line":"#endif /* WAKE_FIELD_H_ */"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:41", "instrumented" : 1, "covered" : 0,};
var merged_data = [];
