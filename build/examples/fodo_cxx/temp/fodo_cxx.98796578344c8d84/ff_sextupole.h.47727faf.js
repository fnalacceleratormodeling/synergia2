var data = {lines:[
{"lineNum":"    1","line":"#ifndef FF_SEXTUPOLE_H"},
{"lineNum":"    2","line":"#define FF_SEXTUPOLE_H"},
{"lineNum":"    3","line":""},
{"lineNum":"    4","line":"#include \"synergia/libFF/ff_algorithm.h\""},
{"lineNum":"    5","line":"#include \"synergia/libFF/ff_patterned_propagator.h\""},
{"lineNum":"    6","line":"#include \"synergia/utils/simple_timer.h\""},
{"lineNum":"    7","line":""},
{"lineNum":"    8","line":""},
{"lineNum":"    9","line":"namespace FF_sextupole"},
{"lineNum":"   10","line":"{"},
{"lineNum":"   11","line":"    template<class T>"},
{"lineNum":"   12","line":"    KOKKOS_INLINE_FUNCTION"},
{"lineNum":"   13","line":"    void kick(T const&x, T& xp, T const& y, T& yp, T const&, double const* kL)"},
{"lineNum":"   14","line":"    { FF_algorithm::thin_sextupole_unit(x, xp, y, yp, kL); }"},
{"lineNum":"   15","line":""},
{"lineNum":"   16","line":"    template<class BunchT>"},
{"lineNum":"   17","line":"    void apply(Lattice_element_slice const& slice, BunchT& bunch)"},
{"lineNum":"   18","line":"    {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   19","line":"        auto const& element = slice.get_lattice_element();"},
{"lineNum":"   20","line":"        double length = slice.get_right() - slice.get_left();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   21","line":""},
{"lineNum":"   22","line":"        // strength"},
{"lineNum":"   23","line":"        double k[2] = {","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   24","line":"            element.get_double_attribute(\"k2\", 0.0),","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   25","line":"            element.get_double_attribute(\"k2s\", 0.0)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   26","line":"        };"},
{"lineNum":"   27","line":""},
{"lineNum":"   28","line":"        // tilting"},
{"lineNum":"   29","line":"        double tilt = element.get_double_attribute(\"tilt\", 0.0);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   30","line":"        if (tilt != 0.0)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   31","line":"        {"},
{"lineNum":"   32","line":"            Kokkos::complex<double> ck2(k[0], k[1]);"},
{"lineNum":"   33","line":"            ck2 = ck2 * exp(Kokkos::complex<double>(0.0, -3.0*tilt));","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   34","line":"            k[0] = ck2.real();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   35","line":"            k[1] = ck2.imag();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   36","line":"        }"},
{"lineNum":"   37","line":""},
{"lineNum":"   38","line":"        // scaling"},
{"lineNum":"   39","line":"        Reference_particle       & ref_l = bunch.get_design_reference_particle();"},
{"lineNum":"   40","line":"        Reference_particle const & ref_b = bunch.get_reference_particle();"},
{"lineNum":"   41","line":""},
{"lineNum":"   42","line":"        double brho_l = ref_l.get_momentum() / ref_l.get_charge();  // GV/c","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   43","line":"        double brho_b = ref_b.get_momentum()","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   44","line":"                        * (1.0 + ref_b.get_state()[Bunch::dpop])","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   45","line":"                        / ref_l.get_charge();  // GV/c","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   46","line":""},
{"lineNum":"   47","line":"        double scale = brho_l / brho_b;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   48","line":""},
{"lineNum":"   49","line":"        k[0] *= scale;","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"   50","line":"        k[1] *= scale;"},
{"lineNum":"   51","line":""},
{"lineNum":"   52","line":"        using gsv_t = typename BunchT::gsv_t;"},
{"lineNum":"   53","line":"        using pp = FF_patterned_propagator<BunchT, gsv_t,"},
{"lineNum":"   54","line":"              kick<gsv_t>, kick<double>>;"},
{"lineNum":"   55","line":""},
{"lineNum":"   56","line":"        if ( close_to_zero(length) )","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   57","line":"        {"},
{"lineNum":"   58","line":"            pp::get_reference_cdt_zero(ref_l, k);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   59","line":""},
{"lineNum":"   60","line":"            pp::apply_thin_kick(bunch, ParticleGroup::regular, k);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   61","line":"            pp::apply_thin_kick(bunch, ParticleGroup::spectator, k);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   62","line":"        }"},
{"lineNum":"   63","line":"        else"},
{"lineNum":"   64","line":"        {"},
{"lineNum":"   65","line":"            double pref = bunch.get_reference_particle().get_momentum();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   66","line":"            double mass = bunch.get_mass();"},
{"lineNum":"   67","line":""},
{"lineNum":"   68","line":"            // yoshida steps"},
{"lineNum":"   69","line":"            int steps = (int)element.get_double_attribute(","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   70","line":"                    \"yoshida_steps\", 4.0);"},
{"lineNum":"   71","line":""},
{"lineNum":"   72","line":"            // reference cdt"},
{"lineNum":"   73","line":"            double ref_cdt = pp::get_reference_cdt_yoshida(","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   74","line":"                    ref_l, length, k, steps);"},
{"lineNum":"   75","line":""},
{"lineNum":"   76","line":"            // propagate"},
{"lineNum":"   77","line":"            pp::apply_yoshida_kick(bunch, ParticleGroup::regular,","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   78","line":"                    pref, mass, ref_cdt, length, k, steps);"},
{"lineNum":"   79","line":""},
{"lineNum":"   80","line":"            pp::apply_yoshida_kick(bunch, ParticleGroup::spectator,","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   81","line":"                    pref, mass, ref_cdt, length, k, steps);"},
{"lineNum":"   82","line":""},
{"lineNum":"   83","line":"            // trajectory"},
{"lineNum":"   84","line":"            bunch.get_reference_particle().increment_trajectory(length);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   85","line":"        }"},
{"lineNum":"   86","line":""},
{"lineNum":"   87","line":"    }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   88","line":"}"},
{"lineNum":"   89","line":""},
{"lineNum":"   90","line":"#endif // FF_SEXTUPOLE_H"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 27, "covered" : 0,};
var merged_data = [];
