var data = {lines:[
{"lineNum":"    1","line":"//-----------------------------------------------------------------------------"},
{"lineNum":"    2","line":"// boost variant/detail/forced_return.hpp header file"},
{"lineNum":"    3","line":"// See http://www.boost.org for updates, documentation, and revision history."},
{"lineNum":"    4","line":"//-----------------------------------------------------------------------------"},
{"lineNum":"    5","line":"//"},
{"lineNum":"    6","line":"// Copyright (c) 2003 Eric Friedman"},
{"lineNum":"    7","line":"// Copyright (c) 2015-2019 Antony Polukhin"},
{"lineNum":"    8","line":"//"},
{"lineNum":"    9","line":"// Distributed under the Boost Software License, Version 1.0. (See"},
{"lineNum":"   10","line":"// accompanying file LICENSE_1_0.txt or copy at"},
{"lineNum":"   11","line":"// http://www.boost.org/LICENSE_1_0.txt)"},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"#ifndef BOOST_VARIANT_DETAIL_FORCED_RETURN_HPP"},
{"lineNum":"   14","line":"#define BOOST_VARIANT_DETAIL_FORCED_RETURN_HPP"},
{"lineNum":"   15","line":""},
{"lineNum":"   16","line":"#include <boost/config.hpp>"},
{"lineNum":"   17","line":"#include <boost/assert.hpp>"},
{"lineNum":"   18","line":"#include <cstdlib> // std::abort"},
{"lineNum":"   19","line":""},
{"lineNum":"   20","line":""},
{"lineNum":"   21","line":"#ifdef BOOST_MSVC"},
{"lineNum":"   22","line":"# pragma warning( push )"},
{"lineNum":"   23","line":"# pragma warning( disable : 4702 ) // unreachable code"},
{"lineNum":"   24","line":"#endif"},
{"lineNum":"   25","line":""},
{"lineNum":"   26","line":"namespace boost { namespace detail { namespace variant {"},
{"lineNum":"   27","line":""},
{"lineNum":"   28","line":"BOOST_NORETURN inline void forced_return_no_return() { // fixes `must return a value` warnings","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   29","line":"    using namespace std;"},
{"lineNum":"   30","line":"    abort(); // some implementations have no std::abort","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   31","line":"}"},
{"lineNum":"   32","line":""},
{"lineNum":"   33","line":""},
{"lineNum":"   34","line":"///////////////////////////////////////////////////////////////////////////////"},
{"lineNum":"   35","line":"// (detail) function template forced_return"},
{"lineNum":"   36","line":"//"},
{"lineNum":"   37","line":"// Logical error to permit invocation at runtime, but (artificially) satisfies"},
{"lineNum":"   38","line":"// compile-time requirement of returning a result value."},
{"lineNum":"   39","line":"//"},
{"lineNum":"   40","line":"template <typename T>"},
{"lineNum":"   41","line":"BOOST_NORETURN inline T"},
{"lineNum":"   42","line":"forced_return()"},
{"lineNum":"   43","line":"{","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"   44","line":"    // logical error: should never be here! (see above)"},
{"lineNum":"   45","line":"    BOOST_ASSERT(false);"},
{"lineNum":"   46","line":""},
{"lineNum":"   47","line":"    forced_return_no_return();","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"   48","line":""},
{"lineNum":"   49","line":"#ifdef BOOST_NO_NORETURN"},
{"lineNum":"   50","line":"    T (*dummy)() = 0;"},
{"lineNum":"   51","line":"    return dummy();"},
{"lineNum":"   52","line":"#endif"},
{"lineNum":"   53","line":"}"},
{"lineNum":"   54","line":""},
{"lineNum":"   55","line":"}}} // namespace boost::detail::variant"},
{"lineNum":"   56","line":""},
{"lineNum":"   57","line":""},
{"lineNum":"   58","line":"#ifdef BOOST_MSVC"},
{"lineNum":"   59","line":"# pragma warning( pop )"},
{"lineNum":"   60","line":"#endif"},
{"lineNum":"   61","line":""},
{"lineNum":"   62","line":"#endif // BOOST_VARIANT_DETAIL_FORCED_RETURN_HPP"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 4, "covered" : 0,};
var merged_data = [];
