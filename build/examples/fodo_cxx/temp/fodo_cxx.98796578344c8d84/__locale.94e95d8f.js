var data = {lines:[
{"lineNum":"    1","line":"// -*- C++ -*-"},
{"lineNum":"    2","line":"//===----------------------------------------------------------------------===//"},
{"lineNum":"    3","line":"//"},
{"lineNum":"    4","line":"// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions."},
{"lineNum":"    5","line":"// See https://llvm.org/LICENSE.txt for license information."},
{"lineNum":"    6","line":"// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception"},
{"lineNum":"    7","line":"//"},
{"lineNum":"    8","line":"//===----------------------------------------------------------------------===//"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"#ifndef _LIBCPP___LOCALE"},
{"lineNum":"   11","line":"#define _LIBCPP___LOCALE"},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"#include <__availability>"},
{"lineNum":"   14","line":"#include <__config>"},
{"lineNum":"   15","line":"#include <string>"},
{"lineNum":"   16","line":"#include <memory>"},
{"lineNum":"   17","line":"#include <utility>"},
{"lineNum":"   18","line":"#include <mutex>"},
{"lineNum":"   19","line":"#include <cstdint>"},
{"lineNum":"   20","line":"#include <cctype>"},
{"lineNum":"   21","line":"#include <locale.h>"},
{"lineNum":"   22","line":"#if defined(_LIBCPP_MSVCRT_LIKE)"},
{"lineNum":"   23","line":"# include <cstring>"},
{"lineNum":"   24","line":"# include <__support/win32/locale_win32.h>"},
{"lineNum":"   25","line":"#elif defined(__NuttX__)"},
{"lineNum":"   26","line":"# include <__support/nuttx/xlocale.h>"},
{"lineNum":"   27","line":"#elif defined(_AIX) || defined(__MVS__)"},
{"lineNum":"   28","line":"# include <__support/ibm/xlocale.h>"},
{"lineNum":"   29","line":"#elif defined(__ANDROID__)"},
{"lineNum":"   30","line":"# include <__support/android/locale_bionic.h>"},
{"lineNum":"   31","line":"#elif defined(__sun__)"},
{"lineNum":"   32","line":"# include <xlocale.h>"},
{"lineNum":"   33","line":"# include <__support/solaris/xlocale.h>"},
{"lineNum":"   34","line":"#elif defined(_NEWLIB_VERSION)"},
{"lineNum":"   35","line":"# include <__support/newlib/xlocale.h>"},
{"lineNum":"   36","line":"#elif defined(__OpenBSD__)"},
{"lineNum":"   37","line":"# include <__support/openbsd/xlocale.h>"},
{"lineNum":"   38","line":"#elif (defined(__APPLE__)      || defined(__FreeBSD__) \\"},
{"lineNum":"   39","line":"    || defined(__EMSCRIPTEN__) || defined(__IBMCPP__))"},
{"lineNum":"   40","line":"# include <xlocale.h>"},
{"lineNum":"   41","line":"#elif defined(__Fuchsia__)"},
{"lineNum":"   42","line":"# include <__support/fuchsia/xlocale.h>"},
{"lineNum":"   43","line":"#elif defined(__wasi__)"},
{"lineNum":"   44","line":"// WASI libc uses musl\'s locales support."},
{"lineNum":"   45","line":"# include <__support/musl/xlocale.h>"},
{"lineNum":"   46","line":"#elif defined(_LIBCPP_HAS_MUSL_LIBC)"},
{"lineNum":"   47","line":"# include <__support/musl/xlocale.h>"},
{"lineNum":"   48","line":"#endif"},
{"lineNum":"   49","line":""},
{"lineNum":"   50","line":"#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)"},
{"lineNum":"   51","line":"#pragma GCC system_header"},
{"lineNum":"   52","line":"#endif"},
{"lineNum":"   53","line":""},
{"lineNum":"   54","line":"_LIBCPP_BEGIN_NAMESPACE_STD"},
{"lineNum":"   55","line":""},
{"lineNum":"   56","line":"#if !defined(_LIBCPP_LOCALE__L_EXTENSIONS)"},
{"lineNum":"   57","line":"struct __libcpp_locale_guard {"},
{"lineNum":"   58","line":"  _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"   59","line":"  __libcpp_locale_guard(locale_t& __loc) : __old_loc_(uselocale(__loc)) {}"},
{"lineNum":"   60","line":""},
{"lineNum":"   61","line":"  _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"   62","line":"  ~__libcpp_locale_guard() {"},
{"lineNum":"   63","line":"    if (__old_loc_)"},
{"lineNum":"   64","line":"      uselocale(__old_loc_);"},
{"lineNum":"   65","line":"  }"},
{"lineNum":"   66","line":""},
{"lineNum":"   67","line":"  locale_t __old_loc_;"},
{"lineNum":"   68","line":"private:"},
{"lineNum":"   69","line":"  __libcpp_locale_guard(__libcpp_locale_guard const&);"},
{"lineNum":"   70","line":"  __libcpp_locale_guard& operator=(__libcpp_locale_guard const&);"},
{"lineNum":"   71","line":"};"},
{"lineNum":"   72","line":"#elif defined(_LIBCPP_MSVCRT_LIKE)"},
{"lineNum":"   73","line":"struct __libcpp_locale_guard {"},
{"lineNum":"   74","line":"    __libcpp_locale_guard(locale_t __l) :"},
{"lineNum":"   75","line":"        __status(_configthreadlocale(_ENABLE_PER_THREAD_LOCALE)) {"},
{"lineNum":"   76","line":"      // Setting the locale can be expensive even when the locale given is"},
{"lineNum":"   77","line":"      // already the current locale, so do an explicit check to see if the"},
{"lineNum":"   78","line":"      // current locale is already the one we want."},
{"lineNum":"   79","line":"      const char* __lc = __setlocale(nullptr);"},
{"lineNum":"   80","line":"      // If every category is the same, the locale string will simply be the"},
{"lineNum":"   81","line":"      // locale name, otherwise it will be a semicolon-separated string listing"},
{"lineNum":"   82","line":"      // each category.  In the second case, we know at least one category won\'t"},
{"lineNum":"   83","line":"      // be what we want, so we only have to check the first case."},
{"lineNum":"   84","line":"      if (_VSTD::strcmp(__l.__get_locale(), __lc) != 0) {"},
{"lineNum":"   85","line":"        __locale_all = _strdup(__lc);"},
{"lineNum":"   86","line":"        if (__locale_all == nullptr)"},
{"lineNum":"   87","line":"          __throw_bad_alloc();"},
{"lineNum":"   88","line":"        __setlocale(__l.__get_locale());"},
{"lineNum":"   89","line":"      }"},
{"lineNum":"   90","line":"    }"},
{"lineNum":"   91","line":"    ~__libcpp_locale_guard() {"},
{"lineNum":"   92","line":"      // The CRT documentation doesn\'t explicitly say, but setlocale() does the"},
{"lineNum":"   93","line":"      // right thing when given a semicolon-separated list of locale settings"},
{"lineNum":"   94","line":"      // for the different categories in the same format as returned by"},
{"lineNum":"   95","line":"      // setlocale(LC_ALL, nullptr)."},
{"lineNum":"   96","line":"      if (__locale_all != nullptr) {"},
{"lineNum":"   97","line":"        __setlocale(__locale_all);"},
{"lineNum":"   98","line":"        free(__locale_all);"},
{"lineNum":"   99","line":"      }"},
{"lineNum":"  100","line":"      _configthreadlocale(__status);"},
{"lineNum":"  101","line":"    }"},
{"lineNum":"  102","line":"    static const char* __setlocale(const char* __locale) {"},
{"lineNum":"  103","line":"      const char* __new_locale = setlocale(LC_ALL, __locale);"},
{"lineNum":"  104","line":"      if (__new_locale == nullptr)"},
{"lineNum":"  105","line":"        __throw_bad_alloc();"},
{"lineNum":"  106","line":"      return __new_locale;"},
{"lineNum":"  107","line":"    }"},
{"lineNum":"  108","line":"    int __status;"},
{"lineNum":"  109","line":"    char* __locale_all = nullptr;"},
{"lineNum":"  110","line":"};"},
{"lineNum":"  111","line":"#endif"},
{"lineNum":"  112","line":""},
{"lineNum":"  113","line":"class _LIBCPP_TYPE_VIS locale;"},
{"lineNum":"  114","line":""},
{"lineNum":"  115","line":"template <class _Facet>"},
{"lineNum":"  116","line":"_LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  117","line":"bool"},
{"lineNum":"  118","line":"has_facet(const locale&) _NOEXCEPT;"},
{"lineNum":"  119","line":""},
{"lineNum":"  120","line":"template <class _Facet>"},
{"lineNum":"  121","line":"_LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  122","line":"const _Facet&"},
{"lineNum":"  123","line":"use_facet(const locale&);"},
{"lineNum":"  124","line":""},
{"lineNum":"  125","line":"class _LIBCPP_TYPE_VIS locale"},
{"lineNum":"  126","line":"{"},
{"lineNum":"  127","line":"public:"},
{"lineNum":"  128","line":"    // types:"},
{"lineNum":"  129","line":"    class _LIBCPP_TYPE_VIS facet;"},
{"lineNum":"  130","line":"    class _LIBCPP_TYPE_VIS id;"},
{"lineNum":"  131","line":""},
{"lineNum":"  132","line":"    typedef int category;"},
{"lineNum":"  133","line":"    _LIBCPP_AVAILABILITY_LOCALE_CATEGORY"},
{"lineNum":"  134","line":"    static const category // values assigned here are for exposition only"},
{"lineNum":"  135","line":"        none     = 0,"},
{"lineNum":"  136","line":"        collate  = LC_COLLATE_MASK,"},
{"lineNum":"  137","line":"        ctype    = LC_CTYPE_MASK,"},
{"lineNum":"  138","line":"        monetary = LC_MONETARY_MASK,"},
{"lineNum":"  139","line":"        numeric  = LC_NUMERIC_MASK,"},
{"lineNum":"  140","line":"        time     = LC_TIME_MASK,"},
{"lineNum":"  141","line":"        messages = LC_MESSAGES_MASK,"},
{"lineNum":"  142","line":"        all = collate | ctype | monetary | numeric | time | messages;"},
{"lineNum":"  143","line":""},
{"lineNum":"  144","line":"    // construct/copy/destroy:"},
{"lineNum":"  145","line":"    locale()  _NOEXCEPT;"},
{"lineNum":"  146","line":"    locale(const locale&)  _NOEXCEPT;"},
{"lineNum":"  147","line":"    explicit locale(const char*);"},
{"lineNum":"  148","line":"    explicit locale(const string&);"},
{"lineNum":"  149","line":"    locale(const locale&, const char*, category);"},
{"lineNum":"  150","line":"    locale(const locale&, const string&, category);"},
{"lineNum":"  151","line":"    template <class _Facet>"},
{"lineNum":"  152","line":"        _LIBCPP_INLINE_VISIBILITY locale(const locale&, _Facet*);"},
{"lineNum":"  153","line":"    locale(const locale&, const locale&, category);"},
{"lineNum":"  154","line":""},
{"lineNum":"  155","line":"    ~locale();"},
{"lineNum":"  156","line":""},
{"lineNum":"  157","line":"    const locale& operator=(const locale&)  _NOEXCEPT;"},
{"lineNum":"  158","line":""},
{"lineNum":"  159","line":"    template <class _Facet>"},
{"lineNum":"  160","line":"      _LIBCPP_METHOD_TEMPLATE_IMPLICIT_INSTANTIATION_VIS"},
{"lineNum":"  161","line":"      locale combine(const locale&) const;"},
{"lineNum":"  162","line":""},
{"lineNum":"  163","line":"    // locale operations:"},
{"lineNum":"  164","line":"    string name() const;"},
{"lineNum":"  165","line":"    bool operator==(const locale&) const;"},
{"lineNum":"  166","line":"    bool operator!=(const locale& __y) const {return !(*this == __y);}"},
{"lineNum":"  167","line":"    template <class _CharT, class _Traits, class _Allocator>"},
{"lineNum":"  168","line":"      _LIBCPP_METHOD_TEMPLATE_IMPLICIT_INSTANTIATION_VIS"},
{"lineNum":"  169","line":"      bool operator()(const basic_string<_CharT, _Traits, _Allocator>&,"},
{"lineNum":"  170","line":"                      const basic_string<_CharT, _Traits, _Allocator>&) const;"},
{"lineNum":"  171","line":""},
{"lineNum":"  172","line":"    // global locale objects:"},
{"lineNum":"  173","line":"    static locale global(const locale&);"},
{"lineNum":"  174","line":"    static const locale& classic();"},
{"lineNum":"  175","line":""},
{"lineNum":"  176","line":"private:"},
{"lineNum":"  177","line":"    class __imp;"},
{"lineNum":"  178","line":"    __imp* __locale_;"},
{"lineNum":"  179","line":""},
{"lineNum":"  180","line":"    void __install_ctor(const locale&, facet*, long);"},
{"lineNum":"  181","line":"    static locale& __global();"},
{"lineNum":"  182","line":"    bool has_facet(id&) const;"},
{"lineNum":"  183","line":"    const facet* use_facet(id&) const;"},
{"lineNum":"  184","line":""},
{"lineNum":"  185","line":"    template <class _Facet> friend bool has_facet(const locale&)  _NOEXCEPT;"},
{"lineNum":"  186","line":"    template <class _Facet> friend const _Facet& use_facet(const locale&);"},
{"lineNum":"  187","line":"};"},
{"lineNum":"  188","line":""},
{"lineNum":"  189","line":"class _LIBCPP_TYPE_VIS locale::facet"},
{"lineNum":"  190","line":"    : public __shared_count"},
{"lineNum":"  191","line":"{"},
{"lineNum":"  192","line":"protected:"},
{"lineNum":"  193","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  194","line":"    explicit facet(size_t __refs = 0)"},
{"lineNum":"  195","line":"        : __shared_count(static_cast<long>(__refs)-1) {}"},
{"lineNum":"  196","line":""},
{"lineNum":"  197","line":"    virtual ~facet();"},
{"lineNum":"  198","line":""},
{"lineNum":"  199","line":"//    facet(const facet&) = delete;     // effectively done in __shared_count"},
{"lineNum":"  200","line":"//    void operator=(const facet&) = delete;"},
{"lineNum":"  201","line":"private:"},
{"lineNum":"  202","line":"    virtual void __on_zero_shared() _NOEXCEPT;"},
{"lineNum":"  203","line":"};"},
{"lineNum":"  204","line":""},
{"lineNum":"  205","line":"class _LIBCPP_TYPE_VIS locale::id"},
{"lineNum":"  206","line":"{"},
{"lineNum":"  207","line":"    once_flag      __flag_;"},
{"lineNum":"  208","line":"    int32_t        __id_;"},
{"lineNum":"  209","line":""},
{"lineNum":"  210","line":"    static int32_t __next_id;"},
{"lineNum":"  211","line":"public:"},
{"lineNum":"  212","line":"    _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR id() :__id_(0) {}"},
{"lineNum":"  213","line":"private:"},
{"lineNum":"  214","line":"    void __init();"},
{"lineNum":"  215","line":"    void operator=(const id&); // = delete;"},
{"lineNum":"  216","line":"    id(const id&); // = delete;"},
{"lineNum":"  217","line":"public:  // only needed for tests"},
{"lineNum":"  218","line":"    long __get();"},
{"lineNum":"  219","line":""},
{"lineNum":"  220","line":"    friend class locale;"},
{"lineNum":"  221","line":"    friend class locale::__imp;"},
{"lineNum":"  222","line":"};"},
{"lineNum":"  223","line":""},
{"lineNum":"  224","line":"template <class _Facet>"},
{"lineNum":"  225","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  226","line":"locale::locale(const locale& __other, _Facet* __f)"},
{"lineNum":"  227","line":"{"},
{"lineNum":"  228","line":"    __install_ctor(__other, __f, __f ? __f->id.__get() : 0);"},
{"lineNum":"  229","line":"}"},
{"lineNum":"  230","line":""},
{"lineNum":"  231","line":"template <class _Facet>"},
{"lineNum":"  232","line":"locale"},
{"lineNum":"  233","line":"locale::combine(const locale& __other) const"},
{"lineNum":"  234","line":"{"},
{"lineNum":"  235","line":"    if (!_VSTD::has_facet<_Facet>(__other))"},
{"lineNum":"  236","line":"        __throw_runtime_error(\"locale::combine: locale missing facet\");"},
{"lineNum":"  237","line":""},
{"lineNum":"  238","line":"    return locale(*this, &const_cast<_Facet&>(_VSTD::use_facet<_Facet>(__other)));"},
{"lineNum":"  239","line":"}"},
{"lineNum":"  240","line":""},
{"lineNum":"  241","line":"template <class _Facet>"},
{"lineNum":"  242","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  243","line":"bool"},
{"lineNum":"  244","line":"has_facet(const locale& __l)  _NOEXCEPT"},
{"lineNum":"  245","line":"{"},
{"lineNum":"  246","line":"    return __l.has_facet(_Facet::id);","class":"lineNoCov","hits":"0","possible_hits":"18",},
{"lineNum":"  247","line":"}"},
{"lineNum":"  248","line":""},
{"lineNum":"  249","line":"template <class _Facet>"},
{"lineNum":"  250","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  251","line":"const _Facet&"},
{"lineNum":"  252","line":"use_facet(const locale& __l)"},
{"lineNum":"  253","line":"{"},
{"lineNum":"  254","line":"    return static_cast<const _Facet&>(*__l.use_facet(_Facet::id));","class":"lineNoCov","hits":"0","possible_hits":"77",},
{"lineNum":"  255","line":"}"},
{"lineNum":"  256","line":""},
{"lineNum":"  257","line":"// template <class _CharT> class collate;"},
{"lineNum":"  258","line":""},
{"lineNum":"  259","line":"template <class _CharT>"},
{"lineNum":"  260","line":"class _LIBCPP_TEMPLATE_VIS collate"},
{"lineNum":"  261","line":"    : public locale::facet"},
{"lineNum":"  262","line":"{"},
{"lineNum":"  263","line":"public:"},
{"lineNum":"  264","line":"    typedef _CharT char_type;"},
{"lineNum":"  265","line":"    typedef basic_string<char_type> string_type;"},
{"lineNum":"  266","line":""},
{"lineNum":"  267","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  268","line":"    explicit collate(size_t __refs = 0)"},
{"lineNum":"  269","line":"        : locale::facet(__refs) {}"},
{"lineNum":"  270","line":""},
{"lineNum":"  271","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  272","line":"    int compare(const char_type* __lo1, const char_type* __hi1,"},
{"lineNum":"  273","line":"                const char_type* __lo2, const char_type* __hi2) const"},
{"lineNum":"  274","line":"    {"},
{"lineNum":"  275","line":"        return do_compare(__lo1, __hi1, __lo2, __hi2);"},
{"lineNum":"  276","line":"    }"},
{"lineNum":"  277","line":""},
{"lineNum":"  278","line":"    // FIXME(EricWF): The _LIBCPP_ALWAYS_INLINE is needed on Windows to work"},
{"lineNum":"  279","line":"    // around a dllimport bug that expects an external instantiation."},
{"lineNum":"  280","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  281","line":"    _LIBCPP_ALWAYS_INLINE"},
{"lineNum":"  282","line":"    string_type transform(const char_type* __lo, const char_type* __hi) const"},
{"lineNum":"  283","line":"    {"},
{"lineNum":"  284","line":"        return do_transform(__lo, __hi);","class":"lineNoCov","hits":"0","possible_hits":"7",},
{"lineNum":"  285","line":"    }"},
{"lineNum":"  286","line":""},
{"lineNum":"  287","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  288","line":"    long hash(const char_type* __lo, const char_type* __hi) const"},
{"lineNum":"  289","line":"    {"},
{"lineNum":"  290","line":"        return do_hash(__lo, __hi);"},
{"lineNum":"  291","line":"    }"},
{"lineNum":"  292","line":""},
{"lineNum":"  293","line":"    static locale::id id;"},
{"lineNum":"  294","line":""},
{"lineNum":"  295","line":"protected:"},
{"lineNum":"  296","line":"    ~collate();"},
{"lineNum":"  297","line":"    virtual int do_compare(const char_type* __lo1, const char_type* __hi1,"},
{"lineNum":"  298","line":"                           const char_type* __lo2, const char_type* __hi2) const;"},
{"lineNum":"  299","line":"    virtual string_type do_transform(const char_type* __lo, const char_type* __hi) const"},
{"lineNum":"  300","line":"        {return string_type(__lo, __hi);}"},
{"lineNum":"  301","line":"    virtual long do_hash(const char_type* __lo, const char_type* __hi) const;"},
{"lineNum":"  302","line":"};"},
{"lineNum":"  303","line":""},
{"lineNum":"  304","line":"template <class _CharT> locale::id collate<_CharT>::id;"},
{"lineNum":"  305","line":""},
{"lineNum":"  306","line":"template <class _CharT>"},
{"lineNum":"  307","line":"collate<_CharT>::~collate()"},
{"lineNum":"  308","line":"{"},
{"lineNum":"  309","line":"}"},
{"lineNum":"  310","line":""},
{"lineNum":"  311","line":"template <class _CharT>"},
{"lineNum":"  312","line":"int"},
{"lineNum":"  313","line":"collate<_CharT>::do_compare(const char_type* __lo1, const char_type* __hi1,"},
{"lineNum":"  314","line":"                            const char_type* __lo2, const char_type* __hi2) const"},
{"lineNum":"  315","line":"{"},
{"lineNum":"  316","line":"    for (; __lo2 != __hi2; ++__lo1, ++__lo2)"},
{"lineNum":"  317","line":"    {"},
{"lineNum":"  318","line":"        if (__lo1 == __hi1 || *__lo1 < *__lo2)"},
{"lineNum":"  319","line":"            return -1;"},
{"lineNum":"  320","line":"        if (*__lo2 < *__lo1)"},
{"lineNum":"  321","line":"            return 1;"},
{"lineNum":"  322","line":"    }"},
{"lineNum":"  323","line":"    return __lo1 != __hi1;"},
{"lineNum":"  324","line":"}"},
{"lineNum":"  325","line":""},
{"lineNum":"  326","line":"template <class _CharT>"},
{"lineNum":"  327","line":"long"},
{"lineNum":"  328","line":"collate<_CharT>::do_hash(const char_type* __lo, const char_type* __hi) const"},
{"lineNum":"  329","line":"{"},
{"lineNum":"  330","line":"    size_t __h = 0;"},
{"lineNum":"  331","line":"    const size_t __sr = __CHAR_BIT__ * sizeof(size_t) - 8;"},
{"lineNum":"  332","line":"    const size_t __mask = size_t(0xF) << (__sr + 4);"},
{"lineNum":"  333","line":"    for(const char_type* __p = __lo; __p != __hi; ++__p)"},
{"lineNum":"  334","line":"    {"},
{"lineNum":"  335","line":"        __h = (__h << 4) + static_cast<size_t>(*__p);"},
{"lineNum":"  336","line":"        size_t __g = __h & __mask;"},
{"lineNum":"  337","line":"        __h ^= __g | (__g >> __sr);"},
{"lineNum":"  338","line":"    }"},
{"lineNum":"  339","line":"    return static_cast<long>(__h);"},
{"lineNum":"  340","line":"}"},
{"lineNum":"  341","line":""},
{"lineNum":"  342","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS collate<char>)"},
{"lineNum":"  343","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS collate<wchar_t>)"},
{"lineNum":"  344","line":""},
{"lineNum":"  345","line":"// template <class CharT> class collate_byname;"},
{"lineNum":"  346","line":""},
{"lineNum":"  347","line":"template <class _CharT> class _LIBCPP_TEMPLATE_VIS collate_byname;"},
{"lineNum":"  348","line":""},
{"lineNum":"  349","line":"template <>"},
{"lineNum":"  350","line":"class _LIBCPP_TYPE_VIS collate_byname<char>"},
{"lineNum":"  351","line":"    : public collate<char>"},
{"lineNum":"  352","line":"{"},
{"lineNum":"  353","line":"    locale_t __l;"},
{"lineNum":"  354","line":"public:"},
{"lineNum":"  355","line":"    typedef char char_type;"},
{"lineNum":"  356","line":"    typedef basic_string<char_type> string_type;"},
{"lineNum":"  357","line":""},
{"lineNum":"  358","line":"    explicit collate_byname(const char* __n, size_t __refs = 0);"},
{"lineNum":"  359","line":"    explicit collate_byname(const string& __n, size_t __refs = 0);"},
{"lineNum":"  360","line":""},
{"lineNum":"  361","line":"protected:"},
{"lineNum":"  362","line":"    ~collate_byname();"},
{"lineNum":"  363","line":"    virtual int do_compare(const char_type* __lo1, const char_type* __hi1,"},
{"lineNum":"  364","line":"                           const char_type* __lo2, const char_type* __hi2) const;"},
{"lineNum":"  365","line":"    virtual string_type do_transform(const char_type* __lo, const char_type* __hi) const;"},
{"lineNum":"  366","line":"};"},
{"lineNum":"  367","line":""},
{"lineNum":"  368","line":"template <>"},
{"lineNum":"  369","line":"class _LIBCPP_TYPE_VIS collate_byname<wchar_t>"},
{"lineNum":"  370","line":"    : public collate<wchar_t>"},
{"lineNum":"  371","line":"{"},
{"lineNum":"  372","line":"    locale_t __l;"},
{"lineNum":"  373","line":"public:"},
{"lineNum":"  374","line":"    typedef wchar_t char_type;"},
{"lineNum":"  375","line":"    typedef basic_string<char_type> string_type;"},
{"lineNum":"  376","line":""},
{"lineNum":"  377","line":"    explicit collate_byname(const char* __n, size_t __refs = 0);"},
{"lineNum":"  378","line":"    explicit collate_byname(const string& __n, size_t __refs = 0);"},
{"lineNum":"  379","line":""},
{"lineNum":"  380","line":"protected:"},
{"lineNum":"  381","line":"    ~collate_byname();"},
{"lineNum":"  382","line":""},
{"lineNum":"  383","line":"    virtual int do_compare(const char_type* __lo1, const char_type* __hi1,"},
{"lineNum":"  384","line":"                           const char_type* __lo2, const char_type* __hi2) const;"},
{"lineNum":"  385","line":"    virtual string_type do_transform(const char_type* __lo, const char_type* __hi) const;"},
{"lineNum":"  386","line":"};"},
{"lineNum":"  387","line":""},
{"lineNum":"  388","line":"template <class _CharT, class _Traits, class _Allocator>"},
{"lineNum":"  389","line":"bool"},
{"lineNum":"  390","line":"locale::operator()(const basic_string<_CharT, _Traits, _Allocator>& __x,"},
{"lineNum":"  391","line":"                   const basic_string<_CharT, _Traits, _Allocator>& __y) const"},
{"lineNum":"  392","line":"{"},
{"lineNum":"  393","line":"    return _VSTD::use_facet<_VSTD::collate<_CharT> >(*this).compare("},
{"lineNum":"  394","line":"                                       __x.data(), __x.data() + __x.size(),"},
{"lineNum":"  395","line":"                                       __y.data(), __y.data() + __y.size()) < 0;"},
{"lineNum":"  396","line":"}"},
{"lineNum":"  397","line":""},
{"lineNum":"  398","line":"// template <class charT> class ctype"},
{"lineNum":"  399","line":""},
{"lineNum":"  400","line":"class _LIBCPP_TYPE_VIS ctype_base"},
{"lineNum":"  401","line":"{"},
{"lineNum":"  402","line":"public:"},
{"lineNum":"  403","line":"#if defined(_LIBCPP_PROVIDES_DEFAULT_RUNE_TABLE)"},
{"lineNum":"  404","line":"    typedef unsigned long mask;"},
{"lineNum":"  405","line":"    static const mask space  = 1<<0;"},
{"lineNum":"  406","line":"    static const mask print  = 1<<1;"},
{"lineNum":"  407","line":"    static const mask cntrl  = 1<<2;"},
{"lineNum":"  408","line":"    static const mask upper  = 1<<3;"},
{"lineNum":"  409","line":"    static const mask lower  = 1<<4;"},
{"lineNum":"  410","line":"    static const mask alpha  = 1<<5;"},
{"lineNum":"  411","line":"    static const mask digit  = 1<<6;"},
{"lineNum":"  412","line":"    static const mask punct  = 1<<7;"},
{"lineNum":"  413","line":"    static const mask xdigit = 1<<8;"},
{"lineNum":"  414","line":"    static const mask blank  = 1<<9;"},
{"lineNum":"  415","line":"#if defined(__BIONIC__)"},
{"lineNum":"  416","line":"    // Historically this was a part of regex_traits rather than ctype_base. The"},
{"lineNum":"  417","line":"    // historical value of the constant is preserved for ABI compatibility."},
{"lineNum":"  418","line":"    static const mask __regex_word = 0x8000;"},
{"lineNum":"  419","line":"#else"},
{"lineNum":"  420","line":"    static const mask __regex_word = 1<<10;"},
{"lineNum":"  421","line":"#endif // defined(__BIONIC__)"},
{"lineNum":"  422","line":"#elif defined(__GLIBC__)"},
{"lineNum":"  423","line":"    typedef unsigned short mask;"},
{"lineNum":"  424","line":"    static const mask space  = _ISspace;"},
{"lineNum":"  425","line":"    static const mask print  = _ISprint;"},
{"lineNum":"  426","line":"    static const mask cntrl  = _IScntrl;"},
{"lineNum":"  427","line":"    static const mask upper  = _ISupper;"},
{"lineNum":"  428","line":"    static const mask lower  = _ISlower;"},
{"lineNum":"  429","line":"    static const mask alpha  = _ISalpha;"},
{"lineNum":"  430","line":"    static const mask digit  = _ISdigit;"},
{"lineNum":"  431","line":"    static const mask punct  = _ISpunct;"},
{"lineNum":"  432","line":"    static const mask xdigit = _ISxdigit;"},
{"lineNum":"  433","line":"    static const mask blank  = _ISblank;"},
{"lineNum":"  434","line":"#if defined(__mips__)"},
{"lineNum":"  435","line":"    static const mask __regex_word = static_cast<mask>(_ISbit(15));"},
{"lineNum":"  436","line":"#else"},
{"lineNum":"  437","line":"    static const mask __regex_word = 0x80;"},
{"lineNum":"  438","line":"#endif"},
{"lineNum":"  439","line":"#elif defined(_LIBCPP_MSVCRT_LIKE)"},
{"lineNum":"  440","line":"    typedef unsigned short mask;"},
{"lineNum":"  441","line":"    static const mask space  = _SPACE;"},
{"lineNum":"  442","line":"    static const mask print  = _BLANK|_PUNCT|_ALPHA|_DIGIT;"},
{"lineNum":"  443","line":"    static const mask cntrl  = _CONTROL;"},
{"lineNum":"  444","line":"    static const mask upper  = _UPPER;"},
{"lineNum":"  445","line":"    static const mask lower  = _LOWER;"},
{"lineNum":"  446","line":"    static const mask alpha  = _ALPHA;"},
{"lineNum":"  447","line":"    static const mask digit  = _DIGIT;"},
{"lineNum":"  448","line":"    static const mask punct  = _PUNCT;"},
{"lineNum":"  449","line":"    static const mask xdigit = _HEX;"},
{"lineNum":"  450","line":"    static const mask blank  = _BLANK;"},
{"lineNum":"  451","line":"    static const mask __regex_word = 0x80;"},
{"lineNum":"  452","line":"# define _LIBCPP_CTYPE_MASK_IS_COMPOSITE_PRINT"},
{"lineNum":"  453","line":"#elif defined(__APPLE__) || defined(__FreeBSD__) || defined(__EMSCRIPTEN__) || defined(__NetBSD__)"},
{"lineNum":"  454","line":"# ifdef __APPLE__"},
{"lineNum":"  455","line":"    typedef __uint32_t mask;"},
{"lineNum":"  456","line":"# elif defined(__FreeBSD__)"},
{"lineNum":"  457","line":"    typedef unsigned long mask;"},
{"lineNum":"  458","line":"# elif defined(__EMSCRIPTEN__) || defined(__NetBSD__)"},
{"lineNum":"  459","line":"    typedef unsigned short mask;"},
{"lineNum":"  460","line":"# endif"},
{"lineNum":"  461","line":"    static const mask space  = _CTYPE_S;"},
{"lineNum":"  462","line":"    static const mask print  = _CTYPE_R;"},
{"lineNum":"  463","line":"    static const mask cntrl  = _CTYPE_C;"},
{"lineNum":"  464","line":"    static const mask upper  = _CTYPE_U;"},
{"lineNum":"  465","line":"    static const mask lower  = _CTYPE_L;"},
{"lineNum":"  466","line":"    static const mask alpha  = _CTYPE_A;"},
{"lineNum":"  467","line":"    static const mask digit  = _CTYPE_D;"},
{"lineNum":"  468","line":"    static const mask punct  = _CTYPE_P;"},
{"lineNum":"  469","line":"    static const mask xdigit = _CTYPE_X;"},
{"lineNum":"  470","line":""},
{"lineNum":"  471","line":"# if defined(__NetBSD__)"},
{"lineNum":"  472","line":"    static const mask blank  = _CTYPE_BL;"},
{"lineNum":"  473","line":"    // NetBSD defines classes up to 0x2000"},
{"lineNum":"  474","line":"    // see sys/ctype_bits.h, _CTYPE_Q"},
{"lineNum":"  475","line":"    static const mask __regex_word = 0x8000;"},
{"lineNum":"  476","line":"# else"},
{"lineNum":"  477","line":"    static const mask blank  = _CTYPE_B;"},
{"lineNum":"  478","line":"    static const mask __regex_word = 0x80;"},
{"lineNum":"  479","line":"# endif"},
{"lineNum":"  480","line":"#elif defined(__sun__) || defined(_AIX)"},
{"lineNum":"  481","line":"    typedef unsigned int mask;"},
{"lineNum":"  482","line":"    static const mask space  = _ISSPACE;"},
{"lineNum":"  483","line":"    static const mask print  = _ISPRINT;"},
{"lineNum":"  484","line":"    static const mask cntrl  = _ISCNTRL;"},
{"lineNum":"  485","line":"    static const mask upper  = _ISUPPER;"},
{"lineNum":"  486","line":"    static const mask lower  = _ISLOWER;"},
{"lineNum":"  487","line":"    static const mask alpha  = _ISALPHA;"},
{"lineNum":"  488","line":"    static const mask digit  = _ISDIGIT;"},
{"lineNum":"  489","line":"    static const mask punct  = _ISPUNCT;"},
{"lineNum":"  490","line":"    static const mask xdigit = _ISXDIGIT;"},
{"lineNum":"  491","line":"    static const mask blank  = _ISBLANK;"},
{"lineNum":"  492","line":"    static const mask __regex_word = 0x80;"},
{"lineNum":"  493","line":"#elif defined(_NEWLIB_VERSION)"},
{"lineNum":"  494","line":"    // Same type as Newlib\'s _ctype_ array in newlib/libc/include/ctype.h."},
{"lineNum":"  495","line":"    typedef char mask;"},
{"lineNum":"  496","line":"    static const mask space  = _S;"},
{"lineNum":"  497","line":"    static const mask print  = _P | _U | _L | _N | _B;"},
{"lineNum":"  498","line":"    static const mask cntrl  = _C;"},
{"lineNum":"  499","line":"    static const mask upper  = _U;"},
{"lineNum":"  500","line":"    static const mask lower  = _L;"},
{"lineNum":"  501","line":"    static const mask alpha  = _U | _L;"},
{"lineNum":"  502","line":"    static const mask digit  = _N;"},
{"lineNum":"  503","line":"    static const mask punct  = _P;"},
{"lineNum":"  504","line":"    static const mask xdigit = _X | _N;"},
{"lineNum":"  505","line":"    static const mask blank  = _B;"},
{"lineNum":"  506","line":"    static const mask __regex_word = 0x80;"},
{"lineNum":"  507","line":"# define _LIBCPP_CTYPE_MASK_IS_COMPOSITE_PRINT"},
{"lineNum":"  508","line":"# define _LIBCPP_CTYPE_MASK_IS_COMPOSITE_ALPHA"},
{"lineNum":"  509","line":"# define _LIBCPP_CTYPE_MASK_IS_COMPOSITE_XDIGIT"},
{"lineNum":"  510","line":"#else"},
{"lineNum":"  511","line":"# error unknown rune table for this platform -- do you mean to define _LIBCPP_PROVIDES_DEFAULT_RUNE_TABLE?"},
{"lineNum":"  512","line":"#endif"},
{"lineNum":"  513","line":"    static const mask alnum  = alpha | digit;"},
{"lineNum":"  514","line":"    static const mask graph  = alnum | punct;"},
{"lineNum":"  515","line":""},
{"lineNum":"  516","line":"    _LIBCPP_INLINE_VISIBILITY ctype_base() {}"},
{"lineNum":"  517","line":"};"},
{"lineNum":"  518","line":""},
{"lineNum":"  519","line":"template <class _CharT> class _LIBCPP_TEMPLATE_VIS ctype;"},
{"lineNum":"  520","line":""},
{"lineNum":"  521","line":"template <>"},
{"lineNum":"  522","line":"class _LIBCPP_TYPE_VIS ctype<wchar_t>"},
{"lineNum":"  523","line":"    : public locale::facet,"},
{"lineNum":"  524","line":"      public ctype_base"},
{"lineNum":"  525","line":"{"},
{"lineNum":"  526","line":"public:"},
{"lineNum":"  527","line":"    typedef wchar_t char_type;"},
{"lineNum":"  528","line":""},
{"lineNum":"  529","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  530","line":"    explicit ctype(size_t __refs = 0)"},
{"lineNum":"  531","line":"        : locale::facet(__refs) {}"},
{"lineNum":"  532","line":""},
{"lineNum":"  533","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  534","line":"    bool is(mask __m, char_type __c) const"},
{"lineNum":"  535","line":"    {"},
{"lineNum":"  536","line":"        return do_is(__m, __c);"},
{"lineNum":"  537","line":"    }"},
{"lineNum":"  538","line":""},
{"lineNum":"  539","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  540","line":"    const char_type* is(const char_type* __low, const char_type* __high, mask* __vec) const"},
{"lineNum":"  541","line":"    {"},
{"lineNum":"  542","line":"        return do_is(__low, __high, __vec);"},
{"lineNum":"  543","line":"    }"},
{"lineNum":"  544","line":""},
{"lineNum":"  545","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  546","line":"    const char_type* scan_is(mask __m, const char_type* __low, const char_type* __high) const"},
{"lineNum":"  547","line":"    {"},
{"lineNum":"  548","line":"        return do_scan_is(__m, __low, __high);"},
{"lineNum":"  549","line":"    }"},
{"lineNum":"  550","line":""},
{"lineNum":"  551","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  552","line":"    const char_type* scan_not(mask __m, const char_type* __low, const char_type* __high) const"},
{"lineNum":"  553","line":"    {"},
{"lineNum":"  554","line":"        return do_scan_not(__m, __low, __high);"},
{"lineNum":"  555","line":"    }"},
{"lineNum":"  556","line":""},
{"lineNum":"  557","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  558","line":"    char_type toupper(char_type __c) const"},
{"lineNum":"  559","line":"    {"},
{"lineNum":"  560","line":"        return do_toupper(__c);"},
{"lineNum":"  561","line":"    }"},
{"lineNum":"  562","line":""},
{"lineNum":"  563","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  564","line":"    const char_type* toupper(char_type* __low, const char_type* __high) const"},
{"lineNum":"  565","line":"    {"},
{"lineNum":"  566","line":"        return do_toupper(__low, __high);"},
{"lineNum":"  567","line":"    }"},
{"lineNum":"  568","line":""},
{"lineNum":"  569","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  570","line":"    char_type tolower(char_type __c) const"},
{"lineNum":"  571","line":"    {"},
{"lineNum":"  572","line":"        return do_tolower(__c);"},
{"lineNum":"  573","line":"    }"},
{"lineNum":"  574","line":""},
{"lineNum":"  575","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  576","line":"    const char_type* tolower(char_type* __low, const char_type* __high) const"},
{"lineNum":"  577","line":"    {"},
{"lineNum":"  578","line":"        return do_tolower(__low, __high);"},
{"lineNum":"  579","line":"    }"},
{"lineNum":"  580","line":""},
{"lineNum":"  581","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  582","line":"    char_type widen(char __c) const"},
{"lineNum":"  583","line":"    {"},
{"lineNum":"  584","line":"        return do_widen(__c);"},
{"lineNum":"  585","line":"    }"},
{"lineNum":"  586","line":""},
{"lineNum":"  587","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  588","line":"    const char* widen(const char* __low, const char* __high, char_type* __to) const"},
{"lineNum":"  589","line":"    {"},
{"lineNum":"  590","line":"        return do_widen(__low, __high, __to);"},
{"lineNum":"  591","line":"    }"},
{"lineNum":"  592","line":""},
{"lineNum":"  593","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  594","line":"    char narrow(char_type __c, char __dfault) const"},
{"lineNum":"  595","line":"    {"},
{"lineNum":"  596","line":"        return do_narrow(__c, __dfault);"},
{"lineNum":"  597","line":"    }"},
{"lineNum":"  598","line":""},
{"lineNum":"  599","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  600","line":"    const char_type* narrow(const char_type* __low, const char_type* __high, char __dfault, char* __to) const"},
{"lineNum":"  601","line":"    {"},
{"lineNum":"  602","line":"        return do_narrow(__low, __high, __dfault, __to);"},
{"lineNum":"  603","line":"    }"},
{"lineNum":"  604","line":""},
{"lineNum":"  605","line":"    static locale::id id;"},
{"lineNum":"  606","line":""},
{"lineNum":"  607","line":"protected:"},
{"lineNum":"  608","line":"    ~ctype();"},
{"lineNum":"  609","line":"    virtual bool do_is(mask __m, char_type __c) const;"},
{"lineNum":"  610","line":"    virtual const char_type* do_is(const char_type* __low, const char_type* __high, mask* __vec) const;"},
{"lineNum":"  611","line":"    virtual const char_type* do_scan_is(mask __m, const char_type* __low, const char_type* __high) const;"},
{"lineNum":"  612","line":"    virtual const char_type* do_scan_not(mask __m, const char_type* __low, const char_type* __high) const;"},
{"lineNum":"  613","line":"    virtual char_type do_toupper(char_type) const;"},
{"lineNum":"  614","line":"    virtual const char_type* do_toupper(char_type* __low, const char_type* __high) const;"},
{"lineNum":"  615","line":"    virtual char_type do_tolower(char_type) const;"},
{"lineNum":"  616","line":"    virtual const char_type* do_tolower(char_type* __low, const char_type* __high) const;"},
{"lineNum":"  617","line":"    virtual char_type do_widen(char) const;"},
{"lineNum":"  618","line":"    virtual const char* do_widen(const char* __low, const char* __high, char_type* __dest) const;"},
{"lineNum":"  619","line":"    virtual char do_narrow(char_type, char __dfault) const;"},
{"lineNum":"  620","line":"    virtual const char_type* do_narrow(const char_type* __low, const char_type* __high, char __dfault, char* __dest) const;"},
{"lineNum":"  621","line":"};"},
{"lineNum":"  622","line":""},
{"lineNum":"  623","line":"template <>"},
{"lineNum":"  624","line":"class _LIBCPP_TYPE_VIS ctype<char>"},
{"lineNum":"  625","line":"    : public locale::facet, public ctype_base"},
{"lineNum":"  626","line":"{"},
{"lineNum":"  627","line":"    const mask* __tab_;"},
{"lineNum":"  628","line":"    bool        __del_;"},
{"lineNum":"  629","line":"public:"},
{"lineNum":"  630","line":"    typedef char char_type;"},
{"lineNum":"  631","line":""},
{"lineNum":"  632","line":"    explicit ctype(const mask* __tab = nullptr, bool __del = false, size_t __refs = 0);"},
{"lineNum":"  633","line":""},
{"lineNum":"  634","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  635","line":"    bool is(mask __m, char_type __c) const"},
{"lineNum":"  636","line":"    {"},
{"lineNum":"  637","line":"        return isascii(__c) ? (__tab_[static_cast<int>(__c)] & __m) !=0 : false;","class":"lineNoCov","hits":"0","possible_hits":"16",},
{"lineNum":"  638","line":"    }"},
{"lineNum":"  639","line":""},
{"lineNum":"  640","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  641","line":"    const char_type* is(const char_type* __low, const char_type* __high, mask* __vec) const"},
{"lineNum":"  642","line":"    {"},
{"lineNum":"  643","line":"        for (; __low != __high; ++__low, ++__vec)"},
{"lineNum":"  644","line":"            *__vec = isascii(*__low) ? __tab_[static_cast<int>(*__low)] : 0;"},
{"lineNum":"  645","line":"        return __low;"},
{"lineNum":"  646","line":"    }"},
{"lineNum":"  647","line":""},
{"lineNum":"  648","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  649","line":"    const char_type* scan_is (mask __m, const char_type* __low, const char_type* __high) const"},
{"lineNum":"  650","line":"    {"},
{"lineNum":"  651","line":"        for (; __low != __high; ++__low)"},
{"lineNum":"  652","line":"            if (isascii(*__low) && (__tab_[static_cast<int>(*__low)] & __m))"},
{"lineNum":"  653","line":"                break;"},
{"lineNum":"  654","line":"        return __low;"},
{"lineNum":"  655","line":"    }"},
{"lineNum":"  656","line":""},
{"lineNum":"  657","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  658","line":"    const char_type* scan_not(mask __m, const char_type* __low, const char_type* __high) const"},
{"lineNum":"  659","line":"    {"},
{"lineNum":"  660","line":"        for (; __low != __high; ++__low)"},
{"lineNum":"  661","line":"            if (!(isascii(*__low) && (__tab_[static_cast<int>(*__low)] & __m)))"},
{"lineNum":"  662","line":"                break;"},
{"lineNum":"  663","line":"        return __low;"},
{"lineNum":"  664","line":"    }"},
{"lineNum":"  665","line":""},
{"lineNum":"  666","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  667","line":"    char_type toupper(char_type __c) const"},
{"lineNum":"  668","line":"    {"},
{"lineNum":"  669","line":"        return do_toupper(__c);"},
{"lineNum":"  670","line":"    }"},
{"lineNum":"  671","line":""},
{"lineNum":"  672","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  673","line":"    const char_type* toupper(char_type* __low, const char_type* __high) const"},
{"lineNum":"  674","line":"    {"},
{"lineNum":"  675","line":"        return do_toupper(__low, __high);"},
{"lineNum":"  676","line":"    }"},
{"lineNum":"  677","line":""},
{"lineNum":"  678","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  679","line":"    char_type tolower(char_type __c) const"},
{"lineNum":"  680","line":"    {"},
{"lineNum":"  681","line":"        return do_tolower(__c);","class":"lineNoCov","hits":"0","possible_hits":"15",},
{"lineNum":"  682","line":"    }"},
{"lineNum":"  683","line":""},
{"lineNum":"  684","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  685","line":"    const char_type* tolower(char_type* __low, const char_type* __high) const"},
{"lineNum":"  686","line":"    {"},
{"lineNum":"  687","line":"        return do_tolower(__low, __high);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  688","line":"    }"},
{"lineNum":"  689","line":""},
{"lineNum":"  690","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  691","line":"    char_type widen(char __c) const"},
{"lineNum":"  692","line":"    {"},
{"lineNum":"  693","line":"        return do_widen(__c);","class":"lineNoCov","hits":"0","possible_hits":"61",},
{"lineNum":"  694","line":"    }"},
{"lineNum":"  695","line":""},
{"lineNum":"  696","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  697","line":"    const char* widen(const char* __low, const char* __high, char_type* __to) const"},
{"lineNum":"  698","line":"    {"},
{"lineNum":"  699","line":"        return do_widen(__low, __high, __to);"},
{"lineNum":"  700","line":"    }"},
{"lineNum":"  701","line":""},
{"lineNum":"  702","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  703","line":"    char narrow(char_type __c, char __dfault) const"},
{"lineNum":"  704","line":"    {"},
{"lineNum":"  705","line":"        return do_narrow(__c, __dfault);"},
{"lineNum":"  706","line":"    }"},
{"lineNum":"  707","line":""},
{"lineNum":"  708","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  709","line":"    const char* narrow(const char_type* __low, const char_type* __high, char __dfault, char* __to) const"},
{"lineNum":"  710","line":"    {"},
{"lineNum":"  711","line":"        return do_narrow(__low, __high, __dfault, __to);"},
{"lineNum":"  712","line":"    }"},
{"lineNum":"  713","line":""},
{"lineNum":"  714","line":"    static locale::id id;"},
{"lineNum":"  715","line":""},
{"lineNum":"  716","line":"#ifdef _CACHED_RUNES"},
{"lineNum":"  717","line":"    static const size_t table_size = _CACHED_RUNES;"},
{"lineNum":"  718","line":"#else"},
{"lineNum":"  719","line":"    static const size_t table_size = 256;  // FIXME: Don\'t hardcode this."},
{"lineNum":"  720","line":"#endif"},
{"lineNum":"  721","line":"    _LIBCPP_INLINE_VISIBILITY const mask* table() const  _NOEXCEPT {return __tab_;}"},
{"lineNum":"  722","line":"    static const mask* classic_table()  _NOEXCEPT;"},
{"lineNum":"  723","line":"#if defined(__GLIBC__) || defined(__EMSCRIPTEN__)"},
{"lineNum":"  724","line":"    static const int* __classic_upper_table() _NOEXCEPT;"},
{"lineNum":"  725","line":"    static const int* __classic_lower_table() _NOEXCEPT;"},
{"lineNum":"  726","line":"#endif"},
{"lineNum":"  727","line":"#if defined(__NetBSD__)"},
{"lineNum":"  728","line":"    static const short* __classic_upper_table() _NOEXCEPT;"},
{"lineNum":"  729","line":"    static const short* __classic_lower_table() _NOEXCEPT;"},
{"lineNum":"  730","line":"#endif"},
{"lineNum":"  731","line":""},
{"lineNum":"  732","line":"protected:"},
{"lineNum":"  733","line":"    ~ctype();"},
{"lineNum":"  734","line":"    virtual char_type do_toupper(char_type __c) const;"},
{"lineNum":"  735","line":"    virtual const char_type* do_toupper(char_type* __low, const char_type* __high) const;"},
{"lineNum":"  736","line":"    virtual char_type do_tolower(char_type __c) const;"},
{"lineNum":"  737","line":"    virtual const char_type* do_tolower(char_type* __low, const char_type* __high) const;"},
{"lineNum":"  738","line":"    virtual char_type do_widen(char __c) const;"},
{"lineNum":"  739","line":"    virtual const char* do_widen(const char* __low, const char* __high, char_type* __to) const;"},
{"lineNum":"  740","line":"    virtual char do_narrow(char_type __c, char __dfault) const;"},
{"lineNum":"  741","line":"    virtual const char* do_narrow(const char_type* __low, const char_type* __high, char __dfault, char* __to) const;"},
{"lineNum":"  742","line":"};"},
{"lineNum":"  743","line":""},
{"lineNum":"  744","line":"// template <class CharT> class ctype_byname;"},
{"lineNum":"  745","line":""},
{"lineNum":"  746","line":"template <class _CharT> class _LIBCPP_TEMPLATE_VIS ctype_byname;"},
{"lineNum":"  747","line":""},
{"lineNum":"  748","line":"template <>"},
{"lineNum":"  749","line":"class _LIBCPP_TYPE_VIS ctype_byname<char>"},
{"lineNum":"  750","line":"    : public ctype<char>"},
{"lineNum":"  751","line":"{"},
{"lineNum":"  752","line":"    locale_t __l;"},
{"lineNum":"  753","line":""},
{"lineNum":"  754","line":"public:"},
{"lineNum":"  755","line":"    explicit ctype_byname(const char*, size_t = 0);"},
{"lineNum":"  756","line":"    explicit ctype_byname(const string&, size_t = 0);"},
{"lineNum":"  757","line":""},
{"lineNum":"  758","line":"protected:"},
{"lineNum":"  759","line":"    ~ctype_byname();"},
{"lineNum":"  760","line":"    virtual char_type do_toupper(char_type) const;"},
{"lineNum":"  761","line":"    virtual const char_type* do_toupper(char_type* __low, const char_type* __high) const;"},
{"lineNum":"  762","line":"    virtual char_type do_tolower(char_type) const;"},
{"lineNum":"  763","line":"    virtual const char_type* do_tolower(char_type* __low, const char_type* __high) const;"},
{"lineNum":"  764","line":"};"},
{"lineNum":"  765","line":""},
{"lineNum":"  766","line":"template <>"},
{"lineNum":"  767","line":"class _LIBCPP_TYPE_VIS ctype_byname<wchar_t>"},
{"lineNum":"  768","line":"    : public ctype<wchar_t>"},
{"lineNum":"  769","line":"{"},
{"lineNum":"  770","line":"    locale_t __l;"},
{"lineNum":"  771","line":""},
{"lineNum":"  772","line":"public:"},
{"lineNum":"  773","line":"    explicit ctype_byname(const char*, size_t = 0);"},
{"lineNum":"  774","line":"    explicit ctype_byname(const string&, size_t = 0);"},
{"lineNum":"  775","line":""},
{"lineNum":"  776","line":"protected:"},
{"lineNum":"  777","line":"    ~ctype_byname();"},
{"lineNum":"  778","line":"    virtual bool do_is(mask __m, char_type __c) const;"},
{"lineNum":"  779","line":"    virtual const char_type* do_is(const char_type* __low, const char_type* __high, mask* __vec) const;"},
{"lineNum":"  780","line":"    virtual const char_type* do_scan_is(mask __m, const char_type* __low, const char_type* __high) const;"},
{"lineNum":"  781","line":"    virtual const char_type* do_scan_not(mask __m, const char_type* __low, const char_type* __high) const;"},
{"lineNum":"  782","line":"    virtual char_type do_toupper(char_type) const;"},
{"lineNum":"  783","line":"    virtual const char_type* do_toupper(char_type* __low, const char_type* __high) const;"},
{"lineNum":"  784","line":"    virtual char_type do_tolower(char_type) const;"},
{"lineNum":"  785","line":"    virtual const char_type* do_tolower(char_type* __low, const char_type* __high) const;"},
{"lineNum":"  786","line":"    virtual char_type do_widen(char) const;"},
{"lineNum":"  787","line":"    virtual const char* do_widen(const char* __low, const char* __high, char_type* __dest) const;"},
{"lineNum":"  788","line":"    virtual char do_narrow(char_type, char __dfault) const;"},
{"lineNum":"  789","line":"    virtual const char_type* do_narrow(const char_type* __low, const char_type* __high, char __dfault, char* __dest) const;"},
{"lineNum":"  790","line":"};"},
{"lineNum":"  791","line":""},
{"lineNum":"  792","line":"template <class _CharT>"},
{"lineNum":"  793","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  794","line":"bool"},
{"lineNum":"  795","line":"isspace(_CharT __c, const locale& __loc)"},
{"lineNum":"  796","line":"{"},
{"lineNum":"  797","line":"    return use_facet<ctype<_CharT> >(__loc).is(ctype_base::space, __c);"},
{"lineNum":"  798","line":"}"},
{"lineNum":"  799","line":""},
{"lineNum":"  800","line":"template <class _CharT>"},
{"lineNum":"  801","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  802","line":"bool"},
{"lineNum":"  803","line":"isprint(_CharT __c, const locale& __loc)"},
{"lineNum":"  804","line":"{"},
{"lineNum":"  805","line":"    return use_facet<ctype<_CharT> >(__loc).is(ctype_base::print, __c);"},
{"lineNum":"  806","line":"}"},
{"lineNum":"  807","line":""},
{"lineNum":"  808","line":"template <class _CharT>"},
{"lineNum":"  809","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  810","line":"bool"},
{"lineNum":"  811","line":"iscntrl(_CharT __c, const locale& __loc)"},
{"lineNum":"  812","line":"{"},
{"lineNum":"  813","line":"    return use_facet<ctype<_CharT> >(__loc).is(ctype_base::cntrl, __c);"},
{"lineNum":"  814","line":"}"},
{"lineNum":"  815","line":""},
{"lineNum":"  816","line":"template <class _CharT>"},
{"lineNum":"  817","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  818","line":"bool"},
{"lineNum":"  819","line":"isupper(_CharT __c, const locale& __loc)"},
{"lineNum":"  820","line":"{"},
{"lineNum":"  821","line":"    return use_facet<ctype<_CharT> >(__loc).is(ctype_base::upper, __c);"},
{"lineNum":"  822","line":"}"},
{"lineNum":"  823","line":""},
{"lineNum":"  824","line":"template <class _CharT>"},
{"lineNum":"  825","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  826","line":"bool"},
{"lineNum":"  827","line":"islower(_CharT __c, const locale& __loc)"},
{"lineNum":"  828","line":"{"},
{"lineNum":"  829","line":"    return use_facet<ctype<_CharT> >(__loc).is(ctype_base::lower, __c);"},
{"lineNum":"  830","line":"}"},
{"lineNum":"  831","line":""},
{"lineNum":"  832","line":"template <class _CharT>"},
{"lineNum":"  833","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  834","line":"bool"},
{"lineNum":"  835","line":"isalpha(_CharT __c, const locale& __loc)"},
{"lineNum":"  836","line":"{"},
{"lineNum":"  837","line":"    return use_facet<ctype<_CharT> >(__loc).is(ctype_base::alpha, __c);"},
{"lineNum":"  838","line":"}"},
{"lineNum":"  839","line":""},
{"lineNum":"  840","line":"template <class _CharT>"},
{"lineNum":"  841","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  842","line":"bool"},
{"lineNum":"  843","line":"isdigit(_CharT __c, const locale& __loc)"},
{"lineNum":"  844","line":"{"},
{"lineNum":"  845","line":"    return use_facet<ctype<_CharT> >(__loc).is(ctype_base::digit, __c);"},
{"lineNum":"  846","line":"}"},
{"lineNum":"  847","line":""},
{"lineNum":"  848","line":"template <class _CharT>"},
{"lineNum":"  849","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  850","line":"bool"},
{"lineNum":"  851","line":"ispunct(_CharT __c, const locale& __loc)"},
{"lineNum":"  852","line":"{"},
{"lineNum":"  853","line":"    return use_facet<ctype<_CharT> >(__loc).is(ctype_base::punct, __c);"},
{"lineNum":"  854","line":"}"},
{"lineNum":"  855","line":""},
{"lineNum":"  856","line":"template <class _CharT>"},
{"lineNum":"  857","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  858","line":"bool"},
{"lineNum":"  859","line":"isxdigit(_CharT __c, const locale& __loc)"},
{"lineNum":"  860","line":"{"},
{"lineNum":"  861","line":"    return use_facet<ctype<_CharT> >(__loc).is(ctype_base::xdigit, __c);"},
{"lineNum":"  862","line":"}"},
{"lineNum":"  863","line":""},
{"lineNum":"  864","line":"template <class _CharT>"},
{"lineNum":"  865","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  866","line":"bool"},
{"lineNum":"  867","line":"isalnum(_CharT __c, const locale& __loc)"},
{"lineNum":"  868","line":"{"},
{"lineNum":"  869","line":"    return use_facet<ctype<_CharT> >(__loc).is(ctype_base::alnum, __c);"},
{"lineNum":"  870","line":"}"},
{"lineNum":"  871","line":""},
{"lineNum":"  872","line":"template <class _CharT>"},
{"lineNum":"  873","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  874","line":"bool"},
{"lineNum":"  875","line":"isgraph(_CharT __c, const locale& __loc)"},
{"lineNum":"  876","line":"{"},
{"lineNum":"  877","line":"    return use_facet<ctype<_CharT> >(__loc).is(ctype_base::graph, __c);"},
{"lineNum":"  878","line":"}"},
{"lineNum":"  879","line":""},
{"lineNum":"  880","line":"template <class _CharT>"},
{"lineNum":"  881","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  882","line":"_CharT"},
{"lineNum":"  883","line":"toupper(_CharT __c, const locale& __loc)"},
{"lineNum":"  884","line":"{"},
{"lineNum":"  885","line":"    return use_facet<ctype<_CharT> >(__loc).toupper(__c);"},
{"lineNum":"  886","line":"}"},
{"lineNum":"  887","line":""},
{"lineNum":"  888","line":"template <class _CharT>"},
{"lineNum":"  889","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  890","line":"_CharT"},
{"lineNum":"  891","line":"tolower(_CharT __c, const locale& __loc)"},
{"lineNum":"  892","line":"{"},
{"lineNum":"  893","line":"    return use_facet<ctype<_CharT> >(__loc).tolower(__c);"},
{"lineNum":"  894","line":"}"},
{"lineNum":"  895","line":""},
{"lineNum":"  896","line":"// codecvt_base"},
{"lineNum":"  897","line":""},
{"lineNum":"  898","line":"class _LIBCPP_TYPE_VIS codecvt_base"},
{"lineNum":"  899","line":"{"},
{"lineNum":"  900","line":"public:"},
{"lineNum":"  901","line":"    _LIBCPP_INLINE_VISIBILITY codecvt_base() {}"},
{"lineNum":"  902","line":"    enum result {ok, partial, error, noconv};"},
{"lineNum":"  903","line":"};"},
{"lineNum":"  904","line":""},
{"lineNum":"  905","line":"// template <class internT, class externT, class stateT> class codecvt;"},
{"lineNum":"  906","line":""},
{"lineNum":"  907","line":"template <class _InternT, class _ExternT, class _StateT> class _LIBCPP_TEMPLATE_VIS codecvt;"},
{"lineNum":"  908","line":""},
{"lineNum":"  909","line":"// template <> class codecvt<char, char, mbstate_t>"},
{"lineNum":"  910","line":""},
{"lineNum":"  911","line":"template <>"},
{"lineNum":"  912","line":"class _LIBCPP_TYPE_VIS codecvt<char, char, mbstate_t>"},
{"lineNum":"  913","line":"    : public locale::facet,"},
{"lineNum":"  914","line":"      public codecvt_base"},
{"lineNum":"  915","line":"{"},
{"lineNum":"  916","line":"public:"},
{"lineNum":"  917","line":"    typedef char      intern_type;"},
{"lineNum":"  918","line":"    typedef char      extern_type;"},
{"lineNum":"  919","line":"    typedef mbstate_t state_type;"},
{"lineNum":"  920","line":""},
{"lineNum":"  921","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  922","line":"    explicit codecvt(size_t __refs = 0)"},
{"lineNum":"  923","line":"        : locale::facet(__refs) {}"},
{"lineNum":"  924","line":""},
{"lineNum":"  925","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  926","line":"    result out(state_type& __st,"},
{"lineNum":"  927","line":"               const intern_type* __frm, const intern_type* __frm_end, const intern_type*& __frm_nxt,"},
{"lineNum":"  928","line":"               extern_type* __to, extern_type* __to_end, extern_type*& __to_nxt) const"},
{"lineNum":"  929","line":"    {"},
{"lineNum":"  930","line":"        return do_out(__st, __frm, __frm_end, __frm_nxt, __to, __to_end, __to_nxt);","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  931","line":"    }"},
{"lineNum":"  932","line":""},
{"lineNum":"  933","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  934","line":"    result unshift(state_type& __st,"},
{"lineNum":"  935","line":"                   extern_type* __to, extern_type* __to_end, extern_type*& __to_nxt) const"},
{"lineNum":"  936","line":"    {"},
{"lineNum":"  937","line":"        return do_unshift(__st, __to, __to_end, __to_nxt);","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  938","line":"    }"},
{"lineNum":"  939","line":""},
{"lineNum":"  940","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  941","line":"    result in(state_type& __st,"},
{"lineNum":"  942","line":"              const extern_type* __frm, const extern_type* __frm_end, const extern_type*& __frm_nxt,"},
{"lineNum":"  943","line":"              intern_type* __to, intern_type* __to_end, intern_type*& __to_nxt) const"},
{"lineNum":"  944","line":"    {"},
{"lineNum":"  945","line":"        return do_in(__st, __frm, __frm_end, __frm_nxt, __to, __to_end, __to_nxt);","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  946","line":"    }"},
{"lineNum":"  947","line":""},
{"lineNum":"  948","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  949","line":"    int encoding() const  _NOEXCEPT"},
{"lineNum":"  950","line":"    {"},
{"lineNum":"  951","line":"        return do_encoding();","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  952","line":"    }"},
{"lineNum":"  953","line":""},
{"lineNum":"  954","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  955","line":"    bool always_noconv() const  _NOEXCEPT"},
{"lineNum":"  956","line":"    {"},
{"lineNum":"  957","line":"        return do_always_noconv();","class":"lineNoCov","hits":"0","possible_hits":"12",},
{"lineNum":"  958","line":"    }"},
{"lineNum":"  959","line":""},
{"lineNum":"  960","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  961","line":"    int length(state_type& __st, const extern_type* __frm, const extern_type* __end, size_t __mx) const"},
{"lineNum":"  962","line":"    {"},
{"lineNum":"  963","line":"        return do_length(__st, __frm, __end, __mx);","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  964","line":"    }"},
{"lineNum":"  965","line":""},
{"lineNum":"  966","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  967","line":"    int max_length() const  _NOEXCEPT"},
{"lineNum":"  968","line":"    {"},
{"lineNum":"  969","line":"        return do_max_length();"},
{"lineNum":"  970","line":"    }"},
{"lineNum":"  971","line":""},
{"lineNum":"  972","line":"    static locale::id id;"},
{"lineNum":"  973","line":""},
{"lineNum":"  974","line":"protected:"},
{"lineNum":"  975","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  976","line":"    explicit codecvt(const char*, size_t __refs = 0)"},
{"lineNum":"  977","line":"        : locale::facet(__refs) {}"},
{"lineNum":"  978","line":""},
{"lineNum":"  979","line":"    ~codecvt();"},
{"lineNum":"  980","line":""},
{"lineNum":"  981","line":"    virtual result do_out(state_type& __st,"},
{"lineNum":"  982","line":"                          const intern_type* __frm, const intern_type* __frm_end, const intern_type*& __frm_nxt,"},
{"lineNum":"  983","line":"                          extern_type* __to, extern_type* __to_end, extern_type*& __to_nxt) const;"},
{"lineNum":"  984","line":"    virtual result do_in(state_type& __st,"},
{"lineNum":"  985","line":"                         const extern_type* __frm, const extern_type* __frm_end, const extern_type*& __frm_nxt,"},
{"lineNum":"  986","line":"                         intern_type* __to, intern_type* __to_end, intern_type*& __to_nxt) const;"},
{"lineNum":"  987","line":"    virtual result do_unshift(state_type& __st,"},
{"lineNum":"  988","line":"                              extern_type* __to, extern_type* __to_end, extern_type*& __to_nxt) const;"},
{"lineNum":"  989","line":"    virtual int do_encoding() const  _NOEXCEPT;"},
{"lineNum":"  990","line":"    virtual bool do_always_noconv() const  _NOEXCEPT;"},
{"lineNum":"  991","line":"    virtual int do_length(state_type& __st, const extern_type* __frm, const extern_type* __end, size_t __mx) const;"},
{"lineNum":"  992","line":"    virtual int do_max_length() const  _NOEXCEPT;"},
{"lineNum":"  993","line":"};"},
{"lineNum":"  994","line":""},
{"lineNum":"  995","line":"// template <> class codecvt<wchar_t, char, mbstate_t>"},
{"lineNum":"  996","line":""},
{"lineNum":"  997","line":"template <>"},
{"lineNum":"  998","line":"class _LIBCPP_TYPE_VIS codecvt<wchar_t, char, mbstate_t>"},
{"lineNum":"  999","line":"    : public locale::facet,"},
{"lineNum":" 1000","line":"      public codecvt_base"},
{"lineNum":" 1001","line":"{"},
{"lineNum":" 1002","line":"    locale_t __l;"},
{"lineNum":" 1003","line":"public:"},
{"lineNum":" 1004","line":"    typedef wchar_t   intern_type;"},
{"lineNum":" 1005","line":"    typedef char      extern_type;"},
{"lineNum":" 1006","line":"    typedef mbstate_t state_type;"},
{"lineNum":" 1007","line":""},
{"lineNum":" 1008","line":"    explicit codecvt(size_t __refs = 0);"},
{"lineNum":" 1009","line":""},
{"lineNum":" 1010","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1011","line":"    result out(state_type& __st,"},
{"lineNum":" 1012","line":"               const intern_type* __frm, const intern_type* __frm_end, const intern_type*& __frm_nxt,"},
{"lineNum":" 1013","line":"               extern_type* __to, extern_type* __to_end, extern_type*& __to_nxt) const"},
{"lineNum":" 1014","line":"    {"},
{"lineNum":" 1015","line":"        return do_out(__st, __frm, __frm_end, __frm_nxt, __to, __to_end, __to_nxt);"},
{"lineNum":" 1016","line":"    }"},
{"lineNum":" 1017","line":""},
{"lineNum":" 1018","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1019","line":"    result unshift(state_type& __st,"},
{"lineNum":" 1020","line":"                   extern_type* __to, extern_type* __to_end, extern_type*& __to_nxt) const"},
{"lineNum":" 1021","line":"    {"},
{"lineNum":" 1022","line":"        return do_unshift(__st, __to, __to_end, __to_nxt);"},
{"lineNum":" 1023","line":"    }"},
{"lineNum":" 1024","line":""},
{"lineNum":" 1025","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1026","line":"    result in(state_type& __st,"},
{"lineNum":" 1027","line":"              const extern_type* __frm, const extern_type* __frm_end, const extern_type*& __frm_nxt,"},
{"lineNum":" 1028","line":"              intern_type* __to, intern_type* __to_end, intern_type*& __to_nxt) const"},
{"lineNum":" 1029","line":"    {"},
{"lineNum":" 1030","line":"        return do_in(__st, __frm, __frm_end, __frm_nxt, __to, __to_end, __to_nxt);"},
{"lineNum":" 1031","line":"    }"},
{"lineNum":" 1032","line":""},
{"lineNum":" 1033","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1034","line":"    int encoding() const  _NOEXCEPT"},
{"lineNum":" 1035","line":"    {"},
{"lineNum":" 1036","line":"        return do_encoding();"},
{"lineNum":" 1037","line":"    }"},
{"lineNum":" 1038","line":""},
{"lineNum":" 1039","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1040","line":"    bool always_noconv() const  _NOEXCEPT"},
{"lineNum":" 1041","line":"    {"},
{"lineNum":" 1042","line":"        return do_always_noconv();"},
{"lineNum":" 1043","line":"    }"},
{"lineNum":" 1044","line":""},
{"lineNum":" 1045","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1046","line":"    int length(state_type& __st, const extern_type* __frm, const extern_type* __end, size_t __mx) const"},
{"lineNum":" 1047","line":"    {"},
{"lineNum":" 1048","line":"        return do_length(__st, __frm, __end, __mx);"},
{"lineNum":" 1049","line":"    }"},
{"lineNum":" 1050","line":""},
{"lineNum":" 1051","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1052","line":"    int max_length() const  _NOEXCEPT"},
{"lineNum":" 1053","line":"    {"},
{"lineNum":" 1054","line":"        return do_max_length();"},
{"lineNum":" 1055","line":"    }"},
{"lineNum":" 1056","line":""},
{"lineNum":" 1057","line":"    static locale::id id;"},
{"lineNum":" 1058","line":""},
{"lineNum":" 1059","line":"protected:"},
{"lineNum":" 1060","line":"    explicit codecvt(const char*, size_t __refs = 0);"},
{"lineNum":" 1061","line":""},
{"lineNum":" 1062","line":"    ~codecvt();"},
{"lineNum":" 1063","line":""},
{"lineNum":" 1064","line":"    virtual result do_out(state_type& __st,"},
{"lineNum":" 1065","line":"                          const intern_type* __frm, const intern_type* __frm_end, const intern_type*& __frm_nxt,"},
{"lineNum":" 1066","line":"                          extern_type* __to, extern_type* __to_end, extern_type*& __to_nxt) const;"},
{"lineNum":" 1067","line":"    virtual result do_in(state_type& __st,"},
{"lineNum":" 1068","line":"                         const extern_type* __frm, const extern_type* __frm_end, const extern_type*& __frm_nxt,"},
{"lineNum":" 1069","line":"                         intern_type* __to, intern_type* __to_end, intern_type*& __to_nxt) const;"},
{"lineNum":" 1070","line":"    virtual result do_unshift(state_type& __st,"},
{"lineNum":" 1071","line":"                              extern_type* __to, extern_type* __to_end, extern_type*& __to_nxt) const;"},
{"lineNum":" 1072","line":"    virtual int do_encoding() const  _NOEXCEPT;"},
{"lineNum":" 1073","line":"    virtual bool do_always_noconv() const  _NOEXCEPT;"},
{"lineNum":" 1074","line":"    virtual int do_length(state_type&, const extern_type* __frm, const extern_type* __end, size_t __mx) const;"},
{"lineNum":" 1075","line":"    virtual int do_max_length() const  _NOEXCEPT;"},
{"lineNum":" 1076","line":"};"},
{"lineNum":" 1077","line":""},
{"lineNum":" 1078","line":"// template <> class codecvt<char16_t, char, mbstate_t> // deprecated in C++20"},
{"lineNum":" 1079","line":""},
{"lineNum":" 1080","line":"template <>"},
{"lineNum":" 1081","line":"class _LIBCPP_DEPRECATED_IN_CXX20 _LIBCPP_TYPE_VIS codecvt<char16_t, char, mbstate_t>"},
{"lineNum":" 1082","line":"    : public locale::facet,"},
{"lineNum":" 1083","line":"      public codecvt_base"},
{"lineNum":" 1084","line":"{"},
{"lineNum":" 1085","line":"public:"},
{"lineNum":" 1086","line":"    typedef char16_t  intern_type;"},
{"lineNum":" 1087","line":"    typedef char      extern_type;"},
{"lineNum":" 1088","line":"    typedef mbstate_t state_type;"},
{"lineNum":" 1089","line":""},
{"lineNum":" 1090","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1091","line":"    explicit codecvt(size_t __refs = 0)"},
{"lineNum":" 1092","line":"        : locale::facet(__refs) {}"},
{"lineNum":" 1093","line":""},
{"lineNum":" 1094","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1095","line":"    result out(state_type& __st,"},
{"lineNum":" 1096","line":"               const intern_type* __frm, const intern_type* __frm_end, const intern_type*& __frm_nxt,"},
{"lineNum":" 1097","line":"               extern_type* __to, extern_type* __to_end, extern_type*& __to_nxt) const"},
{"lineNum":" 1098","line":"    {"},
{"lineNum":" 1099","line":"        return do_out(__st, __frm, __frm_end, __frm_nxt, __to, __to_end, __to_nxt);"},
{"lineNum":" 1100","line":"    }"},
{"lineNum":" 1101","line":""},
{"lineNum":" 1102","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1103","line":"    result unshift(state_type& __st,"},
{"lineNum":" 1104","line":"                   extern_type* __to, extern_type* __to_end, extern_type*& __to_nxt) const"},
{"lineNum":" 1105","line":"    {"},
{"lineNum":" 1106","line":"        return do_unshift(__st, __to, __to_end, __to_nxt);"},
{"lineNum":" 1107","line":"    }"},
{"lineNum":" 1108","line":""},
{"lineNum":" 1109","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1110","line":"    result in(state_type& __st,"},
{"lineNum":" 1111","line":"              const extern_type* __frm, const extern_type* __frm_end, const extern_type*& __frm_nxt,"},
{"lineNum":" 1112","line":"              intern_type* __to, intern_type* __to_end, intern_type*& __to_nxt) const"},
{"lineNum":" 1113","line":"    {"},
{"lineNum":" 1114","line":"        return do_in(__st, __frm, __frm_end, __frm_nxt, __to, __to_end, __to_nxt);"},
{"lineNum":" 1115","line":"    }"},
{"lineNum":" 1116","line":""},
{"lineNum":" 1117","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1118","line":"    int encoding() const  _NOEXCEPT"},
{"lineNum":" 1119","line":"    {"},
{"lineNum":" 1120","line":"        return do_encoding();"},
{"lineNum":" 1121","line":"    }"},
{"lineNum":" 1122","line":""},
{"lineNum":" 1123","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1124","line":"    bool always_noconv() const  _NOEXCEPT"},
{"lineNum":" 1125","line":"    {"},
{"lineNum":" 1126","line":"        return do_always_noconv();"},
{"lineNum":" 1127","line":"    }"},
{"lineNum":" 1128","line":""},
{"lineNum":" 1129","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1130","line":"    int length(state_type& __st, const extern_type* __frm, const extern_type* __end, size_t __mx) const"},
{"lineNum":" 1131","line":"    {"},
{"lineNum":" 1132","line":"        return do_length(__st, __frm, __end, __mx);"},
{"lineNum":" 1133","line":"    }"},
{"lineNum":" 1134","line":""},
{"lineNum":" 1135","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1136","line":"    int max_length() const  _NOEXCEPT"},
{"lineNum":" 1137","line":"    {"},
{"lineNum":" 1138","line":"        return do_max_length();"},
{"lineNum":" 1139","line":"    }"},
{"lineNum":" 1140","line":""},
{"lineNum":" 1141","line":"    static locale::id id;"},
{"lineNum":" 1142","line":""},
{"lineNum":" 1143","line":"protected:"},
{"lineNum":" 1144","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1145","line":"    explicit codecvt(const char*, size_t __refs = 0)"},
{"lineNum":" 1146","line":"        : locale::facet(__refs) {}"},
{"lineNum":" 1147","line":""},
{"lineNum":" 1148","line":"    ~codecvt();"},
{"lineNum":" 1149","line":""},
{"lineNum":" 1150","line":"    virtual result do_out(state_type& __st,"},
{"lineNum":" 1151","line":"                          const intern_type* __frm, const intern_type* __frm_end, const intern_type*& __frm_nxt,"},
{"lineNum":" 1152","line":"                          extern_type* __to, extern_type* __to_end, extern_type*& __to_nxt) const;"},
{"lineNum":" 1153","line":"    virtual result do_in(state_type& __st,"},
{"lineNum":" 1154","line":"                         const extern_type* __frm, const extern_type* __frm_end, const extern_type*& __frm_nxt,"},
{"lineNum":" 1155","line":"                         intern_type* __to, intern_type* __to_end, intern_type*& __to_nxt) const;"},
{"lineNum":" 1156","line":"    virtual result do_unshift(state_type& __st,"},
{"lineNum":" 1157","line":"                              extern_type* __to, extern_type* __to_end, extern_type*& __to_nxt) const;"},
{"lineNum":" 1158","line":"    virtual int do_encoding() const  _NOEXCEPT;"},
{"lineNum":" 1159","line":"    virtual bool do_always_noconv() const  _NOEXCEPT;"},
{"lineNum":" 1160","line":"    virtual int do_length(state_type&, const extern_type* __frm, const extern_type* __end, size_t __mx) const;"},
{"lineNum":" 1161","line":"    virtual int do_max_length() const  _NOEXCEPT;"},
{"lineNum":" 1162","line":"};"},
{"lineNum":" 1163","line":""},
{"lineNum":" 1164","line":"#ifndef _LIBCPP_HAS_NO_CHAR8_T"},
{"lineNum":" 1165","line":""},
{"lineNum":" 1166","line":"// template <> class codecvt<char16_t, char8_t, mbstate_t> // C++20"},
{"lineNum":" 1167","line":""},
{"lineNum":" 1168","line":"template <>"},
{"lineNum":" 1169","line":"class _LIBCPP_TYPE_VIS codecvt<char16_t, char8_t, mbstate_t>"},
{"lineNum":" 1170","line":"    : public locale::facet,"},
{"lineNum":" 1171","line":"      public codecvt_base"},
{"lineNum":" 1172","line":"{"},
{"lineNum":" 1173","line":"public:"},
{"lineNum":" 1174","line":"    typedef char16_t  intern_type;"},
{"lineNum":" 1175","line":"    typedef char8_t   extern_type;"},
{"lineNum":" 1176","line":"    typedef mbstate_t state_type;"},
{"lineNum":" 1177","line":""},
{"lineNum":" 1178","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1179","line":"    explicit codecvt(size_t __refs = 0)"},
{"lineNum":" 1180","line":"        : locale::facet(__refs) {}"},
{"lineNum":" 1181","line":""},
{"lineNum":" 1182","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1183","line":"    result out(state_type& __st,"},
{"lineNum":" 1184","line":"               const intern_type* __frm, const intern_type* __frm_end, const intern_type*& __frm_nxt,"},
{"lineNum":" 1185","line":"               extern_type* __to, extern_type* __to_end, extern_type*& __to_nxt) const"},
{"lineNum":" 1186","line":"    {"},
{"lineNum":" 1187","line":"        return do_out(__st, __frm, __frm_end, __frm_nxt, __to, __to_end, __to_nxt);"},
{"lineNum":" 1188","line":"    }"},
{"lineNum":" 1189","line":""},
{"lineNum":" 1190","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1191","line":"    result unshift(state_type& __st,"},
{"lineNum":" 1192","line":"                   extern_type* __to, extern_type* __to_end, extern_type*& __to_nxt) const"},
{"lineNum":" 1193","line":"    {"},
{"lineNum":" 1194","line":"        return do_unshift(__st, __to, __to_end, __to_nxt);"},
{"lineNum":" 1195","line":"    }"},
{"lineNum":" 1196","line":""},
{"lineNum":" 1197","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1198","line":"    result in(state_type& __st,"},
{"lineNum":" 1199","line":"              const extern_type* __frm, const extern_type* __frm_end, const extern_type*& __frm_nxt,"},
{"lineNum":" 1200","line":"              intern_type* __to, intern_type* __to_end, intern_type*& __to_nxt) const"},
{"lineNum":" 1201","line":"    {"},
{"lineNum":" 1202","line":"        return do_in(__st, __frm, __frm_end, __frm_nxt, __to, __to_end, __to_nxt);"},
{"lineNum":" 1203","line":"    }"},
{"lineNum":" 1204","line":""},
{"lineNum":" 1205","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1206","line":"    int encoding() const  _NOEXCEPT"},
{"lineNum":" 1207","line":"    {"},
{"lineNum":" 1208","line":"        return do_encoding();"},
{"lineNum":" 1209","line":"    }"},
{"lineNum":" 1210","line":""},
{"lineNum":" 1211","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1212","line":"    bool always_noconv() const  _NOEXCEPT"},
{"lineNum":" 1213","line":"    {"},
{"lineNum":" 1214","line":"        return do_always_noconv();"},
{"lineNum":" 1215","line":"    }"},
{"lineNum":" 1216","line":""},
{"lineNum":" 1217","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1218","line":"    int length(state_type& __st, const extern_type* __frm, const extern_type* __end, size_t __mx) const"},
{"lineNum":" 1219","line":"    {"},
{"lineNum":" 1220","line":"        return do_length(__st, __frm, __end, __mx);"},
{"lineNum":" 1221","line":"    }"},
{"lineNum":" 1222","line":""},
{"lineNum":" 1223","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1224","line":"    int max_length() const  _NOEXCEPT"},
{"lineNum":" 1225","line":"    {"},
{"lineNum":" 1226","line":"        return do_max_length();"},
{"lineNum":" 1227","line":"    }"},
{"lineNum":" 1228","line":""},
{"lineNum":" 1229","line":"    static locale::id id;"},
{"lineNum":" 1230","line":""},
{"lineNum":" 1231","line":"protected:"},
{"lineNum":" 1232","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1233","line":"    explicit codecvt(const char*, size_t __refs = 0)"},
{"lineNum":" 1234","line":"        : locale::facet(__refs) {}"},
{"lineNum":" 1235","line":""},
{"lineNum":" 1236","line":"    ~codecvt();"},
{"lineNum":" 1237","line":""},
{"lineNum":" 1238","line":"    virtual result do_out(state_type& __st,"},
{"lineNum":" 1239","line":"                          const intern_type* __frm, const intern_type* __frm_end, const intern_type*& __frm_nxt,"},
{"lineNum":" 1240","line":"                          extern_type* __to, extern_type* __to_end, extern_type*& __to_nxt) const;"},
{"lineNum":" 1241","line":"    virtual result do_in(state_type& __st,"},
{"lineNum":" 1242","line":"                         const extern_type* __frm, const extern_type* __frm_end, const extern_type*& __frm_nxt,"},
{"lineNum":" 1243","line":"                         intern_type* __to, intern_type* __to_end, intern_type*& __to_nxt) const;"},
{"lineNum":" 1244","line":"    virtual result do_unshift(state_type& __st,"},
{"lineNum":" 1245","line":"                              extern_type* __to, extern_type* __to_end, extern_type*& __to_nxt) const;"},
{"lineNum":" 1246","line":"    virtual int do_encoding() const  _NOEXCEPT;"},
{"lineNum":" 1247","line":"    virtual bool do_always_noconv() const  _NOEXCEPT;"},
{"lineNum":" 1248","line":"    virtual int do_length(state_type&, const extern_type* __frm, const extern_type* __end, size_t __mx) const;"},
{"lineNum":" 1249","line":"    virtual int do_max_length() const  _NOEXCEPT;"},
{"lineNum":" 1250","line":"};"},
{"lineNum":" 1251","line":""},
{"lineNum":" 1252","line":"#endif"},
{"lineNum":" 1253","line":""},
{"lineNum":" 1254","line":"// template <> class codecvt<char32_t, char, mbstate_t> // deprecated in C++20"},
{"lineNum":" 1255","line":""},
{"lineNum":" 1256","line":"template <>"},
{"lineNum":" 1257","line":"class _LIBCPP_DEPRECATED_IN_CXX20 _LIBCPP_TYPE_VIS codecvt<char32_t, char, mbstate_t>"},
{"lineNum":" 1258","line":"    : public locale::facet,"},
{"lineNum":" 1259","line":"      public codecvt_base"},
{"lineNum":" 1260","line":"{"},
{"lineNum":" 1261","line":"public:"},
{"lineNum":" 1262","line":"    typedef char32_t  intern_type;"},
{"lineNum":" 1263","line":"    typedef char      extern_type;"},
{"lineNum":" 1264","line":"    typedef mbstate_t state_type;"},
{"lineNum":" 1265","line":""},
{"lineNum":" 1266","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1267","line":"    explicit codecvt(size_t __refs = 0)"},
{"lineNum":" 1268","line":"        : locale::facet(__refs) {}"},
{"lineNum":" 1269","line":""},
{"lineNum":" 1270","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1271","line":"    result out(state_type& __st,"},
{"lineNum":" 1272","line":"               const intern_type* __frm, const intern_type* __frm_end, const intern_type*& __frm_nxt,"},
{"lineNum":" 1273","line":"               extern_type* __to, extern_type* __to_end, extern_type*& __to_nxt) const"},
{"lineNum":" 1274","line":"    {"},
{"lineNum":" 1275","line":"        return do_out(__st, __frm, __frm_end, __frm_nxt, __to, __to_end, __to_nxt);"},
{"lineNum":" 1276","line":"    }"},
{"lineNum":" 1277","line":""},
{"lineNum":" 1278","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1279","line":"    result unshift(state_type& __st,"},
{"lineNum":" 1280","line":"                   extern_type* __to, extern_type* __to_end, extern_type*& __to_nxt) const"},
{"lineNum":" 1281","line":"    {"},
{"lineNum":" 1282","line":"        return do_unshift(__st, __to, __to_end, __to_nxt);"},
{"lineNum":" 1283","line":"    }"},
{"lineNum":" 1284","line":""},
{"lineNum":" 1285","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1286","line":"    result in(state_type& __st,"},
{"lineNum":" 1287","line":"              const extern_type* __frm, const extern_type* __frm_end, const extern_type*& __frm_nxt,"},
{"lineNum":" 1288","line":"              intern_type* __to, intern_type* __to_end, intern_type*& __to_nxt) const"},
{"lineNum":" 1289","line":"    {"},
{"lineNum":" 1290","line":"        return do_in(__st, __frm, __frm_end, __frm_nxt, __to, __to_end, __to_nxt);"},
{"lineNum":" 1291","line":"    }"},
{"lineNum":" 1292","line":""},
{"lineNum":" 1293","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1294","line":"    int encoding() const  _NOEXCEPT"},
{"lineNum":" 1295","line":"    {"},
{"lineNum":" 1296","line":"        return do_encoding();"},
{"lineNum":" 1297","line":"    }"},
{"lineNum":" 1298","line":""},
{"lineNum":" 1299","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1300","line":"    bool always_noconv() const  _NOEXCEPT"},
{"lineNum":" 1301","line":"    {"},
{"lineNum":" 1302","line":"        return do_always_noconv();"},
{"lineNum":" 1303","line":"    }"},
{"lineNum":" 1304","line":""},
{"lineNum":" 1305","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1306","line":"    int length(state_type& __st, const extern_type* __frm, const extern_type* __end, size_t __mx) const"},
{"lineNum":" 1307","line":"    {"},
{"lineNum":" 1308","line":"        return do_length(__st, __frm, __end, __mx);"},
{"lineNum":" 1309","line":"    }"},
{"lineNum":" 1310","line":""},
{"lineNum":" 1311","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1312","line":"    int max_length() const  _NOEXCEPT"},
{"lineNum":" 1313","line":"    {"},
{"lineNum":" 1314","line":"        return do_max_length();"},
{"lineNum":" 1315","line":"    }"},
{"lineNum":" 1316","line":""},
{"lineNum":" 1317","line":"    static locale::id id;"},
{"lineNum":" 1318","line":""},
{"lineNum":" 1319","line":"protected:"},
{"lineNum":" 1320","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1321","line":"    explicit codecvt(const char*, size_t __refs = 0)"},
{"lineNum":" 1322","line":"        : locale::facet(__refs) {}"},
{"lineNum":" 1323","line":""},
{"lineNum":" 1324","line":"    ~codecvt();"},
{"lineNum":" 1325","line":""},
{"lineNum":" 1326","line":"    virtual result do_out(state_type& __st,"},
{"lineNum":" 1327","line":"                          const intern_type* __frm, const intern_type* __frm_end, const intern_type*& __frm_nxt,"},
{"lineNum":" 1328","line":"                          extern_type* __to, extern_type* __to_end, extern_type*& __to_nxt) const;"},
{"lineNum":" 1329","line":"    virtual result do_in(state_type& __st,"},
{"lineNum":" 1330","line":"                         const extern_type* __frm, const extern_type* __frm_end, const extern_type*& __frm_nxt,"},
{"lineNum":" 1331","line":"                         intern_type* __to, intern_type* __to_end, intern_type*& __to_nxt) const;"},
{"lineNum":" 1332","line":"    virtual result do_unshift(state_type& __st,"},
{"lineNum":" 1333","line":"                              extern_type* __to, extern_type* __to_end, extern_type*& __to_nxt) const;"},
{"lineNum":" 1334","line":"    virtual int do_encoding() const  _NOEXCEPT;"},
{"lineNum":" 1335","line":"    virtual bool do_always_noconv() const  _NOEXCEPT;"},
{"lineNum":" 1336","line":"    virtual int do_length(state_type&, const extern_type* __frm, const extern_type* __end, size_t __mx) const;"},
{"lineNum":" 1337","line":"    virtual int do_max_length() const  _NOEXCEPT;"},
{"lineNum":" 1338","line":"};"},
{"lineNum":" 1339","line":""},
{"lineNum":" 1340","line":"#ifndef _LIBCPP_HAS_NO_CHAR8_T"},
{"lineNum":" 1341","line":""},
{"lineNum":" 1342","line":"// template <> class codecvt<char32_t, char8_t, mbstate_t> // C++20"},
{"lineNum":" 1343","line":""},
{"lineNum":" 1344","line":"template <>"},
{"lineNum":" 1345","line":"class _LIBCPP_TYPE_VIS codecvt<char32_t, char8_t, mbstate_t>"},
{"lineNum":" 1346","line":"    : public locale::facet,"},
{"lineNum":" 1347","line":"      public codecvt_base"},
{"lineNum":" 1348","line":"{"},
{"lineNum":" 1349","line":"public:"},
{"lineNum":" 1350","line":"    typedef char32_t  intern_type;"},
{"lineNum":" 1351","line":"    typedef char8_t   extern_type;"},
{"lineNum":" 1352","line":"    typedef mbstate_t state_type;"},
{"lineNum":" 1353","line":""},
{"lineNum":" 1354","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1355","line":"    explicit codecvt(size_t __refs = 0)"},
{"lineNum":" 1356","line":"        : locale::facet(__refs) {}"},
{"lineNum":" 1357","line":""},
{"lineNum":" 1358","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1359","line":"    result out(state_type& __st,"},
{"lineNum":" 1360","line":"               const intern_type* __frm, const intern_type* __frm_end, const intern_type*& __frm_nxt,"},
{"lineNum":" 1361","line":"               extern_type* __to, extern_type* __to_end, extern_type*& __to_nxt) const"},
{"lineNum":" 1362","line":"    {"},
{"lineNum":" 1363","line":"        return do_out(__st, __frm, __frm_end, __frm_nxt, __to, __to_end, __to_nxt);"},
{"lineNum":" 1364","line":"    }"},
{"lineNum":" 1365","line":""},
{"lineNum":" 1366","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1367","line":"    result unshift(state_type& __st,"},
{"lineNum":" 1368","line":"                   extern_type* __to, extern_type* __to_end, extern_type*& __to_nxt) const"},
{"lineNum":" 1369","line":"    {"},
{"lineNum":" 1370","line":"        return do_unshift(__st, __to, __to_end, __to_nxt);"},
{"lineNum":" 1371","line":"    }"},
{"lineNum":" 1372","line":""},
{"lineNum":" 1373","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1374","line":"    result in(state_type& __st,"},
{"lineNum":" 1375","line":"              const extern_type* __frm, const extern_type* __frm_end, const extern_type*& __frm_nxt,"},
{"lineNum":" 1376","line":"              intern_type* __to, intern_type* __to_end, intern_type*& __to_nxt) const"},
{"lineNum":" 1377","line":"    {"},
{"lineNum":" 1378","line":"        return do_in(__st, __frm, __frm_end, __frm_nxt, __to, __to_end, __to_nxt);"},
{"lineNum":" 1379","line":"    }"},
{"lineNum":" 1380","line":""},
{"lineNum":" 1381","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1382","line":"    int encoding() const  _NOEXCEPT"},
{"lineNum":" 1383","line":"    {"},
{"lineNum":" 1384","line":"        return do_encoding();"},
{"lineNum":" 1385","line":"    }"},
{"lineNum":" 1386","line":""},
{"lineNum":" 1387","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1388","line":"    bool always_noconv() const  _NOEXCEPT"},
{"lineNum":" 1389","line":"    {"},
{"lineNum":" 1390","line":"        return do_always_noconv();"},
{"lineNum":" 1391","line":"    }"},
{"lineNum":" 1392","line":""},
{"lineNum":" 1393","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1394","line":"    int length(state_type& __st, const extern_type* __frm, const extern_type* __end, size_t __mx) const"},
{"lineNum":" 1395","line":"    {"},
{"lineNum":" 1396","line":"        return do_length(__st, __frm, __end, __mx);"},
{"lineNum":" 1397","line":"    }"},
{"lineNum":" 1398","line":""},
{"lineNum":" 1399","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1400","line":"    int max_length() const  _NOEXCEPT"},
{"lineNum":" 1401","line":"    {"},
{"lineNum":" 1402","line":"        return do_max_length();"},
{"lineNum":" 1403","line":"    }"},
{"lineNum":" 1404","line":""},
{"lineNum":" 1405","line":"    static locale::id id;"},
{"lineNum":" 1406","line":""},
{"lineNum":" 1407","line":"protected:"},
{"lineNum":" 1408","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1409","line":"    explicit codecvt(const char*, size_t __refs = 0)"},
{"lineNum":" 1410","line":"        : locale::facet(__refs) {}"},
{"lineNum":" 1411","line":""},
{"lineNum":" 1412","line":"    ~codecvt();"},
{"lineNum":" 1413","line":""},
{"lineNum":" 1414","line":"    virtual result do_out(state_type& __st,"},
{"lineNum":" 1415","line":"                          const intern_type* __frm, const intern_type* __frm_end, const intern_type*& __frm_nxt,"},
{"lineNum":" 1416","line":"                          extern_type* __to, extern_type* __to_end, extern_type*& __to_nxt) const;"},
{"lineNum":" 1417","line":"    virtual result do_in(state_type& __st,"},
{"lineNum":" 1418","line":"                         const extern_type* __frm, const extern_type* __frm_end, const extern_type*& __frm_nxt,"},
{"lineNum":" 1419","line":"                         intern_type* __to, intern_type* __to_end, intern_type*& __to_nxt) const;"},
{"lineNum":" 1420","line":"    virtual result do_unshift(state_type& __st,"},
{"lineNum":" 1421","line":"                              extern_type* __to, extern_type* __to_end, extern_type*& __to_nxt) const;"},
{"lineNum":" 1422","line":"    virtual int do_encoding() const  _NOEXCEPT;"},
{"lineNum":" 1423","line":"    virtual bool do_always_noconv() const  _NOEXCEPT;"},
{"lineNum":" 1424","line":"    virtual int do_length(state_type&, const extern_type* __frm, const extern_type* __end, size_t __mx) const;"},
{"lineNum":" 1425","line":"    virtual int do_max_length() const  _NOEXCEPT;"},
{"lineNum":" 1426","line":"};"},
{"lineNum":" 1427","line":""},
{"lineNum":" 1428","line":"#endif"},
{"lineNum":" 1429","line":""},
{"lineNum":" 1430","line":"// template <class _InternT, class _ExternT, class _StateT> class codecvt_byname"},
{"lineNum":" 1431","line":""},
{"lineNum":" 1432","line":"template <class _InternT, class _ExternT, class _StateT>"},
{"lineNum":" 1433","line":"class _LIBCPP_TEMPLATE_VIS codecvt_byname"},
{"lineNum":" 1434","line":"    : public codecvt<_InternT, _ExternT, _StateT>"},
{"lineNum":" 1435","line":"{"},
{"lineNum":" 1436","line":"public:"},
{"lineNum":" 1437","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1438","line":"    explicit codecvt_byname(const char* __nm, size_t __refs = 0)"},
{"lineNum":" 1439","line":"        : codecvt<_InternT, _ExternT, _StateT>(__nm, __refs) {}"},
{"lineNum":" 1440","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1441","line":"    explicit codecvt_byname(const string& __nm, size_t __refs = 0)"},
{"lineNum":" 1442","line":"        : codecvt<_InternT, _ExternT, _StateT>(__nm.c_str(), __refs) {}"},
{"lineNum":" 1443","line":"protected:"},
{"lineNum":" 1444","line":"    ~codecvt_byname();"},
{"lineNum":" 1445","line":"};"},
{"lineNum":" 1446","line":""},
{"lineNum":" 1447","line":"_LIBCPP_SUPPRESS_DEPRECATED_PUSH"},
{"lineNum":" 1448","line":"template <class _InternT, class _ExternT, class _StateT>"},
{"lineNum":" 1449","line":"codecvt_byname<_InternT, _ExternT, _StateT>::~codecvt_byname()"},
{"lineNum":" 1450","line":"{"},
{"lineNum":" 1451","line":"}"},
{"lineNum":" 1452","line":"_LIBCPP_SUPPRESS_DEPRECATED_POP"},
{"lineNum":" 1453","line":""},
{"lineNum":" 1454","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS codecvt_byname<char, char, mbstate_t>)"},
{"lineNum":" 1455","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS codecvt_byname<wchar_t, char, mbstate_t>)"},
{"lineNum":" 1456","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_DEPRECATED_IN_CXX20 _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS codecvt_byname<char16_t, char, mbstate_t>) // deprecated in C++20"},
{"lineNum":" 1457","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_DEPRECATED_IN_CXX20 _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS codecvt_byname<char32_t, char, mbstate_t>) // deprecated in C++20"},
{"lineNum":" 1458","line":"#ifndef _LIBCPP_HAS_NO_CHAR8_T"},
{"lineNum":" 1459","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS codecvt_byname<char16_t, char8_t, mbstate_t>) // C++20"},
{"lineNum":" 1460","line":"_LIBCPP_EXTERN_TEMPLATE_EVEN_IN_DEBUG_MODE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS codecvt_byname<char32_t, char8_t, mbstate_t>) // C++20"},
{"lineNum":" 1461","line":"#endif"},
{"lineNum":" 1462","line":""},
{"lineNum":" 1463","line":"template <size_t _Np>"},
{"lineNum":" 1464","line":"struct __narrow_to_utf8"},
{"lineNum":" 1465","line":"{"},
{"lineNum":" 1466","line":"    template <class _OutputIterator, class _CharT>"},
{"lineNum":" 1467","line":"    _OutputIterator"},
{"lineNum":" 1468","line":"    operator()(_OutputIterator __s, const _CharT* __wb, const _CharT* __we) const;"},
{"lineNum":" 1469","line":"};"},
{"lineNum":" 1470","line":""},
{"lineNum":" 1471","line":"template <>"},
{"lineNum":" 1472","line":"struct __narrow_to_utf8<8>"},
{"lineNum":" 1473","line":"{"},
{"lineNum":" 1474","line":"    template <class _OutputIterator, class _CharT>"},
{"lineNum":" 1475","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1476","line":"    _OutputIterator"},
{"lineNum":" 1477","line":"    operator()(_OutputIterator __s, const _CharT* __wb, const _CharT* __we) const"},
{"lineNum":" 1478","line":"    {"},
{"lineNum":" 1479","line":"        for (; __wb < __we; ++__wb, ++__s)"},
{"lineNum":" 1480","line":"            *__s = *__wb;"},
{"lineNum":" 1481","line":"        return __s;"},
{"lineNum":" 1482","line":"    }"},
{"lineNum":" 1483","line":"};"},
{"lineNum":" 1484","line":""},
{"lineNum":" 1485","line":"_LIBCPP_SUPPRESS_DEPRECATED_PUSH"},
{"lineNum":" 1486","line":"template <>"},
{"lineNum":" 1487","line":"struct _LIBCPP_TYPE_VIS __narrow_to_utf8<16>"},
{"lineNum":" 1488","line":"    : public codecvt<char16_t, char, mbstate_t>"},
{"lineNum":" 1489","line":"{"},
{"lineNum":" 1490","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1491","line":"    __narrow_to_utf8() : codecvt<char16_t, char, mbstate_t>(1) {}"},
{"lineNum":" 1492","line":"_LIBCPP_SUPPRESS_DEPRECATED_POP"},
{"lineNum":" 1493","line":""},
{"lineNum":" 1494","line":"    ~__narrow_to_utf8();"},
{"lineNum":" 1495","line":""},
{"lineNum":" 1496","line":"    template <class _OutputIterator, class _CharT>"},
{"lineNum":" 1497","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1498","line":"    _OutputIterator"},
{"lineNum":" 1499","line":"    operator()(_OutputIterator __s, const _CharT* __wb, const _CharT* __we) const"},
{"lineNum":" 1500","line":"    {"},
{"lineNum":" 1501","line":"        result __r = ok;"},
{"lineNum":" 1502","line":"        mbstate_t __mb;"},
{"lineNum":" 1503","line":"        while (__wb < __we && __r != error)"},
{"lineNum":" 1504","line":"        {"},
{"lineNum":" 1505","line":"            const int __sz = 32;"},
{"lineNum":" 1506","line":"            char __buf[__sz];"},
{"lineNum":" 1507","line":"            char* __bn;"},
{"lineNum":" 1508","line":"            const char16_t* __wn = (const char16_t*)__wb;"},
{"lineNum":" 1509","line":"            __r = do_out(__mb, (const char16_t*)__wb, (const char16_t*)__we, __wn,"},
{"lineNum":" 1510","line":"                         __buf, __buf+__sz, __bn);"},
{"lineNum":" 1511","line":"            if (__r == codecvt_base::error || __wn == (const char16_t*)__wb)"},
{"lineNum":" 1512","line":"                __throw_runtime_error(\"locale not supported\");"},
{"lineNum":" 1513","line":"            for (const char* __p = __buf; __p < __bn; ++__p, ++__s)"},
{"lineNum":" 1514","line":"                *__s = *__p;"},
{"lineNum":" 1515","line":"            __wb = (const _CharT*)__wn;"},
{"lineNum":" 1516","line":"        }"},
{"lineNum":" 1517","line":"        return __s;"},
{"lineNum":" 1518","line":"    }"},
{"lineNum":" 1519","line":"};"},
{"lineNum":" 1520","line":""},
{"lineNum":" 1521","line":"_LIBCPP_SUPPRESS_DEPRECATED_PUSH"},
{"lineNum":" 1522","line":"template <>"},
{"lineNum":" 1523","line":"struct _LIBCPP_TYPE_VIS __narrow_to_utf8<32>"},
{"lineNum":" 1524","line":"    : public codecvt<char32_t, char, mbstate_t>"},
{"lineNum":" 1525","line":"{"},
{"lineNum":" 1526","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1527","line":"    __narrow_to_utf8() : codecvt<char32_t, char, mbstate_t>(1) {}"},
{"lineNum":" 1528","line":"_LIBCPP_SUPPRESS_DEPRECATED_POP"},
{"lineNum":" 1529","line":""},
{"lineNum":" 1530","line":"    ~__narrow_to_utf8();"},
{"lineNum":" 1531","line":""},
{"lineNum":" 1532","line":"    template <class _OutputIterator, class _CharT>"},
{"lineNum":" 1533","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1534","line":"    _OutputIterator"},
{"lineNum":" 1535","line":"    operator()(_OutputIterator __s, const _CharT* __wb, const _CharT* __we) const"},
{"lineNum":" 1536","line":"    {"},
{"lineNum":" 1537","line":"        result __r = ok;"},
{"lineNum":" 1538","line":"        mbstate_t __mb;"},
{"lineNum":" 1539","line":"        while (__wb < __we && __r != error)"},
{"lineNum":" 1540","line":"        {"},
{"lineNum":" 1541","line":"            const int __sz = 32;"},
{"lineNum":" 1542","line":"            char __buf[__sz];"},
{"lineNum":" 1543","line":"            char* __bn;"},
{"lineNum":" 1544","line":"            const char32_t* __wn = (const char32_t*)__wb;"},
{"lineNum":" 1545","line":"            __r = do_out(__mb, (const char32_t*)__wb, (const char32_t*)__we, __wn,"},
{"lineNum":" 1546","line":"                         __buf, __buf+__sz, __bn);"},
{"lineNum":" 1547","line":"            if (__r == codecvt_base::error || __wn == (const char32_t*)__wb)"},
{"lineNum":" 1548","line":"                __throw_runtime_error(\"locale not supported\");"},
{"lineNum":" 1549","line":"            for (const char* __p = __buf; __p < __bn; ++__p, ++__s)"},
{"lineNum":" 1550","line":"                *__s = *__p;"},
{"lineNum":" 1551","line":"            __wb = (const _CharT*)__wn;"},
{"lineNum":" 1552","line":"        }"},
{"lineNum":" 1553","line":"        return __s;"},
{"lineNum":" 1554","line":"    }"},
{"lineNum":" 1555","line":"};"},
{"lineNum":" 1556","line":""},
{"lineNum":" 1557","line":"template <size_t _Np>"},
{"lineNum":" 1558","line":"struct __widen_from_utf8"},
{"lineNum":" 1559","line":"{"},
{"lineNum":" 1560","line":"    template <class _OutputIterator>"},
{"lineNum":" 1561","line":"    _OutputIterator"},
{"lineNum":" 1562","line":"    operator()(_OutputIterator __s, const char* __nb, const char* __ne) const;"},
{"lineNum":" 1563","line":"};"},
{"lineNum":" 1564","line":""},
{"lineNum":" 1565","line":"template <>"},
{"lineNum":" 1566","line":"struct __widen_from_utf8<8>"},
{"lineNum":" 1567","line":"{"},
{"lineNum":" 1568","line":"    template <class _OutputIterator>"},
{"lineNum":" 1569","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1570","line":"    _OutputIterator"},
{"lineNum":" 1571","line":"    operator()(_OutputIterator __s, const char* __nb, const char* __ne) const"},
{"lineNum":" 1572","line":"    {"},
{"lineNum":" 1573","line":"        for (; __nb < __ne; ++__nb, ++__s)"},
{"lineNum":" 1574","line":"            *__s = *__nb;"},
{"lineNum":" 1575","line":"        return __s;"},
{"lineNum":" 1576","line":"    }"},
{"lineNum":" 1577","line":"};"},
{"lineNum":" 1578","line":""},
{"lineNum":" 1579","line":"_LIBCPP_SUPPRESS_DEPRECATED_PUSH"},
{"lineNum":" 1580","line":"template <>"},
{"lineNum":" 1581","line":"struct _LIBCPP_TYPE_VIS __widen_from_utf8<16>"},
{"lineNum":" 1582","line":"    : public codecvt<char16_t, char, mbstate_t>"},
{"lineNum":" 1583","line":"{"},
{"lineNum":" 1584","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1585","line":"    __widen_from_utf8() : codecvt<char16_t, char, mbstate_t>(1) {}"},
{"lineNum":" 1586","line":"_LIBCPP_SUPPRESS_DEPRECATED_POP"},
{"lineNum":" 1587","line":""},
{"lineNum":" 1588","line":"    ~__widen_from_utf8();"},
{"lineNum":" 1589","line":""},
{"lineNum":" 1590","line":"    template <class _OutputIterator>"},
{"lineNum":" 1591","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1592","line":"    _OutputIterator"},
{"lineNum":" 1593","line":"    operator()(_OutputIterator __s, const char* __nb, const char* __ne) const"},
{"lineNum":" 1594","line":"    {"},
{"lineNum":" 1595","line":"        result __r = ok;"},
{"lineNum":" 1596","line":"        mbstate_t __mb;"},
{"lineNum":" 1597","line":"        while (__nb < __ne && __r != error)"},
{"lineNum":" 1598","line":"        {"},
{"lineNum":" 1599","line":"            const int __sz = 32;"},
{"lineNum":" 1600","line":"            char16_t __buf[__sz];"},
{"lineNum":" 1601","line":"            char16_t* __bn;"},
{"lineNum":" 1602","line":"            const char* __nn = __nb;"},
{"lineNum":" 1603","line":"            __r = do_in(__mb, __nb, __ne - __nb > __sz ? __nb+__sz : __ne, __nn,"},
{"lineNum":" 1604","line":"                        __buf, __buf+__sz, __bn);"},
{"lineNum":" 1605","line":"            if (__r == codecvt_base::error || __nn == __nb)"},
{"lineNum":" 1606","line":"                __throw_runtime_error(\"locale not supported\");"},
{"lineNum":" 1607","line":"            for (const char16_t* __p = __buf; __p < __bn; ++__p, ++__s)"},
{"lineNum":" 1608","line":"                *__s = *__p;"},
{"lineNum":" 1609","line":"            __nb = __nn;"},
{"lineNum":" 1610","line":"        }"},
{"lineNum":" 1611","line":"        return __s;"},
{"lineNum":" 1612","line":"    }"},
{"lineNum":" 1613","line":"};"},
{"lineNum":" 1614","line":""},
{"lineNum":" 1615","line":"_LIBCPP_SUPPRESS_DEPRECATED_PUSH"},
{"lineNum":" 1616","line":"template <>"},
{"lineNum":" 1617","line":"struct _LIBCPP_TYPE_VIS __widen_from_utf8<32>"},
{"lineNum":" 1618","line":"    : public codecvt<char32_t, char, mbstate_t>"},
{"lineNum":" 1619","line":"{"},
{"lineNum":" 1620","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1621","line":"    __widen_from_utf8() : codecvt<char32_t, char, mbstate_t>(1) {}"},
{"lineNum":" 1622","line":"_LIBCPP_SUPPRESS_DEPRECATED_POP"},
{"lineNum":" 1623","line":""},
{"lineNum":" 1624","line":"    ~__widen_from_utf8();"},
{"lineNum":" 1625","line":""},
{"lineNum":" 1626","line":"    template <class _OutputIterator>"},
{"lineNum":" 1627","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1628","line":"    _OutputIterator"},
{"lineNum":" 1629","line":"    operator()(_OutputIterator __s, const char* __nb, const char* __ne) const"},
{"lineNum":" 1630","line":"    {"},
{"lineNum":" 1631","line":"        result __r = ok;"},
{"lineNum":" 1632","line":"        mbstate_t __mb;"},
{"lineNum":" 1633","line":"        while (__nb < __ne && __r != error)"},
{"lineNum":" 1634","line":"        {"},
{"lineNum":" 1635","line":"            const int __sz = 32;"},
{"lineNum":" 1636","line":"            char32_t __buf[__sz];"},
{"lineNum":" 1637","line":"            char32_t* __bn;"},
{"lineNum":" 1638","line":"            const char* __nn = __nb;"},
{"lineNum":" 1639","line":"            __r = do_in(__mb, __nb, __ne - __nb > __sz ? __nb+__sz : __ne, __nn,"},
{"lineNum":" 1640","line":"                        __buf, __buf+__sz, __bn);"},
{"lineNum":" 1641","line":"            if (__r == codecvt_base::error || __nn == __nb)"},
{"lineNum":" 1642","line":"                __throw_runtime_error(\"locale not supported\");"},
{"lineNum":" 1643","line":"            for (const char32_t* __p = __buf; __p < __bn; ++__p, ++__s)"},
{"lineNum":" 1644","line":"                *__s = *__p;"},
{"lineNum":" 1645","line":"            __nb = __nn;"},
{"lineNum":" 1646","line":"        }"},
{"lineNum":" 1647","line":"        return __s;"},
{"lineNum":" 1648","line":"    }"},
{"lineNum":" 1649","line":"};"},
{"lineNum":" 1650","line":""},
{"lineNum":" 1651","line":"// template <class charT> class numpunct"},
{"lineNum":" 1652","line":""},
{"lineNum":" 1653","line":"template <class _CharT> class _LIBCPP_TEMPLATE_VIS numpunct;"},
{"lineNum":" 1654","line":""},
{"lineNum":" 1655","line":"template <>"},
{"lineNum":" 1656","line":"class _LIBCPP_TYPE_VIS numpunct<char>"},
{"lineNum":" 1657","line":"    : public locale::facet"},
{"lineNum":" 1658","line":"{"},
{"lineNum":" 1659","line":"public:"},
{"lineNum":" 1660","line":"    typedef char char_type;"},
{"lineNum":" 1661","line":"    typedef basic_string<char_type> string_type;"},
{"lineNum":" 1662","line":""},
{"lineNum":" 1663","line":"    explicit numpunct(size_t __refs = 0);"},
{"lineNum":" 1664","line":""},
{"lineNum":" 1665","line":"    _LIBCPP_INLINE_VISIBILITY char_type decimal_point() const {return do_decimal_point();}"},
{"lineNum":" 1666","line":"    _LIBCPP_INLINE_VISIBILITY char_type thousands_sep() const {return do_thousands_sep();}"},
{"lineNum":" 1667","line":"    _LIBCPP_INLINE_VISIBILITY string grouping() const         {return do_grouping();}"},
{"lineNum":" 1668","line":"    _LIBCPP_INLINE_VISIBILITY string_type truename() const    {return do_truename();}"},
{"lineNum":" 1669","line":"    _LIBCPP_INLINE_VISIBILITY string_type falsename() const   {return do_falsename();}"},
{"lineNum":" 1670","line":""},
{"lineNum":" 1671","line":"    static locale::id id;"},
{"lineNum":" 1672","line":""},
{"lineNum":" 1673","line":"protected:"},
{"lineNum":" 1674","line":"    ~numpunct();"},
{"lineNum":" 1675","line":"    virtual char_type do_decimal_point() const;"},
{"lineNum":" 1676","line":"    virtual char_type do_thousands_sep() const;"},
{"lineNum":" 1677","line":"    virtual string do_grouping() const;"},
{"lineNum":" 1678","line":"    virtual string_type do_truename() const;"},
{"lineNum":" 1679","line":"    virtual string_type do_falsename() const;"},
{"lineNum":" 1680","line":""},
{"lineNum":" 1681","line":"    char_type __decimal_point_;"},
{"lineNum":" 1682","line":"    char_type __thousands_sep_;"},
{"lineNum":" 1683","line":"    string __grouping_;"},
{"lineNum":" 1684","line":"};"},
{"lineNum":" 1685","line":""},
{"lineNum":" 1686","line":"template <>"},
{"lineNum":" 1687","line":"class _LIBCPP_TYPE_VIS numpunct<wchar_t>"},
{"lineNum":" 1688","line":"    : public locale::facet"},
{"lineNum":" 1689","line":"{"},
{"lineNum":" 1690","line":"public:"},
{"lineNum":" 1691","line":"    typedef wchar_t char_type;"},
{"lineNum":" 1692","line":"    typedef basic_string<char_type> string_type;"},
{"lineNum":" 1693","line":""},
{"lineNum":" 1694","line":"    explicit numpunct(size_t __refs = 0);"},
{"lineNum":" 1695","line":""},
{"lineNum":" 1696","line":"    _LIBCPP_INLINE_VISIBILITY char_type decimal_point() const {return do_decimal_point();}"},
{"lineNum":" 1697","line":"    _LIBCPP_INLINE_VISIBILITY char_type thousands_sep() const {return do_thousands_sep();}"},
{"lineNum":" 1698","line":"    _LIBCPP_INLINE_VISIBILITY string grouping() const         {return do_grouping();}"},
{"lineNum":" 1699","line":"    _LIBCPP_INLINE_VISIBILITY string_type truename() const    {return do_truename();}"},
{"lineNum":" 1700","line":"    _LIBCPP_INLINE_VISIBILITY string_type falsename() const   {return do_falsename();}"},
{"lineNum":" 1701","line":""},
{"lineNum":" 1702","line":"    static locale::id id;"},
{"lineNum":" 1703","line":""},
{"lineNum":" 1704","line":"protected:"},
{"lineNum":" 1705","line":"    ~numpunct();"},
{"lineNum":" 1706","line":"    virtual char_type do_decimal_point() const;"},
{"lineNum":" 1707","line":"    virtual char_type do_thousands_sep() const;"},
{"lineNum":" 1708","line":"    virtual string do_grouping() const;"},
{"lineNum":" 1709","line":"    virtual string_type do_truename() const;"},
{"lineNum":" 1710","line":"    virtual string_type do_falsename() const;"},
{"lineNum":" 1711","line":""},
{"lineNum":" 1712","line":"    char_type __decimal_point_;"},
{"lineNum":" 1713","line":"    char_type __thousands_sep_;"},
{"lineNum":" 1714","line":"    string __grouping_;"},
{"lineNum":" 1715","line":"};"},
{"lineNum":" 1716","line":""},
{"lineNum":" 1717","line":"// template <class charT> class numpunct_byname"},
{"lineNum":" 1718","line":""},
{"lineNum":" 1719","line":"template <class _CharT> class _LIBCPP_TEMPLATE_VIS numpunct_byname;"},
{"lineNum":" 1720","line":""},
{"lineNum":" 1721","line":"template <>"},
{"lineNum":" 1722","line":"class _LIBCPP_TYPE_VIS numpunct_byname<char>"},
{"lineNum":" 1723","line":": public numpunct<char>"},
{"lineNum":" 1724","line":"{"},
{"lineNum":" 1725","line":"public:"},
{"lineNum":" 1726","line":"    typedef char char_type;"},
{"lineNum":" 1727","line":"    typedef basic_string<char_type> string_type;"},
{"lineNum":" 1728","line":""},
{"lineNum":" 1729","line":"    explicit numpunct_byname(const char* __nm, size_t __refs = 0);"},
{"lineNum":" 1730","line":"    explicit numpunct_byname(const string& __nm, size_t __refs = 0);"},
{"lineNum":" 1731","line":""},
{"lineNum":" 1732","line":"protected:"},
{"lineNum":" 1733","line":"    ~numpunct_byname();"},
{"lineNum":" 1734","line":""},
{"lineNum":" 1735","line":"private:"},
{"lineNum":" 1736","line":"    void __init(const char*);"},
{"lineNum":" 1737","line":"};"},
{"lineNum":" 1738","line":""},
{"lineNum":" 1739","line":"template <>"},
{"lineNum":" 1740","line":"class _LIBCPP_TYPE_VIS numpunct_byname<wchar_t>"},
{"lineNum":" 1741","line":": public numpunct<wchar_t>"},
{"lineNum":" 1742","line":"{"},
{"lineNum":" 1743","line":"public:"},
{"lineNum":" 1744","line":"    typedef wchar_t char_type;"},
{"lineNum":" 1745","line":"    typedef basic_string<char_type> string_type;"},
{"lineNum":" 1746","line":""},
{"lineNum":" 1747","line":"    explicit numpunct_byname(const char* __nm, size_t __refs = 0);"},
{"lineNum":" 1748","line":"    explicit numpunct_byname(const string& __nm, size_t __refs = 0);"},
{"lineNum":" 1749","line":""},
{"lineNum":" 1750","line":"protected:"},
{"lineNum":" 1751","line":"    ~numpunct_byname();"},
{"lineNum":" 1752","line":""},
{"lineNum":" 1753","line":"private:"},
{"lineNum":" 1754","line":"    void __init(const char*);"},
{"lineNum":" 1755","line":"};"},
{"lineNum":" 1756","line":""},
{"lineNum":" 1757","line":"_LIBCPP_END_NAMESPACE_STD"},
{"lineNum":" 1758","line":""},
{"lineNum":" 1759","line":"#endif // _LIBCPP___LOCALE"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 13, "covered" : 0,};
var merged_data = [];
