var data = {lines:[
{"lineNum":"    1","line":"/*"},
{"lineNum":"    2","line":"//@HEADER"},
{"lineNum":"    3","line":"// ************************************************************************"},
{"lineNum":"    4","line":"//"},
{"lineNum":"    5","line":"//                        Kokkos v. 3.0"},
{"lineNum":"    6","line":"//       Copyright (2020) National Technology & Engineering"},
{"lineNum":"    7","line":"//               Solutions of Sandia, LLC (NTESS)."},
{"lineNum":"    8","line":"//"},
{"lineNum":"    9","line":"// Under the terms of Contract DE-NA0003525 with NTESS,"},
{"lineNum":"   10","line":"// the U.S. Government retains certain rights in this software."},
{"lineNum":"   11","line":"//"},
{"lineNum":"   12","line":"// Redistribution and use in source and binary forms, with or without"},
{"lineNum":"   13","line":"// modification, are permitted provided that the following conditions are"},
{"lineNum":"   14","line":"// met:"},
{"lineNum":"   15","line":"//"},
{"lineNum":"   16","line":"// 1. Redistributions of source code must retain the above copyright"},
{"lineNum":"   17","line":"// notice, this list of conditions and the following disclaimer."},
{"lineNum":"   18","line":"//"},
{"lineNum":"   19","line":"// 2. Redistributions in binary form must reproduce the above copyright"},
{"lineNum":"   20","line":"// notice, this list of conditions and the following disclaimer in the"},
{"lineNum":"   21","line":"// documentation and/or other materials provided with the distribution."},
{"lineNum":"   22","line":"//"},
{"lineNum":"   23","line":"// 3. Neither the name of the Corporation nor the names of the"},
{"lineNum":"   24","line":"// contributors may be used to endorse or promote products derived from"},
{"lineNum":"   25","line":"// this software without specific prior written permission."},
{"lineNum":"   26","line":"//"},
{"lineNum":"   27","line":"// THIS SOFTWARE IS PROVIDED BY NTESS \"AS IS\" AND ANY"},
{"lineNum":"   28","line":"// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE"},
{"lineNum":"   29","line":"// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR"},
{"lineNum":"   30","line":"// PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL NTESS OR THE"},
{"lineNum":"   31","line":"// CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,"},
{"lineNum":"   32","line":"// EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,"},
{"lineNum":"   33","line":"// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR"},
{"lineNum":"   34","line":"// PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF"},
{"lineNum":"   35","line":"// LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING"},
{"lineNum":"   36","line":"// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS"},
{"lineNum":"   37","line":"// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."},
{"lineNum":"   38","line":"//"},
{"lineNum":"   39","line":"// Questions? Contact Christian R. Trott (crtrott@sandia.gov)"},
{"lineNum":"   40","line":"//"},
{"lineNum":"   41","line":"// ************************************************************************"},
{"lineNum":"   42","line":"//@HEADER"},
{"lineNum":"   43","line":"*/"},
{"lineNum":"   44","line":""},
{"lineNum":"   45","line":"#include <Kokkos_Macros.hpp>"},
{"lineNum":"   46","line":"#if defined(KOKKOS_ENABLE_OPENMP) && defined(KOKKOS_ENABLE_TASKDAG)"},
{"lineNum":"   47","line":""},
{"lineNum":"   48","line":"#include <Kokkos_Core.hpp>"},
{"lineNum":"   49","line":""},
{"lineNum":"   50","line":"#include <impl/Kokkos_TaskQueue_impl.hpp>"},
{"lineNum":"   51","line":"#include <impl/Kokkos_HostThreadTeam.hpp>"},
{"lineNum":"   52","line":"#include <OpenMP/Kokkos_OpenMP_Task.hpp>"},
{"lineNum":"   53","line":"#include <cassert>"},
{"lineNum":"   54","line":""},
{"lineNum":"   55","line":"//----------------------------------------------------------------------------"},
{"lineNum":"   56","line":"//----------------------------------------------------------------------------"},
{"lineNum":"   57","line":""},
{"lineNum":"   58","line":"namespace Kokkos {"},
{"lineNum":"   59","line":"namespace Impl {"},
{"lineNum":"   60","line":""},
{"lineNum":"   61","line":"template class TaskQueue<Kokkos::OpenMP, typename Kokkos::OpenMP::memory_space>;"},
{"lineNum":"   62","line":""},
{"lineNum":"   63","line":"HostThreadTeamData& HostThreadTeamDataSingleton::singleton() {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   64","line":"  static HostThreadTeamDataSingleton s;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   65","line":"  return s;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   66","line":"}"},
{"lineNum":"   67","line":""},
{"lineNum":"   68","line":"HostThreadTeamDataSingleton::HostThreadTeamDataSingleton()"},
{"lineNum":"   69","line":"    : HostThreadTeamData() {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   70","line":"  Kokkos::OpenMP::memory_space space;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   71","line":"  const size_t num_pool_reduce_bytes  = 32;"},
{"lineNum":"   72","line":"  const size_t num_team_reduce_bytes  = 32;"},
{"lineNum":"   73","line":"  const size_t num_team_shared_bytes  = 1024;"},
{"lineNum":"   74","line":"  const size_t num_thread_local_bytes = 1024;"},
{"lineNum":"   75","line":"  const size_t alloc_bytes            = HostThreadTeamData::scratch_size("},
{"lineNum":"   76","line":"      num_pool_reduce_bytes, num_team_reduce_bytes, num_team_shared_bytes,"},
{"lineNum":"   77","line":"      num_thread_local_bytes);"},
{"lineNum":"   78","line":""},
{"lineNum":"   79","line":"  void* ptr = nullptr;"},
{"lineNum":"   80","line":"  try {"},
{"lineNum":"   81","line":"    ptr = space.allocate(alloc_bytes);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   82","line":"  } catch (Kokkos::Experimental::RawMemoryAllocationFailure const& f) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   83","line":"    // For now, just rethrow the error message with a note"},
{"lineNum":"   84","line":"    // Note that this could, in turn, trigger an out of memory exception,"},
{"lineNum":"   85","line":"    // but it\'s pretty unlikely, so we won\'t worry about it for now."},
{"lineNum":"   86","line":"    // TODO reasonable error message when `std::string` causes OOM error"},
{"lineNum":"   87","line":"    Kokkos::Impl::throw_runtime_exception(","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   88","line":"        std::string(\"Failure to allocate scratch memory:  \") +","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   89","line":"        f.get_error_message());","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   90","line":"  }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   91","line":""},
{"lineNum":"   92","line":"  HostThreadTeamData::scratch_assign("},
{"lineNum":"   93","line":"      ptr, alloc_bytes, num_pool_reduce_bytes, num_team_reduce_bytes,"},
{"lineNum":"   94","line":"      num_team_shared_bytes, num_thread_local_bytes);"},
{"lineNum":"   95","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   96","line":""},
{"lineNum":"   97","line":"HostThreadTeamDataSingleton::~HostThreadTeamDataSingleton() {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   98","line":"  Kokkos::OpenMP::memory_space space;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   99","line":"  space.deallocate(HostThreadTeamData::scratch_buffer(),","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  100","line":"                   static_cast<size_t>(HostThreadTeamData::scratch_bytes()));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  101","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  102","line":""},
{"lineNum":"  103","line":"}  // namespace Impl"},
{"lineNum":"  104","line":"}  // namespace Kokkos"},
{"lineNum":"  105","line":""},
{"lineNum":"  106","line":"//----------------------------------------------------------------------------"},
{"lineNum":"  107","line":"#else"},
{"lineNum":"  108","line":"void KOKKOS_CORE_SRC_OPENMP_KOKKOS_OPENMP_TASK_PREVENT_LINK_ERROR() {}"},
{"lineNum":"  109","line":"#endif /* #if defined( KOKKOS_ENABLE_OPENMP ) && defined( \\"},
{"lineNum":"  110","line":"          KOKKOS_ENABLE_TASKDAG ) */"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:41", "instrumented" : 17, "covered" : 0,};
var merged_data = [];
