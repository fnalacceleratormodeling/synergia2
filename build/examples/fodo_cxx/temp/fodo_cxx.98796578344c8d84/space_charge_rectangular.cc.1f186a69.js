var data = {lines:[
{"lineNum":"    1","line":"#include \"synergia/collective/space_charge_rectangular.h\""},
{"lineNum":"    2","line":"#include \"synergia/foundation/math_constants.h\""},
{"lineNum":"    3","line":"#include \"synergia/foundation/physical_constants.h\""},
{"lineNum":"    4","line":"#include \"synergia/bunch/core_diagnostics.h\""},
{"lineNum":"    5","line":"#include \"deposit.h\""},
{"lineNum":"    6","line":""},
{"lineNum":"    7","line":"#include \"synergia/utils/simple_timer.h\""},
{"lineNum":"    8","line":""},
{"lineNum":"    9","line":"using mconstants::pi;"},
{"lineNum":"   10","line":"using pconstants::epsilon0;"},
{"lineNum":"   11","line":""},
{"lineNum":"   12","line":"namespace"},
{"lineNum":"   13","line":"{"},
{"lineNum":"   14","line":"    void"},
{"lineNum":"   15","line":"    print_grid( Logger & logger,"},
{"lineNum":"   16","line":"                karray1d_dev const & grid,"},
{"lineNum":"   17","line":"                int x0, int x1,"},
{"lineNum":"   18","line":"                int y0, int y1,"},
{"lineNum":"   19","line":"                int z0, int z1,"},
{"lineNum":"   20","line":"                int gx, int gy, int gz,"},
{"lineNum":"   21","line":"                int off = 0 )"},
{"lineNum":"   22","line":"    {"},
{"lineNum":"   23","line":"        karray1d hgrid = Kokkos::create_mirror_view(grid);"},
{"lineNum":"   24","line":"        Kokkos::deep_copy(hgrid, grid);"},
{"lineNum":"   25","line":""},
{"lineNum":"   26","line":"        double sum = 0;"},
{"lineNum":"   27","line":""},
{"lineNum":"   28","line":"        int dim = grid.extent(0);"},
{"lineNum":"   29","line":"        for(int i=0; i<dim; ++i)"},
{"lineNum":"   30","line":"        {"},
{"lineNum":"   31","line":"            sum += fabs(hgrid(i));"},
{"lineNum":"   32","line":"        }"},
{"lineNum":"   33","line":""},
{"lineNum":"   34","line":"#if 0"},
{"lineNum":"   35","line":"        for(int x=0; x<gx; ++x)"},
{"lineNum":"   36","line":"            for(int y=0; y<gy; ++y)"},
{"lineNum":"   37","line":"                sum += hgrid((x*gy + y)*2 + off);"},
{"lineNum":"   38","line":"#endif"},
{"lineNum":"   39","line":""},
{"lineNum":"   40","line":"        logger << std::setprecision(12) << std::scientific;"},
{"lineNum":"   41","line":"        logger << \"      \" << grid.label() << \".sum = \" << sum << \"\\n\";"},
{"lineNum":"   42","line":""},
{"lineNum":"   43","line":"        for (int z=z0; z<z1; ++z)"},
{"lineNum":"   44","line":"        {"},
{"lineNum":"   45","line":"            logger << \"        \" << z << \", \";"},
{"lineNum":"   46","line":""},
{"lineNum":"   47","line":"            for (int y=y0; y<y1; ++y)"},
{"lineNum":"   48","line":"            {"},
{"lineNum":"   49","line":"                logger << y << \", \" << x0 << \" | \";"},
{"lineNum":"   50","line":""},
{"lineNum":"   51","line":"                for (int x=x0; x<x1; ++x)"},
{"lineNum":"   52","line":"                {"},
{"lineNum":"   53","line":"                    logger << std::setprecision(12)"},
{"lineNum":"   54","line":"                        //<< hgrid(z*gx*gy + y*gx + x) << \", \";"},
{"lineNum":"   55","line":"                        << hgrid(x*gy*gz + y*gz + z) << \", \";"},
{"lineNum":"   56","line":"                }"},
{"lineNum":"   57","line":""},
{"lineNum":"   58","line":"                logger << \"\\n\";"},
{"lineNum":"   59","line":"            }"},
{"lineNum":"   60","line":"        }"},
{"lineNum":"   61","line":"    }"},
{"lineNum":"   62","line":""},
{"lineNum":"   63","line":"    void print_statistics(Bunch & bunch, Logger & logger)"},
{"lineNum":"   64","line":"    {"},
{"lineNum":"   65","line":""},
{"lineNum":"   66","line":"        logger"},
{"lineNum":"   67","line":"            << \"Bunch statistics: \""},
{"lineNum":"   68","line":"            << \"num_valid = \" << bunch.get_local_num()"},
{"lineNum":"   69","line":"            << \", size = \" << bunch.size()"},
{"lineNum":"   70","line":"            << \", capacity = \" << bunch.capacity()"},
{"lineNum":"   71","line":"            << \", total_num = \" << bunch.get_total_num()"},
{"lineNum":"   72","line":"            <<\"\\nMean and std: \";"},
{"lineNum":"   73","line":""},
{"lineNum":"   74","line":""},
{"lineNum":"   75","line":"        // print particles after propagate"},
{"lineNum":"   76","line":"        auto mean = Core_diagnostics::calculate_mean(bunch);"},
{"lineNum":"   77","line":"        auto std  = Core_diagnostics::calculate_std(bunch, mean);"},
{"lineNum":"   78","line":""},
{"lineNum":"   79","line":"        logger"},
{"lineNum":"   80","line":"            << std::setprecision(16)"},
{"lineNum":"   81","line":"            << std::showpos << std::scientific"},
{"lineNum":"   82","line":"            << \"\\n\""},
{"lineNum":"   83","line":"            //<< \"\\nmean\\tstd\\n\""},
{"lineNum":"   84","line":"            ;"},
{"lineNum":"   85","line":""},
{"lineNum":"   86","line":"        for (int i=0; i<6; ++i)"},
{"lineNum":"   87","line":"            logger << mean[i] << \", \" << std[i] << \"\\n\";"},
{"lineNum":"   88","line":""},
{"lineNum":"   89","line":"        logger << \"\\n\";"},
{"lineNum":"   90","line":""},
{"lineNum":"   91","line":"        for (int p=0; p<4; ++p) bunch.print_particle(p, logger);"},
{"lineNum":"   92","line":""},
{"lineNum":"   93","line":"        logger << \"\\n\";"},
{"lineNum":"   94","line":"    }"},
{"lineNum":"   95","line":""},
{"lineNum":"   96","line":"    KOKKOS_INLINE_FUNCTION"},
{"lineNum":"   97","line":"    int fast_int_floor_kokkos(const double x)"},
{"lineNum":"   98","line":"    {"},
{"lineNum":"   99","line":"        int ix = static_cast<int>(x);","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  100","line":"        return x > 0.0 ? ix : ((x - ix == 0) ? ix : ix - 1);","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  101","line":"    }"},
{"lineNum":"  102","line":""},
{"lineNum":"  103","line":"    KOKKOS_INLINE_FUNCTION"},
{"lineNum":"  104","line":"    void get_leftmost_indices_offset("},
{"lineNum":"  105","line":"            double pos, double left, double inv_cell_size,"},
{"lineNum":"  106","line":"            int & idx, double & off )"},
{"lineNum":"  107","line":"    {"},
{"lineNum":"  108","line":"        double scaled_location = (pos - left) * inv_cell_size - 0.5;","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  109","line":"        idx = fast_int_floor_kokkos(scaled_location);"},
{"lineNum":"  110","line":"        off = scaled_location - idx;"},
{"lineNum":"  111","line":"    }"},
{"lineNum":"  112","line":""},
{"lineNum":"  113","line":"    struct alg_zeroer","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  114","line":"    {"},
{"lineNum":"  115","line":"        karray1d_dev arr;"},
{"lineNum":"  116","line":""},
{"lineNum":"  117","line":"        KOKKOS_INLINE_FUNCTION"},
{"lineNum":"  118","line":"        void operator() (const int i) const"},
{"lineNum":"  119","line":"        { arr(i) = 0.0; }","class":"lineNoCov","hits":"0","possible_hits":"20",},
{"lineNum":"  120","line":"    };"},
{"lineNum":"  121","line":""},
{"lineNum":"  122","line":"    struct alg_phi","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  123","line":"    {"},
{"lineNum":"  124","line":"        karray1d_dev phi;"},
{"lineNum":"  125","line":"        int lower, gy, gz;"},
{"lineNum":"  126","line":"        double igygz, igz;"},
{"lineNum":"  127","line":"        double px, py, pz;"},
{"lineNum":"  128","line":"        double gamma;"},
{"lineNum":"  129","line":""},
{"lineNum":"  130","line":"        alg_phi(karray1d_dev const& phi,"},
{"lineNum":"  131","line":"                int lower, int gy, int gz,"},
{"lineNum":"  132","line":"                double px, double py, double pz,"},
{"lineNum":"  133","line":"                double gamma)"},
{"lineNum":"  134","line":"            : phi(phi)"},
{"lineNum":"  135","line":"            , lower(lower), gy(gy), gz(gz)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  136","line":"            , igygz(1.0/(gy*gz))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  137","line":"            , igz(1.0/gz)"},
{"lineNum":"  138","line":"            , px(px), py(py), pz(pz)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  139","line":"            , gamma(gamma)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  140","line":"        { }"},
{"lineNum":"  141","line":""},
{"lineNum":"  142","line":"        KOKKOS_INLINE_FUNCTION"},
{"lineNum":"  143","line":"        void operator() (const int i) const"},
{"lineNum":"  144","line":"        {"},
{"lineNum":"  145","line":"            const int ix = i * igygz;","class":"lineNoCov","hits":"0","possible_hits":"5",},
{"lineNum":"  146","line":"            const int iy = (i - ix*gy*gz) * igz;","class":"lineNoCov","hits":"0","possible_hits":"7",},
{"lineNum":"  147","line":"            const int iz = i - ix*gy*gz - iy*gz;","class":"lineNoCov","hits":"0","possible_hits":"9",},
{"lineNum":"  148","line":""},
{"lineNum":"  149","line":"            int xt = ix + lower + 1;","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  150","line":"            int yt = iy + 1;","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  151","line":""},
{"lineNum":"  152","line":"            double denominator"},
{"lineNum":"  153","line":"                = mconstants::pi * mconstants::pi * (","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  154","line":"                        xt*xt / (px*px) +","class":"lineNoCov","hits":"0","possible_hits":"17",},
{"lineNum":"  155","line":"                        yt*yt / (py*py) +","class":"lineNoCov","hits":"0","possible_hits":"14",},
{"lineNum":"  156","line":"                        4.0 * iz*iz / (pz*pz*gamma*gamma) );","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  157","line":""},
{"lineNum":"  158","line":"            int base = ix*gy*gz + iy*gz + iz;"},
{"lineNum":"  159","line":""},
{"lineNum":"  160","line":"            phi(base*2+0) /= denominator;","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  161","line":"            phi(base*2+1) /= denominator;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  162","line":""},
{"lineNum":"  163","line":"        }"},
{"lineNum":"  164","line":"    };"},
{"lineNum":"  165","line":""},
{"lineNum":"  166","line":"    struct alg_force_extractor","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  167","line":"    {"},
{"lineNum":"  168","line":"        karray1d_dev phi;"},
{"lineNum":"  169","line":"        karray1d_dev enx;"},
{"lineNum":"  170","line":"        karray1d_dev eny;"},
{"lineNum":"  171","line":"        karray1d_dev enz;"},
{"lineNum":"  172","line":""},
{"lineNum":"  173","line":"        int gx, gy, gz;"},
{"lineNum":"  174","line":"        int dgx, dgy;"},
{"lineNum":"  175","line":"        double ihx, ihy, ihz;"},
{"lineNum":"  176","line":"        double igygz;"},
{"lineNum":"  177","line":"        double igz;"},
{"lineNum":"  178","line":""},
{"lineNum":"  179","line":"        alg_force_extractor("},
{"lineNum":"  180","line":"                karray1d_dev const& phi,"},
{"lineNum":"  181","line":"                karray1d_dev const& enx,"},
{"lineNum":"  182","line":"                karray1d_dev const& eny,"},
{"lineNum":"  183","line":"                karray1d_dev const& enz,"},
{"lineNum":"  184","line":"                std::array<int, 3> const& g,"},
{"lineNum":"  185","line":"                std::array<double, 3> const& h )"},
{"lineNum":"  186","line":"            : phi(phi), enx(enx), eny(eny), enz(enz)"},
{"lineNum":"  187","line":"            , gx(g[0]), gy(g[1]), gz(g[2])","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  188","line":"            , ihx(0.5/h[0]), ihy(0.5/h[1]), ihz(0.5/h[2])","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  189","line":"            , igygz(1.0/(gy*gz))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  190","line":"            , igz(1.0/gz)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  191","line":"        { }"},
{"lineNum":"  192","line":""},
{"lineNum":"  193","line":""},
{"lineNum":"  194","line":"        KOKKOS_INLINE_FUNCTION"},
{"lineNum":"  195","line":"        void operator() (const int i) const"},
{"lineNum":"  196","line":"        {"},
{"lineNum":"  197","line":"            int ix = i * igygz;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  198","line":"            int iy = (i - ix*gy*gz) * igz;"},
{"lineNum":"  199","line":"            int iz = i - ix*gy*gz - iy*gz;"},
{"lineNum":"  200","line":""},
{"lineNum":"  201","line":"            int ixl, ixr, iyl, iyr, izl, izr;"},
{"lineNum":"  202","line":"            double idx, idy, idz;"},
{"lineNum":"  203","line":""},
{"lineNum":"  204","line":"            // all x-y boundaries will be skipped (set to 0)"},
{"lineNum":"  205","line":"            if (ix==0 || ix==gx-1 || iy==0 || iy==gy-1)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  206","line":"                return;"},
{"lineNum":"  207","line":""},
{"lineNum":"  208","line":"            ixl = ix - 1; ixr = ix + 1;"},
{"lineNum":"  209","line":"            iyl = iy - 1; iyr = iy + 1;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  210","line":"            izl = iz - 1; izr = iz + 1;"},
{"lineNum":"  211","line":""},
{"lineNum":"  212","line":"            idx = ihx; idy = ihy; idz = ihz;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  213","line":""},
{"lineNum":"  214","line":"            // periodic z"},
{"lineNum":"  215","line":"            if (iz==0) { izl = gz-1; }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  216","line":"            else if (iz==gz-1) { izr = 0; }"},
{"lineNum":"  217","line":""},
{"lineNum":"  218","line":"            int idx_r = ixr*gy*gz + iy*gz + iz;"},
{"lineNum":"  219","line":"            int idx_l = ixl*gy*gz + iy*gz + iz;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  220","line":"            enx(i) = -(phi(idx_r) - phi(idx_l)) * idx;","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  221","line":""},
{"lineNum":"  222","line":"            idx_r = ix*gy*gz + iyr*gz + iz;"},
{"lineNum":"  223","line":"            idx_l = ix*gy*gz + iyl*gz + iz;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  224","line":"            eny(i) = -(phi(idx_r) - phi(idx_l)) * idy;","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  225","line":""},
{"lineNum":"  226","line":"            idx_r = ix*gy*gz + iy*gz + izr;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  227","line":"            idx_l = ix*gy*gz + iy*gz + izl;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  228","line":"            enz(i) = -(phi(idx_r) - phi(idx_l)) * idz;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  229","line":"        }"},
{"lineNum":"  230","line":"    };"},
{"lineNum":"  231","line":""},
{"lineNum":"  232","line":"    struct alg_kicker","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  233","line":"    {"},
{"lineNum":"  234","line":"        Particles parts;"},
{"lineNum":"  235","line":"        ConstParticleMasks masks;"},
{"lineNum":"  236","line":""},
{"lineNum":"  237","line":"        karray1d_dev enx;"},
{"lineNum":"  238","line":"        karray1d_dev eny;"},
{"lineNum":"  239","line":"        karray1d_dev enz;"},
{"lineNum":"  240","line":""},
{"lineNum":"  241","line":"        int gx, gy, gz;"},
{"lineNum":"  242","line":"        double ihx, ihy, ihz;"},
{"lineNum":"  243","line":"        double lx, ly, lz;"},
{"lineNum":"  244","line":"        double factor, pref, m;"},
{"lineNum":"  245","line":""},
{"lineNum":"  246","line":"        alg_kicker("},
{"lineNum":"  247","line":"                Particles parts,"},
{"lineNum":"  248","line":"                ConstParticleMasks masks,"},
{"lineNum":"  249","line":"                karray1d_dev const& enx,"},
{"lineNum":"  250","line":"                karray1d_dev const& eny,"},
{"lineNum":"  251","line":"                karray1d_dev const& enz,"},
{"lineNum":"  252","line":"                std::array<int,    3> const& g,"},
{"lineNum":"  253","line":"                std::array<double, 3> const& h,"},
{"lineNum":"  254","line":"                std::array<double, 3> const& l,"},
{"lineNum":"  255","line":"                double factor,"},
{"lineNum":"  256","line":"                double pref,"},
{"lineNum":"  257","line":"                double m )"},
{"lineNum":"  258","line":"            : parts(parts), masks(masks)"},
{"lineNum":"  259","line":"            , enx(enx), eny(eny), enz(enz)"},
{"lineNum":"  260","line":"            , gx(g[0]), gy(g[1]), gz(g[2])","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  261","line":"            , ihx(1.0/h[0]), ihy(1.0/h[1]), ihz(1.0/h[2])","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  262","line":"            , lx(l[0]), ly(l[1]), lz(l[2])","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  263","line":"            , factor(factor), pref(pref), m(m)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  264","line":"        { }"},
{"lineNum":"  265","line":""},
{"lineNum":"  266","line":"        KOKKOS_INLINE_FUNCTION"},
{"lineNum":"  267","line":"        void operator() (const int i) const"},
{"lineNum":"  268","line":"        {"},
{"lineNum":"  269","line":"            if (masks(i))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  270","line":"            {"},
{"lineNum":"  271","line":"                int ix, iy, iz;"},
{"lineNum":"  272","line":"                double ox, oy, oz;"},
{"lineNum":"  273","line":""},
{"lineNum":"  274","line":"                get_leftmost_indices_offset(parts(i, 0), lx, ihx, ix, ox);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  275","line":"                get_leftmost_indices_offset(parts(i, 2), ly, ihy, iy, oy);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  276","line":"                get_leftmost_indices_offset(parts(i, 4), lz, ihz, iz, oz);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  277","line":""},
{"lineNum":"  278","line":"                double aox = 1.0 - ox;"},
{"lineNum":"  279","line":"                double aoy = 1.0 - oy;"},
{"lineNum":"  280","line":"                double aoz = 1.0 - oz;"},
{"lineNum":"  281","line":""},
{"lineNum":"  282","line":"                if (ix>=0 && ix<gx-1 && iy>=0 && iy<gy-1)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  283","line":"                {"},
{"lineNum":"  284","line":"                    while (iz > gz-1) iz -= gz;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  285","line":"                    while (iz < 0) iz += gz;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  286","line":""},
{"lineNum":"  287","line":"                    int izp1 = (iz==(gz-1)) ? 0 : iz + 1;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  288","line":""},
{"lineNum":"  289","line":"                    double val = 0;"},
{"lineNum":"  290","line":"                    int base = 0;"},
{"lineNum":"  291","line":""},
{"lineNum":"  292","line":"                    // enz"},
{"lineNum":"  293","line":"                    base = ix*gy*gz + iy*gz;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  294","line":"                    val  = aox * aoy * aoz * enz(base+iz);      // x, y, z","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  295","line":"                    val += aox * aoy *  oz * enz(base+izp1);    // x, y, z+1","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  296","line":"                    val += aox *  oy * aoz * enz(base+gz+iz);   // x, y+1, z","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  297","line":"                    val += aox *  oy *  oz * enz(base+gz+izp1); // x, y+1, z+1","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  298","line":""},
{"lineNum":"  299","line":"                    base = (ix+1)*gy*gz + iy*gz;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  300","line":"                    val += ox * aoy * aoz * enz(base+iz);       // x+1, y, z","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  301","line":"                    val += ox * aoy *  oz * enz(base+izp1);     // x+1, y, z+1","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  302","line":"                    val += ox *  oy * aoz * enz(base+gz+iz);    // x+1, y+1, z","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  303","line":"                    val += ox *  oy *  oz * enz(base+gz+izp1);  // x+1, y+1, z+1","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  304","line":""},
{"lineNum":"  305","line":"                    double p = pref + parts(i, 5) * pref;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  306","line":"                    double Eoc_i = std::sqrt(p*p+m*m);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  307","line":"                    double Eoc_f = Eoc_i - factor * pref * val;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  308","line":"                    double dpop = (std::sqrt(Eoc_f*Eoc_f-m*m) - std::sqrt(Eoc_i*Eoc_i-m*m))/pref;","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  309","line":""},
{"lineNum":"  310","line":"                    parts(i, 5) += dpop;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  311","line":""},
{"lineNum":"  312","line":"                    // eny"},
{"lineNum":"  313","line":"                    base = ix*gy*gz + iy*gz;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  314","line":"                    val  = aox * aoy * aoz * eny(base+iz);      // x, y, z","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  315","line":"                    val += aox * aoy *  oz * eny(base+izp1);    // x, y, z+1","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  316","line":"                    val += aox *  oy * aoz * eny(base+gz+iz);   // x, y+1, z","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  317","line":"                    val += aox *  oy *  oz * eny(base+gz+izp1); // x, y+1, z+1","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  318","line":""},
{"lineNum":"  319","line":"                    base = (ix+1)*gy*gz + iy*gz;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  320","line":"                    val += ox * aoy * aoz * eny(base+iz);       // x+1, y, z","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  321","line":"                    val += ox * aoy *  oz * eny(base+izp1);     // x+1, y, z+1","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  322","line":"                    val += ox *  oy * aoz * eny(base+gz+iz);    // x+1, y+1, z","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  323","line":"                    val += ox *  oy *  oz * eny(base+gz+izp1);  // x+1, y+1, z+1","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  324","line":""},
{"lineNum":"  325","line":"                    parts(i, 3) += factor * val;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  326","line":""},
{"lineNum":"  327","line":"                    // enx"},
{"lineNum":"  328","line":"                    base = ix*gy*gz + iy*gz;"},
{"lineNum":"  329","line":"                    val  = aox * aoy * aoz * enx(base+iz);      // x, y, z","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  330","line":"                    val += aox * aoy *  oz * enx(base+izp1);    // x, y, z+1","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  331","line":"                    val += aox *  oy * aoz * enx(base+gz+iz);   // x, y+1, z","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  332","line":"                    val += aox *  oy *  oz * enx(base+gz+izp1); // x, y+1, z+1","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  333","line":""},
{"lineNum":"  334","line":"                    base = (ix+1)*gy*gz + iy*gz;"},
{"lineNum":"  335","line":"                    val += ox * aoy * aoz * enx(base+iz);       // x+1, y, z","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  336","line":"                    val += ox * aoy *  oz * enx(base+izp1);     // x+1, y, z+1","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  337","line":"                    val += ox *  oy * aoz * enx(base+gz+iz);    // x+1, y+1, z","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  338","line":"                    val += ox *  oy *  oz * enx(base+gz+izp1);  // x+1, y+1, z+1","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  339","line":""},
{"lineNum":"  340","line":"                    parts(i, 1) += factor * val;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  341","line":"                }"},
{"lineNum":"  342","line":"            }"},
{"lineNum":"  343","line":"        }"},
{"lineNum":"  344","line":"    };"},
{"lineNum":"  345","line":""},
{"lineNum":"  346","line":"}"},
{"lineNum":"  347","line":""},
{"lineNum":"  348","line":""},
{"lineNum":"  349","line":""},
{"lineNum":"  350","line":""},
{"lineNum":"  351","line":"Space_charge_rectangular::Space_charge_rectangular("},
{"lineNum":"  352","line":"            Space_charge_rectangular_options const& ops)"},
{"lineNum":"  353","line":"    : Collective_operator(\"sc_rectangular\", 1.0)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  354","line":"    , options(ops)"},
{"lineNum":"  355","line":"    , domain(ops.shape, {1.0, 1.0, 1.0})"},
{"lineNum":"  356","line":"    , ffts()","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  357","line":"{","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  358","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  359","line":""},
{"lineNum":"  360","line":""},
{"lineNum":"  361","line":"void"},
{"lineNum":"  362","line":"Space_charge_rectangular::apply_impl("},
{"lineNum":"  363","line":"            Bunch_simulator& sim,"},
{"lineNum":"  364","line":"            double time_step,"},
{"lineNum":"  365","line":"            Logger& logger)"},
{"lineNum":"  366","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  367","line":"    logger << \"    Space charge 3d open hockney\\n\";"},
{"lineNum":"  368","line":""},
{"lineNum":"  369","line":"    scoped_simple_timer timer(\"sc_rect_total\");"},
{"lineNum":"  370","line":""},
{"lineNum":"  371","line":"    // construct the workspace for a new bunch simulator"},
{"lineNum":"  372","line":"    if (bunch_sim_id != sim.id())","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  373","line":"    {"},
{"lineNum":"  374","line":"        construct_workspaces(sim);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  375","line":"        bunch_sim_id = sim.id();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  376","line":"    }"},
{"lineNum":"  377","line":""},
{"lineNum":"  378","line":"    // apply to bunches"},
{"lineNum":"  379","line":"    for(size_t t=0; t<2; ++t)"},
{"lineNum":"  380","line":"    {"},
{"lineNum":"  381","line":"        for(size_t b=0; b<sim[t].get_bunch_array_size(); ++b)","class":"lineNoCov","hits":"0","possible_hits":"6",},
{"lineNum":"  382","line":"        {"},
{"lineNum":"  383","line":"            apply_bunch(sim[t][b], ffts[t][b], time_step, logger);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  384","line":"        }"},
{"lineNum":"  385","line":"    }"},
{"lineNum":"  386","line":""},
{"lineNum":"  387","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  388","line":""},
{"lineNum":"  389","line":"void"},
{"lineNum":"  390","line":"Space_charge_rectangular::apply_bunch("},
{"lineNum":"  391","line":"            Bunch& bunch,"},
{"lineNum":"  392","line":"            Distributed_fft3d_rect& fft,"},
{"lineNum":"  393","line":"            double time_step,"},
{"lineNum":"  394","line":"            Logger& logger)"},
{"lineNum":"  395","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  396","line":"    update_domain(bunch);"},
{"lineNum":"  397","line":""},
{"lineNum":"  398","line":"    get_local_charge_density(bunch);"},
{"lineNum":"  399","line":"    get_global_charge_density(bunch);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  400","line":""},
{"lineNum":"  401","line":"    double gamma = bunch.get_reference_particle().get_gamma();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  402","line":""},
{"lineNum":"  403","line":"    get_local_phi(fft, gamma);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  404","line":"    get_global_phi(fft);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  405","line":""},
{"lineNum":"  406","line":"    auto fn_norm = get_normalization_force();"},
{"lineNum":"  407","line":""},
{"lineNum":"  408","line":"    extract_force();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  409","line":"    apply_kick(bunch, fn_norm, time_step);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  410","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  411","line":""},
{"lineNum":"  412","line":"void"},
{"lineNum":"  413","line":"Space_charge_rectangular::construct_workspaces("},
{"lineNum":"  414","line":"        Bunch_simulator const& sim)"},
{"lineNum":"  415","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  416","line":"    // shape"},
{"lineNum":"  417","line":"    auto const& s = options.shape;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  418","line":""},
{"lineNum":"  419","line":"    // fft objects"},
{"lineNum":"  420","line":"    for(size_t t=0; t<2; ++t)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  421","line":"    {"},
{"lineNum":"  422","line":"        int num_local_bunches = sim[t].get_bunch_array_size();"},
{"lineNum":"  423","line":"        ffts[t] = std::vector<Distributed_fft3d_rect>(num_local_bunches);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  424","line":""},
{"lineNum":"  425","line":"        for(size_t b=0; b<num_local_bunches; ++b)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  426","line":"        {"},
{"lineNum":"  427","line":"            auto comm = sim[t][b]"},
{"lineNum":"  428","line":"                .get_comm()"},
{"lineNum":"  429","line":"                .divide(options.comm_group_size);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  430","line":""},
{"lineNum":"  431","line":"            ffts[t][b].construct(s, comm);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  432","line":"        }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  433","line":"    }"},
{"lineNum":"  434","line":""},
{"lineNum":"  435","line":"    // local workspaces"},
{"lineNum":"  436","line":"    int nz_cplx = Distributed_fft3d_rect::get_padded_shape_cplx(s[2]);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  437","line":""},
{"lineNum":"  438","line":"    rho = karray1d_dev(\"rho\", s[0] * s[1] * s[2]);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  439","line":"    phi = karray1d_dev(\"phi\", s[0] * s[1] * s[2]);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  440","line":""},
{"lineNum":"  441","line":"    phihat = karray1d_dev(\"phihat\", s[0] * s[1] * nz_cplx*2);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  442","line":""},
{"lineNum":"  443","line":"    h_rho = Kokkos::create_mirror_view(rho);"},
{"lineNum":"  444","line":"    h_phi = Kokkos::create_mirror_view(phi);"},
{"lineNum":"  445","line":""},
{"lineNum":"  446","line":"    // En is in the original domain"},
{"lineNum":"  447","line":"    enx = karray1d_dev(\"enx\", s[0] * s[1] * s[2]);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  448","line":"    eny = karray1d_dev(\"eny\", s[0] * s[1] * s[2]);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  449","line":"    enz = karray1d_dev(\"enz\", s[0] * s[1] * s[2]);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  450","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  451","line":""},
{"lineNum":"  452","line":""},
{"lineNum":"  453","line":"void"},
{"lineNum":"  454","line":"Space_charge_rectangular::update_domain(Bunch const& bunch)"},
{"lineNum":"  455","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  456","line":"    double beta = bunch.get_reference_particle().get_beta();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  457","line":"    auto dsize = options.pipe_size;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  458","line":"    dsize[2] /= beta;    // size in z_lab frame, longitudinal cdt coordinate","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  459","line":""},
{"lineNum":"  460","line":"    // A.M physical_offsets of the domain should be rescaled too,"},
{"lineNum":"  461","line":"    // but in this case they are zero"},
{"lineNum":"  462","line":"    domain = Rectangular_grid_domain(","class":"lineNoCov","hits":"0","possible_hits":"7",},
{"lineNum":"  463","line":"            options.shape, dsize, {0.0, 0.0, 0.0}, true);"},
{"lineNum":"  464","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  465","line":""},
{"lineNum":"  466","line":"void"},
{"lineNum":"  467","line":"Space_charge_rectangular::get_local_charge_density(Bunch const& bunch)"},
{"lineNum":"  468","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  469","line":"    scoped_simple_timer timer(\"sc_rect_local_rho\");"},
{"lineNum":"  470","line":""},
{"lineNum":"  471","line":"    auto g = domain.get_grid_shape();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  472","line":"    //g[2] = Distributed_fft3d::get_padded_shape_real(g[2]);"},
{"lineNum":"  473","line":"    //g[2] = (g[2]/2+1)*2;"},
{"lineNum":"  474","line":""},
{"lineNum":"  475","line":"#ifdef Kokkos_ENABLE_OPENMP"},
{"lineNum":"  476","line":"    deposit_charge_rectangular_3d_omp_reduce_xyz(rho,","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  477","line":"            domain, g, bunch);"},
{"lineNum":"  478","line":"#else"},
{"lineNum":"  479","line":"    deposit_charge_rectangular_3d_kokkos_scatter_view_xyz(rho,"},
{"lineNum":"  480","line":"            domain, g, bunch);"},
{"lineNum":"  481","line":"#endif"},
{"lineNum":"  482","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  483","line":""},
{"lineNum":"  484","line":""},
{"lineNum":"  485","line":"void"},
{"lineNum":"  486","line":"Space_charge_rectangular::get_global_charge_density(Bunch const& bunch)"},
{"lineNum":"  487","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  488","line":"    // do nothing if the bunch occupis a single rank"},
{"lineNum":"  489","line":"    if (bunch.get_comm().size() == 1) return;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  490","line":""},
{"lineNum":"  491","line":"    scoped_simple_timer timer(\"sc_rect_global_rho\");"},
{"lineNum":"  492","line":""},
{"lineNum":"  493","line":"    auto g = domain.get_grid_shape();"},
{"lineNum":"  494","line":""},
{"lineNum":"  495","line":"    simple_timer_start(\"sc_rect_global_rho_copy\");"},
{"lineNum":"  496","line":"    Kokkos::deep_copy(h_rho, rho);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  497","line":"    simple_timer_stop(\"sc_rect_global_rho_copy\");"},
{"lineNum":"  498","line":""},
{"lineNum":"  499","line":"    simple_timer_start(\"sc_rect_global_rho_reduce\");"},
{"lineNum":"  500","line":"    int err = MPI_Allreduce( MPI_IN_PLACE,","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  501","line":"                             (void*)h_rho.data(),"},
{"lineNum":"  502","line":"                             h_rho.extent(0),"},
{"lineNum":"  503","line":"                             MPI_DOUBLE,"},
{"lineNum":"  504","line":"                             MPI_SUM,"},
{"lineNum":"  505","line":"                             bunch.get_comm() );"},
{"lineNum":"  506","line":"    simple_timer_stop(\"sc_rect_global_rho_reduce\");"},
{"lineNum":"  507","line":""},
{"lineNum":"  508","line":"    if (err != MPI_SUCCESS)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  509","line":"    {"},
{"lineNum":"  510","line":"        throw std::runtime_error(","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  511","line":"                \"MPI error in Space_charge_rectangular\""},
{"lineNum":"  512","line":"                \"(MPI_Allreduce in get_global_charge_density)\" );"},
{"lineNum":"  513","line":"    }"},
{"lineNum":"  514","line":""},
{"lineNum":"  515","line":"    simple_timer_start(\"sc_rect_global_rho_copy\");"},
{"lineNum":"  516","line":"    Kokkos::deep_copy(rho, h_rho);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  517","line":"    simple_timer_stop(\"sc_rect_global_rho_copy\");"},
{"lineNum":"  518","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  519","line":""},
{"lineNum":"  520","line":""},
{"lineNum":"  521","line":"void"},
{"lineNum":"  522","line":"Space_charge_rectangular::get_local_phi("},
{"lineNum":"  523","line":"        Distributed_fft3d_rect& fft, double gamma)"},
{"lineNum":"  524","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  525","line":"    scoped_simple_timer timer(\"sc_rect_local_phi\");"},
{"lineNum":"  526","line":""},
{"lineNum":"  527","line":"    alg_zeroer az{phihat};"},
{"lineNum":"  528","line":"    Kokkos::parallel_for(phihat.extent(0), az);"},
{"lineNum":"  529","line":""},
{"lineNum":"  530","line":"    fft.transform(rho, phihat);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  531","line":""},
{"lineNum":"  532","line":"    int lower = fft.get_lower();"},
{"lineNum":"  533","line":"    int upper = fft.get_upper();"},
{"lineNum":"  534","line":"    auto ps = options.pipe_size;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  535","line":"    auto g = domain.get_grid_shape();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  536","line":"    int gy = g[1];"},
{"lineNum":"  537","line":"    int gz_padded_cplx = g[2]/2 + 1;"},
{"lineNum":"  538","line":""},
{"lineNum":"  539","line":"    alg_phi aphi(phihat, lower, gy, gz_padded_cplx,"},
{"lineNum":"  540","line":"            ps[0], ps[1], ps[2], gamma);"},
{"lineNum":"  541","line":""},
{"lineNum":"  542","line":"    Kokkos::parallel_for("},
{"lineNum":"  543","line":"            (upper-lower)*gy*gz_padded_cplx, aphi);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  544","line":""},
{"lineNum":"  545","line":"    fft.inv_transform(phihat, phi);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  546","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  547","line":""},
{"lineNum":"  548","line":"void"},
{"lineNum":"  549","line":"Space_charge_rectangular::get_global_phi("},
{"lineNum":"  550","line":"        Distributed_fft3d_rect const& fft)"},
{"lineNum":"  551","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  552","line":"    // do nothing if the solver only has a single rank"},
{"lineNum":"  553","line":"    if (fft.get_comm().size() == 1) return;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  554","line":""},
{"lineNum":"  555","line":"    scoped_simple_timer timer(\"sc_rect_global_phi\");"},
{"lineNum":"  556","line":""},
{"lineNum":"  557","line":"    Kokkos::deep_copy(h_phi, phi);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  558","line":""},
{"lineNum":"  559","line":"    int err = MPI_Allreduce( MPI_IN_PLACE,","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  560","line":"                             (void*)h_phi.data(),"},
{"lineNum":"  561","line":"                             h_phi.extent(0),"},
{"lineNum":"  562","line":"                             MPI_DOUBLE,"},
{"lineNum":"  563","line":"                             MPI_SUM,"},
{"lineNum":"  564","line":"                             fft.get_comm() );"},
{"lineNum":"  565","line":""},
{"lineNum":"  566","line":"    if (err != MPI_SUCCESS)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  567","line":"    {"},
{"lineNum":"  568","line":"        throw std::runtime_error(","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  569","line":"                \"MPI error in Space_charge_3d_open_hockney\""},
{"lineNum":"  570","line":"                \"(MPI_Allreduce in get_global_electric_force2_allreduce)\" );"},
{"lineNum":"  571","line":"    }"},
{"lineNum":"  572","line":""},
{"lineNum":"  573","line":"    Kokkos::deep_copy(phi, h_phi);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  574","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  575","line":""},
{"lineNum":"  576","line":"double"},
{"lineNum":"  577","line":"Space_charge_rectangular::get_normalization_force()"},
{"lineNum":"  578","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  579","line":"    auto g = domain.get_grid_shape();"},
{"lineNum":"  580","line":"    return 1.0 / (4.0 * g[0] * g[1] * g[2] * pconstants::epsilon0);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  581","line":"}"},
{"lineNum":"  582","line":""},
{"lineNum":"  583","line":"void"},
{"lineNum":"  584","line":"Space_charge_rectangular::extract_force()"},
{"lineNum":"  585","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  586","line":"    scoped_simple_timer timer(\"sc_rect_get_en\");"},
{"lineNum":"  587","line":""},
{"lineNum":"  588","line":"    auto g = domain.get_grid_shape();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  589","line":"    auto h = domain.get_cell_size();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  590","line":""},
{"lineNum":"  591","line":"    // phi is in (gx, gy, gz)"},
{"lineNum":"  592","line":"    // en{x|y|z} is in (gx, gy, gz)"},
{"lineNum":"  593","line":"    alg_force_extractor alg(phi, enx, eny, enz, g, h);"},
{"lineNum":"  594","line":"    Kokkos::parallel_for(g[0]*g[1]*g[2], alg);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  595","line":"    Kokkos::fence();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  596","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  597","line":""},
{"lineNum":"  598","line":"void"},
{"lineNum":"  599","line":"Space_charge_rectangular::apply_kick("},
{"lineNum":"  600","line":"        Bunch& bunch,"},
{"lineNum":"  601","line":"        double fn_norm,"},
{"lineNum":"  602","line":"        double time_step)"},
{"lineNum":"  603","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  604","line":"    scoped_simple_timer timer(\"sc_rect_kick\");"},
{"lineNum":"  605","line":""},
{"lineNum":"  606","line":"    auto ref = bunch.get_reference_particle();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  607","line":""},
{"lineNum":"  608","line":"    double q = bunch.get_particle_charge() * pconstants::e;"},
{"lineNum":"  609","line":"    double m = bunch.get_mass();"},
{"lineNum":"  610","line":""},
{"lineNum":"  611","line":"    double gamma = ref.get_gamma();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  612","line":"    double beta  = ref.get_beta();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  613","line":"    double pref  = ref.get_momentum();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  614","line":""},
{"lineNum":"  615","line":"    double unit_conversion = pconstants::c / (1e9 * pconstants::e);"},
{"lineNum":"  616","line":"    double factor = unit_conversion * q * time_step * fn_norm"},
{"lineNum":"  617","line":"        / (pref * gamma * gamma * beta);"},
{"lineNum":"  618","line":""},
{"lineNum":"  619","line":"    auto parts = bunch.get_local_particles();"},
{"lineNum":"  620","line":"    auto masks = bunch.get_local_particle_masks();"},
{"lineNum":"  621","line":""},
{"lineNum":"  622","line":"    auto g = domain.get_grid_shape();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  623","line":"    auto h = domain.get_cell_size();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  624","line":"    auto l = domain.get_left();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  625","line":""},
{"lineNum":"  626","line":"    alg_kicker kicker(parts, masks, enx, eny, enz,"},
{"lineNum":"  627","line":"            g, h, l, factor, pref, m);"},
{"lineNum":"  628","line":""},
{"lineNum":"  629","line":"    Kokkos::parallel_for(bunch.size(), kicker);"},
{"lineNum":"  630","line":"    Kokkos::fence();","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  631","line":"}","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  632","line":""},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 172, "covered" : 0,};
var merged_data = [];
