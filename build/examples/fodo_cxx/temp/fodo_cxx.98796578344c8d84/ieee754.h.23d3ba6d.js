var data = {lines:[
{"lineNum":"    1","line":"// Tencent is pleased to support the open source community by making RapidJSON available."},
{"lineNum":"    2","line":"//"},
{"lineNum":"    3","line":"// Copyright (C) 2015 THL A29 Limited, a Tencent company, and Milo Yip. All rights reserved."},
{"lineNum":"    4","line":"//"},
{"lineNum":"    5","line":"// Licensed under the MIT License (the \"License\"); you may not use this file except"},
{"lineNum":"    6","line":"// in compliance with the License. You may obtain a copy of the License at"},
{"lineNum":"    7","line":"//"},
{"lineNum":"    8","line":"// http://opensource.org/licenses/MIT"},
{"lineNum":"    9","line":"//"},
{"lineNum":"   10","line":"// Unless required by applicable law or agreed to in writing, software distributed"},
{"lineNum":"   11","line":"// under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR"},
{"lineNum":"   12","line":"// CONDITIONS OF ANY KIND, either express or implied. See the License for the"},
{"lineNum":"   13","line":"// specific language governing permissions and limitations under the License."},
{"lineNum":"   14","line":""},
{"lineNum":"   15","line":"#ifndef CEREAL_RAPIDJSON_IEEE754_"},
{"lineNum":"   16","line":"#define CEREAL_RAPIDJSON_IEEE754_"},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"#include \"../rapidjson.h\""},
{"lineNum":"   19","line":""},
{"lineNum":"   20","line":"CEREAL_RAPIDJSON_NAMESPACE_BEGIN"},
{"lineNum":"   21","line":"namespace internal {"},
{"lineNum":"   22","line":""},
{"lineNum":"   23","line":"class Double {"},
{"lineNum":"   24","line":"public:"},
{"lineNum":"   25","line":"    Double() {}"},
{"lineNum":"   26","line":"    Double(double d) : d_(d) {}"},
{"lineNum":"   27","line":"    Double(uint64_t u) : u_(u) {}"},
{"lineNum":"   28","line":""},
{"lineNum":"   29","line":"    double Value() const { return d_; }"},
{"lineNum":"   30","line":"    uint64_t Uint64Value() const { return u_; }"},
{"lineNum":"   31","line":""},
{"lineNum":"   32","line":"    double NextPositiveDouble() const {"},
{"lineNum":"   33","line":"        CEREAL_RAPIDJSON_ASSERT(!Sign());","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   34","line":"        return Double(u_ + 1).Value();"},
{"lineNum":"   35","line":"    }"},
{"lineNum":"   36","line":""},
{"lineNum":"   37","line":"    bool Sign() const { return (u_ & kSignMask) != 0; }","class":"lineNoCov","hits":"0","possible_hits":"8",},
{"lineNum":"   38","line":"    uint64_t Significand() const { return u_ & kSignificandMask; }"},
{"lineNum":"   39","line":"    int Exponent() const { return static_cast<int>(((u_ & kExponentMask) >> kSignificandSize) - kExponentBias); }"},
{"lineNum":"   40","line":""},
{"lineNum":"   41","line":"    bool IsNan() const { return (u_ & kExponentMask) == kExponentMask && Significand() != 0; }","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   42","line":"    bool IsInf() const { return (u_ & kExponentMask) == kExponentMask && Significand() == 0; }"},
{"lineNum":"   43","line":"    bool IsNanOrInf() const { return (u_ & kExponentMask) == kExponentMask; }","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   44","line":"    bool IsNormal() const { return (u_ & kExponentMask) != 0 || Significand() == 0; }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   45","line":"    bool IsZero() const { return (u_ & (kExponentMask | kSignificandMask)) == 0; }","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"   46","line":""},
{"lineNum":"   47","line":"    uint64_t IntegerSignificand() const { return IsNormal() ? Significand() | kHiddenBit : Significand(); }","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   48","line":"    int IntegerExponent() const { return (IsNormal() ? Exponent() : kDenormalExponent) - kSignificandSize; }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   49","line":"    uint64_t ToBias() const { return (u_ & kSignMask) ? ~u_ + 1 : u_ | kSignMask; }"},
{"lineNum":"   50","line":""},
{"lineNum":"   51","line":"    static int EffectiveSignificandSize(int order) {"},
{"lineNum":"   52","line":"        if (order >= -1021)","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   53","line":"            return 53;"},
{"lineNum":"   54","line":"        else if (order <= -1074)"},
{"lineNum":"   55","line":"            return 0;"},
{"lineNum":"   56","line":"        else"},
{"lineNum":"   57","line":"            return order + 1074;"},
{"lineNum":"   58","line":"    }"},
{"lineNum":"   59","line":""},
{"lineNum":"   60","line":"private:"},
{"lineNum":"   61","line":"    static const int kSignificandSize = 52;"},
{"lineNum":"   62","line":"    static const int kExponentBias = 0x3FF;"},
{"lineNum":"   63","line":"    static const int kDenormalExponent = 1 - kExponentBias;"},
{"lineNum":"   64","line":"    static const uint64_t kSignMask = CEREAL_RAPIDJSON_UINT64_C2(0x80000000, 0x00000000);"},
{"lineNum":"   65","line":"    static const uint64_t kExponentMask = CEREAL_RAPIDJSON_UINT64_C2(0x7FF00000, 0x00000000);"},
{"lineNum":"   66","line":"    static const uint64_t kSignificandMask = CEREAL_RAPIDJSON_UINT64_C2(0x000FFFFF, 0xFFFFFFFF);"},
{"lineNum":"   67","line":"    static const uint64_t kHiddenBit = CEREAL_RAPIDJSON_UINT64_C2(0x00100000, 0x00000000);"},
{"lineNum":"   68","line":""},
{"lineNum":"   69","line":"    union {"},
{"lineNum":"   70","line":"        double d_;"},
{"lineNum":"   71","line":"        uint64_t u_;"},
{"lineNum":"   72","line":"    };"},
{"lineNum":"   73","line":"};"},
{"lineNum":"   74","line":""},
{"lineNum":"   75","line":"} // namespace internal"},
{"lineNum":"   76","line":"CEREAL_RAPIDJSON_NAMESPACE_END"},
{"lineNum":"   77","line":""},
{"lineNum":"   78","line":"#endif // CEREAL_RAPIDJSON_IEEE754_"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 9, "covered" : 0,};
var merged_data = [];
