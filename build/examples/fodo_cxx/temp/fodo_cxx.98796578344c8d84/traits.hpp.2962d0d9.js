var data = {lines:[
{"lineNum":"    1","line":"    ///////////////////////////////////////////////////////////////////////////////"},
{"lineNum":"    2","line":"    /// \\file traits.hpp"},
{"lineNum":"    3","line":"    /// Definitions of proto::function, proto::nary_expr and proto::result_of::child_c"},
{"lineNum":"    4","line":"    //"},
{"lineNum":"    5","line":"    //  Copyright 2008 Eric Niebler. Distributed under the Boost"},
{"lineNum":"    6","line":"    //  Software License, Version 1.0. (See accompanying file"},
{"lineNum":"    7","line":"    //  LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)"},
{"lineNum":"    8","line":"        namespace result_of"},
{"lineNum":"    9","line":"        {"},
{"lineNum":"   10","line":""},
{"lineNum":"   11","line":""},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":""},
{"lineNum":"   14","line":""},
{"lineNum":"   15","line":""},
{"lineNum":"   16","line":"            template<typename Expr>"},
{"lineNum":"   17","line":"            struct child_c<Expr, 0>"},
{"lineNum":"   18","line":"            {"},
{"lineNum":"   19","line":""},
{"lineNum":"   20","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":"   21","line":""},
{"lineNum":"   22","line":""},
{"lineNum":"   23","line":"                typedef typename Expr::proto_child0 value_type;"},
{"lineNum":"   24","line":""},
{"lineNum":"   25","line":""},
{"lineNum":"   26","line":""},
{"lineNum":"   27","line":""},
{"lineNum":"   28","line":""},
{"lineNum":"   29","line":"                typedef typename detail::expr_traits<typename Expr::proto_child0>::value_type type;"},
{"lineNum":"   30","line":"            };"},
{"lineNum":"   31","line":"            template<typename Expr>"},
{"lineNum":"   32","line":"            struct child_c<Expr &, 0>"},
{"lineNum":"   33","line":"            {"},
{"lineNum":"   34","line":""},
{"lineNum":"   35","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":"   36","line":""},
{"lineNum":"   37","line":""},
{"lineNum":"   38","line":"                typedef typename Expr::proto_child0 value_type;"},
{"lineNum":"   39","line":""},
{"lineNum":"   40","line":""},
{"lineNum":"   41","line":""},
{"lineNum":"   42","line":""},
{"lineNum":"   43","line":""},
{"lineNum":"   44","line":"                typedef typename detail::expr_traits<typename Expr::proto_child0>::reference type;"},
{"lineNum":"   45","line":""},
{"lineNum":"   46","line":""},
{"lineNum":"   47","line":"                BOOST_FORCEINLINE"},
{"lineNum":"   48","line":"                static type call(Expr &e)"},
{"lineNum":"   49","line":"                {"},
{"lineNum":"   50","line":"                    return e.proto_base().child0;"},
{"lineNum":"   51","line":"                }"},
{"lineNum":"   52","line":"            };"},
{"lineNum":"   53","line":"            template<typename Expr>"},
{"lineNum":"   54","line":"            struct child_c<Expr const &, 0>"},
{"lineNum":"   55","line":"            {"},
{"lineNum":"   56","line":""},
{"lineNum":"   57","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":"   58","line":""},
{"lineNum":"   59","line":""},
{"lineNum":"   60","line":"                typedef typename Expr::proto_child0 value_type;"},
{"lineNum":"   61","line":""},
{"lineNum":"   62","line":""},
{"lineNum":"   63","line":""},
{"lineNum":"   64","line":""},
{"lineNum":"   65","line":""},
{"lineNum":"   66","line":"                typedef typename detail::expr_traits<typename Expr::proto_child0>::const_reference type;"},
{"lineNum":"   67","line":""},
{"lineNum":"   68","line":""},
{"lineNum":"   69","line":"                BOOST_FORCEINLINE"},
{"lineNum":"   70","line":"                static type call(Expr const &e)"},
{"lineNum":"   71","line":"                {"},
{"lineNum":"   72","line":"                    return e.proto_base().child0;","class":"lineNoCov","hits":"0","possible_hits":"109",},
{"lineNum":"   73","line":"                }"},
{"lineNum":"   74","line":"            };"},
{"lineNum":"   75","line":"        }"},
{"lineNum":"   76","line":""},
{"lineNum":"   77","line":""},
{"lineNum":"   78","line":""},
{"lineNum":"   79","line":""},
{"lineNum":"   80","line":"        template<typename A0>"},
{"lineNum":"   81","line":"        struct function"},
{"lineNum":"   82","line":"        <"},
{"lineNum":"   83","line":"            A0"},
{"lineNum":"   84","line":"            , void , void , void , void , void , void , void , void , void"},
{"lineNum":"   85","line":"        >"},
{"lineNum":"   86","line":"          : proto::transform<"},
{"lineNum":"   87","line":"                function<"},
{"lineNum":"   88","line":"                    A0"},
{"lineNum":"   89","line":"                    , void , void , void , void , void , void , void , void , void"},
{"lineNum":"   90","line":"                >"},
{"lineNum":"   91","line":"              , int"},
{"lineNum":"   92","line":"            >"},
{"lineNum":"   93","line":"        {"},
{"lineNum":"   94","line":"            typedef proto::expr<proto::tag::function, list1<A0>, 1> type;"},
{"lineNum":"   95","line":"            typedef proto::basic_expr<proto::tag::function, list1<A0>, 1> proto_grammar;"},
{"lineNum":"   96","line":"            template<typename Expr, typename State, typename Data>"},
{"lineNum":"   97","line":"            struct impl"},
{"lineNum":"   98","line":"              : detail::pass_through_impl<function, deduce_domain, Expr, State, Data>"},
{"lineNum":"   99","line":"            {};"},
{"lineNum":"  100","line":""},
{"lineNum":"  101","line":"            typedef proto::tag::function proto_tag;"},
{"lineNum":"  102","line":"            typedef A0 proto_child0;"},
{"lineNum":"  103","line":"            typedef detail::if_vararg<A0> proto_child1; typedef detail::if_vararg<A0> proto_child2; typedef detail::if_vararg<A0> proto_child3; typedef detail::if_vararg<A0> proto_child4; typedef detail::if_vararg<A0> proto_child5; typedef detail::if_vararg<A0> proto_child6; typedef detail::if_vararg<A0> proto_child7; typedef detail::if_vararg<A0> proto_child8; typedef detail::if_vararg<A0> proto_child9;"},
{"lineNum":"  104","line":"        };"},
{"lineNum":"  105","line":""},
{"lineNum":"  106","line":""},
{"lineNum":"  107","line":""},
{"lineNum":"  108","line":""},
{"lineNum":"  109","line":""},
{"lineNum":"  110","line":""},
{"lineNum":"  111","line":""},
{"lineNum":"  112","line":""},
{"lineNum":"  113","line":"        template<typename Tag , typename A0>"},
{"lineNum":"  114","line":"        struct nary_expr"},
{"lineNum":"  115","line":"        <"},
{"lineNum":"  116","line":"            Tag"},
{"lineNum":"  117","line":"            , A0"},
{"lineNum":"  118","line":"            , void , void , void , void , void , void , void , void , void"},
{"lineNum":"  119","line":"        >"},
{"lineNum":"  120","line":"          : proto::transform<"},
{"lineNum":"  121","line":"                nary_expr<"},
{"lineNum":"  122","line":"                    Tag"},
{"lineNum":"  123","line":"                    , A0"},
{"lineNum":"  124","line":"                    , void , void , void , void , void , void , void , void , void"},
{"lineNum":"  125","line":"                >"},
{"lineNum":"  126","line":"              , int"},
{"lineNum":"  127","line":"            >"},
{"lineNum":"  128","line":"        {"},
{"lineNum":"  129","line":"            typedef proto::expr<Tag, list1<A0>, 1> type;"},
{"lineNum":"  130","line":"            typedef proto::basic_expr<Tag, list1<A0>, 1> proto_grammar;"},
{"lineNum":"  131","line":"            template<typename Expr, typename State, typename Data>"},
{"lineNum":"  132","line":"            struct impl"},
{"lineNum":"  133","line":"              : detail::pass_through_impl<nary_expr, deduce_domain, Expr, State, Data>"},
{"lineNum":"  134","line":"            {};"},
{"lineNum":"  135","line":""},
{"lineNum":"  136","line":"            typedef Tag proto_tag;"},
{"lineNum":"  137","line":"            typedef A0 proto_child0;"},
{"lineNum":"  138","line":"            typedef detail::if_vararg<A0> proto_child1; typedef detail::if_vararg<A0> proto_child2; typedef detail::if_vararg<A0> proto_child3; typedef detail::if_vararg<A0> proto_child4; typedef detail::if_vararg<A0> proto_child5; typedef detail::if_vararg<A0> proto_child6; typedef detail::if_vararg<A0> proto_child7; typedef detail::if_vararg<A0> proto_child8; typedef detail::if_vararg<A0> proto_child9;"},
{"lineNum":"  139","line":"        };"},
{"lineNum":"  140","line":"        namespace detail"},
{"lineNum":"  141","line":"        {"},
{"lineNum":"  142","line":"            template<"},
{"lineNum":"  143","line":"                template<typename> class T"},
{"lineNum":"  144","line":"              , typename A0"},
{"lineNum":"  145","line":"            >"},
{"lineNum":"  146","line":"            struct is_callable_<T<A0> BOOST_PROTO_TEMPLATE_ARITY_PARAM(1)>"},
{"lineNum":"  147","line":"              : is_same<A0, callable>"},
{"lineNum":"  148","line":"            {};"},
{"lineNum":"  149","line":"        }"},
{"lineNum":"  150","line":"        namespace result_of"},
{"lineNum":"  151","line":"        {"},
{"lineNum":"  152","line":""},
{"lineNum":"  153","line":""},
{"lineNum":"  154","line":""},
{"lineNum":"  155","line":""},
{"lineNum":"  156","line":""},
{"lineNum":"  157","line":""},
{"lineNum":"  158","line":"            template<typename Expr>"},
{"lineNum":"  159","line":"            struct child_c<Expr, 1>"},
{"lineNum":"  160","line":"            {"},
{"lineNum":"  161","line":""},
{"lineNum":"  162","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":"  163","line":""},
{"lineNum":"  164","line":""},
{"lineNum":"  165","line":"                typedef typename Expr::proto_child1 value_type;"},
{"lineNum":"  166","line":""},
{"lineNum":"  167","line":""},
{"lineNum":"  168","line":""},
{"lineNum":"  169","line":""},
{"lineNum":"  170","line":""},
{"lineNum":"  171","line":"                typedef typename detail::expr_traits<typename Expr::proto_child1>::value_type type;"},
{"lineNum":"  172","line":"            };"},
{"lineNum":"  173","line":"            template<typename Expr>"},
{"lineNum":"  174","line":"            struct child_c<Expr &, 1>"},
{"lineNum":"  175","line":"            {"},
{"lineNum":"  176","line":""},
{"lineNum":"  177","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":"  178","line":""},
{"lineNum":"  179","line":""},
{"lineNum":"  180","line":"                typedef typename Expr::proto_child1 value_type;"},
{"lineNum":"  181","line":""},
{"lineNum":"  182","line":""},
{"lineNum":"  183","line":""},
{"lineNum":"  184","line":""},
{"lineNum":"  185","line":""},
{"lineNum":"  186","line":"                typedef typename detail::expr_traits<typename Expr::proto_child1>::reference type;"},
{"lineNum":"  187","line":""},
{"lineNum":"  188","line":""},
{"lineNum":"  189","line":"                BOOST_FORCEINLINE"},
{"lineNum":"  190","line":"                static type call(Expr &e)"},
{"lineNum":"  191","line":"                {"},
{"lineNum":"  192","line":"                    return e.proto_base().child1;"},
{"lineNum":"  193","line":"                }"},
{"lineNum":"  194","line":"            };"},
{"lineNum":"  195","line":"            template<typename Expr>"},
{"lineNum":"  196","line":"            struct child_c<Expr const &, 1>"},
{"lineNum":"  197","line":"            {"},
{"lineNum":"  198","line":""},
{"lineNum":"  199","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":"  200","line":""},
{"lineNum":"  201","line":""},
{"lineNum":"  202","line":"                typedef typename Expr::proto_child1 value_type;"},
{"lineNum":"  203","line":""},
{"lineNum":"  204","line":""},
{"lineNum":"  205","line":""},
{"lineNum":"  206","line":""},
{"lineNum":"  207","line":""},
{"lineNum":"  208","line":"                typedef typename detail::expr_traits<typename Expr::proto_child1>::const_reference type;"},
{"lineNum":"  209","line":""},
{"lineNum":"  210","line":""},
{"lineNum":"  211","line":"                BOOST_FORCEINLINE"},
{"lineNum":"  212","line":"                static type call(Expr const &e)"},
{"lineNum":"  213","line":"                {"},
{"lineNum":"  214","line":"                    return e.proto_base().child1;","class":"lineNoCov","hits":"0","possible_hits":"93",},
{"lineNum":"  215","line":"                }"},
{"lineNum":"  216","line":"            };"},
{"lineNum":"  217","line":"        }"},
{"lineNum":"  218","line":""},
{"lineNum":"  219","line":""},
{"lineNum":"  220","line":""},
{"lineNum":"  221","line":""},
{"lineNum":"  222","line":"        template<typename A0 , typename A1>"},
{"lineNum":"  223","line":"        struct function"},
{"lineNum":"  224","line":"        <"},
{"lineNum":"  225","line":"            A0 , A1"},
{"lineNum":"  226","line":"            , void , void , void , void , void , void , void , void"},
{"lineNum":"  227","line":"        >"},
{"lineNum":"  228","line":"          : proto::transform<"},
{"lineNum":"  229","line":"                function<"},
{"lineNum":"  230","line":"                    A0 , A1"},
{"lineNum":"  231","line":"                    , void , void , void , void , void , void , void , void"},
{"lineNum":"  232","line":"                >"},
{"lineNum":"  233","line":"              , int"},
{"lineNum":"  234","line":"            >"},
{"lineNum":"  235","line":"        {"},
{"lineNum":"  236","line":"            typedef proto::expr<proto::tag::function, list2<A0 , A1>, 2> type;"},
{"lineNum":"  237","line":"            typedef proto::basic_expr<proto::tag::function, list2<A0 , A1>, 2> proto_grammar;"},
{"lineNum":"  238","line":"            template<typename Expr, typename State, typename Data>"},
{"lineNum":"  239","line":"            struct impl"},
{"lineNum":"  240","line":"              : detail::pass_through_impl<function, deduce_domain, Expr, State, Data>"},
{"lineNum":"  241","line":"            {};"},
{"lineNum":"  242","line":""},
{"lineNum":"  243","line":"            typedef proto::tag::function proto_tag;"},
{"lineNum":"  244","line":"            typedef A0 proto_child0; typedef A1 proto_child1;"},
{"lineNum":"  245","line":"            typedef detail::if_vararg<A1> proto_child2; typedef detail::if_vararg<A1> proto_child3; typedef detail::if_vararg<A1> proto_child4; typedef detail::if_vararg<A1> proto_child5; typedef detail::if_vararg<A1> proto_child6; typedef detail::if_vararg<A1> proto_child7; typedef detail::if_vararg<A1> proto_child8; typedef detail::if_vararg<A1> proto_child9;"},
{"lineNum":"  246","line":"        };"},
{"lineNum":"  247","line":""},
{"lineNum":"  248","line":""},
{"lineNum":"  249","line":""},
{"lineNum":"  250","line":""},
{"lineNum":"  251","line":""},
{"lineNum":"  252","line":""},
{"lineNum":"  253","line":""},
{"lineNum":"  254","line":""},
{"lineNum":"  255","line":"        template<typename Tag , typename A0 , typename A1>"},
{"lineNum":"  256","line":"        struct nary_expr"},
{"lineNum":"  257","line":"        <"},
{"lineNum":"  258","line":"            Tag"},
{"lineNum":"  259","line":"            , A0 , A1"},
{"lineNum":"  260","line":"            , void , void , void , void , void , void , void , void"},
{"lineNum":"  261","line":"        >"},
{"lineNum":"  262","line":"          : proto::transform<"},
{"lineNum":"  263","line":"                nary_expr<"},
{"lineNum":"  264","line":"                    Tag"},
{"lineNum":"  265","line":"                    , A0 , A1"},
{"lineNum":"  266","line":"                    , void , void , void , void , void , void , void , void"},
{"lineNum":"  267","line":"                >"},
{"lineNum":"  268","line":"              , int"},
{"lineNum":"  269","line":"            >"},
{"lineNum":"  270","line":"        {"},
{"lineNum":"  271","line":"            typedef proto::expr<Tag, list2<A0 , A1>, 2> type;"},
{"lineNum":"  272","line":"            typedef proto::basic_expr<Tag, list2<A0 , A1>, 2> proto_grammar;"},
{"lineNum":"  273","line":"            template<typename Expr, typename State, typename Data>"},
{"lineNum":"  274","line":"            struct impl"},
{"lineNum":"  275","line":"              : detail::pass_through_impl<nary_expr, deduce_domain, Expr, State, Data>"},
{"lineNum":"  276","line":"            {};"},
{"lineNum":"  277","line":""},
{"lineNum":"  278","line":"            typedef Tag proto_tag;"},
{"lineNum":"  279","line":"            typedef A0 proto_child0; typedef A1 proto_child1;"},
{"lineNum":"  280","line":"            typedef detail::if_vararg<A1> proto_child2; typedef detail::if_vararg<A1> proto_child3; typedef detail::if_vararg<A1> proto_child4; typedef detail::if_vararg<A1> proto_child5; typedef detail::if_vararg<A1> proto_child6; typedef detail::if_vararg<A1> proto_child7; typedef detail::if_vararg<A1> proto_child8; typedef detail::if_vararg<A1> proto_child9;"},
{"lineNum":"  281","line":"        };"},
{"lineNum":"  282","line":"        namespace detail"},
{"lineNum":"  283","line":"        {"},
{"lineNum":"  284","line":"            template<"},
{"lineNum":"  285","line":"                template<typename , typename> class T"},
{"lineNum":"  286","line":"              , typename A0 , typename A1"},
{"lineNum":"  287","line":"            >"},
{"lineNum":"  288","line":"            struct is_callable_<T<A0 , A1> BOOST_PROTO_TEMPLATE_ARITY_PARAM(2)>"},
{"lineNum":"  289","line":"              : is_same<A1, callable>"},
{"lineNum":"  290","line":"            {};"},
{"lineNum":"  291","line":"        }"},
{"lineNum":"  292","line":"        namespace result_of"},
{"lineNum":"  293","line":"        {"},
{"lineNum":"  294","line":""},
{"lineNum":"  295","line":""},
{"lineNum":"  296","line":""},
{"lineNum":"  297","line":""},
{"lineNum":"  298","line":""},
{"lineNum":"  299","line":""},
{"lineNum":"  300","line":"            template<typename Expr>"},
{"lineNum":"  301","line":"            struct child_c<Expr, 2>"},
{"lineNum":"  302","line":"            {"},
{"lineNum":"  303","line":""},
{"lineNum":"  304","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":"  305","line":""},
{"lineNum":"  306","line":""},
{"lineNum":"  307","line":"                typedef typename Expr::proto_child2 value_type;"},
{"lineNum":"  308","line":""},
{"lineNum":"  309","line":""},
{"lineNum":"  310","line":""},
{"lineNum":"  311","line":""},
{"lineNum":"  312","line":""},
{"lineNum":"  313","line":"                typedef typename detail::expr_traits<typename Expr::proto_child2>::value_type type;"},
{"lineNum":"  314","line":"            };"},
{"lineNum":"  315","line":"            template<typename Expr>"},
{"lineNum":"  316","line":"            struct child_c<Expr &, 2>"},
{"lineNum":"  317","line":"            {"},
{"lineNum":"  318","line":""},
{"lineNum":"  319","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":"  320","line":""},
{"lineNum":"  321","line":""},
{"lineNum":"  322","line":"                typedef typename Expr::proto_child2 value_type;"},
{"lineNum":"  323","line":""},
{"lineNum":"  324","line":""},
{"lineNum":"  325","line":""},
{"lineNum":"  326","line":""},
{"lineNum":"  327","line":""},
{"lineNum":"  328","line":"                typedef typename detail::expr_traits<typename Expr::proto_child2>::reference type;"},
{"lineNum":"  329","line":""},
{"lineNum":"  330","line":""},
{"lineNum":"  331","line":"                BOOST_FORCEINLINE"},
{"lineNum":"  332","line":"                static type call(Expr &e)"},
{"lineNum":"  333","line":"                {"},
{"lineNum":"  334","line":"                    return e.proto_base().child2;"},
{"lineNum":"  335","line":"                }"},
{"lineNum":"  336","line":"            };"},
{"lineNum":"  337","line":"            template<typename Expr>"},
{"lineNum":"  338","line":"            struct child_c<Expr const &, 2>"},
{"lineNum":"  339","line":"            {"},
{"lineNum":"  340","line":""},
{"lineNum":"  341","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":"  342","line":""},
{"lineNum":"  343","line":""},
{"lineNum":"  344","line":"                typedef typename Expr::proto_child2 value_type;"},
{"lineNum":"  345","line":""},
{"lineNum":"  346","line":""},
{"lineNum":"  347","line":""},
{"lineNum":"  348","line":""},
{"lineNum":"  349","line":""},
{"lineNum":"  350","line":"                typedef typename detail::expr_traits<typename Expr::proto_child2>::const_reference type;"},
{"lineNum":"  351","line":""},
{"lineNum":"  352","line":""},
{"lineNum":"  353","line":"                BOOST_FORCEINLINE"},
{"lineNum":"  354","line":"                static type call(Expr const &e)"},
{"lineNum":"  355","line":"                {"},
{"lineNum":"  356","line":"                    return e.proto_base().child2;","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  357","line":"                }"},
{"lineNum":"  358","line":"            };"},
{"lineNum":"  359","line":"        }"},
{"lineNum":"  360","line":""},
{"lineNum":"  361","line":""},
{"lineNum":"  362","line":""},
{"lineNum":"  363","line":""},
{"lineNum":"  364","line":"        template<typename A0 , typename A1 , typename A2>"},
{"lineNum":"  365","line":"        struct function"},
{"lineNum":"  366","line":"        <"},
{"lineNum":"  367","line":"            A0 , A1 , A2"},
{"lineNum":"  368","line":"            , void , void , void , void , void , void , void"},
{"lineNum":"  369","line":"        >"},
{"lineNum":"  370","line":"          : proto::transform<"},
{"lineNum":"  371","line":"                function<"},
{"lineNum":"  372","line":"                    A0 , A1 , A2"},
{"lineNum":"  373","line":"                    , void , void , void , void , void , void , void"},
{"lineNum":"  374","line":"                >"},
{"lineNum":"  375","line":"              , int"},
{"lineNum":"  376","line":"            >"},
{"lineNum":"  377","line":"        {"},
{"lineNum":"  378","line":"            typedef proto::expr<proto::tag::function, list3<A0 , A1 , A2>, 3> type;"},
{"lineNum":"  379","line":"            typedef proto::basic_expr<proto::tag::function, list3<A0 , A1 , A2>, 3> proto_grammar;"},
{"lineNum":"  380","line":"            template<typename Expr, typename State, typename Data>"},
{"lineNum":"  381","line":"            struct impl"},
{"lineNum":"  382","line":"              : detail::pass_through_impl<function, deduce_domain, Expr, State, Data>"},
{"lineNum":"  383","line":"            {};"},
{"lineNum":"  384","line":""},
{"lineNum":"  385","line":"            typedef proto::tag::function proto_tag;"},
{"lineNum":"  386","line":"            typedef A0 proto_child0; typedef A1 proto_child1; typedef A2 proto_child2;"},
{"lineNum":"  387","line":"            typedef detail::if_vararg<A2> proto_child3; typedef detail::if_vararg<A2> proto_child4; typedef detail::if_vararg<A2> proto_child5; typedef detail::if_vararg<A2> proto_child6; typedef detail::if_vararg<A2> proto_child7; typedef detail::if_vararg<A2> proto_child8; typedef detail::if_vararg<A2> proto_child9;"},
{"lineNum":"  388","line":"        };"},
{"lineNum":"  389","line":""},
{"lineNum":"  390","line":""},
{"lineNum":"  391","line":""},
{"lineNum":"  392","line":""},
{"lineNum":"  393","line":""},
{"lineNum":"  394","line":""},
{"lineNum":"  395","line":""},
{"lineNum":"  396","line":""},
{"lineNum":"  397","line":"        template<typename Tag , typename A0 , typename A1 , typename A2>"},
{"lineNum":"  398","line":"        struct nary_expr"},
{"lineNum":"  399","line":"        <"},
{"lineNum":"  400","line":"            Tag"},
{"lineNum":"  401","line":"            , A0 , A1 , A2"},
{"lineNum":"  402","line":"            , void , void , void , void , void , void , void"},
{"lineNum":"  403","line":"        >"},
{"lineNum":"  404","line":"          : proto::transform<"},
{"lineNum":"  405","line":"                nary_expr<"},
{"lineNum":"  406","line":"                    Tag"},
{"lineNum":"  407","line":"                    , A0 , A1 , A2"},
{"lineNum":"  408","line":"                    , void , void , void , void , void , void , void"},
{"lineNum":"  409","line":"                >"},
{"lineNum":"  410","line":"              , int"},
{"lineNum":"  411","line":"            >"},
{"lineNum":"  412","line":"        {"},
{"lineNum":"  413","line":"            typedef proto::expr<Tag, list3<A0 , A1 , A2>, 3> type;"},
{"lineNum":"  414","line":"            typedef proto::basic_expr<Tag, list3<A0 , A1 , A2>, 3> proto_grammar;"},
{"lineNum":"  415","line":"            template<typename Expr, typename State, typename Data>"},
{"lineNum":"  416","line":"            struct impl"},
{"lineNum":"  417","line":"              : detail::pass_through_impl<nary_expr, deduce_domain, Expr, State, Data>"},
{"lineNum":"  418","line":"            {};"},
{"lineNum":"  419","line":""},
{"lineNum":"  420","line":"            typedef Tag proto_tag;"},
{"lineNum":"  421","line":"            typedef A0 proto_child0; typedef A1 proto_child1; typedef A2 proto_child2;"},
{"lineNum":"  422","line":"            typedef detail::if_vararg<A2> proto_child3; typedef detail::if_vararg<A2> proto_child4; typedef detail::if_vararg<A2> proto_child5; typedef detail::if_vararg<A2> proto_child6; typedef detail::if_vararg<A2> proto_child7; typedef detail::if_vararg<A2> proto_child8; typedef detail::if_vararg<A2> proto_child9;"},
{"lineNum":"  423","line":"        };"},
{"lineNum":"  424","line":"        namespace detail"},
{"lineNum":"  425","line":"        {"},
{"lineNum":"  426","line":"            template<"},
{"lineNum":"  427","line":"                template<typename , typename , typename> class T"},
{"lineNum":"  428","line":"              , typename A0 , typename A1 , typename A2"},
{"lineNum":"  429","line":"            >"},
{"lineNum":"  430","line":"            struct is_callable_<T<A0 , A1 , A2> BOOST_PROTO_TEMPLATE_ARITY_PARAM(3)>"},
{"lineNum":"  431","line":"              : is_same<A2, callable>"},
{"lineNum":"  432","line":"            {};"},
{"lineNum":"  433","line":"        }"},
{"lineNum":"  434","line":"        namespace result_of"},
{"lineNum":"  435","line":"        {"},
{"lineNum":"  436","line":""},
{"lineNum":"  437","line":""},
{"lineNum":"  438","line":""},
{"lineNum":"  439","line":""},
{"lineNum":"  440","line":""},
{"lineNum":"  441","line":""},
{"lineNum":"  442","line":"            template<typename Expr>"},
{"lineNum":"  443","line":"            struct child_c<Expr, 3>"},
{"lineNum":"  444","line":"            {"},
{"lineNum":"  445","line":""},
{"lineNum":"  446","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":"  447","line":""},
{"lineNum":"  448","line":""},
{"lineNum":"  449","line":"                typedef typename Expr::proto_child3 value_type;"},
{"lineNum":"  450","line":""},
{"lineNum":"  451","line":""},
{"lineNum":"  452","line":""},
{"lineNum":"  453","line":""},
{"lineNum":"  454","line":""},
{"lineNum":"  455","line":"                typedef typename detail::expr_traits<typename Expr::proto_child3>::value_type type;"},
{"lineNum":"  456","line":"            };"},
{"lineNum":"  457","line":"            template<typename Expr>"},
{"lineNum":"  458","line":"            struct child_c<Expr &, 3>"},
{"lineNum":"  459","line":"            {"},
{"lineNum":"  460","line":""},
{"lineNum":"  461","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":"  462","line":""},
{"lineNum":"  463","line":""},
{"lineNum":"  464","line":"                typedef typename Expr::proto_child3 value_type;"},
{"lineNum":"  465","line":""},
{"lineNum":"  466","line":""},
{"lineNum":"  467","line":""},
{"lineNum":"  468","line":""},
{"lineNum":"  469","line":""},
{"lineNum":"  470","line":"                typedef typename detail::expr_traits<typename Expr::proto_child3>::reference type;"},
{"lineNum":"  471","line":""},
{"lineNum":"  472","line":""},
{"lineNum":"  473","line":"                BOOST_FORCEINLINE"},
{"lineNum":"  474","line":"                static type call(Expr &e)"},
{"lineNum":"  475","line":"                {"},
{"lineNum":"  476","line":"                    return e.proto_base().child3;"},
{"lineNum":"  477","line":"                }"},
{"lineNum":"  478","line":"            };"},
{"lineNum":"  479","line":"            template<typename Expr>"},
{"lineNum":"  480","line":"            struct child_c<Expr const &, 3>"},
{"lineNum":"  481","line":"            {"},
{"lineNum":"  482","line":""},
{"lineNum":"  483","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":"  484","line":""},
{"lineNum":"  485","line":""},
{"lineNum":"  486","line":"                typedef typename Expr::proto_child3 value_type;"},
{"lineNum":"  487","line":""},
{"lineNum":"  488","line":""},
{"lineNum":"  489","line":""},
{"lineNum":"  490","line":""},
{"lineNum":"  491","line":""},
{"lineNum":"  492","line":"                typedef typename detail::expr_traits<typename Expr::proto_child3>::const_reference type;"},
{"lineNum":"  493","line":""},
{"lineNum":"  494","line":""},
{"lineNum":"  495","line":"                BOOST_FORCEINLINE"},
{"lineNum":"  496","line":"                static type call(Expr const &e)"},
{"lineNum":"  497","line":"                {"},
{"lineNum":"  498","line":"                    return e.proto_base().child3;","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  499","line":"                }"},
{"lineNum":"  500","line":"            };"},
{"lineNum":"  501","line":"        }"},
{"lineNum":"  502","line":""},
{"lineNum":"  503","line":""},
{"lineNum":"  504","line":""},
{"lineNum":"  505","line":""},
{"lineNum":"  506","line":"        template<typename A0 , typename A1 , typename A2 , typename A3>"},
{"lineNum":"  507","line":"        struct function"},
{"lineNum":"  508","line":"        <"},
{"lineNum":"  509","line":"            A0 , A1 , A2 , A3"},
{"lineNum":"  510","line":"            , void , void , void , void , void , void"},
{"lineNum":"  511","line":"        >"},
{"lineNum":"  512","line":"          : proto::transform<"},
{"lineNum":"  513","line":"                function<"},
{"lineNum":"  514","line":"                    A0 , A1 , A2 , A3"},
{"lineNum":"  515","line":"                    , void , void , void , void , void , void"},
{"lineNum":"  516","line":"                >"},
{"lineNum":"  517","line":"              , int"},
{"lineNum":"  518","line":"            >"},
{"lineNum":"  519","line":"        {"},
{"lineNum":"  520","line":"            typedef proto::expr<proto::tag::function, list4<A0 , A1 , A2 , A3>, 4> type;"},
{"lineNum":"  521","line":"            typedef proto::basic_expr<proto::tag::function, list4<A0 , A1 , A2 , A3>, 4> proto_grammar;"},
{"lineNum":"  522","line":"            template<typename Expr, typename State, typename Data>"},
{"lineNum":"  523","line":"            struct impl"},
{"lineNum":"  524","line":"              : detail::pass_through_impl<function, deduce_domain, Expr, State, Data>"},
{"lineNum":"  525","line":"            {};"},
{"lineNum":"  526","line":""},
{"lineNum":"  527","line":"            typedef proto::tag::function proto_tag;"},
{"lineNum":"  528","line":"            typedef A0 proto_child0; typedef A1 proto_child1; typedef A2 proto_child2; typedef A3 proto_child3;"},
{"lineNum":"  529","line":"            typedef detail::if_vararg<A3> proto_child4; typedef detail::if_vararg<A3> proto_child5; typedef detail::if_vararg<A3> proto_child6; typedef detail::if_vararg<A3> proto_child7; typedef detail::if_vararg<A3> proto_child8; typedef detail::if_vararg<A3> proto_child9;"},
{"lineNum":"  530","line":"        };"},
{"lineNum":"  531","line":""},
{"lineNum":"  532","line":""},
{"lineNum":"  533","line":""},
{"lineNum":"  534","line":""},
{"lineNum":"  535","line":""},
{"lineNum":"  536","line":""},
{"lineNum":"  537","line":""},
{"lineNum":"  538","line":""},
{"lineNum":"  539","line":"        template<typename Tag , typename A0 , typename A1 , typename A2 , typename A3>"},
{"lineNum":"  540","line":"        struct nary_expr"},
{"lineNum":"  541","line":"        <"},
{"lineNum":"  542","line":"            Tag"},
{"lineNum":"  543","line":"            , A0 , A1 , A2 , A3"},
{"lineNum":"  544","line":"            , void , void , void , void , void , void"},
{"lineNum":"  545","line":"        >"},
{"lineNum":"  546","line":"          : proto::transform<"},
{"lineNum":"  547","line":"                nary_expr<"},
{"lineNum":"  548","line":"                    Tag"},
{"lineNum":"  549","line":"                    , A0 , A1 , A2 , A3"},
{"lineNum":"  550","line":"                    , void , void , void , void , void , void"},
{"lineNum":"  551","line":"                >"},
{"lineNum":"  552","line":"              , int"},
{"lineNum":"  553","line":"            >"},
{"lineNum":"  554","line":"        {"},
{"lineNum":"  555","line":"            typedef proto::expr<Tag, list4<A0 , A1 , A2 , A3>, 4> type;"},
{"lineNum":"  556","line":"            typedef proto::basic_expr<Tag, list4<A0 , A1 , A2 , A3>, 4> proto_grammar;"},
{"lineNum":"  557","line":"            template<typename Expr, typename State, typename Data>"},
{"lineNum":"  558","line":"            struct impl"},
{"lineNum":"  559","line":"              : detail::pass_through_impl<nary_expr, deduce_domain, Expr, State, Data>"},
{"lineNum":"  560","line":"            {};"},
{"lineNum":"  561","line":""},
{"lineNum":"  562","line":"            typedef Tag proto_tag;"},
{"lineNum":"  563","line":"            typedef A0 proto_child0; typedef A1 proto_child1; typedef A2 proto_child2; typedef A3 proto_child3;"},
{"lineNum":"  564","line":"            typedef detail::if_vararg<A3> proto_child4; typedef detail::if_vararg<A3> proto_child5; typedef detail::if_vararg<A3> proto_child6; typedef detail::if_vararg<A3> proto_child7; typedef detail::if_vararg<A3> proto_child8; typedef detail::if_vararg<A3> proto_child9;"},
{"lineNum":"  565","line":"        };"},
{"lineNum":"  566","line":"        namespace detail"},
{"lineNum":"  567","line":"        {"},
{"lineNum":"  568","line":"            template<"},
{"lineNum":"  569","line":"                template<typename , typename , typename , typename> class T"},
{"lineNum":"  570","line":"              , typename A0 , typename A1 , typename A2 , typename A3"},
{"lineNum":"  571","line":"            >"},
{"lineNum":"  572","line":"            struct is_callable_<T<A0 , A1 , A2 , A3> BOOST_PROTO_TEMPLATE_ARITY_PARAM(4)>"},
{"lineNum":"  573","line":"              : is_same<A3, callable>"},
{"lineNum":"  574","line":"            {};"},
{"lineNum":"  575","line":"        }"},
{"lineNum":"  576","line":"        namespace result_of"},
{"lineNum":"  577","line":"        {"},
{"lineNum":"  578","line":""},
{"lineNum":"  579","line":""},
{"lineNum":"  580","line":""},
{"lineNum":"  581","line":""},
{"lineNum":"  582","line":""},
{"lineNum":"  583","line":""},
{"lineNum":"  584","line":"            template<typename Expr>"},
{"lineNum":"  585","line":"            struct child_c<Expr, 4>"},
{"lineNum":"  586","line":"            {"},
{"lineNum":"  587","line":""},
{"lineNum":"  588","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":"  589","line":""},
{"lineNum":"  590","line":""},
{"lineNum":"  591","line":"                typedef typename Expr::proto_child4 value_type;"},
{"lineNum":"  592","line":""},
{"lineNum":"  593","line":""},
{"lineNum":"  594","line":""},
{"lineNum":"  595","line":""},
{"lineNum":"  596","line":""},
{"lineNum":"  597","line":"                typedef typename detail::expr_traits<typename Expr::proto_child4>::value_type type;"},
{"lineNum":"  598","line":"            };"},
{"lineNum":"  599","line":"            template<typename Expr>"},
{"lineNum":"  600","line":"            struct child_c<Expr &, 4>"},
{"lineNum":"  601","line":"            {"},
{"lineNum":"  602","line":""},
{"lineNum":"  603","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":"  604","line":""},
{"lineNum":"  605","line":""},
{"lineNum":"  606","line":"                typedef typename Expr::proto_child4 value_type;"},
{"lineNum":"  607","line":""},
{"lineNum":"  608","line":""},
{"lineNum":"  609","line":""},
{"lineNum":"  610","line":""},
{"lineNum":"  611","line":""},
{"lineNum":"  612","line":"                typedef typename detail::expr_traits<typename Expr::proto_child4>::reference type;"},
{"lineNum":"  613","line":""},
{"lineNum":"  614","line":""},
{"lineNum":"  615","line":"                BOOST_FORCEINLINE"},
{"lineNum":"  616","line":"                static type call(Expr &e)"},
{"lineNum":"  617","line":"                {"},
{"lineNum":"  618","line":"                    return e.proto_base().child4;"},
{"lineNum":"  619","line":"                }"},
{"lineNum":"  620","line":"            };"},
{"lineNum":"  621","line":"            template<typename Expr>"},
{"lineNum":"  622","line":"            struct child_c<Expr const &, 4>"},
{"lineNum":"  623","line":"            {"},
{"lineNum":"  624","line":""},
{"lineNum":"  625","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":"  626","line":""},
{"lineNum":"  627","line":""},
{"lineNum":"  628","line":"                typedef typename Expr::proto_child4 value_type;"},
{"lineNum":"  629","line":""},
{"lineNum":"  630","line":""},
{"lineNum":"  631","line":""},
{"lineNum":"  632","line":""},
{"lineNum":"  633","line":""},
{"lineNum":"  634","line":"                typedef typename detail::expr_traits<typename Expr::proto_child4>::const_reference type;"},
{"lineNum":"  635","line":""},
{"lineNum":"  636","line":""},
{"lineNum":"  637","line":"                BOOST_FORCEINLINE"},
{"lineNum":"  638","line":"                static type call(Expr const &e)"},
{"lineNum":"  639","line":"                {"},
{"lineNum":"  640","line":"                    return e.proto_base().child4;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  641","line":"                }"},
{"lineNum":"  642","line":"            };"},
{"lineNum":"  643","line":"        }"},
{"lineNum":"  644","line":""},
{"lineNum":"  645","line":""},
{"lineNum":"  646","line":""},
{"lineNum":"  647","line":""},
{"lineNum":"  648","line":"        template<typename A0 , typename A1 , typename A2 , typename A3 , typename A4>"},
{"lineNum":"  649","line":"        struct function"},
{"lineNum":"  650","line":"        <"},
{"lineNum":"  651","line":"            A0 , A1 , A2 , A3 , A4"},
{"lineNum":"  652","line":"            , void , void , void , void , void"},
{"lineNum":"  653","line":"        >"},
{"lineNum":"  654","line":"          : proto::transform<"},
{"lineNum":"  655","line":"                function<"},
{"lineNum":"  656","line":"                    A0 , A1 , A2 , A3 , A4"},
{"lineNum":"  657","line":"                    , void , void , void , void , void"},
{"lineNum":"  658","line":"                >"},
{"lineNum":"  659","line":"              , int"},
{"lineNum":"  660","line":"            >"},
{"lineNum":"  661","line":"        {"},
{"lineNum":"  662","line":"            typedef proto::expr<proto::tag::function, list5<A0 , A1 , A2 , A3 , A4>, 5> type;"},
{"lineNum":"  663","line":"            typedef proto::basic_expr<proto::tag::function, list5<A0 , A1 , A2 , A3 , A4>, 5> proto_grammar;"},
{"lineNum":"  664","line":"            template<typename Expr, typename State, typename Data>"},
{"lineNum":"  665","line":"            struct impl"},
{"lineNum":"  666","line":"              : detail::pass_through_impl<function, deduce_domain, Expr, State, Data>"},
{"lineNum":"  667","line":"            {};"},
{"lineNum":"  668","line":""},
{"lineNum":"  669","line":"            typedef proto::tag::function proto_tag;"},
{"lineNum":"  670","line":"            typedef A0 proto_child0; typedef A1 proto_child1; typedef A2 proto_child2; typedef A3 proto_child3; typedef A4 proto_child4;"},
{"lineNum":"  671","line":"            typedef detail::if_vararg<A4> proto_child5; typedef detail::if_vararg<A4> proto_child6; typedef detail::if_vararg<A4> proto_child7; typedef detail::if_vararg<A4> proto_child8; typedef detail::if_vararg<A4> proto_child9;"},
{"lineNum":"  672","line":"        };"},
{"lineNum":"  673","line":""},
{"lineNum":"  674","line":""},
{"lineNum":"  675","line":""},
{"lineNum":"  676","line":""},
{"lineNum":"  677","line":""},
{"lineNum":"  678","line":""},
{"lineNum":"  679","line":""},
{"lineNum":"  680","line":""},
{"lineNum":"  681","line":"        template<typename Tag , typename A0 , typename A1 , typename A2 , typename A3 , typename A4>"},
{"lineNum":"  682","line":"        struct nary_expr"},
{"lineNum":"  683","line":"        <"},
{"lineNum":"  684","line":"            Tag"},
{"lineNum":"  685","line":"            , A0 , A1 , A2 , A3 , A4"},
{"lineNum":"  686","line":"            , void , void , void , void , void"},
{"lineNum":"  687","line":"        >"},
{"lineNum":"  688","line":"          : proto::transform<"},
{"lineNum":"  689","line":"                nary_expr<"},
{"lineNum":"  690","line":"                    Tag"},
{"lineNum":"  691","line":"                    , A0 , A1 , A2 , A3 , A4"},
{"lineNum":"  692","line":"                    , void , void , void , void , void"},
{"lineNum":"  693","line":"                >"},
{"lineNum":"  694","line":"              , int"},
{"lineNum":"  695","line":"            >"},
{"lineNum":"  696","line":"        {"},
{"lineNum":"  697","line":"            typedef proto::expr<Tag, list5<A0 , A1 , A2 , A3 , A4>, 5> type;"},
{"lineNum":"  698","line":"            typedef proto::basic_expr<Tag, list5<A0 , A1 , A2 , A3 , A4>, 5> proto_grammar;"},
{"lineNum":"  699","line":"            template<typename Expr, typename State, typename Data>"},
{"lineNum":"  700","line":"            struct impl"},
{"lineNum":"  701","line":"              : detail::pass_through_impl<nary_expr, deduce_domain, Expr, State, Data>"},
{"lineNum":"  702","line":"            {};"},
{"lineNum":"  703","line":""},
{"lineNum":"  704","line":"            typedef Tag proto_tag;"},
{"lineNum":"  705","line":"            typedef A0 proto_child0; typedef A1 proto_child1; typedef A2 proto_child2; typedef A3 proto_child3; typedef A4 proto_child4;"},
{"lineNum":"  706","line":"            typedef detail::if_vararg<A4> proto_child5; typedef detail::if_vararg<A4> proto_child6; typedef detail::if_vararg<A4> proto_child7; typedef detail::if_vararg<A4> proto_child8; typedef detail::if_vararg<A4> proto_child9;"},
{"lineNum":"  707","line":"        };"},
{"lineNum":"  708","line":"        namespace detail"},
{"lineNum":"  709","line":"        {"},
{"lineNum":"  710","line":"            template<"},
{"lineNum":"  711","line":"                template<typename , typename , typename , typename , typename> class T"},
{"lineNum":"  712","line":"              , typename A0 , typename A1 , typename A2 , typename A3 , typename A4"},
{"lineNum":"  713","line":"            >"},
{"lineNum":"  714","line":"            struct is_callable_<T<A0 , A1 , A2 , A3 , A4> BOOST_PROTO_TEMPLATE_ARITY_PARAM(5)>"},
{"lineNum":"  715","line":"              : is_same<A4, callable>"},
{"lineNum":"  716","line":"            {};"},
{"lineNum":"  717","line":"        }"},
{"lineNum":"  718","line":"        namespace result_of"},
{"lineNum":"  719","line":"        {"},
{"lineNum":"  720","line":""},
{"lineNum":"  721","line":""},
{"lineNum":"  722","line":""},
{"lineNum":"  723","line":""},
{"lineNum":"  724","line":""},
{"lineNum":"  725","line":""},
{"lineNum":"  726","line":"            template<typename Expr>"},
{"lineNum":"  727","line":"            struct child_c<Expr, 5>"},
{"lineNum":"  728","line":"            {"},
{"lineNum":"  729","line":""},
{"lineNum":"  730","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":"  731","line":""},
{"lineNum":"  732","line":""},
{"lineNum":"  733","line":"                typedef typename Expr::proto_child5 value_type;"},
{"lineNum":"  734","line":""},
{"lineNum":"  735","line":""},
{"lineNum":"  736","line":""},
{"lineNum":"  737","line":""},
{"lineNum":"  738","line":""},
{"lineNum":"  739","line":"                typedef typename detail::expr_traits<typename Expr::proto_child5>::value_type type;"},
{"lineNum":"  740","line":"            };"},
{"lineNum":"  741","line":"            template<typename Expr>"},
{"lineNum":"  742","line":"            struct child_c<Expr &, 5>"},
{"lineNum":"  743","line":"            {"},
{"lineNum":"  744","line":""},
{"lineNum":"  745","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":"  746","line":""},
{"lineNum":"  747","line":""},
{"lineNum":"  748","line":"                typedef typename Expr::proto_child5 value_type;"},
{"lineNum":"  749","line":""},
{"lineNum":"  750","line":""},
{"lineNum":"  751","line":""},
{"lineNum":"  752","line":""},
{"lineNum":"  753","line":""},
{"lineNum":"  754","line":"                typedef typename detail::expr_traits<typename Expr::proto_child5>::reference type;"},
{"lineNum":"  755","line":""},
{"lineNum":"  756","line":""},
{"lineNum":"  757","line":"                BOOST_FORCEINLINE"},
{"lineNum":"  758","line":"                static type call(Expr &e)"},
{"lineNum":"  759","line":"                {"},
{"lineNum":"  760","line":"                    return e.proto_base().child5;"},
{"lineNum":"  761","line":"                }"},
{"lineNum":"  762","line":"            };"},
{"lineNum":"  763","line":"            template<typename Expr>"},
{"lineNum":"  764","line":"            struct child_c<Expr const &, 5>"},
{"lineNum":"  765","line":"            {"},
{"lineNum":"  766","line":""},
{"lineNum":"  767","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":"  768","line":""},
{"lineNum":"  769","line":""},
{"lineNum":"  770","line":"                typedef typename Expr::proto_child5 value_type;"},
{"lineNum":"  771","line":""},
{"lineNum":"  772","line":""},
{"lineNum":"  773","line":""},
{"lineNum":"  774","line":""},
{"lineNum":"  775","line":""},
{"lineNum":"  776","line":"                typedef typename detail::expr_traits<typename Expr::proto_child5>::const_reference type;"},
{"lineNum":"  777","line":""},
{"lineNum":"  778","line":""},
{"lineNum":"  779","line":"                BOOST_FORCEINLINE"},
{"lineNum":"  780","line":"                static type call(Expr const &e)"},
{"lineNum":"  781","line":"                {"},
{"lineNum":"  782","line":"                    return e.proto_base().child5;"},
{"lineNum":"  783","line":"                }"},
{"lineNum":"  784","line":"            };"},
{"lineNum":"  785","line":"        }"},
{"lineNum":"  786","line":""},
{"lineNum":"  787","line":""},
{"lineNum":"  788","line":""},
{"lineNum":"  789","line":""},
{"lineNum":"  790","line":"        template<typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>"},
{"lineNum":"  791","line":"        struct function"},
{"lineNum":"  792","line":"        <"},
{"lineNum":"  793","line":"            A0 , A1 , A2 , A3 , A4 , A5"},
{"lineNum":"  794","line":"            , void , void , void , void"},
{"lineNum":"  795","line":"        >"},
{"lineNum":"  796","line":"          : proto::transform<"},
{"lineNum":"  797","line":"                function<"},
{"lineNum":"  798","line":"                    A0 , A1 , A2 , A3 , A4 , A5"},
{"lineNum":"  799","line":"                    , void , void , void , void"},
{"lineNum":"  800","line":"                >"},
{"lineNum":"  801","line":"              , int"},
{"lineNum":"  802","line":"            >"},
{"lineNum":"  803","line":"        {"},
{"lineNum":"  804","line":"            typedef proto::expr<proto::tag::function, list6<A0 , A1 , A2 , A3 , A4 , A5>, 6> type;"},
{"lineNum":"  805","line":"            typedef proto::basic_expr<proto::tag::function, list6<A0 , A1 , A2 , A3 , A4 , A5>, 6> proto_grammar;"},
{"lineNum":"  806","line":"            template<typename Expr, typename State, typename Data>"},
{"lineNum":"  807","line":"            struct impl"},
{"lineNum":"  808","line":"              : detail::pass_through_impl<function, deduce_domain, Expr, State, Data>"},
{"lineNum":"  809","line":"            {};"},
{"lineNum":"  810","line":""},
{"lineNum":"  811","line":"            typedef proto::tag::function proto_tag;"},
{"lineNum":"  812","line":"            typedef A0 proto_child0; typedef A1 proto_child1; typedef A2 proto_child2; typedef A3 proto_child3; typedef A4 proto_child4; typedef A5 proto_child5;"},
{"lineNum":"  813","line":"            typedef detail::if_vararg<A5> proto_child6; typedef detail::if_vararg<A5> proto_child7; typedef detail::if_vararg<A5> proto_child8; typedef detail::if_vararg<A5> proto_child9;"},
{"lineNum":"  814","line":"        };"},
{"lineNum":"  815","line":""},
{"lineNum":"  816","line":""},
{"lineNum":"  817","line":""},
{"lineNum":"  818","line":""},
{"lineNum":"  819","line":""},
{"lineNum":"  820","line":""},
{"lineNum":"  821","line":""},
{"lineNum":"  822","line":""},
{"lineNum":"  823","line":"        template<typename Tag , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5>"},
{"lineNum":"  824","line":"        struct nary_expr"},
{"lineNum":"  825","line":"        <"},
{"lineNum":"  826","line":"            Tag"},
{"lineNum":"  827","line":"            , A0 , A1 , A2 , A3 , A4 , A5"},
{"lineNum":"  828","line":"            , void , void , void , void"},
{"lineNum":"  829","line":"        >"},
{"lineNum":"  830","line":"          : proto::transform<"},
{"lineNum":"  831","line":"                nary_expr<"},
{"lineNum":"  832","line":"                    Tag"},
{"lineNum":"  833","line":"                    , A0 , A1 , A2 , A3 , A4 , A5"},
{"lineNum":"  834","line":"                    , void , void , void , void"},
{"lineNum":"  835","line":"                >"},
{"lineNum":"  836","line":"              , int"},
{"lineNum":"  837","line":"            >"},
{"lineNum":"  838","line":"        {"},
{"lineNum":"  839","line":"            typedef proto::expr<Tag, list6<A0 , A1 , A2 , A3 , A4 , A5>, 6> type;"},
{"lineNum":"  840","line":"            typedef proto::basic_expr<Tag, list6<A0 , A1 , A2 , A3 , A4 , A5>, 6> proto_grammar;"},
{"lineNum":"  841","line":"            template<typename Expr, typename State, typename Data>"},
{"lineNum":"  842","line":"            struct impl"},
{"lineNum":"  843","line":"              : detail::pass_through_impl<nary_expr, deduce_domain, Expr, State, Data>"},
{"lineNum":"  844","line":"            {};"},
{"lineNum":"  845","line":""},
{"lineNum":"  846","line":"            typedef Tag proto_tag;"},
{"lineNum":"  847","line":"            typedef A0 proto_child0; typedef A1 proto_child1; typedef A2 proto_child2; typedef A3 proto_child3; typedef A4 proto_child4; typedef A5 proto_child5;"},
{"lineNum":"  848","line":"            typedef detail::if_vararg<A5> proto_child6; typedef detail::if_vararg<A5> proto_child7; typedef detail::if_vararg<A5> proto_child8; typedef detail::if_vararg<A5> proto_child9;"},
{"lineNum":"  849","line":"        };"},
{"lineNum":"  850","line":"        namespace detail"},
{"lineNum":"  851","line":"        {"},
{"lineNum":"  852","line":"            template<"},
{"lineNum":"  853","line":"                template<typename , typename , typename , typename , typename , typename> class T"},
{"lineNum":"  854","line":"              , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5"},
{"lineNum":"  855","line":"            >"},
{"lineNum":"  856","line":"            struct is_callable_<T<A0 , A1 , A2 , A3 , A4 , A5> BOOST_PROTO_TEMPLATE_ARITY_PARAM(6)>"},
{"lineNum":"  857","line":"              : is_same<A5, callable>"},
{"lineNum":"  858","line":"            {};"},
{"lineNum":"  859","line":"        }"},
{"lineNum":"  860","line":"        namespace result_of"},
{"lineNum":"  861","line":"        {"},
{"lineNum":"  862","line":""},
{"lineNum":"  863","line":""},
{"lineNum":"  864","line":""},
{"lineNum":"  865","line":""},
{"lineNum":"  866","line":""},
{"lineNum":"  867","line":""},
{"lineNum":"  868","line":"            template<typename Expr>"},
{"lineNum":"  869","line":"            struct child_c<Expr, 6>"},
{"lineNum":"  870","line":"            {"},
{"lineNum":"  871","line":""},
{"lineNum":"  872","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":"  873","line":""},
{"lineNum":"  874","line":""},
{"lineNum":"  875","line":"                typedef typename Expr::proto_child6 value_type;"},
{"lineNum":"  876","line":""},
{"lineNum":"  877","line":""},
{"lineNum":"  878","line":""},
{"lineNum":"  879","line":""},
{"lineNum":"  880","line":""},
{"lineNum":"  881","line":"                typedef typename detail::expr_traits<typename Expr::proto_child6>::value_type type;"},
{"lineNum":"  882","line":"            };"},
{"lineNum":"  883","line":"            template<typename Expr>"},
{"lineNum":"  884","line":"            struct child_c<Expr &, 6>"},
{"lineNum":"  885","line":"            {"},
{"lineNum":"  886","line":""},
{"lineNum":"  887","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":"  888","line":""},
{"lineNum":"  889","line":""},
{"lineNum":"  890","line":"                typedef typename Expr::proto_child6 value_type;"},
{"lineNum":"  891","line":""},
{"lineNum":"  892","line":""},
{"lineNum":"  893","line":""},
{"lineNum":"  894","line":""},
{"lineNum":"  895","line":""},
{"lineNum":"  896","line":"                typedef typename detail::expr_traits<typename Expr::proto_child6>::reference type;"},
{"lineNum":"  897","line":""},
{"lineNum":"  898","line":""},
{"lineNum":"  899","line":"                BOOST_FORCEINLINE"},
{"lineNum":"  900","line":"                static type call(Expr &e)"},
{"lineNum":"  901","line":"                {"},
{"lineNum":"  902","line":"                    return e.proto_base().child6;"},
{"lineNum":"  903","line":"                }"},
{"lineNum":"  904","line":"            };"},
{"lineNum":"  905","line":"            template<typename Expr>"},
{"lineNum":"  906","line":"            struct child_c<Expr const &, 6>"},
{"lineNum":"  907","line":"            {"},
{"lineNum":"  908","line":""},
{"lineNum":"  909","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":"  910","line":""},
{"lineNum":"  911","line":""},
{"lineNum":"  912","line":"                typedef typename Expr::proto_child6 value_type;"},
{"lineNum":"  913","line":""},
{"lineNum":"  914","line":""},
{"lineNum":"  915","line":""},
{"lineNum":"  916","line":""},
{"lineNum":"  917","line":""},
{"lineNum":"  918","line":"                typedef typename detail::expr_traits<typename Expr::proto_child6>::const_reference type;"},
{"lineNum":"  919","line":""},
{"lineNum":"  920","line":""},
{"lineNum":"  921","line":"                BOOST_FORCEINLINE"},
{"lineNum":"  922","line":"                static type call(Expr const &e)"},
{"lineNum":"  923","line":"                {"},
{"lineNum":"  924","line":"                    return e.proto_base().child6;"},
{"lineNum":"  925","line":"                }"},
{"lineNum":"  926","line":"            };"},
{"lineNum":"  927","line":"        }"},
{"lineNum":"  928","line":""},
{"lineNum":"  929","line":""},
{"lineNum":"  930","line":""},
{"lineNum":"  931","line":""},
{"lineNum":"  932","line":"        template<typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>"},
{"lineNum":"  933","line":"        struct function"},
{"lineNum":"  934","line":"        <"},
{"lineNum":"  935","line":"            A0 , A1 , A2 , A3 , A4 , A5 , A6"},
{"lineNum":"  936","line":"            , void , void , void"},
{"lineNum":"  937","line":"        >"},
{"lineNum":"  938","line":"          : proto::transform<"},
{"lineNum":"  939","line":"                function<"},
{"lineNum":"  940","line":"                    A0 , A1 , A2 , A3 , A4 , A5 , A6"},
{"lineNum":"  941","line":"                    , void , void , void"},
{"lineNum":"  942","line":"                >"},
{"lineNum":"  943","line":"              , int"},
{"lineNum":"  944","line":"            >"},
{"lineNum":"  945","line":"        {"},
{"lineNum":"  946","line":"            typedef proto::expr<proto::tag::function, list7<A0 , A1 , A2 , A3 , A4 , A5 , A6>, 7> type;"},
{"lineNum":"  947","line":"            typedef proto::basic_expr<proto::tag::function, list7<A0 , A1 , A2 , A3 , A4 , A5 , A6>, 7> proto_grammar;"},
{"lineNum":"  948","line":"            template<typename Expr, typename State, typename Data>"},
{"lineNum":"  949","line":"            struct impl"},
{"lineNum":"  950","line":"              : detail::pass_through_impl<function, deduce_domain, Expr, State, Data>"},
{"lineNum":"  951","line":"            {};"},
{"lineNum":"  952","line":""},
{"lineNum":"  953","line":"            typedef proto::tag::function proto_tag;"},
{"lineNum":"  954","line":"            typedef A0 proto_child0; typedef A1 proto_child1; typedef A2 proto_child2; typedef A3 proto_child3; typedef A4 proto_child4; typedef A5 proto_child5; typedef A6 proto_child6;"},
{"lineNum":"  955","line":"            typedef detail::if_vararg<A6> proto_child7; typedef detail::if_vararg<A6> proto_child8; typedef detail::if_vararg<A6> proto_child9;"},
{"lineNum":"  956","line":"        };"},
{"lineNum":"  957","line":""},
{"lineNum":"  958","line":""},
{"lineNum":"  959","line":""},
{"lineNum":"  960","line":""},
{"lineNum":"  961","line":""},
{"lineNum":"  962","line":""},
{"lineNum":"  963","line":""},
{"lineNum":"  964","line":""},
{"lineNum":"  965","line":"        template<typename Tag , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6>"},
{"lineNum":"  966","line":"        struct nary_expr"},
{"lineNum":"  967","line":"        <"},
{"lineNum":"  968","line":"            Tag"},
{"lineNum":"  969","line":"            , A0 , A1 , A2 , A3 , A4 , A5 , A6"},
{"lineNum":"  970","line":"            , void , void , void"},
{"lineNum":"  971","line":"        >"},
{"lineNum":"  972","line":"          : proto::transform<"},
{"lineNum":"  973","line":"                nary_expr<"},
{"lineNum":"  974","line":"                    Tag"},
{"lineNum":"  975","line":"                    , A0 , A1 , A2 , A3 , A4 , A5 , A6"},
{"lineNum":"  976","line":"                    , void , void , void"},
{"lineNum":"  977","line":"                >"},
{"lineNum":"  978","line":"              , int"},
{"lineNum":"  979","line":"            >"},
{"lineNum":"  980","line":"        {"},
{"lineNum":"  981","line":"            typedef proto::expr<Tag, list7<A0 , A1 , A2 , A3 , A4 , A5 , A6>, 7> type;"},
{"lineNum":"  982","line":"            typedef proto::basic_expr<Tag, list7<A0 , A1 , A2 , A3 , A4 , A5 , A6>, 7> proto_grammar;"},
{"lineNum":"  983","line":"            template<typename Expr, typename State, typename Data>"},
{"lineNum":"  984","line":"            struct impl"},
{"lineNum":"  985","line":"              : detail::pass_through_impl<nary_expr, deduce_domain, Expr, State, Data>"},
{"lineNum":"  986","line":"            {};"},
{"lineNum":"  987","line":""},
{"lineNum":"  988","line":"            typedef Tag proto_tag;"},
{"lineNum":"  989","line":"            typedef A0 proto_child0; typedef A1 proto_child1; typedef A2 proto_child2; typedef A3 proto_child3; typedef A4 proto_child4; typedef A5 proto_child5; typedef A6 proto_child6;"},
{"lineNum":"  990","line":"            typedef detail::if_vararg<A6> proto_child7; typedef detail::if_vararg<A6> proto_child8; typedef detail::if_vararg<A6> proto_child9;"},
{"lineNum":"  991","line":"        };"},
{"lineNum":"  992","line":"        namespace detail"},
{"lineNum":"  993","line":"        {"},
{"lineNum":"  994","line":"            template<"},
{"lineNum":"  995","line":"                template<typename , typename , typename , typename , typename , typename , typename> class T"},
{"lineNum":"  996","line":"              , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6"},
{"lineNum":"  997","line":"            >"},
{"lineNum":"  998","line":"            struct is_callable_<T<A0 , A1 , A2 , A3 , A4 , A5 , A6> BOOST_PROTO_TEMPLATE_ARITY_PARAM(7)>"},
{"lineNum":"  999","line":"              : is_same<A6, callable>"},
{"lineNum":" 1000","line":"            {};"},
{"lineNum":" 1001","line":"        }"},
{"lineNum":" 1002","line":"        namespace result_of"},
{"lineNum":" 1003","line":"        {"},
{"lineNum":" 1004","line":""},
{"lineNum":" 1005","line":""},
{"lineNum":" 1006","line":""},
{"lineNum":" 1007","line":""},
{"lineNum":" 1008","line":""},
{"lineNum":" 1009","line":""},
{"lineNum":" 1010","line":"            template<typename Expr>"},
{"lineNum":" 1011","line":"            struct child_c<Expr, 7>"},
{"lineNum":" 1012","line":"            {"},
{"lineNum":" 1013","line":""},
{"lineNum":" 1014","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":" 1015","line":""},
{"lineNum":" 1016","line":""},
{"lineNum":" 1017","line":"                typedef typename Expr::proto_child7 value_type;"},
{"lineNum":" 1018","line":""},
{"lineNum":" 1019","line":""},
{"lineNum":" 1020","line":""},
{"lineNum":" 1021","line":""},
{"lineNum":" 1022","line":""},
{"lineNum":" 1023","line":"                typedef typename detail::expr_traits<typename Expr::proto_child7>::value_type type;"},
{"lineNum":" 1024","line":"            };"},
{"lineNum":" 1025","line":"            template<typename Expr>"},
{"lineNum":" 1026","line":"            struct child_c<Expr &, 7>"},
{"lineNum":" 1027","line":"            {"},
{"lineNum":" 1028","line":""},
{"lineNum":" 1029","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":" 1030","line":""},
{"lineNum":" 1031","line":""},
{"lineNum":" 1032","line":"                typedef typename Expr::proto_child7 value_type;"},
{"lineNum":" 1033","line":""},
{"lineNum":" 1034","line":""},
{"lineNum":" 1035","line":""},
{"lineNum":" 1036","line":""},
{"lineNum":" 1037","line":""},
{"lineNum":" 1038","line":"                typedef typename detail::expr_traits<typename Expr::proto_child7>::reference type;"},
{"lineNum":" 1039","line":""},
{"lineNum":" 1040","line":""},
{"lineNum":" 1041","line":"                BOOST_FORCEINLINE"},
{"lineNum":" 1042","line":"                static type call(Expr &e)"},
{"lineNum":" 1043","line":"                {"},
{"lineNum":" 1044","line":"                    return e.proto_base().child7;"},
{"lineNum":" 1045","line":"                }"},
{"lineNum":" 1046","line":"            };"},
{"lineNum":" 1047","line":"            template<typename Expr>"},
{"lineNum":" 1048","line":"            struct child_c<Expr const &, 7>"},
{"lineNum":" 1049","line":"            {"},
{"lineNum":" 1050","line":""},
{"lineNum":" 1051","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":" 1052","line":""},
{"lineNum":" 1053","line":""},
{"lineNum":" 1054","line":"                typedef typename Expr::proto_child7 value_type;"},
{"lineNum":" 1055","line":""},
{"lineNum":" 1056","line":""},
{"lineNum":" 1057","line":""},
{"lineNum":" 1058","line":""},
{"lineNum":" 1059","line":""},
{"lineNum":" 1060","line":"                typedef typename detail::expr_traits<typename Expr::proto_child7>::const_reference type;"},
{"lineNum":" 1061","line":""},
{"lineNum":" 1062","line":""},
{"lineNum":" 1063","line":"                BOOST_FORCEINLINE"},
{"lineNum":" 1064","line":"                static type call(Expr const &e)"},
{"lineNum":" 1065","line":"                {"},
{"lineNum":" 1066","line":"                    return e.proto_base().child7;"},
{"lineNum":" 1067","line":"                }"},
{"lineNum":" 1068","line":"            };"},
{"lineNum":" 1069","line":"        }"},
{"lineNum":" 1070","line":""},
{"lineNum":" 1071","line":""},
{"lineNum":" 1072","line":""},
{"lineNum":" 1073","line":""},
{"lineNum":" 1074","line":"        template<typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>"},
{"lineNum":" 1075","line":"        struct function"},
{"lineNum":" 1076","line":"        <"},
{"lineNum":" 1077","line":"            A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7"},
{"lineNum":" 1078","line":"            , void , void"},
{"lineNum":" 1079","line":"        >"},
{"lineNum":" 1080","line":"          : proto::transform<"},
{"lineNum":" 1081","line":"                function<"},
{"lineNum":" 1082","line":"                    A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7"},
{"lineNum":" 1083","line":"                    , void , void"},
{"lineNum":" 1084","line":"                >"},
{"lineNum":" 1085","line":"              , int"},
{"lineNum":" 1086","line":"            >"},
{"lineNum":" 1087","line":"        {"},
{"lineNum":" 1088","line":"            typedef proto::expr<proto::tag::function, list8<A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7>, 8> type;"},
{"lineNum":" 1089","line":"            typedef proto::basic_expr<proto::tag::function, list8<A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7>, 8> proto_grammar;"},
{"lineNum":" 1090","line":"            template<typename Expr, typename State, typename Data>"},
{"lineNum":" 1091","line":"            struct impl"},
{"lineNum":" 1092","line":"              : detail::pass_through_impl<function, deduce_domain, Expr, State, Data>"},
{"lineNum":" 1093","line":"            {};"},
{"lineNum":" 1094","line":""},
{"lineNum":" 1095","line":"            typedef proto::tag::function proto_tag;"},
{"lineNum":" 1096","line":"            typedef A0 proto_child0; typedef A1 proto_child1; typedef A2 proto_child2; typedef A3 proto_child3; typedef A4 proto_child4; typedef A5 proto_child5; typedef A6 proto_child6; typedef A7 proto_child7;"},
{"lineNum":" 1097","line":"            typedef detail::if_vararg<A7> proto_child8; typedef detail::if_vararg<A7> proto_child9;"},
{"lineNum":" 1098","line":"        };"},
{"lineNum":" 1099","line":""},
{"lineNum":" 1100","line":""},
{"lineNum":" 1101","line":""},
{"lineNum":" 1102","line":""},
{"lineNum":" 1103","line":""},
{"lineNum":" 1104","line":""},
{"lineNum":" 1105","line":""},
{"lineNum":" 1106","line":""},
{"lineNum":" 1107","line":"        template<typename Tag , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7>"},
{"lineNum":" 1108","line":"        struct nary_expr"},
{"lineNum":" 1109","line":"        <"},
{"lineNum":" 1110","line":"            Tag"},
{"lineNum":" 1111","line":"            , A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7"},
{"lineNum":" 1112","line":"            , void , void"},
{"lineNum":" 1113","line":"        >"},
{"lineNum":" 1114","line":"          : proto::transform<"},
{"lineNum":" 1115","line":"                nary_expr<"},
{"lineNum":" 1116","line":"                    Tag"},
{"lineNum":" 1117","line":"                    , A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7"},
{"lineNum":" 1118","line":"                    , void , void"},
{"lineNum":" 1119","line":"                >"},
{"lineNum":" 1120","line":"              , int"},
{"lineNum":" 1121","line":"            >"},
{"lineNum":" 1122","line":"        {"},
{"lineNum":" 1123","line":"            typedef proto::expr<Tag, list8<A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7>, 8> type;"},
{"lineNum":" 1124","line":"            typedef proto::basic_expr<Tag, list8<A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7>, 8> proto_grammar;"},
{"lineNum":" 1125","line":"            template<typename Expr, typename State, typename Data>"},
{"lineNum":" 1126","line":"            struct impl"},
{"lineNum":" 1127","line":"              : detail::pass_through_impl<nary_expr, deduce_domain, Expr, State, Data>"},
{"lineNum":" 1128","line":"            {};"},
{"lineNum":" 1129","line":""},
{"lineNum":" 1130","line":"            typedef Tag proto_tag;"},
{"lineNum":" 1131","line":"            typedef A0 proto_child0; typedef A1 proto_child1; typedef A2 proto_child2; typedef A3 proto_child3; typedef A4 proto_child4; typedef A5 proto_child5; typedef A6 proto_child6; typedef A7 proto_child7;"},
{"lineNum":" 1132","line":"            typedef detail::if_vararg<A7> proto_child8; typedef detail::if_vararg<A7> proto_child9;"},
{"lineNum":" 1133","line":"        };"},
{"lineNum":" 1134","line":"        namespace detail"},
{"lineNum":" 1135","line":"        {"},
{"lineNum":" 1136","line":"            template<"},
{"lineNum":" 1137","line":"                template<typename , typename , typename , typename , typename , typename , typename , typename> class T"},
{"lineNum":" 1138","line":"              , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7"},
{"lineNum":" 1139","line":"            >"},
{"lineNum":" 1140","line":"            struct is_callable_<T<A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7> BOOST_PROTO_TEMPLATE_ARITY_PARAM(8)>"},
{"lineNum":" 1141","line":"              : is_same<A7, callable>"},
{"lineNum":" 1142","line":"            {};"},
{"lineNum":" 1143","line":"        }"},
{"lineNum":" 1144","line":"        namespace result_of"},
{"lineNum":" 1145","line":"        {"},
{"lineNum":" 1146","line":""},
{"lineNum":" 1147","line":""},
{"lineNum":" 1148","line":""},
{"lineNum":" 1149","line":""},
{"lineNum":" 1150","line":""},
{"lineNum":" 1151","line":""},
{"lineNum":" 1152","line":"            template<typename Expr>"},
{"lineNum":" 1153","line":"            struct child_c<Expr, 8>"},
{"lineNum":" 1154","line":"            {"},
{"lineNum":" 1155","line":""},
{"lineNum":" 1156","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":" 1157","line":""},
{"lineNum":" 1158","line":""},
{"lineNum":" 1159","line":"                typedef typename Expr::proto_child8 value_type;"},
{"lineNum":" 1160","line":""},
{"lineNum":" 1161","line":""},
{"lineNum":" 1162","line":""},
{"lineNum":" 1163","line":""},
{"lineNum":" 1164","line":""},
{"lineNum":" 1165","line":"                typedef typename detail::expr_traits<typename Expr::proto_child8>::value_type type;"},
{"lineNum":" 1166","line":"            };"},
{"lineNum":" 1167","line":"            template<typename Expr>"},
{"lineNum":" 1168","line":"            struct child_c<Expr &, 8>"},
{"lineNum":" 1169","line":"            {"},
{"lineNum":" 1170","line":""},
{"lineNum":" 1171","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":" 1172","line":""},
{"lineNum":" 1173","line":""},
{"lineNum":" 1174","line":"                typedef typename Expr::proto_child8 value_type;"},
{"lineNum":" 1175","line":""},
{"lineNum":" 1176","line":""},
{"lineNum":" 1177","line":""},
{"lineNum":" 1178","line":""},
{"lineNum":" 1179","line":""},
{"lineNum":" 1180","line":"                typedef typename detail::expr_traits<typename Expr::proto_child8>::reference type;"},
{"lineNum":" 1181","line":""},
{"lineNum":" 1182","line":""},
{"lineNum":" 1183","line":"                BOOST_FORCEINLINE"},
{"lineNum":" 1184","line":"                static type call(Expr &e)"},
{"lineNum":" 1185","line":"                {"},
{"lineNum":" 1186","line":"                    return e.proto_base().child8;"},
{"lineNum":" 1187","line":"                }"},
{"lineNum":" 1188","line":"            };"},
{"lineNum":" 1189","line":"            template<typename Expr>"},
{"lineNum":" 1190","line":"            struct child_c<Expr const &, 8>"},
{"lineNum":" 1191","line":"            {"},
{"lineNum":" 1192","line":""},
{"lineNum":" 1193","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":" 1194","line":""},
{"lineNum":" 1195","line":""},
{"lineNum":" 1196","line":"                typedef typename Expr::proto_child8 value_type;"},
{"lineNum":" 1197","line":""},
{"lineNum":" 1198","line":""},
{"lineNum":" 1199","line":""},
{"lineNum":" 1200","line":""},
{"lineNum":" 1201","line":""},
{"lineNum":" 1202","line":"                typedef typename detail::expr_traits<typename Expr::proto_child8>::const_reference type;"},
{"lineNum":" 1203","line":""},
{"lineNum":" 1204","line":""},
{"lineNum":" 1205","line":"                BOOST_FORCEINLINE"},
{"lineNum":" 1206","line":"                static type call(Expr const &e)"},
{"lineNum":" 1207","line":"                {"},
{"lineNum":" 1208","line":"                    return e.proto_base().child8;"},
{"lineNum":" 1209","line":"                }"},
{"lineNum":" 1210","line":"            };"},
{"lineNum":" 1211","line":"        }"},
{"lineNum":" 1212","line":""},
{"lineNum":" 1213","line":""},
{"lineNum":" 1214","line":""},
{"lineNum":" 1215","line":""},
{"lineNum":" 1216","line":"        template<typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>"},
{"lineNum":" 1217","line":"        struct function"},
{"lineNum":" 1218","line":"        <"},
{"lineNum":" 1219","line":"            A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8"},
{"lineNum":" 1220","line":"            , void"},
{"lineNum":" 1221","line":"        >"},
{"lineNum":" 1222","line":"          : proto::transform<"},
{"lineNum":" 1223","line":"                function<"},
{"lineNum":" 1224","line":"                    A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8"},
{"lineNum":" 1225","line":"                    , void"},
{"lineNum":" 1226","line":"                >"},
{"lineNum":" 1227","line":"              , int"},
{"lineNum":" 1228","line":"            >"},
{"lineNum":" 1229","line":"        {"},
{"lineNum":" 1230","line":"            typedef proto::expr<proto::tag::function, list9<A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8>, 9> type;"},
{"lineNum":" 1231","line":"            typedef proto::basic_expr<proto::tag::function, list9<A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8>, 9> proto_grammar;"},
{"lineNum":" 1232","line":"            template<typename Expr, typename State, typename Data>"},
{"lineNum":" 1233","line":"            struct impl"},
{"lineNum":" 1234","line":"              : detail::pass_through_impl<function, deduce_domain, Expr, State, Data>"},
{"lineNum":" 1235","line":"            {};"},
{"lineNum":" 1236","line":""},
{"lineNum":" 1237","line":"            typedef proto::tag::function proto_tag;"},
{"lineNum":" 1238","line":"            typedef A0 proto_child0; typedef A1 proto_child1; typedef A2 proto_child2; typedef A3 proto_child3; typedef A4 proto_child4; typedef A5 proto_child5; typedef A6 proto_child6; typedef A7 proto_child7; typedef A8 proto_child8;"},
{"lineNum":" 1239","line":"            typedef detail::if_vararg<A8> proto_child9;"},
{"lineNum":" 1240","line":"        };"},
{"lineNum":" 1241","line":""},
{"lineNum":" 1242","line":""},
{"lineNum":" 1243","line":""},
{"lineNum":" 1244","line":""},
{"lineNum":" 1245","line":""},
{"lineNum":" 1246","line":""},
{"lineNum":" 1247","line":""},
{"lineNum":" 1248","line":""},
{"lineNum":" 1249","line":"        template<typename Tag , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8>"},
{"lineNum":" 1250","line":"        struct nary_expr"},
{"lineNum":" 1251","line":"        <"},
{"lineNum":" 1252","line":"            Tag"},
{"lineNum":" 1253","line":"            , A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8"},
{"lineNum":" 1254","line":"            , void"},
{"lineNum":" 1255","line":"        >"},
{"lineNum":" 1256","line":"          : proto::transform<"},
{"lineNum":" 1257","line":"                nary_expr<"},
{"lineNum":" 1258","line":"                    Tag"},
{"lineNum":" 1259","line":"                    , A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8"},
{"lineNum":" 1260","line":"                    , void"},
{"lineNum":" 1261","line":"                >"},
{"lineNum":" 1262","line":"              , int"},
{"lineNum":" 1263","line":"            >"},
{"lineNum":" 1264","line":"        {"},
{"lineNum":" 1265","line":"            typedef proto::expr<Tag, list9<A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8>, 9> type;"},
{"lineNum":" 1266","line":"            typedef proto::basic_expr<Tag, list9<A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8>, 9> proto_grammar;"},
{"lineNum":" 1267","line":"            template<typename Expr, typename State, typename Data>"},
{"lineNum":" 1268","line":"            struct impl"},
{"lineNum":" 1269","line":"              : detail::pass_through_impl<nary_expr, deduce_domain, Expr, State, Data>"},
{"lineNum":" 1270","line":"            {};"},
{"lineNum":" 1271","line":""},
{"lineNum":" 1272","line":"            typedef Tag proto_tag;"},
{"lineNum":" 1273","line":"            typedef A0 proto_child0; typedef A1 proto_child1; typedef A2 proto_child2; typedef A3 proto_child3; typedef A4 proto_child4; typedef A5 proto_child5; typedef A6 proto_child6; typedef A7 proto_child7; typedef A8 proto_child8;"},
{"lineNum":" 1274","line":"            typedef detail::if_vararg<A8> proto_child9;"},
{"lineNum":" 1275","line":"        };"},
{"lineNum":" 1276","line":"        namespace detail"},
{"lineNum":" 1277","line":"        {"},
{"lineNum":" 1278","line":"            template<"},
{"lineNum":" 1279","line":"                template<typename , typename , typename , typename , typename , typename , typename , typename , typename> class T"},
{"lineNum":" 1280","line":"              , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8"},
{"lineNum":" 1281","line":"            >"},
{"lineNum":" 1282","line":"            struct is_callable_<T<A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8> BOOST_PROTO_TEMPLATE_ARITY_PARAM(9)>"},
{"lineNum":" 1283","line":"              : is_same<A8, callable>"},
{"lineNum":" 1284","line":"            {};"},
{"lineNum":" 1285","line":"        }"},
{"lineNum":" 1286","line":"        namespace result_of"},
{"lineNum":" 1287","line":"        {"},
{"lineNum":" 1288","line":""},
{"lineNum":" 1289","line":""},
{"lineNum":" 1290","line":""},
{"lineNum":" 1291","line":""},
{"lineNum":" 1292","line":""},
{"lineNum":" 1293","line":""},
{"lineNum":" 1294","line":"            template<typename Expr>"},
{"lineNum":" 1295","line":"            struct child_c<Expr, 9>"},
{"lineNum":" 1296","line":"            {"},
{"lineNum":" 1297","line":""},
{"lineNum":" 1298","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":" 1299","line":""},
{"lineNum":" 1300","line":""},
{"lineNum":" 1301","line":"                typedef typename Expr::proto_child9 value_type;"},
{"lineNum":" 1302","line":""},
{"lineNum":" 1303","line":""},
{"lineNum":" 1304","line":""},
{"lineNum":" 1305","line":""},
{"lineNum":" 1306","line":""},
{"lineNum":" 1307","line":"                typedef typename detail::expr_traits<typename Expr::proto_child9>::value_type type;"},
{"lineNum":" 1308","line":"            };"},
{"lineNum":" 1309","line":"            template<typename Expr>"},
{"lineNum":" 1310","line":"            struct child_c<Expr &, 9>"},
{"lineNum":" 1311","line":"            {"},
{"lineNum":" 1312","line":""},
{"lineNum":" 1313","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":" 1314","line":""},
{"lineNum":" 1315","line":""},
{"lineNum":" 1316","line":"                typedef typename Expr::proto_child9 value_type;"},
{"lineNum":" 1317","line":""},
{"lineNum":" 1318","line":""},
{"lineNum":" 1319","line":""},
{"lineNum":" 1320","line":""},
{"lineNum":" 1321","line":""},
{"lineNum":" 1322","line":"                typedef typename detail::expr_traits<typename Expr::proto_child9>::reference type;"},
{"lineNum":" 1323","line":""},
{"lineNum":" 1324","line":""},
{"lineNum":" 1325","line":"                BOOST_FORCEINLINE"},
{"lineNum":" 1326","line":"                static type call(Expr &e)"},
{"lineNum":" 1327","line":"                {"},
{"lineNum":" 1328","line":"                    return e.proto_base().child9;"},
{"lineNum":" 1329","line":"                }"},
{"lineNum":" 1330","line":"            };"},
{"lineNum":" 1331","line":"            template<typename Expr>"},
{"lineNum":" 1332","line":"            struct child_c<Expr const &, 9>"},
{"lineNum":" 1333","line":"            {"},
{"lineNum":" 1334","line":""},
{"lineNum":" 1335","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":" 1336","line":""},
{"lineNum":" 1337","line":""},
{"lineNum":" 1338","line":"                typedef typename Expr::proto_child9 value_type;"},
{"lineNum":" 1339","line":""},
{"lineNum":" 1340","line":""},
{"lineNum":" 1341","line":""},
{"lineNum":" 1342","line":""},
{"lineNum":" 1343","line":""},
{"lineNum":" 1344","line":"                typedef typename detail::expr_traits<typename Expr::proto_child9>::const_reference type;"},
{"lineNum":" 1345","line":""},
{"lineNum":" 1346","line":""},
{"lineNum":" 1347","line":"                BOOST_FORCEINLINE"},
{"lineNum":" 1348","line":"                static type call(Expr const &e)"},
{"lineNum":" 1349","line":"                {"},
{"lineNum":" 1350","line":"                    return e.proto_base().child9;"},
{"lineNum":" 1351","line":"                }"},
{"lineNum":" 1352","line":"            };"},
{"lineNum":" 1353","line":"        }"},
{"lineNum":" 1354","line":""},
{"lineNum":" 1355","line":""},
{"lineNum":" 1356","line":""},
{"lineNum":" 1357","line":""},
{"lineNum":" 1358","line":"        template<typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>"},
{"lineNum":" 1359","line":"        struct function"},
{"lineNum":" 1360","line":"          : proto::transform<"},
{"lineNum":" 1361","line":"                function<"},
{"lineNum":" 1362","line":"                    A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9"},
{"lineNum":" 1363","line":""},
{"lineNum":" 1364","line":"                >"},
{"lineNum":" 1365","line":"              , int"},
{"lineNum":" 1366","line":"            >"},
{"lineNum":" 1367","line":"        {"},
{"lineNum":" 1368","line":"            typedef proto::expr<proto::tag::function, list10<A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9>, 10> type;"},
{"lineNum":" 1369","line":"            typedef proto::basic_expr<proto::tag::function, list10<A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9>, 10> proto_grammar;"},
{"lineNum":" 1370","line":"            template<typename Expr, typename State, typename Data>"},
{"lineNum":" 1371","line":"            struct impl"},
{"lineNum":" 1372","line":"              : detail::pass_through_impl<function, deduce_domain, Expr, State, Data>"},
{"lineNum":" 1373","line":"            {};"},
{"lineNum":" 1374","line":""},
{"lineNum":" 1375","line":"            typedef proto::tag::function proto_tag;"},
{"lineNum":" 1376","line":"            typedef A0 proto_child0; typedef A1 proto_child1; typedef A2 proto_child2; typedef A3 proto_child3; typedef A4 proto_child4; typedef A5 proto_child5; typedef A6 proto_child6; typedef A7 proto_child7; typedef A8 proto_child8; typedef A9 proto_child9;"},
{"lineNum":" 1377","line":""},
{"lineNum":" 1378","line":"        };"},
{"lineNum":" 1379","line":""},
{"lineNum":" 1380","line":""},
{"lineNum":" 1381","line":""},
{"lineNum":" 1382","line":""},
{"lineNum":" 1383","line":""},
{"lineNum":" 1384","line":""},
{"lineNum":" 1385","line":""},
{"lineNum":" 1386","line":""},
{"lineNum":" 1387","line":"        template<typename Tag , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9>"},
{"lineNum":" 1388","line":"        struct nary_expr"},
{"lineNum":" 1389","line":"          : proto::transform<"},
{"lineNum":" 1390","line":"                nary_expr<"},
{"lineNum":" 1391","line":"                    Tag"},
{"lineNum":" 1392","line":"                    , A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9"},
{"lineNum":" 1393","line":""},
{"lineNum":" 1394","line":"                >"},
{"lineNum":" 1395","line":"              , int"},
{"lineNum":" 1396","line":"            >"},
{"lineNum":" 1397","line":"        {"},
{"lineNum":" 1398","line":"            typedef proto::expr<Tag, list10<A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9>, 10> type;"},
{"lineNum":" 1399","line":"            typedef proto::basic_expr<Tag, list10<A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9>, 10> proto_grammar;"},
{"lineNum":" 1400","line":"            template<typename Expr, typename State, typename Data>"},
{"lineNum":" 1401","line":"            struct impl"},
{"lineNum":" 1402","line":"              : detail::pass_through_impl<nary_expr, deduce_domain, Expr, State, Data>"},
{"lineNum":" 1403","line":"            {};"},
{"lineNum":" 1404","line":""},
{"lineNum":" 1405","line":"            typedef Tag proto_tag;"},
{"lineNum":" 1406","line":"            typedef A0 proto_child0; typedef A1 proto_child1; typedef A2 proto_child2; typedef A3 proto_child3; typedef A4 proto_child4; typedef A5 proto_child5; typedef A6 proto_child6; typedef A7 proto_child7; typedef A8 proto_child8; typedef A9 proto_child9;"},
{"lineNum":" 1407","line":""},
{"lineNum":" 1408","line":"        };"},
{"lineNum":" 1409","line":"        namespace detail"},
{"lineNum":" 1410","line":"        {"},
{"lineNum":" 1411","line":"            template<"},
{"lineNum":" 1412","line":"                template<typename , typename , typename , typename , typename , typename , typename , typename , typename , typename> class T"},
{"lineNum":" 1413","line":"              , typename A0 , typename A1 , typename A2 , typename A3 , typename A4 , typename A5 , typename A6 , typename A7 , typename A8 , typename A9"},
{"lineNum":" 1414","line":"            >"},
{"lineNum":" 1415","line":"            struct is_callable_<T<A0 , A1 , A2 , A3 , A4 , A5 , A6 , A7 , A8 , A9> BOOST_PROTO_TEMPLATE_ARITY_PARAM(10)>"},
{"lineNum":" 1416","line":"              : is_same<A9, callable>"},
{"lineNum":" 1417","line":"            {};"},
{"lineNum":" 1418","line":"        }"},
{"lineNum":" 1419","line":"        namespace result_of"},
{"lineNum":" 1420","line":"        {"},
{"lineNum":" 1421","line":""},
{"lineNum":" 1422","line":""},
{"lineNum":" 1423","line":""},
{"lineNum":" 1424","line":""},
{"lineNum":" 1425","line":""},
{"lineNum":" 1426","line":""},
{"lineNum":" 1427","line":"            template<typename Expr>"},
{"lineNum":" 1428","line":"            struct child_c<Expr, 10>"},
{"lineNum":" 1429","line":"            {"},
{"lineNum":" 1430","line":""},
{"lineNum":" 1431","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":" 1432","line":""},
{"lineNum":" 1433","line":""},
{"lineNum":" 1434","line":"                typedef typename Expr::proto_child10 value_type;"},
{"lineNum":" 1435","line":""},
{"lineNum":" 1436","line":""},
{"lineNum":" 1437","line":""},
{"lineNum":" 1438","line":""},
{"lineNum":" 1439","line":""},
{"lineNum":" 1440","line":"                typedef typename detail::expr_traits<typename Expr::proto_child10>::value_type type;"},
{"lineNum":" 1441","line":"            };"},
{"lineNum":" 1442","line":"            template<typename Expr>"},
{"lineNum":" 1443","line":"            struct child_c<Expr &, 10>"},
{"lineNum":" 1444","line":"            {"},
{"lineNum":" 1445","line":""},
{"lineNum":" 1446","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":" 1447","line":""},
{"lineNum":" 1448","line":""},
{"lineNum":" 1449","line":"                typedef typename Expr::proto_child10 value_type;"},
{"lineNum":" 1450","line":""},
{"lineNum":" 1451","line":""},
{"lineNum":" 1452","line":""},
{"lineNum":" 1453","line":""},
{"lineNum":" 1454","line":""},
{"lineNum":" 1455","line":"                typedef typename detail::expr_traits<typename Expr::proto_child10>::reference type;"},
{"lineNum":" 1456","line":""},
{"lineNum":" 1457","line":""},
{"lineNum":" 1458","line":"                BOOST_FORCEINLINE"},
{"lineNum":" 1459","line":"                static type call(Expr &e)"},
{"lineNum":" 1460","line":"                {"},
{"lineNum":" 1461","line":"                    return e.proto_base().child10;"},
{"lineNum":" 1462","line":"                }"},
{"lineNum":" 1463","line":"            };"},
{"lineNum":" 1464","line":"            template<typename Expr>"},
{"lineNum":" 1465","line":"            struct child_c<Expr const &, 10>"},
{"lineNum":" 1466","line":"            {"},
{"lineNum":" 1467","line":""},
{"lineNum":" 1468","line":"                BOOST_STATIC_ASSERT(0 != Expr::proto_arity_c);"},
{"lineNum":" 1469","line":""},
{"lineNum":" 1470","line":""},
{"lineNum":" 1471","line":"                typedef typename Expr::proto_child10 value_type;"},
{"lineNum":" 1472","line":""},
{"lineNum":" 1473","line":""},
{"lineNum":" 1474","line":""},
{"lineNum":" 1475","line":""},
{"lineNum":" 1476","line":""},
{"lineNum":" 1477","line":"                typedef typename detail::expr_traits<typename Expr::proto_child10>::const_reference type;"},
{"lineNum":" 1478","line":""},
{"lineNum":" 1479","line":""},
{"lineNum":" 1480","line":"                BOOST_FORCEINLINE"},
{"lineNum":" 1481","line":"                static type call(Expr const &e)"},
{"lineNum":" 1482","line":"                {"},
{"lineNum":" 1483","line":"                    return e.proto_base().child10;"},
{"lineNum":" 1484","line":"                }"},
{"lineNum":" 1485","line":"            };"},
{"lineNum":" 1486","line":"        }"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:41", "instrumented" : 5, "covered" : 0,};
var merged_data = [];
