var data = {lines:[
{"lineNum":"    1","line":"// -*- C++ -*-"},
{"lineNum":"    2","line":"//===--------------------------- complex ----------------------------------===//"},
{"lineNum":"    3","line":"//"},
{"lineNum":"    4","line":"// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions."},
{"lineNum":"    5","line":"// See https://llvm.org/LICENSE.txt for license information."},
{"lineNum":"    6","line":"// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception"},
{"lineNum":"    7","line":"//"},
{"lineNum":"    8","line":"//===----------------------------------------------------------------------===//"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"#ifndef _LIBCPP_COMPLEX"},
{"lineNum":"   11","line":"#define _LIBCPP_COMPLEX"},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"/*"},
{"lineNum":"   14","line":"    complex synopsis"},
{"lineNum":"   15","line":""},
{"lineNum":"   16","line":"namespace std"},
{"lineNum":"   17","line":"{"},
{"lineNum":"   18","line":""},
{"lineNum":"   19","line":"template<class T>"},
{"lineNum":"   20","line":"class complex"},
{"lineNum":"   21","line":"{"},
{"lineNum":"   22","line":"public:"},
{"lineNum":"   23","line":"    typedef T value_type;"},
{"lineNum":"   24","line":""},
{"lineNum":"   25","line":"    complex(const T& re = T(), const T& im = T()); // constexpr in C++14"},
{"lineNum":"   26","line":"    complex(const complex&);  // constexpr in C++14"},
{"lineNum":"   27","line":"    template<class X> complex(const complex<X>&);  // constexpr in C++14"},
{"lineNum":"   28","line":""},
{"lineNum":"   29","line":"    T real() const; // constexpr in C++14"},
{"lineNum":"   30","line":"    T imag() const; // constexpr in C++14"},
{"lineNum":"   31","line":""},
{"lineNum":"   32","line":"    void real(T);"},
{"lineNum":"   33","line":"    void imag(T);"},
{"lineNum":"   34","line":""},
{"lineNum":"   35","line":"    complex<T>& operator= (const T&);"},
{"lineNum":"   36","line":"    complex<T>& operator+=(const T&);"},
{"lineNum":"   37","line":"    complex<T>& operator-=(const T&);"},
{"lineNum":"   38","line":"    complex<T>& operator*=(const T&);"},
{"lineNum":"   39","line":"    complex<T>& operator/=(const T&);"},
{"lineNum":"   40","line":""},
{"lineNum":"   41","line":"    complex& operator=(const complex&);"},
{"lineNum":"   42","line":"    template<class X> complex<T>& operator= (const complex<X>&);"},
{"lineNum":"   43","line":"    template<class X> complex<T>& operator+=(const complex<X>&);"},
{"lineNum":"   44","line":"    template<class X> complex<T>& operator-=(const complex<X>&);"},
{"lineNum":"   45","line":"    template<class X> complex<T>& operator*=(const complex<X>&);"},
{"lineNum":"   46","line":"    template<class X> complex<T>& operator/=(const complex<X>&);"},
{"lineNum":"   47","line":"};"},
{"lineNum":"   48","line":""},
{"lineNum":"   49","line":"template<>"},
{"lineNum":"   50","line":"class complex<float>"},
{"lineNum":"   51","line":"{"},
{"lineNum":"   52","line":"public:"},
{"lineNum":"   53","line":"    typedef float value_type;"},
{"lineNum":"   54","line":""},
{"lineNum":"   55","line":"    constexpr complex(float re = 0.0f, float im = 0.0f);"},
{"lineNum":"   56","line":"    explicit constexpr complex(const complex<double>&);"},
{"lineNum":"   57","line":"    explicit constexpr complex(const complex<long double>&);"},
{"lineNum":"   58","line":""},
{"lineNum":"   59","line":"    constexpr float real() const;"},
{"lineNum":"   60","line":"    void real(float);"},
{"lineNum":"   61","line":"    constexpr float imag() const;"},
{"lineNum":"   62","line":"    void imag(float);"},
{"lineNum":"   63","line":""},
{"lineNum":"   64","line":"    complex<float>& operator= (float);"},
{"lineNum":"   65","line":"    complex<float>& operator+=(float);"},
{"lineNum":"   66","line":"    complex<float>& operator-=(float);"},
{"lineNum":"   67","line":"    complex<float>& operator*=(float);"},
{"lineNum":"   68","line":"    complex<float>& operator/=(float);"},
{"lineNum":"   69","line":""},
{"lineNum":"   70","line":"    complex<float>& operator=(const complex<float>&);"},
{"lineNum":"   71","line":"    template<class X> complex<float>& operator= (const complex<X>&);"},
{"lineNum":"   72","line":"    template<class X> complex<float>& operator+=(const complex<X>&);"},
{"lineNum":"   73","line":"    template<class X> complex<float>& operator-=(const complex<X>&);"},
{"lineNum":"   74","line":"    template<class X> complex<float>& operator*=(const complex<X>&);"},
{"lineNum":"   75","line":"    template<class X> complex<float>& operator/=(const complex<X>&);"},
{"lineNum":"   76","line":"};"},
{"lineNum":"   77","line":""},
{"lineNum":"   78","line":"template<>"},
{"lineNum":"   79","line":"class complex<double>"},
{"lineNum":"   80","line":"{"},
{"lineNum":"   81","line":"public:"},
{"lineNum":"   82","line":"    typedef double value_type;"},
{"lineNum":"   83","line":""},
{"lineNum":"   84","line":"    constexpr complex(double re = 0.0, double im = 0.0);"},
{"lineNum":"   85","line":"    constexpr complex(const complex<float>&);"},
{"lineNum":"   86","line":"    explicit constexpr complex(const complex<long double>&);"},
{"lineNum":"   87","line":""},
{"lineNum":"   88","line":"    constexpr double real() const;"},
{"lineNum":"   89","line":"    void real(double);"},
{"lineNum":"   90","line":"    constexpr double imag() const;"},
{"lineNum":"   91","line":"    void imag(double);"},
{"lineNum":"   92","line":""},
{"lineNum":"   93","line":"    complex<double>& operator= (double);"},
{"lineNum":"   94","line":"    complex<double>& operator+=(double);"},
{"lineNum":"   95","line":"    complex<double>& operator-=(double);"},
{"lineNum":"   96","line":"    complex<double>& operator*=(double);"},
{"lineNum":"   97","line":"    complex<double>& operator/=(double);"},
{"lineNum":"   98","line":"    complex<double>& operator=(const complex<double>&);"},
{"lineNum":"   99","line":""},
{"lineNum":"  100","line":"    template<class X> complex<double>& operator= (const complex<X>&);"},
{"lineNum":"  101","line":"    template<class X> complex<double>& operator+=(const complex<X>&);"},
{"lineNum":"  102","line":"    template<class X> complex<double>& operator-=(const complex<X>&);"},
{"lineNum":"  103","line":"    template<class X> complex<double>& operator*=(const complex<X>&);"},
{"lineNum":"  104","line":"    template<class X> complex<double>& operator/=(const complex<X>&);"},
{"lineNum":"  105","line":"};"},
{"lineNum":"  106","line":""},
{"lineNum":"  107","line":"template<>"},
{"lineNum":"  108","line":"class complex<long double>"},
{"lineNum":"  109","line":"{"},
{"lineNum":"  110","line":"public:"},
{"lineNum":"  111","line":"    typedef long double value_type;"},
{"lineNum":"  112","line":""},
{"lineNum":"  113","line":"    constexpr complex(long double re = 0.0L, long double im = 0.0L);"},
{"lineNum":"  114","line":"    constexpr complex(const complex<float>&);"},
{"lineNum":"  115","line":"    constexpr complex(const complex<double>&);"},
{"lineNum":"  116","line":""},
{"lineNum":"  117","line":"    constexpr long double real() const;"},
{"lineNum":"  118","line":"    void real(long double);"},
{"lineNum":"  119","line":"    constexpr long double imag() const;"},
{"lineNum":"  120","line":"    void imag(long double);"},
{"lineNum":"  121","line":""},
{"lineNum":"  122","line":"    complex<long double>& operator=(const complex<long double>&);"},
{"lineNum":"  123","line":"    complex<long double>& operator= (long double);"},
{"lineNum":"  124","line":"    complex<long double>& operator+=(long double);"},
{"lineNum":"  125","line":"    complex<long double>& operator-=(long double);"},
{"lineNum":"  126","line":"    complex<long double>& operator*=(long double);"},
{"lineNum":"  127","line":"    complex<long double>& operator/=(long double);"},
{"lineNum":"  128","line":""},
{"lineNum":"  129","line":"    template<class X> complex<long double>& operator= (const complex<X>&);"},
{"lineNum":"  130","line":"    template<class X> complex<long double>& operator+=(const complex<X>&);"},
{"lineNum":"  131","line":"    template<class X> complex<long double>& operator-=(const complex<X>&);"},
{"lineNum":"  132","line":"    template<class X> complex<long double>& operator*=(const complex<X>&);"},
{"lineNum":"  133","line":"    template<class X> complex<long double>& operator/=(const complex<X>&);"},
{"lineNum":"  134","line":"};"},
{"lineNum":"  135","line":""},
{"lineNum":"  136","line":"// 26.3.6 operators:"},
{"lineNum":"  137","line":"template<class T> complex<T> operator+(const complex<T>&, const complex<T>&);"},
{"lineNum":"  138","line":"template<class T> complex<T> operator+(const complex<T>&, const T&);"},
{"lineNum":"  139","line":"template<class T> complex<T> operator+(const T&, const complex<T>&);"},
{"lineNum":"  140","line":"template<class T> complex<T> operator-(const complex<T>&, const complex<T>&);"},
{"lineNum":"  141","line":"template<class T> complex<T> operator-(const complex<T>&, const T&);"},
{"lineNum":"  142","line":"template<class T> complex<T> operator-(const T&, const complex<T>&);"},
{"lineNum":"  143","line":"template<class T> complex<T> operator*(const complex<T>&, const complex<T>&);"},
{"lineNum":"  144","line":"template<class T> complex<T> operator*(const complex<T>&, const T&);"},
{"lineNum":"  145","line":"template<class T> complex<T> operator*(const T&, const complex<T>&);"},
{"lineNum":"  146","line":"template<class T> complex<T> operator/(const complex<T>&, const complex<T>&);"},
{"lineNum":"  147","line":"template<class T> complex<T> operator/(const complex<T>&, const T&);"},
{"lineNum":"  148","line":"template<class T> complex<T> operator/(const T&, const complex<T>&);"},
{"lineNum":"  149","line":"template<class T> complex<T> operator+(const complex<T>&);"},
{"lineNum":"  150","line":"template<class T> complex<T> operator-(const complex<T>&);"},
{"lineNum":"  151","line":"template<class T> bool operator==(const complex<T>&, const complex<T>&); // constexpr in C++14"},
{"lineNum":"  152","line":"template<class T> bool operator==(const complex<T>&, const T&); // constexpr in C++14"},
{"lineNum":"  153","line":"template<class T> bool operator==(const T&, const complex<T>&); // constexpr in C++14"},
{"lineNum":"  154","line":"template<class T> bool operator!=(const complex<T>&, const complex<T>&); // constexpr in C++14"},
{"lineNum":"  155","line":"template<class T> bool operator!=(const complex<T>&, const T&); // constexpr in C++14"},
{"lineNum":"  156","line":"template<class T> bool operator!=(const T&, const complex<T>&); // constexpr in C++14"},
{"lineNum":"  157","line":""},
{"lineNum":"  158","line":"template<class T, class charT, class traits>"},
{"lineNum":"  159","line":"  basic_istream<charT, traits>&"},
{"lineNum":"  160","line":"  operator>>(basic_istream<charT, traits>&, complex<T>&);"},
{"lineNum":"  161","line":"template<class T, class charT, class traits>"},
{"lineNum":"  162","line":"  basic_ostream<charT, traits>&"},
{"lineNum":"  163","line":"  operator<<(basic_ostream<charT, traits>&, const complex<T>&);"},
{"lineNum":"  164","line":""},
{"lineNum":"  165","line":"// 26.3.7 values:"},
{"lineNum":"  166","line":""},
{"lineNum":"  167","line":"template<class T>              T real(const complex<T>&); // constexpr in C++14"},
{"lineNum":"  168","line":"                     long double real(long double);       // constexpr in C++14"},
{"lineNum":"  169","line":"                          double real(double);            // constexpr in C++14"},
{"lineNum":"  170","line":"template<Integral T>      double real(T);                 // constexpr in C++14"},
{"lineNum":"  171","line":"                          float  real(float);             // constexpr in C++14"},
{"lineNum":"  172","line":""},
{"lineNum":"  173","line":"template<class T>              T imag(const complex<T>&); // constexpr in C++14"},
{"lineNum":"  174","line":"                     long double imag(long double);       // constexpr in C++14"},
{"lineNum":"  175","line":"                          double imag(double);            // constexpr in C++14"},
{"lineNum":"  176","line":"template<Integral T>      double imag(T);                 // constexpr in C++14"},
{"lineNum":"  177","line":"                          float  imag(float);             // constexpr in C++14"},
{"lineNum":"  178","line":""},
{"lineNum":"  179","line":"template<class T> T abs(const complex<T>&);"},
{"lineNum":"  180","line":""},
{"lineNum":"  181","line":"template<class T>              T arg(const complex<T>&);"},
{"lineNum":"  182","line":"                     long double arg(long double);"},
{"lineNum":"  183","line":"                          double arg(double);"},
{"lineNum":"  184","line":"template<Integral T>      double arg(T);"},
{"lineNum":"  185","line":"                          float  arg(float);"},
{"lineNum":"  186","line":""},
{"lineNum":"  187","line":"template<class T>              T norm(const complex<T>&);"},
{"lineNum":"  188","line":"                     long double norm(long double);"},
{"lineNum":"  189","line":"                          double norm(double);"},
{"lineNum":"  190","line":"template<Integral T>      double norm(T);"},
{"lineNum":"  191","line":"                          float  norm(float);"},
{"lineNum":"  192","line":""},
{"lineNum":"  193","line":"template<class T>      complex<T>           conj(const complex<T>&);"},
{"lineNum":"  194","line":"                       complex<long double> conj(long double);"},
{"lineNum":"  195","line":"                       complex<double>      conj(double);"},
{"lineNum":"  196","line":"template<Integral T>   complex<double>      conj(T);"},
{"lineNum":"  197","line":"                       complex<float>       conj(float);"},
{"lineNum":"  198","line":""},
{"lineNum":"  199","line":"template<class T>    complex<T>           proj(const complex<T>&);"},
{"lineNum":"  200","line":"                     complex<long double> proj(long double);"},
{"lineNum":"  201","line":"                     complex<double>      proj(double);"},
{"lineNum":"  202","line":"template<Integral T> complex<double>      proj(T);"},
{"lineNum":"  203","line":"                     complex<float>       proj(float);"},
{"lineNum":"  204","line":""},
{"lineNum":"  205","line":"template<class T> complex<T> polar(const T&, const T& = T());"},
{"lineNum":"  206","line":""},
{"lineNum":"  207","line":"// 26.3.8 transcendentals:"},
{"lineNum":"  208","line":"template<class T> complex<T> acos(const complex<T>&);"},
{"lineNum":"  209","line":"template<class T> complex<T> asin(const complex<T>&);"},
{"lineNum":"  210","line":"template<class T> complex<T> atan(const complex<T>&);"},
{"lineNum":"  211","line":"template<class T> complex<T> acosh(const complex<T>&);"},
{"lineNum":"  212","line":"template<class T> complex<T> asinh(const complex<T>&);"},
{"lineNum":"  213","line":"template<class T> complex<T> atanh(const complex<T>&);"},
{"lineNum":"  214","line":"template<class T> complex<T> cos (const complex<T>&);"},
{"lineNum":"  215","line":"template<class T> complex<T> cosh (const complex<T>&);"},
{"lineNum":"  216","line":"template<class T> complex<T> exp (const complex<T>&);"},
{"lineNum":"  217","line":"template<class T> complex<T> log (const complex<T>&);"},
{"lineNum":"  218","line":"template<class T> complex<T> log10(const complex<T>&);"},
{"lineNum":"  219","line":""},
{"lineNum":"  220","line":"template<class T> complex<T> pow(const complex<T>&, const T&);"},
{"lineNum":"  221","line":"template<class T> complex<T> pow(const complex<T>&, const complex<T>&);"},
{"lineNum":"  222","line":"template<class T> complex<T> pow(const T&, const complex<T>&);"},
{"lineNum":"  223","line":""},
{"lineNum":"  224","line":"template<class T> complex<T> sin (const complex<T>&);"},
{"lineNum":"  225","line":"template<class T> complex<T> sinh (const complex<T>&);"},
{"lineNum":"  226","line":"template<class T> complex<T> sqrt (const complex<T>&);"},
{"lineNum":"  227","line":"template<class T> complex<T> tan (const complex<T>&);"},
{"lineNum":"  228","line":"template<class T> complex<T> tanh (const complex<T>&);"},
{"lineNum":"  229","line":""},
{"lineNum":"  230","line":"}  // std"},
{"lineNum":"  231","line":""},
{"lineNum":"  232","line":"*/"},
{"lineNum":"  233","line":""},
{"lineNum":"  234","line":"#include <__config>"},
{"lineNum":"  235","line":"#include <cmath>"},
{"lineNum":"  236","line":"#include <iosfwd>"},
{"lineNum":"  237","line":"#include <stdexcept>"},
{"lineNum":"  238","line":"#include <type_traits>"},
{"lineNum":"  239","line":"#include <version>"},
{"lineNum":"  240","line":""},
{"lineNum":"  241","line":"#if !defined(_LIBCPP_HAS_NO_LOCALIZATION)"},
{"lineNum":"  242","line":"#   include <sstream> // for std::basic_ostringstream"},
{"lineNum":"  243","line":"#endif"},
{"lineNum":"  244","line":""},
{"lineNum":"  245","line":"#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)"},
{"lineNum":"  246","line":"#pragma GCC system_header"},
{"lineNum":"  247","line":"#endif"},
{"lineNum":"  248","line":""},
{"lineNum":"  249","line":"_LIBCPP_BEGIN_NAMESPACE_STD"},
{"lineNum":"  250","line":""},
{"lineNum":"  251","line":"template<class _Tp> class _LIBCPP_TEMPLATE_VIS complex;"},
{"lineNum":"  252","line":""},
{"lineNum":"  253","line":"template<class _Tp> complex<_Tp> operator*(const complex<_Tp>& __z, const complex<_Tp>& __w);"},
{"lineNum":"  254","line":"template<class _Tp> complex<_Tp> operator/(const complex<_Tp>& __x, const complex<_Tp>& __y);"},
{"lineNum":"  255","line":""},
{"lineNum":"  256","line":"template<class _Tp>"},
{"lineNum":"  257","line":"class _LIBCPP_TEMPLATE_VIS complex"},
{"lineNum":"  258","line":"{"},
{"lineNum":"  259","line":"public:"},
{"lineNum":"  260","line":"    typedef _Tp value_type;"},
{"lineNum":"  261","line":"private:"},
{"lineNum":"  262","line":"    value_type __re_;"},
{"lineNum":"  263","line":"    value_type __im_;"},
{"lineNum":"  264","line":"public:"},
{"lineNum":"  265","line":"    _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX11"},
{"lineNum":"  266","line":"    complex(const value_type& __re = value_type(), const value_type& __im = value_type())"},
{"lineNum":"  267","line":"        : __re_(__re), __im_(__im) {}"},
{"lineNum":"  268","line":"    template<class _Xp> _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX11"},
{"lineNum":"  269","line":"    complex(const complex<_Xp>& __c)"},
{"lineNum":"  270","line":"        : __re_(__c.real()), __im_(__c.imag()) {}"},
{"lineNum":"  271","line":""},
{"lineNum":"  272","line":"    _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX11 value_type real() const {return __re_;}"},
{"lineNum":"  273","line":"    _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX11 value_type imag() const {return __im_;}"},
{"lineNum":"  274","line":""},
{"lineNum":"  275","line":"    _LIBCPP_INLINE_VISIBILITY void real(value_type __re) {__re_ = __re;}"},
{"lineNum":"  276","line":"    _LIBCPP_INLINE_VISIBILITY void imag(value_type __im) {__im_ = __im;}"},
{"lineNum":"  277","line":""},
{"lineNum":"  278","line":"    _LIBCPP_INLINE_VISIBILITY complex& operator= (const value_type& __re)"},
{"lineNum":"  279","line":"        {__re_ = __re; __im_ = value_type(); return *this;}"},
{"lineNum":"  280","line":"    _LIBCPP_INLINE_VISIBILITY complex& operator+=(const value_type& __re) {__re_ += __re; return *this;}"},
{"lineNum":"  281","line":"    _LIBCPP_INLINE_VISIBILITY complex& operator-=(const value_type& __re) {__re_ -= __re; return *this;}"},
{"lineNum":"  282","line":"    _LIBCPP_INLINE_VISIBILITY complex& operator*=(const value_type& __re) {__re_ *= __re; __im_ *= __re; return *this;}"},
{"lineNum":"  283","line":"    _LIBCPP_INLINE_VISIBILITY complex& operator/=(const value_type& __re) {__re_ /= __re; __im_ /= __re; return *this;}"},
{"lineNum":"  284","line":""},
{"lineNum":"  285","line":"    template<class _Xp> _LIBCPP_INLINE_VISIBILITY complex& operator= (const complex<_Xp>& __c)"},
{"lineNum":"  286","line":"        {"},
{"lineNum":"  287","line":"            __re_ = __c.real();"},
{"lineNum":"  288","line":"            __im_ = __c.imag();"},
{"lineNum":"  289","line":"            return *this;"},
{"lineNum":"  290","line":"        }"},
{"lineNum":"  291","line":"    template<class _Xp> _LIBCPP_INLINE_VISIBILITY complex& operator+=(const complex<_Xp>& __c)"},
{"lineNum":"  292","line":"        {"},
{"lineNum":"  293","line":"            __re_ += __c.real();"},
{"lineNum":"  294","line":"            __im_ += __c.imag();"},
{"lineNum":"  295","line":"            return *this;"},
{"lineNum":"  296","line":"        }"},
{"lineNum":"  297","line":"    template<class _Xp> _LIBCPP_INLINE_VISIBILITY complex& operator-=(const complex<_Xp>& __c)"},
{"lineNum":"  298","line":"        {"},
{"lineNum":"  299","line":"            __re_ -= __c.real();"},
{"lineNum":"  300","line":"            __im_ -= __c.imag();"},
{"lineNum":"  301","line":"            return *this;"},
{"lineNum":"  302","line":"        }"},
{"lineNum":"  303","line":"    template<class _Xp> _LIBCPP_INLINE_VISIBILITY complex& operator*=(const complex<_Xp>& __c)"},
{"lineNum":"  304","line":"        {"},
{"lineNum":"  305","line":"            *this = *this * complex(__c.real(), __c.imag());"},
{"lineNum":"  306","line":"            return *this;"},
{"lineNum":"  307","line":"        }"},
{"lineNum":"  308","line":"    template<class _Xp> _LIBCPP_INLINE_VISIBILITY complex& operator/=(const complex<_Xp>& __c)"},
{"lineNum":"  309","line":"        {"},
{"lineNum":"  310","line":"            *this = *this / complex(__c.real(), __c.imag());"},
{"lineNum":"  311","line":"            return *this;"},
{"lineNum":"  312","line":"        }"},
{"lineNum":"  313","line":"};"},
{"lineNum":"  314","line":""},
{"lineNum":"  315","line":"template<> class _LIBCPP_TEMPLATE_VIS complex<double>;"},
{"lineNum":"  316","line":"template<> class _LIBCPP_TEMPLATE_VIS complex<long double>;"},
{"lineNum":"  317","line":""},
{"lineNum":"  318","line":"template<>"},
{"lineNum":"  319","line":"class _LIBCPP_TEMPLATE_VIS complex<float>"},
{"lineNum":"  320","line":"{"},
{"lineNum":"  321","line":"    float __re_;"},
{"lineNum":"  322","line":"    float __im_;"},
{"lineNum":"  323","line":"public:"},
{"lineNum":"  324","line":"    typedef float value_type;"},
{"lineNum":"  325","line":""},
{"lineNum":"  326","line":"    _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR complex(float __re = 0.0f, float __im = 0.0f)"},
{"lineNum":"  327","line":"        : __re_(__re), __im_(__im) {}"},
{"lineNum":"  328","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  329","line":"    explicit _LIBCPP_CONSTEXPR complex(const complex<double>& __c);"},
{"lineNum":"  330","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  331","line":"    explicit _LIBCPP_CONSTEXPR complex(const complex<long double>& __c);"},
{"lineNum":"  332","line":""},
{"lineNum":"  333","line":"    _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR float real() const {return __re_;}"},
{"lineNum":"  334","line":"    _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR float imag() const {return __im_;}"},
{"lineNum":"  335","line":""},
{"lineNum":"  336","line":"    _LIBCPP_INLINE_VISIBILITY void real(value_type __re) {__re_ = __re;}"},
{"lineNum":"  337","line":"    _LIBCPP_INLINE_VISIBILITY void imag(value_type __im) {__im_ = __im;}"},
{"lineNum":"  338","line":""},
{"lineNum":"  339","line":"    _LIBCPP_INLINE_VISIBILITY complex& operator= (float __re)"},
{"lineNum":"  340","line":"        {__re_ = __re; __im_ = value_type(); return *this;}"},
{"lineNum":"  341","line":"    _LIBCPP_INLINE_VISIBILITY complex& operator+=(float __re) {__re_ += __re; return *this;}"},
{"lineNum":"  342","line":"    _LIBCPP_INLINE_VISIBILITY complex& operator-=(float __re) {__re_ -= __re; return *this;}"},
{"lineNum":"  343","line":"    _LIBCPP_INLINE_VISIBILITY complex& operator*=(float __re) {__re_ *= __re; __im_ *= __re; return *this;}"},
{"lineNum":"  344","line":"    _LIBCPP_INLINE_VISIBILITY complex& operator/=(float __re) {__re_ /= __re; __im_ /= __re; return *this;}"},
{"lineNum":"  345","line":""},
{"lineNum":"  346","line":"    template<class _Xp> _LIBCPP_INLINE_VISIBILITY complex& operator= (const complex<_Xp>& __c)"},
{"lineNum":"  347","line":"        {"},
{"lineNum":"  348","line":"            __re_ = __c.real();"},
{"lineNum":"  349","line":"            __im_ = __c.imag();"},
{"lineNum":"  350","line":"            return *this;"},
{"lineNum":"  351","line":"        }"},
{"lineNum":"  352","line":"    template<class _Xp> _LIBCPP_INLINE_VISIBILITY complex& operator+=(const complex<_Xp>& __c)"},
{"lineNum":"  353","line":"        {"},
{"lineNum":"  354","line":"            __re_ += __c.real();"},
{"lineNum":"  355","line":"            __im_ += __c.imag();"},
{"lineNum":"  356","line":"            return *this;"},
{"lineNum":"  357","line":"        }"},
{"lineNum":"  358","line":"    template<class _Xp> _LIBCPP_INLINE_VISIBILITY complex& operator-=(const complex<_Xp>& __c)"},
{"lineNum":"  359","line":"        {"},
{"lineNum":"  360","line":"            __re_ -= __c.real();"},
{"lineNum":"  361","line":"            __im_ -= __c.imag();"},
{"lineNum":"  362","line":"            return *this;"},
{"lineNum":"  363","line":"        }"},
{"lineNum":"  364","line":"    template<class _Xp> _LIBCPP_INLINE_VISIBILITY complex& operator*=(const complex<_Xp>& __c)"},
{"lineNum":"  365","line":"        {"},
{"lineNum":"  366","line":"            *this = *this * complex(__c.real(), __c.imag());"},
{"lineNum":"  367","line":"            return *this;"},
{"lineNum":"  368","line":"        }"},
{"lineNum":"  369","line":"    template<class _Xp> _LIBCPP_INLINE_VISIBILITY complex& operator/=(const complex<_Xp>& __c)"},
{"lineNum":"  370","line":"        {"},
{"lineNum":"  371","line":"            *this = *this / complex(__c.real(), __c.imag());"},
{"lineNum":"  372","line":"            return *this;"},
{"lineNum":"  373","line":"        }"},
{"lineNum":"  374","line":"};"},
{"lineNum":"  375","line":""},
{"lineNum":"  376","line":"template<>"},
{"lineNum":"  377","line":"class _LIBCPP_TEMPLATE_VIS complex<double>"},
{"lineNum":"  378","line":"{"},
{"lineNum":"  379","line":"    double __re_;"},
{"lineNum":"  380","line":"    double __im_;"},
{"lineNum":"  381","line":"public:"},
{"lineNum":"  382","line":"    typedef double value_type;"},
{"lineNum":"  383","line":""},
{"lineNum":"  384","line":"    _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR complex(double __re = 0.0, double __im = 0.0)"},
{"lineNum":"  385","line":"        : __re_(__re), __im_(__im) {}","class":"lineNoCov","hits":"0","possible_hits":"35",},
{"lineNum":"  386","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  387","line":"    _LIBCPP_CONSTEXPR complex(const complex<float>& __c);"},
{"lineNum":"  388","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  389","line":"    explicit _LIBCPP_CONSTEXPR complex(const complex<long double>& __c);"},
{"lineNum":"  390","line":""},
{"lineNum":"  391","line":"    _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR double real() const {return __re_;}","class":"lineNoCov","hits":"0","possible_hits":"46",},
{"lineNum":"  392","line":"    _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR double imag() const {return __im_;}","class":"lineNoCov","hits":"0","possible_hits":"25",},
{"lineNum":"  393","line":""},
{"lineNum":"  394","line":"    _LIBCPP_INLINE_VISIBILITY void real(value_type __re) {__re_ = __re;}"},
{"lineNum":"  395","line":"    _LIBCPP_INLINE_VISIBILITY void imag(value_type __im) {__im_ = __im;}"},
{"lineNum":"  396","line":""},
{"lineNum":"  397","line":"    _LIBCPP_INLINE_VISIBILITY complex& operator= (double __re)"},
{"lineNum":"  398","line":"        {__re_ = __re; __im_ = value_type(); return *this;}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  399","line":"    _LIBCPP_INLINE_VISIBILITY complex& operator+=(double __re) {__re_ += __re; return *this;}"},
{"lineNum":"  400","line":"    _LIBCPP_INLINE_VISIBILITY complex& operator-=(double __re) {__re_ -= __re; return *this;}"},
{"lineNum":"  401","line":"    _LIBCPP_INLINE_VISIBILITY complex& operator*=(double __re) {__re_ *= __re; __im_ *= __re; return *this;}"},
{"lineNum":"  402","line":"    _LIBCPP_INLINE_VISIBILITY complex& operator/=(double __re) {__re_ /= __re; __im_ /= __re; return *this;}"},
{"lineNum":"  403","line":""},
{"lineNum":"  404","line":"    template<class _Xp> _LIBCPP_INLINE_VISIBILITY complex& operator= (const complex<_Xp>& __c)"},
{"lineNum":"  405","line":"        {"},
{"lineNum":"  406","line":"            __re_ = __c.real();"},
{"lineNum":"  407","line":"            __im_ = __c.imag();"},
{"lineNum":"  408","line":"            return *this;"},
{"lineNum":"  409","line":"        }"},
{"lineNum":"  410","line":"    template<class _Xp> _LIBCPP_INLINE_VISIBILITY complex& operator+=(const complex<_Xp>& __c)"},
{"lineNum":"  411","line":"        {"},
{"lineNum":"  412","line":"            __re_ += __c.real();","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  413","line":"            __im_ += __c.imag();"},
{"lineNum":"  414","line":"            return *this;"},
{"lineNum":"  415","line":"        }"},
{"lineNum":"  416","line":"    template<class _Xp> _LIBCPP_INLINE_VISIBILITY complex& operator-=(const complex<_Xp>& __c)"},
{"lineNum":"  417","line":"        {"},
{"lineNum":"  418","line":"            __re_ -= __c.real();","class":"lineNoCov","hits":"0","possible_hits":"8",},
{"lineNum":"  419","line":"            __im_ -= __c.imag();","class":"lineNoCov","hits":"0","possible_hits":"8",},
{"lineNum":"  420","line":"            return *this;"},
{"lineNum":"  421","line":"        }"},
{"lineNum":"  422","line":"    template<class _Xp> _LIBCPP_INLINE_VISIBILITY complex& operator*=(const complex<_Xp>& __c)"},
{"lineNum":"  423","line":"        {"},
{"lineNum":"  424","line":"            *this = *this * complex(__c.real(), __c.imag());","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  425","line":"            return *this;"},
{"lineNum":"  426","line":"        }"},
{"lineNum":"  427","line":"    template<class _Xp> _LIBCPP_INLINE_VISIBILITY complex& operator/=(const complex<_Xp>& __c)"},
{"lineNum":"  428","line":"        {"},
{"lineNum":"  429","line":"            *this = *this / complex(__c.real(), __c.imag());","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":"  430","line":"            return *this;"},
{"lineNum":"  431","line":"        }"},
{"lineNum":"  432","line":"};"},
{"lineNum":"  433","line":""},
{"lineNum":"  434","line":"template<>"},
{"lineNum":"  435","line":"class _LIBCPP_TEMPLATE_VIS complex<long double>"},
{"lineNum":"  436","line":"{"},
{"lineNum":"  437","line":"    long double __re_;"},
{"lineNum":"  438","line":"    long double __im_;"},
{"lineNum":"  439","line":"public:"},
{"lineNum":"  440","line":"    typedef long double value_type;"},
{"lineNum":"  441","line":""},
{"lineNum":"  442","line":"    _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR complex(long double __re = 0.0L, long double __im = 0.0L)"},
{"lineNum":"  443","line":"        : __re_(__re), __im_(__im) {}"},
{"lineNum":"  444","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  445","line":"    _LIBCPP_CONSTEXPR complex(const complex<float>& __c);"},
{"lineNum":"  446","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  447","line":"    _LIBCPP_CONSTEXPR complex(const complex<double>& __c);"},
{"lineNum":"  448","line":""},
{"lineNum":"  449","line":"    _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR long double real() const {return __re_;}"},
{"lineNum":"  450","line":"    _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR long double imag() const {return __im_;}"},
{"lineNum":"  451","line":""},
{"lineNum":"  452","line":"    _LIBCPP_INLINE_VISIBILITY void real(value_type __re) {__re_ = __re;}"},
{"lineNum":"  453","line":"    _LIBCPP_INLINE_VISIBILITY void imag(value_type __im) {__im_ = __im;}"},
{"lineNum":"  454","line":""},
{"lineNum":"  455","line":"    _LIBCPP_INLINE_VISIBILITY complex& operator= (long double __re)"},
{"lineNum":"  456","line":"        {__re_ = __re; __im_ = value_type(); return *this;}"},
{"lineNum":"  457","line":"    _LIBCPP_INLINE_VISIBILITY complex& operator+=(long double __re) {__re_ += __re; return *this;}"},
{"lineNum":"  458","line":"    _LIBCPP_INLINE_VISIBILITY complex& operator-=(long double __re) {__re_ -= __re; return *this;}"},
{"lineNum":"  459","line":"    _LIBCPP_INLINE_VISIBILITY complex& operator*=(long double __re) {__re_ *= __re; __im_ *= __re; return *this;}"},
{"lineNum":"  460","line":"    _LIBCPP_INLINE_VISIBILITY complex& operator/=(long double __re) {__re_ /= __re; __im_ /= __re; return *this;}"},
{"lineNum":"  461","line":""},
{"lineNum":"  462","line":"    template<class _Xp> _LIBCPP_INLINE_VISIBILITY complex& operator= (const complex<_Xp>& __c)"},
{"lineNum":"  463","line":"        {"},
{"lineNum":"  464","line":"            __re_ = __c.real();"},
{"lineNum":"  465","line":"            __im_ = __c.imag();"},
{"lineNum":"  466","line":"            return *this;"},
{"lineNum":"  467","line":"        }"},
{"lineNum":"  468","line":"    template<class _Xp> _LIBCPP_INLINE_VISIBILITY complex& operator+=(const complex<_Xp>& __c)"},
{"lineNum":"  469","line":"        {"},
{"lineNum":"  470","line":"            __re_ += __c.real();"},
{"lineNum":"  471","line":"            __im_ += __c.imag();"},
{"lineNum":"  472","line":"            return *this;"},
{"lineNum":"  473","line":"        }"},
{"lineNum":"  474","line":"    template<class _Xp> _LIBCPP_INLINE_VISIBILITY complex& operator-=(const complex<_Xp>& __c)"},
{"lineNum":"  475","line":"        {"},
{"lineNum":"  476","line":"            __re_ -= __c.real();"},
{"lineNum":"  477","line":"            __im_ -= __c.imag();"},
{"lineNum":"  478","line":"            return *this;"},
{"lineNum":"  479","line":"        }"},
{"lineNum":"  480","line":"    template<class _Xp> _LIBCPP_INLINE_VISIBILITY complex& operator*=(const complex<_Xp>& __c)"},
{"lineNum":"  481","line":"        {"},
{"lineNum":"  482","line":"            *this = *this * complex(__c.real(), __c.imag());"},
{"lineNum":"  483","line":"            return *this;"},
{"lineNum":"  484","line":"        }"},
{"lineNum":"  485","line":"    template<class _Xp> _LIBCPP_INLINE_VISIBILITY complex& operator/=(const complex<_Xp>& __c)"},
{"lineNum":"  486","line":"        {"},
{"lineNum":"  487","line":"            *this = *this / complex(__c.real(), __c.imag());"},
{"lineNum":"  488","line":"            return *this;"},
{"lineNum":"  489","line":"        }"},
{"lineNum":"  490","line":"};"},
{"lineNum":"  491","line":""},
{"lineNum":"  492","line":"inline"},
{"lineNum":"  493","line":"_LIBCPP_CONSTEXPR"},
{"lineNum":"  494","line":"complex<float>::complex(const complex<double>& __c)"},
{"lineNum":"  495","line":"    : __re_(__c.real()), __im_(__c.imag()) {}"},
{"lineNum":"  496","line":""},
{"lineNum":"  497","line":"inline"},
{"lineNum":"  498","line":"_LIBCPP_CONSTEXPR"},
{"lineNum":"  499","line":"complex<float>::complex(const complex<long double>& __c)"},
{"lineNum":"  500","line":"    : __re_(__c.real()), __im_(__c.imag()) {}"},
{"lineNum":"  501","line":""},
{"lineNum":"  502","line":"inline"},
{"lineNum":"  503","line":"_LIBCPP_CONSTEXPR"},
{"lineNum":"  504","line":"complex<double>::complex(const complex<float>& __c)"},
{"lineNum":"  505","line":"    : __re_(__c.real()), __im_(__c.imag()) {}"},
{"lineNum":"  506","line":""},
{"lineNum":"  507","line":"inline"},
{"lineNum":"  508","line":"_LIBCPP_CONSTEXPR"},
{"lineNum":"  509","line":"complex<double>::complex(const complex<long double>& __c)"},
{"lineNum":"  510","line":"    : __re_(__c.real()), __im_(__c.imag()) {}"},
{"lineNum":"  511","line":""},
{"lineNum":"  512","line":"inline"},
{"lineNum":"  513","line":"_LIBCPP_CONSTEXPR"},
{"lineNum":"  514","line":"complex<long double>::complex(const complex<float>& __c)"},
{"lineNum":"  515","line":"    : __re_(__c.real()), __im_(__c.imag()) {}"},
{"lineNum":"  516","line":""},
{"lineNum":"  517","line":"inline"},
{"lineNum":"  518","line":"_LIBCPP_CONSTEXPR"},
{"lineNum":"  519","line":"complex<long double>::complex(const complex<double>& __c)"},
{"lineNum":"  520","line":"    : __re_(__c.real()), __im_(__c.imag()) {}"},
{"lineNum":"  521","line":""},
{"lineNum":"  522","line":"// 26.3.6 operators:"},
{"lineNum":"  523","line":""},
{"lineNum":"  524","line":"template<class _Tp>"},
{"lineNum":"  525","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  526","line":"complex<_Tp>"},
{"lineNum":"  527","line":"operator+(const complex<_Tp>& __x, const complex<_Tp>& __y)"},
{"lineNum":"  528","line":"{"},
{"lineNum":"  529","line":"    complex<_Tp> __t(__x);","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  530","line":"    __t += __y;"},
{"lineNum":"  531","line":"    return __t;"},
{"lineNum":"  532","line":"}"},
{"lineNum":"  533","line":""},
{"lineNum":"  534","line":"template<class _Tp>"},
{"lineNum":"  535","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  536","line":"complex<_Tp>"},
{"lineNum":"  537","line":"operator+(const complex<_Tp>& __x, const _Tp& __y)"},
{"lineNum":"  538","line":"{"},
{"lineNum":"  539","line":"    complex<_Tp> __t(__x);"},
{"lineNum":"  540","line":"    __t += __y;"},
{"lineNum":"  541","line":"    return __t;"},
{"lineNum":"  542","line":"}"},
{"lineNum":"  543","line":""},
{"lineNum":"  544","line":"template<class _Tp>"},
{"lineNum":"  545","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  546","line":"complex<_Tp>"},
{"lineNum":"  547","line":"operator+(const _Tp& __x, const complex<_Tp>& __y)"},
{"lineNum":"  548","line":"{"},
{"lineNum":"  549","line":"    complex<_Tp> __t(__y);"},
{"lineNum":"  550","line":"    __t += __x;"},
{"lineNum":"  551","line":"    return __t;"},
{"lineNum":"  552","line":"}"},
{"lineNum":"  553","line":""},
{"lineNum":"  554","line":"template<class _Tp>"},
{"lineNum":"  555","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  556","line":"complex<_Tp>"},
{"lineNum":"  557","line":"operator-(const complex<_Tp>& __x, const complex<_Tp>& __y)"},
{"lineNum":"  558","line":"{"},
{"lineNum":"  559","line":"    complex<_Tp> __t(__x);"},
{"lineNum":"  560","line":"    __t -= __y;"},
{"lineNum":"  561","line":"    return __t;"},
{"lineNum":"  562","line":"}"},
{"lineNum":"  563","line":""},
{"lineNum":"  564","line":"template<class _Tp>"},
{"lineNum":"  565","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  566","line":"complex<_Tp>"},
{"lineNum":"  567","line":"operator-(const complex<_Tp>& __x, const _Tp& __y)"},
{"lineNum":"  568","line":"{"},
{"lineNum":"  569","line":"    complex<_Tp> __t(__x);"},
{"lineNum":"  570","line":"    __t -= __y;"},
{"lineNum":"  571","line":"    return __t;"},
{"lineNum":"  572","line":"}"},
{"lineNum":"  573","line":""},
{"lineNum":"  574","line":"template<class _Tp>"},
{"lineNum":"  575","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  576","line":"complex<_Tp>"},
{"lineNum":"  577","line":"operator-(const _Tp& __x, const complex<_Tp>& __y)"},
{"lineNum":"  578","line":"{"},
{"lineNum":"  579","line":"    complex<_Tp> __t(-__y);"},
{"lineNum":"  580","line":"    __t += __x;"},
{"lineNum":"  581","line":"    return __t;"},
{"lineNum":"  582","line":"}"},
{"lineNum":"  583","line":""},
{"lineNum":"  584","line":"template<class _Tp>"},
{"lineNum":"  585","line":"complex<_Tp>"},
{"lineNum":"  586","line":"operator*(const complex<_Tp>& __z, const complex<_Tp>& __w)"},
{"lineNum":"  587","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  588","line":"    _Tp __a = __z.real();"},
{"lineNum":"  589","line":"    _Tp __b = __z.imag();"},
{"lineNum":"  590","line":"    _Tp __c = __w.real();"},
{"lineNum":"  591","line":"    _Tp __d = __w.imag();"},
{"lineNum":"  592","line":"    _Tp __ac = __a * __c;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  593","line":"    _Tp __bd = __b * __d;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  594","line":"    _Tp __ad = __a * __d;"},
{"lineNum":"  595","line":"    _Tp __bc = __b * __c;"},
{"lineNum":"  596","line":"    _Tp __x = __ac - __bd;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  597","line":"    _Tp __y = __ad + __bc;"},
{"lineNum":"  598","line":"    if (__libcpp_isnan_or_builtin(__x) && __libcpp_isnan_or_builtin(__y))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  599","line":"    {"},
{"lineNum":"  600","line":"        bool __recalc = false;"},
{"lineNum":"  601","line":"        if (__libcpp_isinf_or_builtin(__a) || __libcpp_isinf_or_builtin(__b))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  602","line":"        {"},
{"lineNum":"  603","line":"            __a = copysign(__libcpp_isinf_or_builtin(__a) ? _Tp(1) : _Tp(0), __a);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  604","line":"            __b = copysign(__libcpp_isinf_or_builtin(__b) ? _Tp(1) : _Tp(0), __b);"},
{"lineNum":"  605","line":"            if (__libcpp_isnan_or_builtin(__c))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  606","line":"                __c = copysign(_Tp(0), __c);"},
{"lineNum":"  607","line":"            if (__libcpp_isnan_or_builtin(__d))"},
{"lineNum":"  608","line":"                __d = copysign(_Tp(0), __d);"},
{"lineNum":"  609","line":"            __recalc = true;"},
{"lineNum":"  610","line":"        }"},
{"lineNum":"  611","line":"        if (__libcpp_isinf_or_builtin(__c) || __libcpp_isinf_or_builtin(__d))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  612","line":"        {"},
{"lineNum":"  613","line":"            __c = copysign(__libcpp_isinf_or_builtin(__c) ? _Tp(1) : _Tp(0), __c);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  614","line":"            __d = copysign(__libcpp_isinf_or_builtin(__d) ? _Tp(1) : _Tp(0), __d);"},
{"lineNum":"  615","line":"            if (__libcpp_isnan_or_builtin(__a))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  616","line":"                __a = copysign(_Tp(0), __a);"},
{"lineNum":"  617","line":"            if (__libcpp_isnan_or_builtin(__b))"},
{"lineNum":"  618","line":"                __b = copysign(_Tp(0), __b);"},
{"lineNum":"  619","line":"            __recalc = true;"},
{"lineNum":"  620","line":"        }"},
{"lineNum":"  621","line":"        if (!__recalc && (__libcpp_isinf_or_builtin(__ac) || __libcpp_isinf_or_builtin(__bd) ||","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  622","line":"                          __libcpp_isinf_or_builtin(__ad) || __libcpp_isinf_or_builtin(__bc)))"},
{"lineNum":"  623","line":"        {"},
{"lineNum":"  624","line":"            if (__libcpp_isnan_or_builtin(__a))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  625","line":"                __a = copysign(_Tp(0), __a);"},
{"lineNum":"  626","line":"            if (__libcpp_isnan_or_builtin(__b))"},
{"lineNum":"  627","line":"                __b = copysign(_Tp(0), __b);"},
{"lineNum":"  628","line":"            if (__libcpp_isnan_or_builtin(__c))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  629","line":"                __c = copysign(_Tp(0), __c);"},
{"lineNum":"  630","line":"            if (__libcpp_isnan_or_builtin(__d))"},
{"lineNum":"  631","line":"                __d = copysign(_Tp(0), __d);"},
{"lineNum":"  632","line":"            __recalc = true;"},
{"lineNum":"  633","line":"        }"},
{"lineNum":"  634","line":"        if (__recalc)"},
{"lineNum":"  635","line":"        {"},
{"lineNum":"  636","line":"            __x = _Tp(INFINITY) * (__a * __c - __b * __d);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  637","line":"            __y = _Tp(INFINITY) * (__a * __d + __b * __c);"},
{"lineNum":"  638","line":"        }"},
{"lineNum":"  639","line":"    }"},
{"lineNum":"  640","line":"    return complex<_Tp>(__x, __y);"},
{"lineNum":"  641","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  642","line":""},
{"lineNum":"  643","line":"template<class _Tp>"},
{"lineNum":"  644","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  645","line":"complex<_Tp>"},
{"lineNum":"  646","line":"operator*(const complex<_Tp>& __x, const _Tp& __y)"},
{"lineNum":"  647","line":"{"},
{"lineNum":"  648","line":"    complex<_Tp> __t(__x);"},
{"lineNum":"  649","line":"    __t *= __y;"},
{"lineNum":"  650","line":"    return __t;"},
{"lineNum":"  651","line":"}"},
{"lineNum":"  652","line":""},
{"lineNum":"  653","line":"template<class _Tp>"},
{"lineNum":"  654","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  655","line":"complex<_Tp>"},
{"lineNum":"  656","line":"operator*(const _Tp& __x, const complex<_Tp>& __y)"},
{"lineNum":"  657","line":"{"},
{"lineNum":"  658","line":"    complex<_Tp> __t(__y);"},
{"lineNum":"  659","line":"    __t *= __x;"},
{"lineNum":"  660","line":"    return __t;"},
{"lineNum":"  661","line":"}"},
{"lineNum":"  662","line":""},
{"lineNum":"  663","line":"template<class _Tp>"},
{"lineNum":"  664","line":"complex<_Tp>"},
{"lineNum":"  665","line":"operator/(const complex<_Tp>& __z, const complex<_Tp>& __w)"},
{"lineNum":"  666","line":"{","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  667","line":"    int __ilogbw = 0;"},
{"lineNum":"  668","line":"    _Tp __a = __z.real();"},
{"lineNum":"  669","line":"    _Tp __b = __z.imag();"},
{"lineNum":"  670","line":"    _Tp __c = __w.real();"},
{"lineNum":"  671","line":"    _Tp __d = __w.imag();"},
{"lineNum":"  672","line":"    _Tp __logbw = logb(fmax(fabs(__c), fabs(__d)));","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  673","line":"    if (__libcpp_isfinite_or_builtin(__logbw))","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  674","line":"    {"},
{"lineNum":"  675","line":"        __ilogbw = static_cast<int>(__logbw);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  676","line":"        __c = scalbn(__c, -__ilogbw);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  677","line":"        __d = scalbn(__d, -__ilogbw);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  678","line":"    }"},
{"lineNum":"  679","line":"    _Tp __denom = __c * __c + __d * __d;"},
{"lineNum":"  680","line":"    _Tp __x = scalbn((__a * __c + __b * __d) / __denom, -__ilogbw);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  681","line":"    _Tp __y = scalbn((__b * __c - __a * __d) / __denom, -__ilogbw);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  682","line":"    if (__libcpp_isnan_or_builtin(__x) && __libcpp_isnan_or_builtin(__y))","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  683","line":"    {"},
{"lineNum":"  684","line":"        if ((__denom == _Tp(0)) && (!__libcpp_isnan_or_builtin(__a) || !__libcpp_isnan_or_builtin(__b)))","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  685","line":"        {"},
{"lineNum":"  686","line":"            __x = copysign(_Tp(INFINITY), __c) * __a;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  687","line":"            __y = copysign(_Tp(INFINITY), __c) * __b;"},
{"lineNum":"  688","line":"        }"},
{"lineNum":"  689","line":"        else if ((__libcpp_isinf_or_builtin(__a) || __libcpp_isinf_or_builtin(__b)) && __libcpp_isfinite_or_builtin(__c) && __libcpp_isfinite_or_builtin(__d))","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  690","line":"        {"},
{"lineNum":"  691","line":"            __a = copysign(__libcpp_isinf_or_builtin(__a) ? _Tp(1) : _Tp(0), __a);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  692","line":"            __b = copysign(__libcpp_isinf_or_builtin(__b) ? _Tp(1) : _Tp(0), __b);"},
{"lineNum":"  693","line":"            __x = _Tp(INFINITY) * (__a * __c + __b * __d);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  694","line":"            __y = _Tp(INFINITY) * (__b * __c - __a * __d);"},
{"lineNum":"  695","line":"        }"},
{"lineNum":"  696","line":"        else if (__libcpp_isinf_or_builtin(__logbw) && __logbw > _Tp(0) && __libcpp_isfinite_or_builtin(__a) && __libcpp_isfinite_or_builtin(__b))","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  697","line":"        {"},
{"lineNum":"  698","line":"            __c = copysign(__libcpp_isinf_or_builtin(__c) ? _Tp(1) : _Tp(0), __c);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  699","line":"            __d = copysign(__libcpp_isinf_or_builtin(__d) ? _Tp(1) : _Tp(0), __d);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  700","line":"            __x = _Tp(0) * (__a * __c + __b * __d);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  701","line":"            __y = _Tp(0) * (__b * __c - __a * __d);"},
{"lineNum":"  702","line":"        }"},
{"lineNum":"  703","line":"    }"},
{"lineNum":"  704","line":"    return complex<_Tp>(__x, __y);"},
{"lineNum":"  705","line":"}","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  706","line":""},
{"lineNum":"  707","line":"template<class _Tp>"},
{"lineNum":"  708","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  709","line":"complex<_Tp>"},
{"lineNum":"  710","line":"operator/(const complex<_Tp>& __x, const _Tp& __y)"},
{"lineNum":"  711","line":"{"},
{"lineNum":"  712","line":"    return complex<_Tp>(__x.real() / __y, __x.imag() / __y);"},
{"lineNum":"  713","line":"}"},
{"lineNum":"  714","line":""},
{"lineNum":"  715","line":"template<class _Tp>"},
{"lineNum":"  716","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  717","line":"complex<_Tp>"},
{"lineNum":"  718","line":"operator/(const _Tp& __x, const complex<_Tp>& __y)"},
{"lineNum":"  719","line":"{"},
{"lineNum":"  720","line":"    complex<_Tp> __t(__x);"},
{"lineNum":"  721","line":"    __t /= __y;"},
{"lineNum":"  722","line":"    return __t;"},
{"lineNum":"  723","line":"}"},
{"lineNum":"  724","line":""},
{"lineNum":"  725","line":"template<class _Tp>"},
{"lineNum":"  726","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  727","line":"complex<_Tp>"},
{"lineNum":"  728","line":"operator+(const complex<_Tp>& __x)"},
{"lineNum":"  729","line":"{"},
{"lineNum":"  730","line":"    return __x;"},
{"lineNum":"  731","line":"}"},
{"lineNum":"  732","line":""},
{"lineNum":"  733","line":"template<class _Tp>"},
{"lineNum":"  734","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  735","line":"complex<_Tp>"},
{"lineNum":"  736","line":"operator-(const complex<_Tp>& __x)"},
{"lineNum":"  737","line":"{"},
{"lineNum":"  738","line":"    return complex<_Tp>(-__x.real(), -__x.imag());"},
{"lineNum":"  739","line":"}"},
{"lineNum":"  740","line":""},
{"lineNum":"  741","line":"template<class _Tp>"},
{"lineNum":"  742","line":"inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX11"},
{"lineNum":"  743","line":"bool"},
{"lineNum":"  744","line":"operator==(const complex<_Tp>& __x, const complex<_Tp>& __y)"},
{"lineNum":"  745","line":"{"},
{"lineNum":"  746","line":"    return __x.real() == __y.real() && __x.imag() == __y.imag();"},
{"lineNum":"  747","line":"}"},
{"lineNum":"  748","line":""},
{"lineNum":"  749","line":"template<class _Tp>"},
{"lineNum":"  750","line":"inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX11"},
{"lineNum":"  751","line":"bool"},
{"lineNum":"  752","line":"operator==(const complex<_Tp>& __x, const _Tp& __y)"},
{"lineNum":"  753","line":"{"},
{"lineNum":"  754","line":"    return __x.real() == __y && __x.imag() == 0;"},
{"lineNum":"  755","line":"}"},
{"lineNum":"  756","line":""},
{"lineNum":"  757","line":"template<class _Tp>"},
{"lineNum":"  758","line":"inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX11"},
{"lineNum":"  759","line":"bool"},
{"lineNum":"  760","line":"operator==(const _Tp& __x, const complex<_Tp>& __y)"},
{"lineNum":"  761","line":"{"},
{"lineNum":"  762","line":"    return __x == __y.real() && 0 == __y.imag();"},
{"lineNum":"  763","line":"}"},
{"lineNum":"  764","line":""},
{"lineNum":"  765","line":"template<class _Tp>"},
{"lineNum":"  766","line":"inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX11"},
{"lineNum":"  767","line":"bool"},
{"lineNum":"  768","line":"operator!=(const complex<_Tp>& __x, const complex<_Tp>& __y)"},
{"lineNum":"  769","line":"{"},
{"lineNum":"  770","line":"    return !(__x == __y);"},
{"lineNum":"  771","line":"}"},
{"lineNum":"  772","line":""},
{"lineNum":"  773","line":"template<class _Tp>"},
{"lineNum":"  774","line":"inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX11"},
{"lineNum":"  775","line":"bool"},
{"lineNum":"  776","line":"operator!=(const complex<_Tp>& __x, const _Tp& __y)"},
{"lineNum":"  777","line":"{"},
{"lineNum":"  778","line":"    return !(__x == __y);"},
{"lineNum":"  779","line":"}"},
{"lineNum":"  780","line":""},
{"lineNum":"  781","line":"template<class _Tp>"},
{"lineNum":"  782","line":"inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX11"},
{"lineNum":"  783","line":"bool"},
{"lineNum":"  784","line":"operator!=(const _Tp& __x, const complex<_Tp>& __y)"},
{"lineNum":"  785","line":"{"},
{"lineNum":"  786","line":"    return !(__x == __y);"},
{"lineNum":"  787","line":"}"},
{"lineNum":"  788","line":""},
{"lineNum":"  789","line":"// 26.3.7 values:"},
{"lineNum":"  790","line":""},
{"lineNum":"  791","line":"template <class _Tp, bool = is_integral<_Tp>::value,"},
{"lineNum":"  792","line":"                     bool = is_floating_point<_Tp>::value"},
{"lineNum":"  793","line":"                     >"},
{"lineNum":"  794","line":"struct __libcpp_complex_overload_traits {};"},
{"lineNum":"  795","line":""},
{"lineNum":"  796","line":"// Integral Types"},
{"lineNum":"  797","line":"template <class _Tp>"},
{"lineNum":"  798","line":"struct __libcpp_complex_overload_traits<_Tp, true, false>"},
{"lineNum":"  799","line":"{"},
{"lineNum":"  800","line":"    typedef double _ValueType;"},
{"lineNum":"  801","line":"    typedef complex<double> _ComplexType;"},
{"lineNum":"  802","line":"};"},
{"lineNum":"  803","line":""},
{"lineNum":"  804","line":"// Floating point types"},
{"lineNum":"  805","line":"template <class _Tp>"},
{"lineNum":"  806","line":"struct __libcpp_complex_overload_traits<_Tp, false, true>"},
{"lineNum":"  807","line":"{"},
{"lineNum":"  808","line":"    typedef _Tp _ValueType;"},
{"lineNum":"  809","line":"    typedef complex<_Tp> _ComplexType;"},
{"lineNum":"  810","line":"};"},
{"lineNum":"  811","line":""},
{"lineNum":"  812","line":"// real"},
{"lineNum":"  813","line":""},
{"lineNum":"  814","line":"template<class _Tp>"},
{"lineNum":"  815","line":"inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX11"},
{"lineNum":"  816","line":"_Tp"},
{"lineNum":"  817","line":"real(const complex<_Tp>& __c)"},
{"lineNum":"  818","line":"{"},
{"lineNum":"  819","line":"    return __c.real();"},
{"lineNum":"  820","line":"}"},
{"lineNum":"  821","line":""},
{"lineNum":"  822","line":"template <class _Tp>"},
{"lineNum":"  823","line":"inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX11"},
{"lineNum":"  824","line":"typename __libcpp_complex_overload_traits<_Tp>::_ValueType"},
{"lineNum":"  825","line":"real(_Tp __re)"},
{"lineNum":"  826","line":"{"},
{"lineNum":"  827","line":"    return __re;"},
{"lineNum":"  828","line":"}"},
{"lineNum":"  829","line":""},
{"lineNum":"  830","line":"// imag"},
{"lineNum":"  831","line":""},
{"lineNum":"  832","line":"template<class _Tp>"},
{"lineNum":"  833","line":"inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX11"},
{"lineNum":"  834","line":"_Tp"},
{"lineNum":"  835","line":"imag(const complex<_Tp>& __c)"},
{"lineNum":"  836","line":"{"},
{"lineNum":"  837","line":"    return __c.imag();"},
{"lineNum":"  838","line":"}"},
{"lineNum":"  839","line":""},
{"lineNum":"  840","line":"template <class _Tp>"},
{"lineNum":"  841","line":"inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX11"},
{"lineNum":"  842","line":"typename __libcpp_complex_overload_traits<_Tp>::_ValueType"},
{"lineNum":"  843","line":"imag(_Tp)"},
{"lineNum":"  844","line":"{"},
{"lineNum":"  845","line":"    return 0;"},
{"lineNum":"  846","line":"}"},
{"lineNum":"  847","line":""},
{"lineNum":"  848","line":"// abs"},
{"lineNum":"  849","line":""},
{"lineNum":"  850","line":"template<class _Tp>"},
{"lineNum":"  851","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  852","line":"_Tp"},
{"lineNum":"  853","line":"abs(const complex<_Tp>& __c)"},
{"lineNum":"  854","line":"{"},
{"lineNum":"  855","line":"    return hypot(__c.real(), __c.imag());","class":"lineNoCov","hits":"0","possible_hits":"20",},
{"lineNum":"  856","line":"}"},
{"lineNum":"  857","line":""},
{"lineNum":"  858","line":"// arg"},
{"lineNum":"  859","line":""},
{"lineNum":"  860","line":"template<class _Tp>"},
{"lineNum":"  861","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  862","line":"_Tp"},
{"lineNum":"  863","line":"arg(const complex<_Tp>& __c)"},
{"lineNum":"  864","line":"{"},
{"lineNum":"  865","line":"    return atan2(__c.imag(), __c.real());","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  866","line":"}"},
{"lineNum":"  867","line":""},
{"lineNum":"  868","line":"template <class _Tp>"},
{"lineNum":"  869","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  870","line":"typename enable_if<"},
{"lineNum":"  871","line":"    is_same<_Tp, long double>::value,"},
{"lineNum":"  872","line":"    long double"},
{"lineNum":"  873","line":">::type"},
{"lineNum":"  874","line":"arg(_Tp __re)"},
{"lineNum":"  875","line":"{"},
{"lineNum":"  876","line":"    return atan2l(0.L, __re);"},
{"lineNum":"  877","line":"}"},
{"lineNum":"  878","line":""},
{"lineNum":"  879","line":"template<class _Tp>"},
{"lineNum":"  880","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  881","line":"typename enable_if"},
{"lineNum":"  882","line":"<"},
{"lineNum":"  883","line":"    is_integral<_Tp>::value || is_same<_Tp, double>::value,"},
{"lineNum":"  884","line":"    double"},
{"lineNum":"  885","line":">::type"},
{"lineNum":"  886","line":"arg(_Tp __re)"},
{"lineNum":"  887","line":"{"},
{"lineNum":"  888","line":"    return atan2(0., __re);"},
{"lineNum":"  889","line":"}"},
{"lineNum":"  890","line":""},
{"lineNum":"  891","line":"template <class _Tp>"},
{"lineNum":"  892","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  893","line":"typename enable_if<"},
{"lineNum":"  894","line":"    is_same<_Tp, float>::value,"},
{"lineNum":"  895","line":"    float"},
{"lineNum":"  896","line":">::type"},
{"lineNum":"  897","line":"arg(_Tp __re)"},
{"lineNum":"  898","line":"{"},
{"lineNum":"  899","line":"    return atan2f(0.F, __re);"},
{"lineNum":"  900","line":"}"},
{"lineNum":"  901","line":""},
{"lineNum":"  902","line":"// norm"},
{"lineNum":"  903","line":""},
{"lineNum":"  904","line":"template<class _Tp>"},
{"lineNum":"  905","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  906","line":"_Tp"},
{"lineNum":"  907","line":"norm(const complex<_Tp>& __c)"},
{"lineNum":"  908","line":"{"},
{"lineNum":"  909","line":"    if (__libcpp_isinf_or_builtin(__c.real()))"},
{"lineNum":"  910","line":"        return abs(__c.real());"},
{"lineNum":"  911","line":"    if (__libcpp_isinf_or_builtin(__c.imag()))"},
{"lineNum":"  912","line":"        return abs(__c.imag());"},
{"lineNum":"  913","line":"    return __c.real() * __c.real() + __c.imag() * __c.imag();"},
{"lineNum":"  914","line":"}"},
{"lineNum":"  915","line":""},
{"lineNum":"  916","line":"template <class _Tp>"},
{"lineNum":"  917","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  918","line":"typename __libcpp_complex_overload_traits<_Tp>::_ValueType"},
{"lineNum":"  919","line":"norm(_Tp __re)"},
{"lineNum":"  920","line":"{"},
{"lineNum":"  921","line":"    typedef typename __libcpp_complex_overload_traits<_Tp>::_ValueType _ValueType;"},
{"lineNum":"  922","line":"    return static_cast<_ValueType>(__re) * __re;"},
{"lineNum":"  923","line":"}"},
{"lineNum":"  924","line":""},
{"lineNum":"  925","line":"// conj"},
{"lineNum":"  926","line":""},
{"lineNum":"  927","line":"template<class _Tp>"},
{"lineNum":"  928","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  929","line":"complex<_Tp>"},
{"lineNum":"  930","line":"conj(const complex<_Tp>& __c)"},
{"lineNum":"  931","line":"{"},
{"lineNum":"  932","line":"    return complex<_Tp>(__c.real(), -__c.imag());","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  933","line":"}"},
{"lineNum":"  934","line":""},
{"lineNum":"  935","line":"template <class _Tp>"},
{"lineNum":"  936","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  937","line":"typename __libcpp_complex_overload_traits<_Tp>::_ComplexType"},
{"lineNum":"  938","line":"conj(_Tp __re)"},
{"lineNum":"  939","line":"{"},
{"lineNum":"  940","line":"    typedef typename __libcpp_complex_overload_traits<_Tp>::_ComplexType _ComplexType;"},
{"lineNum":"  941","line":"    return _ComplexType(__re);"},
{"lineNum":"  942","line":"}"},
{"lineNum":"  943","line":""},
{"lineNum":"  944","line":""},
{"lineNum":"  945","line":""},
{"lineNum":"  946","line":"// proj"},
{"lineNum":"  947","line":""},
{"lineNum":"  948","line":"template<class _Tp>"},
{"lineNum":"  949","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  950","line":"complex<_Tp>"},
{"lineNum":"  951","line":"proj(const complex<_Tp>& __c)"},
{"lineNum":"  952","line":"{"},
{"lineNum":"  953","line":"    complex<_Tp> __r = __c;"},
{"lineNum":"  954","line":"    if (__libcpp_isinf_or_builtin(__c.real()) || __libcpp_isinf_or_builtin(__c.imag()))"},
{"lineNum":"  955","line":"        __r = complex<_Tp>(INFINITY, copysign(_Tp(0), __c.imag()));"},
{"lineNum":"  956","line":"    return __r;"},
{"lineNum":"  957","line":"}"},
{"lineNum":"  958","line":""},
{"lineNum":"  959","line":"template <class _Tp>"},
{"lineNum":"  960","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  961","line":"typename enable_if"},
{"lineNum":"  962","line":"<"},
{"lineNum":"  963","line":"    is_floating_point<_Tp>::value,"},
{"lineNum":"  964","line":"    typename __libcpp_complex_overload_traits<_Tp>::_ComplexType"},
{"lineNum":"  965","line":">::type"},
{"lineNum":"  966","line":"proj(_Tp __re)"},
{"lineNum":"  967","line":"{"},
{"lineNum":"  968","line":"    if (__libcpp_isinf_or_builtin(__re))"},
{"lineNum":"  969","line":"        __re = abs(__re);"},
{"lineNum":"  970","line":"    return complex<_Tp>(__re);"},
{"lineNum":"  971","line":"}"},
{"lineNum":"  972","line":""},
{"lineNum":"  973","line":"template <class _Tp>"},
{"lineNum":"  974","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  975","line":"typename enable_if"},
{"lineNum":"  976","line":"<"},
{"lineNum":"  977","line":"    is_integral<_Tp>::value,"},
{"lineNum":"  978","line":"    typename __libcpp_complex_overload_traits<_Tp>::_ComplexType"},
{"lineNum":"  979","line":">::type"},
{"lineNum":"  980","line":"proj(_Tp __re)"},
{"lineNum":"  981","line":"{"},
{"lineNum":"  982","line":"    typedef typename __libcpp_complex_overload_traits<_Tp>::_ComplexType _ComplexType;"},
{"lineNum":"  983","line":"    return _ComplexType(__re);"},
{"lineNum":"  984","line":"}"},
{"lineNum":"  985","line":""},
{"lineNum":"  986","line":"// polar"},
{"lineNum":"  987","line":""},
{"lineNum":"  988","line":"template<class _Tp>"},
{"lineNum":"  989","line":"complex<_Tp>"},
{"lineNum":"  990","line":"polar(const _Tp& __rho, const _Tp& __theta = _Tp())"},
{"lineNum":"  991","line":"{"},
{"lineNum":"  992","line":"    if (__libcpp_isnan_or_builtin(__rho) || signbit(__rho))"},
{"lineNum":"  993","line":"        return complex<_Tp>(_Tp(NAN), _Tp(NAN));"},
{"lineNum":"  994","line":"    if (__libcpp_isnan_or_builtin(__theta))"},
{"lineNum":"  995","line":"    {"},
{"lineNum":"  996","line":"        if (__libcpp_isinf_or_builtin(__rho))"},
{"lineNum":"  997","line":"            return complex<_Tp>(__rho, __theta);"},
{"lineNum":"  998","line":"        return complex<_Tp>(__theta, __theta);"},
{"lineNum":"  999","line":"    }"},
{"lineNum":" 1000","line":"    if (__libcpp_isinf_or_builtin(__theta))"},
{"lineNum":" 1001","line":"    {"},
{"lineNum":" 1002","line":"        if (__libcpp_isinf_or_builtin(__rho))"},
{"lineNum":" 1003","line":"            return complex<_Tp>(__rho, _Tp(NAN));"},
{"lineNum":" 1004","line":"        return complex<_Tp>(_Tp(NAN), _Tp(NAN));"},
{"lineNum":" 1005","line":"    }"},
{"lineNum":" 1006","line":"    _Tp __x = __rho * cos(__theta);"},
{"lineNum":" 1007","line":"    if (__libcpp_isnan_or_builtin(__x))"},
{"lineNum":" 1008","line":"        __x = 0;"},
{"lineNum":" 1009","line":"    _Tp __y = __rho * sin(__theta);"},
{"lineNum":" 1010","line":"    if (__libcpp_isnan_or_builtin(__y))"},
{"lineNum":" 1011","line":"        __y = 0;"},
{"lineNum":" 1012","line":"    return complex<_Tp>(__x, __y);"},
{"lineNum":" 1013","line":"}"},
{"lineNum":" 1014","line":""},
{"lineNum":" 1015","line":"// log"},
{"lineNum":" 1016","line":""},
{"lineNum":" 1017","line":"template<class _Tp>"},
{"lineNum":" 1018","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1019","line":"complex<_Tp>"},
{"lineNum":" 1020","line":"log(const complex<_Tp>& __x)"},
{"lineNum":" 1021","line":"{"},
{"lineNum":" 1022","line":"    return complex<_Tp>(log(abs(__x)), arg(__x));"},
{"lineNum":" 1023","line":"}"},
{"lineNum":" 1024","line":""},
{"lineNum":" 1025","line":"// log10"},
{"lineNum":" 1026","line":""},
{"lineNum":" 1027","line":"template<class _Tp>"},
{"lineNum":" 1028","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1029","line":"complex<_Tp>"},
{"lineNum":" 1030","line":"log10(const complex<_Tp>& __x)"},
{"lineNum":" 1031","line":"{"},
{"lineNum":" 1032","line":"    return log(__x) / log(_Tp(10));"},
{"lineNum":" 1033","line":"}"},
{"lineNum":" 1034","line":""},
{"lineNum":" 1035","line":"// sqrt"},
{"lineNum":" 1036","line":""},
{"lineNum":" 1037","line":"template<class _Tp>"},
{"lineNum":" 1038","line":"complex<_Tp>"},
{"lineNum":" 1039","line":"sqrt(const complex<_Tp>& __x)"},
{"lineNum":" 1040","line":"{"},
{"lineNum":" 1041","line":"    if (__libcpp_isinf_or_builtin(__x.imag()))"},
{"lineNum":" 1042","line":"        return complex<_Tp>(_Tp(INFINITY), __x.imag());"},
{"lineNum":" 1043","line":"    if (__libcpp_isinf_or_builtin(__x.real()))"},
{"lineNum":" 1044","line":"    {"},
{"lineNum":" 1045","line":"        if (__x.real() > _Tp(0))"},
{"lineNum":" 1046","line":"            return complex<_Tp>(__x.real(), __libcpp_isnan_or_builtin(__x.imag()) ? __x.imag() : copysign(_Tp(0), __x.imag()));"},
{"lineNum":" 1047","line":"        return complex<_Tp>(__libcpp_isnan_or_builtin(__x.imag()) ? __x.imag() : _Tp(0), copysign(__x.real(), __x.imag()));"},
{"lineNum":" 1048","line":"    }"},
{"lineNum":" 1049","line":"    return polar(sqrt(abs(__x)), arg(__x) / _Tp(2));"},
{"lineNum":" 1050","line":"}"},
{"lineNum":" 1051","line":""},
{"lineNum":" 1052","line":"// exp"},
{"lineNum":" 1053","line":""},
{"lineNum":" 1054","line":"template<class _Tp>"},
{"lineNum":" 1055","line":"complex<_Tp>"},
{"lineNum":" 1056","line":"exp(const complex<_Tp>& __x)"},
{"lineNum":" 1057","line":"{"},
{"lineNum":" 1058","line":"    _Tp __i = __x.imag();"},
{"lineNum":" 1059","line":"    if (__libcpp_isinf_or_builtin(__x.real()))"},
{"lineNum":" 1060","line":"    {"},
{"lineNum":" 1061","line":"        if (__x.real() < _Tp(0))"},
{"lineNum":" 1062","line":"        {"},
{"lineNum":" 1063","line":"            if (!__libcpp_isfinite_or_builtin(__i))"},
{"lineNum":" 1064","line":"                __i = _Tp(1);"},
{"lineNum":" 1065","line":"        }"},
{"lineNum":" 1066","line":"        else if (__i == 0 || !__libcpp_isfinite_or_builtin(__i))"},
{"lineNum":" 1067","line":"        {"},
{"lineNum":" 1068","line":"            if (__libcpp_isinf_or_builtin(__i))"},
{"lineNum":" 1069","line":"                __i = _Tp(NAN);"},
{"lineNum":" 1070","line":"            return complex<_Tp>(__x.real(), __i);"},
{"lineNum":" 1071","line":"        }"},
{"lineNum":" 1072","line":"    }"},
{"lineNum":" 1073","line":"    else if (__libcpp_isnan_or_builtin(__x.real()) && __x.imag() == 0)"},
{"lineNum":" 1074","line":"        return __x;"},
{"lineNum":" 1075","line":"    _Tp __e = exp(__x.real());"},
{"lineNum":" 1076","line":"    return complex<_Tp>(__e * cos(__i), __e * sin(__i));","class":"lineNoCov","hits":"0","possible_hits":"13",},
{"lineNum":" 1077","line":"}"},
{"lineNum":" 1078","line":""},
{"lineNum":" 1079","line":"// pow"},
{"lineNum":" 1080","line":""},
{"lineNum":" 1081","line":"template<class _Tp>"},
{"lineNum":" 1082","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1083","line":"complex<_Tp>"},
{"lineNum":" 1084","line":"pow(const complex<_Tp>& __x, const complex<_Tp>& __y)"},
{"lineNum":" 1085","line":"{"},
{"lineNum":" 1086","line":"    return exp(__y * log(__x));"},
{"lineNum":" 1087","line":"}"},
{"lineNum":" 1088","line":""},
{"lineNum":" 1089","line":"template<class _Tp, class _Up>"},
{"lineNum":" 1090","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1091","line":"complex<typename __promote<_Tp, _Up>::type>"},
{"lineNum":" 1092","line":"pow(const complex<_Tp>& __x, const complex<_Up>& __y)"},
{"lineNum":" 1093","line":"{"},
{"lineNum":" 1094","line":"    typedef complex<typename __promote<_Tp, _Up>::type> result_type;"},
{"lineNum":" 1095","line":"    return _VSTD::pow(result_type(__x), result_type(__y));"},
{"lineNum":" 1096","line":"}"},
{"lineNum":" 1097","line":""},
{"lineNum":" 1098","line":"template<class _Tp, class _Up>"},
{"lineNum":" 1099","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1100","line":"typename enable_if"},
{"lineNum":" 1101","line":"<"},
{"lineNum":" 1102","line":"    is_arithmetic<_Up>::value,"},
{"lineNum":" 1103","line":"    complex<typename __promote<_Tp, _Up>::type>"},
{"lineNum":" 1104","line":">::type"},
{"lineNum":" 1105","line":"pow(const complex<_Tp>& __x, const _Up& __y)"},
{"lineNum":" 1106","line":"{"},
{"lineNum":" 1107","line":"    typedef complex<typename __promote<_Tp, _Up>::type> result_type;"},
{"lineNum":" 1108","line":"    return _VSTD::pow(result_type(__x), result_type(__y));"},
{"lineNum":" 1109","line":"}"},
{"lineNum":" 1110","line":""},
{"lineNum":" 1111","line":"template<class _Tp, class _Up>"},
{"lineNum":" 1112","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1113","line":"typename enable_if"},
{"lineNum":" 1114","line":"<"},
{"lineNum":" 1115","line":"    is_arithmetic<_Tp>::value,"},
{"lineNum":" 1116","line":"    complex<typename __promote<_Tp, _Up>::type>"},
{"lineNum":" 1117","line":">::type"},
{"lineNum":" 1118","line":"pow(const _Tp& __x, const complex<_Up>& __y)"},
{"lineNum":" 1119","line":"{"},
{"lineNum":" 1120","line":"    typedef complex<typename __promote<_Tp, _Up>::type> result_type;"},
{"lineNum":" 1121","line":"    return _VSTD::pow(result_type(__x), result_type(__y));"},
{"lineNum":" 1122","line":"}"},
{"lineNum":" 1123","line":""},
{"lineNum":" 1124","line":"// __sqr, computes pow(x, 2)"},
{"lineNum":" 1125","line":""},
{"lineNum":" 1126","line":"template<class _Tp>"},
{"lineNum":" 1127","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1128","line":"complex<_Tp>"},
{"lineNum":" 1129","line":"__sqr(const complex<_Tp>& __x)"},
{"lineNum":" 1130","line":"{"},
{"lineNum":" 1131","line":"    return complex<_Tp>((__x.real() - __x.imag()) * (__x.real() + __x.imag()),"},
{"lineNum":" 1132","line":"                        _Tp(2) * __x.real() * __x.imag());"},
{"lineNum":" 1133","line":"}"},
{"lineNum":" 1134","line":""},
{"lineNum":" 1135","line":"// asinh"},
{"lineNum":" 1136","line":""},
{"lineNum":" 1137","line":"template<class _Tp>"},
{"lineNum":" 1138","line":"complex<_Tp>"},
{"lineNum":" 1139","line":"asinh(const complex<_Tp>& __x)"},
{"lineNum":" 1140","line":"{"},
{"lineNum":" 1141","line":"    const _Tp __pi(atan2(+0., -0.));"},
{"lineNum":" 1142","line":"    if (__libcpp_isinf_or_builtin(__x.real()))"},
{"lineNum":" 1143","line":"    {"},
{"lineNum":" 1144","line":"        if (__libcpp_isnan_or_builtin(__x.imag()))"},
{"lineNum":" 1145","line":"            return __x;"},
{"lineNum":" 1146","line":"        if (__libcpp_isinf_or_builtin(__x.imag()))"},
{"lineNum":" 1147","line":"            return complex<_Tp>(__x.real(), copysign(__pi * _Tp(0.25), __x.imag()));"},
{"lineNum":" 1148","line":"        return complex<_Tp>(__x.real(), copysign(_Tp(0), __x.imag()));"},
{"lineNum":" 1149","line":"    }"},
{"lineNum":" 1150","line":"    if (__libcpp_isnan_or_builtin(__x.real()))"},
{"lineNum":" 1151","line":"    {"},
{"lineNum":" 1152","line":"        if (__libcpp_isinf_or_builtin(__x.imag()))"},
{"lineNum":" 1153","line":"            return complex<_Tp>(__x.imag(), __x.real());"},
{"lineNum":" 1154","line":"        if (__x.imag() == 0)"},
{"lineNum":" 1155","line":"            return __x;"},
{"lineNum":" 1156","line":"        return complex<_Tp>(__x.real(), __x.real());"},
{"lineNum":" 1157","line":"    }"},
{"lineNum":" 1158","line":"    if (__libcpp_isinf_or_builtin(__x.imag()))"},
{"lineNum":" 1159","line":"        return complex<_Tp>(copysign(__x.imag(), __x.real()), copysign(__pi/_Tp(2), __x.imag()));"},
{"lineNum":" 1160","line":"    complex<_Tp> __z = log(__x + sqrt(__sqr(__x) + _Tp(1)));"},
{"lineNum":" 1161","line":"    return complex<_Tp>(copysign(__z.real(), __x.real()), copysign(__z.imag(), __x.imag()));"},
{"lineNum":" 1162","line":"}"},
{"lineNum":" 1163","line":""},
{"lineNum":" 1164","line":"// acosh"},
{"lineNum":" 1165","line":""},
{"lineNum":" 1166","line":"template<class _Tp>"},
{"lineNum":" 1167","line":"complex<_Tp>"},
{"lineNum":" 1168","line":"acosh(const complex<_Tp>& __x)"},
{"lineNum":" 1169","line":"{"},
{"lineNum":" 1170","line":"    const _Tp __pi(atan2(+0., -0.));"},
{"lineNum":" 1171","line":"    if (__libcpp_isinf_or_builtin(__x.real()))"},
{"lineNum":" 1172","line":"    {"},
{"lineNum":" 1173","line":"        if (__libcpp_isnan_or_builtin(__x.imag()))"},
{"lineNum":" 1174","line":"            return complex<_Tp>(abs(__x.real()), __x.imag());"},
{"lineNum":" 1175","line":"        if (__libcpp_isinf_or_builtin(__x.imag()))"},
{"lineNum":" 1176","line":"        {"},
{"lineNum":" 1177","line":"            if (__x.real() > 0)"},
{"lineNum":" 1178","line":"                return complex<_Tp>(__x.real(), copysign(__pi * _Tp(0.25), __x.imag()));"},
{"lineNum":" 1179","line":"            else"},
{"lineNum":" 1180","line":"                return complex<_Tp>(-__x.real(), copysign(__pi * _Tp(0.75), __x.imag()));"},
{"lineNum":" 1181","line":"        }"},
{"lineNum":" 1182","line":"        if (__x.real() < 0)"},
{"lineNum":" 1183","line":"            return complex<_Tp>(-__x.real(), copysign(__pi, __x.imag()));"},
{"lineNum":" 1184","line":"        return complex<_Tp>(__x.real(), copysign(_Tp(0), __x.imag()));"},
{"lineNum":" 1185","line":"    }"},
{"lineNum":" 1186","line":"    if (__libcpp_isnan_or_builtin(__x.real()))"},
{"lineNum":" 1187","line":"    {"},
{"lineNum":" 1188","line":"        if (__libcpp_isinf_or_builtin(__x.imag()))"},
{"lineNum":" 1189","line":"            return complex<_Tp>(abs(__x.imag()), __x.real());"},
{"lineNum":" 1190","line":"        return complex<_Tp>(__x.real(), __x.real());"},
{"lineNum":" 1191","line":"    }"},
{"lineNum":" 1192","line":"    if (__libcpp_isinf_or_builtin(__x.imag()))"},
{"lineNum":" 1193","line":"        return complex<_Tp>(abs(__x.imag()), copysign(__pi/_Tp(2), __x.imag()));"},
{"lineNum":" 1194","line":"    complex<_Tp> __z = log(__x + sqrt(__sqr(__x) - _Tp(1)));"},
{"lineNum":" 1195","line":"    return complex<_Tp>(copysign(__z.real(), _Tp(0)), copysign(__z.imag(), __x.imag()));"},
{"lineNum":" 1196","line":"}"},
{"lineNum":" 1197","line":""},
{"lineNum":" 1198","line":"// atanh"},
{"lineNum":" 1199","line":""},
{"lineNum":" 1200","line":"template<class _Tp>"},
{"lineNum":" 1201","line":"complex<_Tp>"},
{"lineNum":" 1202","line":"atanh(const complex<_Tp>& __x)"},
{"lineNum":" 1203","line":"{"},
{"lineNum":" 1204","line":"    const _Tp __pi(atan2(+0., -0.));"},
{"lineNum":" 1205","line":"    if (__libcpp_isinf_or_builtin(__x.imag()))"},
{"lineNum":" 1206","line":"    {"},
{"lineNum":" 1207","line":"        return complex<_Tp>(copysign(_Tp(0), __x.real()), copysign(__pi/_Tp(2), __x.imag()));"},
{"lineNum":" 1208","line":"    }"},
{"lineNum":" 1209","line":"    if (__libcpp_isnan_or_builtin(__x.imag()))"},
{"lineNum":" 1210","line":"    {"},
{"lineNum":" 1211","line":"        if (__libcpp_isinf_or_builtin(__x.real()) || __x.real() == 0)"},
{"lineNum":" 1212","line":"            return complex<_Tp>(copysign(_Tp(0), __x.real()), __x.imag());"},
{"lineNum":" 1213","line":"        return complex<_Tp>(__x.imag(), __x.imag());"},
{"lineNum":" 1214","line":"    }"},
{"lineNum":" 1215","line":"    if (__libcpp_isnan_or_builtin(__x.real()))"},
{"lineNum":" 1216","line":"    {"},
{"lineNum":" 1217","line":"        return complex<_Tp>(__x.real(), __x.real());"},
{"lineNum":" 1218","line":"    }"},
{"lineNum":" 1219","line":"    if (__libcpp_isinf_or_builtin(__x.real()))"},
{"lineNum":" 1220","line":"    {"},
{"lineNum":" 1221","line":"        return complex<_Tp>(copysign(_Tp(0), __x.real()), copysign(__pi/_Tp(2), __x.imag()));"},
{"lineNum":" 1222","line":"    }"},
{"lineNum":" 1223","line":"    if (abs(__x.real()) == _Tp(1) && __x.imag() == _Tp(0))"},
{"lineNum":" 1224","line":"    {"},
{"lineNum":" 1225","line":"        return complex<_Tp>(copysign(_Tp(INFINITY), __x.real()), copysign(_Tp(0), __x.imag()));"},
{"lineNum":" 1226","line":"    }"},
{"lineNum":" 1227","line":"    complex<_Tp> __z = log((_Tp(1) + __x) / (_Tp(1) - __x)) / _Tp(2);"},
{"lineNum":" 1228","line":"    return complex<_Tp>(copysign(__z.real(), __x.real()), copysign(__z.imag(), __x.imag()));"},
{"lineNum":" 1229","line":"}"},
{"lineNum":" 1230","line":""},
{"lineNum":" 1231","line":"// sinh"},
{"lineNum":" 1232","line":""},
{"lineNum":" 1233","line":"template<class _Tp>"},
{"lineNum":" 1234","line":"complex<_Tp>"},
{"lineNum":" 1235","line":"sinh(const complex<_Tp>& __x)"},
{"lineNum":" 1236","line":"{"},
{"lineNum":" 1237","line":"    if (__libcpp_isinf_or_builtin(__x.real()) && !__libcpp_isfinite_or_builtin(__x.imag()))"},
{"lineNum":" 1238","line":"        return complex<_Tp>(__x.real(), _Tp(NAN));"},
{"lineNum":" 1239","line":"    if (__x.real() == 0 && !__libcpp_isfinite_or_builtin(__x.imag()))"},
{"lineNum":" 1240","line":"        return complex<_Tp>(__x.real(), _Tp(NAN));"},
{"lineNum":" 1241","line":"    if (__x.imag() == 0 && !__libcpp_isfinite_or_builtin(__x.real()))"},
{"lineNum":" 1242","line":"        return __x;"},
{"lineNum":" 1243","line":"    return complex<_Tp>(sinh(__x.real()) * cos(__x.imag()), cosh(__x.real()) * sin(__x.imag()));"},
{"lineNum":" 1244","line":"}"},
{"lineNum":" 1245","line":""},
{"lineNum":" 1246","line":"// cosh"},
{"lineNum":" 1247","line":""},
{"lineNum":" 1248","line":"template<class _Tp>"},
{"lineNum":" 1249","line":"complex<_Tp>"},
{"lineNum":" 1250","line":"cosh(const complex<_Tp>& __x)"},
{"lineNum":" 1251","line":"{"},
{"lineNum":" 1252","line":"    if (__libcpp_isinf_or_builtin(__x.real()) && !__libcpp_isfinite_or_builtin(__x.imag()))"},
{"lineNum":" 1253","line":"        return complex<_Tp>(abs(__x.real()), _Tp(NAN));"},
{"lineNum":" 1254","line":"    if (__x.real() == 0 && !__libcpp_isfinite_or_builtin(__x.imag()))"},
{"lineNum":" 1255","line":"        return complex<_Tp>(_Tp(NAN), __x.real());"},
{"lineNum":" 1256","line":"    if (__x.real() == 0 && __x.imag() == 0)"},
{"lineNum":" 1257","line":"        return complex<_Tp>(_Tp(1), __x.imag());"},
{"lineNum":" 1258","line":"    if (__x.imag() == 0 && !__libcpp_isfinite_or_builtin(__x.real()))"},
{"lineNum":" 1259","line":"        return complex<_Tp>(abs(__x.real()), __x.imag());"},
{"lineNum":" 1260","line":"    return complex<_Tp>(cosh(__x.real()) * cos(__x.imag()), sinh(__x.real()) * sin(__x.imag()));"},
{"lineNum":" 1261","line":"}"},
{"lineNum":" 1262","line":""},
{"lineNum":" 1263","line":"// tanh"},
{"lineNum":" 1264","line":""},
{"lineNum":" 1265","line":"template<class _Tp>"},
{"lineNum":" 1266","line":"complex<_Tp>"},
{"lineNum":" 1267","line":"tanh(const complex<_Tp>& __x)"},
{"lineNum":" 1268","line":"{"},
{"lineNum":" 1269","line":"    if (__libcpp_isinf_or_builtin(__x.real()))"},
{"lineNum":" 1270","line":"    {"},
{"lineNum":" 1271","line":"        if (!__libcpp_isfinite_or_builtin(__x.imag()))"},
{"lineNum":" 1272","line":"            return complex<_Tp>(_Tp(1), _Tp(0));"},
{"lineNum":" 1273","line":"        return complex<_Tp>(_Tp(1), copysign(_Tp(0), sin(_Tp(2) * __x.imag())));"},
{"lineNum":" 1274","line":"    }"},
{"lineNum":" 1275","line":"    if (__libcpp_isnan_or_builtin(__x.real()) && __x.imag() == 0)"},
{"lineNum":" 1276","line":"        return __x;"},
{"lineNum":" 1277","line":"    _Tp __2r(_Tp(2) * __x.real());"},
{"lineNum":" 1278","line":"    _Tp __2i(_Tp(2) * __x.imag());"},
{"lineNum":" 1279","line":"    _Tp __d(cosh(__2r) + cos(__2i));"},
{"lineNum":" 1280","line":"    _Tp __2rsh(sinh(__2r));"},
{"lineNum":" 1281","line":"    if (__libcpp_isinf_or_builtin(__2rsh) && __libcpp_isinf_or_builtin(__d))"},
{"lineNum":" 1282","line":"        return complex<_Tp>(__2rsh > _Tp(0) ? _Tp(1) : _Tp(-1),"},
{"lineNum":" 1283","line":"                            __2i > _Tp(0) ? _Tp(0) : _Tp(-0.));"},
{"lineNum":" 1284","line":"    return  complex<_Tp>(__2rsh/__d, sin(__2i)/__d);"},
{"lineNum":" 1285","line":"}"},
{"lineNum":" 1286","line":""},
{"lineNum":" 1287","line":"// asin"},
{"lineNum":" 1288","line":""},
{"lineNum":" 1289","line":"template<class _Tp>"},
{"lineNum":" 1290","line":"complex<_Tp>"},
{"lineNum":" 1291","line":"asin(const complex<_Tp>& __x)"},
{"lineNum":" 1292","line":"{"},
{"lineNum":" 1293","line":"    complex<_Tp> __z = asinh(complex<_Tp>(-__x.imag(), __x.real()));"},
{"lineNum":" 1294","line":"    return complex<_Tp>(__z.imag(), -__z.real());"},
{"lineNum":" 1295","line":"}"},
{"lineNum":" 1296","line":""},
{"lineNum":" 1297","line":"// acos"},
{"lineNum":" 1298","line":""},
{"lineNum":" 1299","line":"template<class _Tp>"},
{"lineNum":" 1300","line":"complex<_Tp>"},
{"lineNum":" 1301","line":"acos(const complex<_Tp>& __x)"},
{"lineNum":" 1302","line":"{"},
{"lineNum":" 1303","line":"    const _Tp __pi(atan2(+0., -0.));"},
{"lineNum":" 1304","line":"    if (__libcpp_isinf_or_builtin(__x.real()))"},
{"lineNum":" 1305","line":"    {"},
{"lineNum":" 1306","line":"        if (__libcpp_isnan_or_builtin(__x.imag()))"},
{"lineNum":" 1307","line":"            return complex<_Tp>(__x.imag(), __x.real());"},
{"lineNum":" 1308","line":"        if (__libcpp_isinf_or_builtin(__x.imag()))"},
{"lineNum":" 1309","line":"        {"},
{"lineNum":" 1310","line":"            if (__x.real() < _Tp(0))"},
{"lineNum":" 1311","line":"                return complex<_Tp>(_Tp(0.75) * __pi, -__x.imag());"},
{"lineNum":" 1312","line":"            return complex<_Tp>(_Tp(0.25) * __pi, -__x.imag());"},
{"lineNum":" 1313","line":"        }"},
{"lineNum":" 1314","line":"        if (__x.real() < _Tp(0))"},
{"lineNum":" 1315","line":"            return complex<_Tp>(__pi, signbit(__x.imag()) ? -__x.real() : __x.real());"},
{"lineNum":" 1316","line":"        return complex<_Tp>(_Tp(0), signbit(__x.imag()) ? __x.real() : -__x.real());"},
{"lineNum":" 1317","line":"    }"},
{"lineNum":" 1318","line":"    if (__libcpp_isnan_or_builtin(__x.real()))"},
{"lineNum":" 1319","line":"    {"},
{"lineNum":" 1320","line":"        if (__libcpp_isinf_or_builtin(__x.imag()))"},
{"lineNum":" 1321","line":"            return complex<_Tp>(__x.real(), -__x.imag());"},
{"lineNum":" 1322","line":"        return complex<_Tp>(__x.real(), __x.real());"},
{"lineNum":" 1323","line":"    }"},
{"lineNum":" 1324","line":"    if (__libcpp_isinf_or_builtin(__x.imag()))"},
{"lineNum":" 1325","line":"        return complex<_Tp>(__pi/_Tp(2), -__x.imag());"},
{"lineNum":" 1326","line":"    if (__x.real() == 0 && (__x.imag() == 0 || isnan(__x.imag())))"},
{"lineNum":" 1327","line":"        return complex<_Tp>(__pi/_Tp(2), -__x.imag());"},
{"lineNum":" 1328","line":"    complex<_Tp> __z = log(__x + sqrt(__sqr(__x) - _Tp(1)));"},
{"lineNum":" 1329","line":"    if (signbit(__x.imag()))"},
{"lineNum":" 1330","line":"        return complex<_Tp>(abs(__z.imag()), abs(__z.real()));"},
{"lineNum":" 1331","line":"    return complex<_Tp>(abs(__z.imag()), -abs(__z.real()));"},
{"lineNum":" 1332","line":"}"},
{"lineNum":" 1333","line":""},
{"lineNum":" 1334","line":"// atan"},
{"lineNum":" 1335","line":""},
{"lineNum":" 1336","line":"template<class _Tp>"},
{"lineNum":" 1337","line":"complex<_Tp>"},
{"lineNum":" 1338","line":"atan(const complex<_Tp>& __x)"},
{"lineNum":" 1339","line":"{"},
{"lineNum":" 1340","line":"    complex<_Tp> __z = atanh(complex<_Tp>(-__x.imag(), __x.real()));"},
{"lineNum":" 1341","line":"    return complex<_Tp>(__z.imag(), -__z.real());"},
{"lineNum":" 1342","line":"}"},
{"lineNum":" 1343","line":""},
{"lineNum":" 1344","line":"// sin"},
{"lineNum":" 1345","line":""},
{"lineNum":" 1346","line":"template<class _Tp>"},
{"lineNum":" 1347","line":"complex<_Tp>"},
{"lineNum":" 1348","line":"sin(const complex<_Tp>& __x)"},
{"lineNum":" 1349","line":"{"},
{"lineNum":" 1350","line":"    complex<_Tp> __z = sinh(complex<_Tp>(-__x.imag(), __x.real()));"},
{"lineNum":" 1351","line":"    return complex<_Tp>(__z.imag(), -__z.real());"},
{"lineNum":" 1352","line":"}"},
{"lineNum":" 1353","line":""},
{"lineNum":" 1354","line":"// cos"},
{"lineNum":" 1355","line":""},
{"lineNum":" 1356","line":"template<class _Tp>"},
{"lineNum":" 1357","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1358","line":"complex<_Tp>"},
{"lineNum":" 1359","line":"cos(const complex<_Tp>& __x)"},
{"lineNum":" 1360","line":"{"},
{"lineNum":" 1361","line":"    return cosh(complex<_Tp>(-__x.imag(), __x.real()));"},
{"lineNum":" 1362","line":"}"},
{"lineNum":" 1363","line":""},
{"lineNum":" 1364","line":"// tan"},
{"lineNum":" 1365","line":""},
{"lineNum":" 1366","line":"template<class _Tp>"},
{"lineNum":" 1367","line":"complex<_Tp>"},
{"lineNum":" 1368","line":"tan(const complex<_Tp>& __x)"},
{"lineNum":" 1369","line":"{"},
{"lineNum":" 1370","line":"    complex<_Tp> __z = tanh(complex<_Tp>(-__x.imag(), __x.real()));"},
{"lineNum":" 1371","line":"    return complex<_Tp>(__z.imag(), -__z.real());"},
{"lineNum":" 1372","line":"}"},
{"lineNum":" 1373","line":""},
{"lineNum":" 1374","line":"template<class _Tp, class _CharT, class _Traits>"},
{"lineNum":" 1375","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 1376","line":"operator>>(basic_istream<_CharT, _Traits>& __is, complex<_Tp>& __x)"},
{"lineNum":" 1377","line":"{"},
{"lineNum":" 1378","line":"    if (__is.good())"},
{"lineNum":" 1379","line":"    {"},
{"lineNum":" 1380","line":"        ws(__is);"},
{"lineNum":" 1381","line":"        if (__is.peek() == _CharT(\'(\'))"},
{"lineNum":" 1382","line":"        {"},
{"lineNum":" 1383","line":"            __is.get();"},
{"lineNum":" 1384","line":"            _Tp __r;"},
{"lineNum":" 1385","line":"            __is >> __r;"},
{"lineNum":" 1386","line":"            if (!__is.fail())"},
{"lineNum":" 1387","line":"            {"},
{"lineNum":" 1388","line":"                ws(__is);"},
{"lineNum":" 1389","line":"                _CharT __c = __is.peek();"},
{"lineNum":" 1390","line":"                if (__c == _CharT(\',\'))"},
{"lineNum":" 1391","line":"                {"},
{"lineNum":" 1392","line":"                    __is.get();"},
{"lineNum":" 1393","line":"                    _Tp __i;"},
{"lineNum":" 1394","line":"                    __is >> __i;"},
{"lineNum":" 1395","line":"                    if (!__is.fail())"},
{"lineNum":" 1396","line":"                    {"},
{"lineNum":" 1397","line":"                        ws(__is);"},
{"lineNum":" 1398","line":"                        __c = __is.peek();"},
{"lineNum":" 1399","line":"                        if (__c == _CharT(\')\'))"},
{"lineNum":" 1400","line":"                        {"},
{"lineNum":" 1401","line":"                            __is.get();"},
{"lineNum":" 1402","line":"                            __x = complex<_Tp>(__r, __i);"},
{"lineNum":" 1403","line":"                        }"},
{"lineNum":" 1404","line":"                        else"},
{"lineNum":" 1405","line":"                            __is.setstate(__is.failbit);"},
{"lineNum":" 1406","line":"                    }"},
{"lineNum":" 1407","line":"                    else"},
{"lineNum":" 1408","line":"                        __is.setstate(__is.failbit);"},
{"lineNum":" 1409","line":"                }"},
{"lineNum":" 1410","line":"                else if (__c == _CharT(\')\'))"},
{"lineNum":" 1411","line":"                {"},
{"lineNum":" 1412","line":"                    __is.get();"},
{"lineNum":" 1413","line":"                    __x = complex<_Tp>(__r, _Tp(0));"},
{"lineNum":" 1414","line":"                }"},
{"lineNum":" 1415","line":"                else"},
{"lineNum":" 1416","line":"                    __is.setstate(__is.failbit);"},
{"lineNum":" 1417","line":"            }"},
{"lineNum":" 1418","line":"            else"},
{"lineNum":" 1419","line":"                __is.setstate(__is.failbit);"},
{"lineNum":" 1420","line":"        }"},
{"lineNum":" 1421","line":"        else"},
{"lineNum":" 1422","line":"        {"},
{"lineNum":" 1423","line":"            _Tp __r;"},
{"lineNum":" 1424","line":"            __is >> __r;"},
{"lineNum":" 1425","line":"            if (!__is.fail())"},
{"lineNum":" 1426","line":"                __x = complex<_Tp>(__r, _Tp(0));"},
{"lineNum":" 1427","line":"            else"},
{"lineNum":" 1428","line":"                __is.setstate(__is.failbit);"},
{"lineNum":" 1429","line":"        }"},
{"lineNum":" 1430","line":"    }"},
{"lineNum":" 1431","line":"    else"},
{"lineNum":" 1432","line":"        __is.setstate(__is.failbit);"},
{"lineNum":" 1433","line":"    return __is;"},
{"lineNum":" 1434","line":"}"},
{"lineNum":" 1435","line":""},
{"lineNum":" 1436","line":"#if !defined(_LIBCPP_HAS_NO_LOCALIZATION)"},
{"lineNum":" 1437","line":"template<class _Tp, class _CharT, class _Traits>"},
{"lineNum":" 1438","line":"basic_ostream<_CharT, _Traits>&"},
{"lineNum":" 1439","line":"operator<<(basic_ostream<_CharT, _Traits>& __os, const complex<_Tp>& __x)"},
{"lineNum":" 1440","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1441","line":"    basic_ostringstream<_CharT, _Traits> __s;"},
{"lineNum":" 1442","line":"    __s.flags(__os.flags());","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1443","line":"    __s.imbue(__os.getloc());","class":"lineNoCov","hits":"0","possible_hits":"3",},
{"lineNum":" 1444","line":"    __s.precision(__os.precision());","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1445","line":"    __s << \'(\' << __x.real() << \',\' << __x.imag() << \')\';","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 1446","line":"    return __os << __s.str();"},
{"lineNum":" 1447","line":"}","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":" 1448","line":"#endif // !_LIBCPP_HAS_NO_LOCALIZATION"},
{"lineNum":" 1449","line":""},
{"lineNum":" 1450","line":"#if _LIBCPP_STD_VER > 11"},
{"lineNum":" 1451","line":"// Literal suffix for complex number literals [complex.literals]"},
{"lineNum":" 1452","line":"inline namespace literals"},
{"lineNum":" 1453","line":"{"},
{"lineNum":" 1454","line":"  inline namespace complex_literals"},
{"lineNum":" 1455","line":"  {"},
{"lineNum":" 1456","line":"    constexpr complex<long double> operator\"\"il(long double __im)"},
{"lineNum":" 1457","line":"    {"},
{"lineNum":" 1458","line":"        return { 0.0l, __im };"},
{"lineNum":" 1459","line":"    }"},
{"lineNum":" 1460","line":""},
{"lineNum":" 1461","line":"    constexpr complex<long double> operator\"\"il(unsigned long long __im)"},
{"lineNum":" 1462","line":"    {"},
{"lineNum":" 1463","line":"        return { 0.0l, static_cast<long double>(__im) };"},
{"lineNum":" 1464","line":"    }"},
{"lineNum":" 1465","line":""},
{"lineNum":" 1466","line":""},
{"lineNum":" 1467","line":"    constexpr complex<double> operator\"\"i(long double __im)"},
{"lineNum":" 1468","line":"    {"},
{"lineNum":" 1469","line":"        return { 0.0, static_cast<double>(__im) };"},
{"lineNum":" 1470","line":"    }"},
{"lineNum":" 1471","line":""},
{"lineNum":" 1472","line":"    constexpr complex<double> operator\"\"i(unsigned long long __im)"},
{"lineNum":" 1473","line":"    {"},
{"lineNum":" 1474","line":"        return { 0.0, static_cast<double>(__im) };"},
{"lineNum":" 1475","line":"    }"},
{"lineNum":" 1476","line":""},
{"lineNum":" 1477","line":""},
{"lineNum":" 1478","line":"    constexpr complex<float> operator\"\"if(long double __im)"},
{"lineNum":" 1479","line":"    {"},
{"lineNum":" 1480","line":"        return { 0.0f, static_cast<float>(__im) };"},
{"lineNum":" 1481","line":"    }"},
{"lineNum":" 1482","line":""},
{"lineNum":" 1483","line":"    constexpr complex<float> operator\"\"if(unsigned long long __im)"},
{"lineNum":" 1484","line":"    {"},
{"lineNum":" 1485","line":"        return { 0.0f, static_cast<float>(__im) };"},
{"lineNum":" 1486","line":"    }"},
{"lineNum":" 1487","line":"  }"},
{"lineNum":" 1488","line":"}"},
{"lineNum":" 1489","line":"#endif"},
{"lineNum":" 1490","line":""},
{"lineNum":" 1491","line":"_LIBCPP_END_NAMESPACE_STD"},
{"lineNum":" 1492","line":""},
{"lineNum":" 1493","line":"#endif // _LIBCPP_COMPLEX"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 55, "covered" : 0,};
var merged_data = [];
