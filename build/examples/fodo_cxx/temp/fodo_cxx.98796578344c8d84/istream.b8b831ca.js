var data = {lines:[
{"lineNum":"    1","line":"// -*- C++ -*-"},
{"lineNum":"    2","line":"//===--------------------------- istream ----------------------------------===//"},
{"lineNum":"    3","line":"//"},
{"lineNum":"    4","line":"// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions."},
{"lineNum":"    5","line":"// See https://llvm.org/LICENSE.txt for license information."},
{"lineNum":"    6","line":"// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception"},
{"lineNum":"    7","line":"//"},
{"lineNum":"    8","line":"//===----------------------------------------------------------------------===//"},
{"lineNum":"    9","line":""},
{"lineNum":"   10","line":"#ifndef _LIBCPP_ISTREAM"},
{"lineNum":"   11","line":"#define _LIBCPP_ISTREAM"},
{"lineNum":"   12","line":""},
{"lineNum":"   13","line":"/*"},
{"lineNum":"   14","line":"    istream synopsis"},
{"lineNum":"   15","line":""},
{"lineNum":"   16","line":"template <class charT, class traits = char_traits<charT> >"},
{"lineNum":"   17","line":"class basic_istream"},
{"lineNum":"   18","line":"    : virtual public basic_ios<charT,traits>"},
{"lineNum":"   19","line":"{"},
{"lineNum":"   20","line":"public:"},
{"lineNum":"   21","line":"    // types (inherited from basic_ios (27.5.4)):"},
{"lineNum":"   22","line":"    typedef charT                          char_type;"},
{"lineNum":"   23","line":"    typedef traits                         traits_type;"},
{"lineNum":"   24","line":"    typedef typename traits_type::int_type int_type;"},
{"lineNum":"   25","line":"    typedef typename traits_type::pos_type pos_type;"},
{"lineNum":"   26","line":"    typedef typename traits_type::off_type off_type;"},
{"lineNum":"   27","line":""},
{"lineNum":"   28","line":"    // 27.7.1.1.1 Constructor/destructor:"},
{"lineNum":"   29","line":"    explicit basic_istream(basic_streambuf<char_type, traits_type>* sb);"},
{"lineNum":"   30","line":"    basic_istream(basic_istream&& rhs);"},
{"lineNum":"   31","line":"    virtual ~basic_istream();"},
{"lineNum":"   32","line":""},
{"lineNum":"   33","line":"    // 27.7.1.1.2 Assign/swap:"},
{"lineNum":"   34","line":"    basic_istream& operator=(basic_istream&& rhs);"},
{"lineNum":"   35","line":"    void swap(basic_istream& rhs);"},
{"lineNum":"   36","line":""},
{"lineNum":"   37","line":"    // 27.7.1.1.3 Prefix/suffix:"},
{"lineNum":"   38","line":"    class sentry;"},
{"lineNum":"   39","line":""},
{"lineNum":"   40","line":"    // 27.7.1.2 Formatted input:"},
{"lineNum":"   41","line":"    basic_istream& operator>>(basic_istream& (*pf)(basic_istream&));"},
{"lineNum":"   42","line":"    basic_istream& operator>>(basic_ios<char_type, traits_type>&"},
{"lineNum":"   43","line":"                              (*pf)(basic_ios<char_type, traits_type>&));"},
{"lineNum":"   44","line":"    basic_istream& operator>>(ios_base& (*pf)(ios_base&));"},
{"lineNum":"   45","line":"    basic_istream& operator>>(basic_streambuf<char_type, traits_type>* sb);"},
{"lineNum":"   46","line":"    basic_istream& operator>>(bool& n);"},
{"lineNum":"   47","line":"    basic_istream& operator>>(short& n);"},
{"lineNum":"   48","line":"    basic_istream& operator>>(unsigned short& n);"},
{"lineNum":"   49","line":"    basic_istream& operator>>(int& n);"},
{"lineNum":"   50","line":"    basic_istream& operator>>(unsigned int& n);"},
{"lineNum":"   51","line":"    basic_istream& operator>>(long& n);"},
{"lineNum":"   52","line":"    basic_istream& operator>>(unsigned long& n);"},
{"lineNum":"   53","line":"    basic_istream& operator>>(long long& n);"},
{"lineNum":"   54","line":"    basic_istream& operator>>(unsigned long long& n);"},
{"lineNum":"   55","line":"    basic_istream& operator>>(float& f);"},
{"lineNum":"   56","line":"    basic_istream& operator>>(double& f);"},
{"lineNum":"   57","line":"    basic_istream& operator>>(long double& f);"},
{"lineNum":"   58","line":"    basic_istream& operator>>(void*& p);"},
{"lineNum":"   59","line":""},
{"lineNum":"   60","line":"    // 27.7.1.3 Unformatted input:"},
{"lineNum":"   61","line":"    streamsize gcount() const;"},
{"lineNum":"   62","line":"    int_type get();"},
{"lineNum":"   63","line":"    basic_istream& get(char_type& c);"},
{"lineNum":"   64","line":"    basic_istream& get(char_type* s, streamsize n);"},
{"lineNum":"   65","line":"    basic_istream& get(char_type* s, streamsize n, char_type delim);"},
{"lineNum":"   66","line":"    basic_istream& get(basic_streambuf<char_type,traits_type>& sb);"},
{"lineNum":"   67","line":"    basic_istream& get(basic_streambuf<char_type,traits_type>& sb, char_type delim);"},
{"lineNum":"   68","line":""},
{"lineNum":"   69","line":"    basic_istream& getline(char_type* s, streamsize n);"},
{"lineNum":"   70","line":"    basic_istream& getline(char_type* s, streamsize n, char_type delim);"},
{"lineNum":"   71","line":""},
{"lineNum":"   72","line":"    basic_istream& ignore(streamsize n = 1, int_type delim = traits_type::eof());"},
{"lineNum":"   73","line":"    int_type peek();"},
{"lineNum":"   74","line":"    basic_istream& read (char_type* s, streamsize n);"},
{"lineNum":"   75","line":"    streamsize readsome(char_type* s, streamsize n);"},
{"lineNum":"   76","line":""},
{"lineNum":"   77","line":"    basic_istream& putback(char_type c);"},
{"lineNum":"   78","line":"    basic_istream& unget();"},
{"lineNum":"   79","line":"    int sync();"},
{"lineNum":"   80","line":""},
{"lineNum":"   81","line":"    pos_type tellg();"},
{"lineNum":"   82","line":"    basic_istream& seekg(pos_type);"},
{"lineNum":"   83","line":"    basic_istream& seekg(off_type, ios_base::seekdir);"},
{"lineNum":"   84","line":"protected:"},
{"lineNum":"   85","line":"    basic_istream(const basic_istream& rhs) = delete;"},
{"lineNum":"   86","line":"    basic_istream(basic_istream&& rhs);"},
{"lineNum":"   87","line":"    // 27.7.2.1.2 Assign/swap:"},
{"lineNum":"   88","line":"    basic_istream& operator=(const basic_istream& rhs) = delete;"},
{"lineNum":"   89","line":"    basic_istream& operator=(basic_istream&& rhs);"},
{"lineNum":"   90","line":"    void swap(basic_istream& rhs);"},
{"lineNum":"   91","line":"};"},
{"lineNum":"   92","line":""},
{"lineNum":"   93","line":"// 27.7.1.2.3 character extraction templates:"},
{"lineNum":"   94","line":"template<class charT, class traits>"},
{"lineNum":"   95","line":"  basic_istream<charT,traits>& operator>>(basic_istream<charT,traits>&, charT&);"},
{"lineNum":"   96","line":""},
{"lineNum":"   97","line":"template<class traits>"},
{"lineNum":"   98","line":"  basic_istream<char,traits>& operator>>(basic_istream<char,traits>&, unsigned char&);"},
{"lineNum":"   99","line":""},
{"lineNum":"  100","line":"template<class traits>"},
{"lineNum":"  101","line":"  basic_istream<char,traits>& operator>>(basic_istream<char,traits>&, signed char&);"},
{"lineNum":"  102","line":""},
{"lineNum":"  103","line":"template<class charT, class traits>"},
{"lineNum":"  104","line":"  basic_istream<charT,traits>& operator>>(basic_istream<charT,traits>&, charT*);"},
{"lineNum":"  105","line":""},
{"lineNum":"  106","line":"template<class traits>"},
{"lineNum":"  107","line":"  basic_istream<char,traits>& operator>>(basic_istream<char,traits>&, unsigned char*);"},
{"lineNum":"  108","line":""},
{"lineNum":"  109","line":"template<class traits>"},
{"lineNum":"  110","line":"  basic_istream<char,traits>& operator>>(basic_istream<char,traits>&, signed char*);"},
{"lineNum":"  111","line":""},
{"lineNum":"  112","line":"template <class charT, class traits>"},
{"lineNum":"  113","line":"  void"},
{"lineNum":"  114","line":"  swap(basic_istream<charT, traits>& x, basic_istream<charT, traits>& y);"},
{"lineNum":"  115","line":""},
{"lineNum":"  116","line":"typedef basic_istream<char> istream;"},
{"lineNum":"  117","line":"typedef basic_istream<wchar_t> wistream;"},
{"lineNum":"  118","line":""},
{"lineNum":"  119","line":"template <class charT, class traits = char_traits<charT> >"},
{"lineNum":"  120","line":"class basic_iostream :"},
{"lineNum":"  121","line":"    public basic_istream<charT,traits>,"},
{"lineNum":"  122","line":"    public basic_ostream<charT,traits>"},
{"lineNum":"  123","line":"{"},
{"lineNum":"  124","line":"public:"},
{"lineNum":"  125","line":"    // types:"},
{"lineNum":"  126","line":"    typedef charT                          char_type;"},
{"lineNum":"  127","line":"    typedef traits                         traits_type;"},
{"lineNum":"  128","line":"    typedef typename traits_type::int_type int_type;"},
{"lineNum":"  129","line":"    typedef typename traits_type::pos_type pos_type;"},
{"lineNum":"  130","line":"    typedef typename traits_type::off_type off_type;"},
{"lineNum":"  131","line":""},
{"lineNum":"  132","line":"    // constructor/destructor"},
{"lineNum":"  133","line":"    explicit basic_iostream(basic_streambuf<char_type, traits_type>* sb);"},
{"lineNum":"  134","line":"    basic_iostream(basic_iostream&& rhs);"},
{"lineNum":"  135","line":"    virtual ~basic_iostream();"},
{"lineNum":"  136","line":""},
{"lineNum":"  137","line":"    // assign/swap"},
{"lineNum":"  138","line":"    basic_iostream& operator=(basic_iostream&& rhs);"},
{"lineNum":"  139","line":"    void swap(basic_iostream& rhs);"},
{"lineNum":"  140","line":"};"},
{"lineNum":"  141","line":""},
{"lineNum":"  142","line":"template <class charT, class traits>"},
{"lineNum":"  143","line":"  void"},
{"lineNum":"  144","line":"  swap(basic_iostream<charT, traits>& x, basic_iostream<charT, traits>& y);"},
{"lineNum":"  145","line":""},
{"lineNum":"  146","line":"typedef basic_iostream<char> iostream;"},
{"lineNum":"  147","line":"typedef basic_iostream<wchar_t> wiostream;"},
{"lineNum":"  148","line":""},
{"lineNum":"  149","line":"template <class charT, class traits>"},
{"lineNum":"  150","line":"  basic_istream<charT,traits>&"},
{"lineNum":"  151","line":"  ws(basic_istream<charT,traits>& is);"},
{"lineNum":"  152","line":""},
{"lineNum":"  153","line":"// rvalue stream extraction"},
{"lineNum":"  154","line":"template <class Stream, class T>"},
{"lineNum":"  155","line":"  Stream&& operator>>(Stream&& is, T&& x);"},
{"lineNum":"  156","line":""},
{"lineNum":"  157","line":"}  // std"},
{"lineNum":"  158","line":""},
{"lineNum":"  159","line":"*/"},
{"lineNum":"  160","line":""},
{"lineNum":"  161","line":"#include <__config>"},
{"lineNum":"  162","line":"#include <__utility/forward.h>"},
{"lineNum":"  163","line":"#include <ostream>"},
{"lineNum":"  164","line":"#include <version>"},
{"lineNum":"  165","line":""},
{"lineNum":"  166","line":"#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)"},
{"lineNum":"  167","line":"#pragma GCC system_header"},
{"lineNum":"  168","line":"#endif"},
{"lineNum":"  169","line":""},
{"lineNum":"  170","line":"_LIBCPP_PUSH_MACROS"},
{"lineNum":"  171","line":"#include <__undef_macros>"},
{"lineNum":"  172","line":""},
{"lineNum":"  173","line":""},
{"lineNum":"  174","line":"_LIBCPP_BEGIN_NAMESPACE_STD"},
{"lineNum":"  175","line":""},
{"lineNum":"  176","line":"template <class _CharT, class _Traits>"},
{"lineNum":"  177","line":"class _LIBCPP_TEMPLATE_VIS basic_istream"},
{"lineNum":"  178","line":"    : virtual public basic_ios<_CharT, _Traits>"},
{"lineNum":"  179","line":"{"},
{"lineNum":"  180","line":"    streamsize __gc_;"},
{"lineNum":"  181","line":"public:"},
{"lineNum":"  182","line":"    // types (inherited from basic_ios (27.5.4)):"},
{"lineNum":"  183","line":"    typedef _CharT                         char_type;"},
{"lineNum":"  184","line":"    typedef _Traits                        traits_type;"},
{"lineNum":"  185","line":"    typedef typename traits_type::int_type int_type;"},
{"lineNum":"  186","line":"    typedef typename traits_type::pos_type pos_type;"},
{"lineNum":"  187","line":"    typedef typename traits_type::off_type off_type;"},
{"lineNum":"  188","line":""},
{"lineNum":"  189","line":"    // 27.7.1.1.1 Constructor/destructor:"},
{"lineNum":"  190","line":"    inline _LIBCPP_HIDE_FROM_ABI_AFTER_V1"},
{"lineNum":"  191","line":"    explicit basic_istream(basic_streambuf<char_type, traits_type>* __sb) : __gc_(0)","class":"lineNoCov","hits":"0","possible_hits":"43",},
{"lineNum":"  192","line":"    { this->init(__sb); }","class":"lineNoCov","hits":"0","possible_hits":"43",},
{"lineNum":"  193","line":"    virtual ~basic_istream();"},
{"lineNum":"  194","line":"protected:"},
{"lineNum":"  195","line":"    inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  196","line":"    basic_istream(basic_istream&& __rhs);"},
{"lineNum":"  197","line":""},
{"lineNum":"  198","line":"    // 27.7.1.1.2 Assign/swap:"},
{"lineNum":"  199","line":"    inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  200","line":"    basic_istream& operator=(basic_istream&& __rhs);"},
{"lineNum":"  201","line":""},
{"lineNum":"  202","line":"    inline _LIBCPP_HIDE_FROM_ABI_AFTER_V1"},
{"lineNum":"  203","line":"    void swap(basic_istream& __rhs) {"},
{"lineNum":"  204","line":"      _VSTD::swap(__gc_, __rhs.__gc_);"},
{"lineNum":"  205","line":"      basic_ios<char_type, traits_type>::swap(__rhs);"},
{"lineNum":"  206","line":"    }"},
{"lineNum":"  207","line":""},
{"lineNum":"  208","line":"    basic_istream           (const basic_istream& __rhs) = delete;"},
{"lineNum":"  209","line":"    basic_istream& operator=(const basic_istream& __rhs) = delete;"},
{"lineNum":"  210","line":"public:"},
{"lineNum":"  211","line":""},
{"lineNum":"  212","line":"    // 27.7.1.1.3 Prefix/suffix:"},
{"lineNum":"  213","line":"    class _LIBCPP_TEMPLATE_VIS sentry;"},
{"lineNum":"  214","line":""},
{"lineNum":"  215","line":"    // 27.7.1.2 Formatted input:"},
{"lineNum":"  216","line":"    inline _LIBCPP_HIDE_FROM_ABI_AFTER_V1"},
{"lineNum":"  217","line":"    basic_istream& operator>>(basic_istream& (*__pf)(basic_istream&))"},
{"lineNum":"  218","line":"    { return __pf(*this); }"},
{"lineNum":"  219","line":""},
{"lineNum":"  220","line":"    inline _LIBCPP_HIDE_FROM_ABI_AFTER_V1"},
{"lineNum":"  221","line":"    basic_istream& operator>>(basic_ios<char_type, traits_type>&"},
{"lineNum":"  222","line":"                              (*__pf)(basic_ios<char_type, traits_type>&))"},
{"lineNum":"  223","line":"    { __pf(*this); return *this; }"},
{"lineNum":"  224","line":""},
{"lineNum":"  225","line":"    inline _LIBCPP_HIDE_FROM_ABI_AFTER_V1"},
{"lineNum":"  226","line":"    basic_istream& operator>>(ios_base& (*__pf)(ios_base&))"},
{"lineNum":"  227","line":"    { __pf(*this); return *this; }"},
{"lineNum":"  228","line":""},
{"lineNum":"  229","line":"    basic_istream& operator>>(basic_streambuf<char_type, traits_type>* __sb);"},
{"lineNum":"  230","line":"    basic_istream& operator>>(bool& __n);"},
{"lineNum":"  231","line":"    basic_istream& operator>>(short& __n);"},
{"lineNum":"  232","line":"    basic_istream& operator>>(unsigned short& __n);"},
{"lineNum":"  233","line":"    basic_istream& operator>>(int& __n);"},
{"lineNum":"  234","line":"    basic_istream& operator>>(unsigned int& __n);"},
{"lineNum":"  235","line":"    basic_istream& operator>>(long& __n);"},
{"lineNum":"  236","line":"    basic_istream& operator>>(unsigned long& __n);"},
{"lineNum":"  237","line":"    basic_istream& operator>>(long long& __n);"},
{"lineNum":"  238","line":"    basic_istream& operator>>(unsigned long long& __n);"},
{"lineNum":"  239","line":"    basic_istream& operator>>(float& __f);"},
{"lineNum":"  240","line":"    basic_istream& operator>>(double& __f);"},
{"lineNum":"  241","line":"    basic_istream& operator>>(long double& __f);"},
{"lineNum":"  242","line":"    basic_istream& operator>>(void*& __p);"},
{"lineNum":"  243","line":""},
{"lineNum":"  244","line":"    // 27.7.1.3 Unformatted input:"},
{"lineNum":"  245","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  246","line":"    streamsize gcount() const {return __gc_;}","class":"lineNoCov","hits":"0","possible_hits":"65",},
{"lineNum":"  247","line":"    int_type get();"},
{"lineNum":"  248","line":""},
{"lineNum":"  249","line":"    inline _LIBCPP_HIDE_FROM_ABI_AFTER_V1"},
{"lineNum":"  250","line":"    basic_istream& get(char_type& __c) {"},
{"lineNum":"  251","line":"      int_type __ch = get();"},
{"lineNum":"  252","line":"      if (__ch != traits_type::eof())"},
{"lineNum":"  253","line":"        __c = traits_type::to_char_type(__ch);"},
{"lineNum":"  254","line":"      return *this;"},
{"lineNum":"  255","line":"    }"},
{"lineNum":"  256","line":""},
{"lineNum":"  257","line":"    inline _LIBCPP_HIDE_FROM_ABI_AFTER_V1"},
{"lineNum":"  258","line":"    basic_istream& get(char_type* __s, streamsize __n)"},
{"lineNum":"  259","line":"    { return get(__s, __n, this->widen(\'\\n\')); }"},
{"lineNum":"  260","line":""},
{"lineNum":"  261","line":"    basic_istream& get(char_type* __s, streamsize __n, char_type __dlm);"},
{"lineNum":"  262","line":""},
{"lineNum":"  263","line":"    inline _LIBCPP_HIDE_FROM_ABI_AFTER_V1"},
{"lineNum":"  264","line":"    basic_istream& get(basic_streambuf<char_type, traits_type>& __sb)"},
{"lineNum":"  265","line":"    { return get(__sb, this->widen(\'\\n\')); }"},
{"lineNum":"  266","line":""},
{"lineNum":"  267","line":"    basic_istream& get(basic_streambuf<char_type, traits_type>& __sb, char_type __dlm);"},
{"lineNum":"  268","line":""},
{"lineNum":"  269","line":"    inline _LIBCPP_HIDE_FROM_ABI_AFTER_V1"},
{"lineNum":"  270","line":"    basic_istream& getline(char_type* __s, streamsize __n)"},
{"lineNum":"  271","line":"    { return getline(__s, __n, this->widen(\'\\n\')); }"},
{"lineNum":"  272","line":""},
{"lineNum":"  273","line":"    basic_istream& getline(char_type* __s, streamsize __n, char_type __dlm);"},
{"lineNum":"  274","line":""},
{"lineNum":"  275","line":"    basic_istream& ignore(streamsize __n = 1, int_type __dlm = traits_type::eof());"},
{"lineNum":"  276","line":"    int_type peek();"},
{"lineNum":"  277","line":"    basic_istream& read (char_type* __s, streamsize __n);"},
{"lineNum":"  278","line":"    streamsize readsome(char_type* __s, streamsize __n);"},
{"lineNum":"  279","line":""},
{"lineNum":"  280","line":"    basic_istream& putback(char_type __c);"},
{"lineNum":"  281","line":"    basic_istream& unget();"},
{"lineNum":"  282","line":"    int sync();"},
{"lineNum":"  283","line":""},
{"lineNum":"  284","line":"    pos_type tellg();"},
{"lineNum":"  285","line":"    basic_istream& seekg(pos_type __pos);"},
{"lineNum":"  286","line":"    basic_istream& seekg(off_type __off, ios_base::seekdir __dir);"},
{"lineNum":"  287","line":"};"},
{"lineNum":"  288","line":""},
{"lineNum":"  289","line":"template <class _CharT, class _Traits>"},
{"lineNum":"  290","line":"class _LIBCPP_TEMPLATE_VIS basic_istream<_CharT, _Traits>::sentry"},
{"lineNum":"  291","line":"{"},
{"lineNum":"  292","line":"    bool __ok_;"},
{"lineNum":"  293","line":""},
{"lineNum":"  294","line":"    sentry(const sentry&); // = delete;"},
{"lineNum":"  295","line":"    sentry& operator=(const sentry&); // = delete;"},
{"lineNum":"  296","line":""},
{"lineNum":"  297","line":"public:"},
{"lineNum":"  298","line":"    explicit sentry(basic_istream<_CharT, _Traits>& __is, bool __noskipws = false);"},
{"lineNum":"  299","line":"//    ~sentry() = default;"},
{"lineNum":"  300","line":""},
{"lineNum":"  301","line":"    _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  302","line":"    explicit operator bool() const {return __ok_;}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  303","line":"};"},
{"lineNum":"  304","line":""},
{"lineNum":"  305","line":"template <class _CharT, class _Traits>"},
{"lineNum":"  306","line":"basic_istream<_CharT, _Traits>::sentry::sentry(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":"  307","line":"                                               bool __noskipws)"},
{"lineNum":"  308","line":"    : __ok_(false)"},
{"lineNum":"  309","line":"{"},
{"lineNum":"  310","line":"    if (__is.good())"},
{"lineNum":"  311","line":"    {"},
{"lineNum":"  312","line":"        if (__is.tie())"},
{"lineNum":"  313","line":"            __is.tie()->flush();"},
{"lineNum":"  314","line":"        if (!__noskipws && (__is.flags() & ios_base::skipws))"},
{"lineNum":"  315","line":"        {"},
{"lineNum":"  316","line":"            typedef istreambuf_iterator<_CharT, _Traits> _Ip;"},
{"lineNum":"  317","line":"            const ctype<_CharT>& __ct = use_facet<ctype<_CharT> >(__is.getloc());"},
{"lineNum":"  318","line":"            _Ip __i(__is);"},
{"lineNum":"  319","line":"            _Ip __eof;"},
{"lineNum":"  320","line":"            for (; __i != __eof; ++__i)"},
{"lineNum":"  321","line":"                if (!__ct.is(__ct.space, *__i))"},
{"lineNum":"  322","line":"                    break;"},
{"lineNum":"  323","line":"            if (__i == __eof)"},
{"lineNum":"  324","line":"                __is.setstate(ios_base::failbit | ios_base::eofbit);"},
{"lineNum":"  325","line":"        }"},
{"lineNum":"  326","line":"        __ok_ = __is.good();"},
{"lineNum":"  327","line":"    }"},
{"lineNum":"  328","line":"    else"},
{"lineNum":"  329","line":"        __is.setstate(ios_base::failbit);"},
{"lineNum":"  330","line":"}"},
{"lineNum":"  331","line":""},
{"lineNum":"  332","line":"template <class _CharT, class _Traits>"},
{"lineNum":"  333","line":"basic_istream<_CharT, _Traits>::basic_istream(basic_istream&& __rhs)"},
{"lineNum":"  334","line":"    : __gc_(__rhs.__gc_)"},
{"lineNum":"  335","line":"{"},
{"lineNum":"  336","line":"    __rhs.__gc_ = 0;"},
{"lineNum":"  337","line":"    this->move(__rhs);"},
{"lineNum":"  338","line":"}"},
{"lineNum":"  339","line":""},
{"lineNum":"  340","line":"template <class _CharT, class _Traits>"},
{"lineNum":"  341","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":"  342","line":"basic_istream<_CharT, _Traits>::operator=(basic_istream&& __rhs)"},
{"lineNum":"  343","line":"{"},
{"lineNum":"  344","line":"    swap(__rhs);"},
{"lineNum":"  345","line":"    return *this;"},
{"lineNum":"  346","line":"}"},
{"lineNum":"  347","line":""},
{"lineNum":"  348","line":"template <class _CharT, class _Traits>"},
{"lineNum":"  349","line":"basic_istream<_CharT, _Traits>::~basic_istream()"},
{"lineNum":"  350","line":"{"},
{"lineNum":"  351","line":"}"},
{"lineNum":"  352","line":""},
{"lineNum":"  353","line":"template <class _Tp, class _CharT, class _Traits>"},
{"lineNum":"  354","line":"_LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  355","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":"  356","line":"__input_arithmetic(basic_istream<_CharT, _Traits>& __is, _Tp& __n) {"},
{"lineNum":"  357","line":"    ios_base::iostate __state = ios_base::goodbit;"},
{"lineNum":"  358","line":"    typename basic_istream<_CharT, _Traits>::sentry __s(__is);"},
{"lineNum":"  359","line":"    if (__s)"},
{"lineNum":"  360","line":"    {"},
{"lineNum":"  361","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  362","line":"        try"},
{"lineNum":"  363","line":"        {"},
{"lineNum":"  364","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  365","line":"            typedef istreambuf_iterator<_CharT, _Traits> _Ip;"},
{"lineNum":"  366","line":"            typedef num_get<_CharT, _Ip> _Fp;"},
{"lineNum":"  367","line":"            use_facet<_Fp>(__is.getloc()).get(_Ip(__is), _Ip(), __is, __state, __n);"},
{"lineNum":"  368","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  369","line":"        }"},
{"lineNum":"  370","line":"        catch (...)"},
{"lineNum":"  371","line":"        {"},
{"lineNum":"  372","line":"            __state |= ios_base::badbit;"},
{"lineNum":"  373","line":"            __is.__setstate_nothrow(__state);"},
{"lineNum":"  374","line":"            if (__is.exceptions() & ios_base::badbit)"},
{"lineNum":"  375","line":"            {"},
{"lineNum":"  376","line":"                throw;"},
{"lineNum":"  377","line":"            }"},
{"lineNum":"  378","line":"        }"},
{"lineNum":"  379","line":"#endif"},
{"lineNum":"  380","line":"        __is.setstate(__state);"},
{"lineNum":"  381","line":"    }"},
{"lineNum":"  382","line":"    return __is;"},
{"lineNum":"  383","line":"}"},
{"lineNum":"  384","line":""},
{"lineNum":"  385","line":"template <class _CharT, class _Traits>"},
{"lineNum":"  386","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":"  387","line":"basic_istream<_CharT, _Traits>::operator>>(unsigned short& __n)"},
{"lineNum":"  388","line":"{"},
{"lineNum":"  389","line":"    return _VSTD::__input_arithmetic<unsigned short>(*this, __n);"},
{"lineNum":"  390","line":"}"},
{"lineNum":"  391","line":""},
{"lineNum":"  392","line":"template <class _CharT, class _Traits>"},
{"lineNum":"  393","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":"  394","line":"basic_istream<_CharT, _Traits>::operator>>(unsigned int& __n)"},
{"lineNum":"  395","line":"{"},
{"lineNum":"  396","line":"    return _VSTD::__input_arithmetic<unsigned int>(*this, __n);"},
{"lineNum":"  397","line":"}"},
{"lineNum":"  398","line":""},
{"lineNum":"  399","line":"template <class _CharT, class _Traits>"},
{"lineNum":"  400","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":"  401","line":"basic_istream<_CharT, _Traits>::operator>>(long& __n)"},
{"lineNum":"  402","line":"{"},
{"lineNum":"  403","line":"    return _VSTD::__input_arithmetic<long>(*this, __n);"},
{"lineNum":"  404","line":"}"},
{"lineNum":"  405","line":""},
{"lineNum":"  406","line":"template <class _CharT, class _Traits>"},
{"lineNum":"  407","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":"  408","line":"basic_istream<_CharT, _Traits>::operator>>(unsigned long& __n)"},
{"lineNum":"  409","line":"{"},
{"lineNum":"  410","line":"    return _VSTD::__input_arithmetic<unsigned long>(*this, __n);"},
{"lineNum":"  411","line":"}"},
{"lineNum":"  412","line":""},
{"lineNum":"  413","line":"template <class _CharT, class _Traits>"},
{"lineNum":"  414","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":"  415","line":"basic_istream<_CharT, _Traits>::operator>>(long long& __n)"},
{"lineNum":"  416","line":"{"},
{"lineNum":"  417","line":"    return _VSTD::__input_arithmetic<long long>(*this, __n);"},
{"lineNum":"  418","line":"}"},
{"lineNum":"  419","line":""},
{"lineNum":"  420","line":"template <class _CharT, class _Traits>"},
{"lineNum":"  421","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":"  422","line":"basic_istream<_CharT, _Traits>::operator>>(unsigned long long& __n)"},
{"lineNum":"  423","line":"{"},
{"lineNum":"  424","line":"    return _VSTD::__input_arithmetic<unsigned long long>(*this, __n);"},
{"lineNum":"  425","line":"}"},
{"lineNum":"  426","line":""},
{"lineNum":"  427","line":"template <class _CharT, class _Traits>"},
{"lineNum":"  428","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":"  429","line":"basic_istream<_CharT, _Traits>::operator>>(float& __n)"},
{"lineNum":"  430","line":"{"},
{"lineNum":"  431","line":"    return _VSTD::__input_arithmetic<float>(*this, __n);"},
{"lineNum":"  432","line":"}"},
{"lineNum":"  433","line":""},
{"lineNum":"  434","line":"template <class _CharT, class _Traits>"},
{"lineNum":"  435","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":"  436","line":"basic_istream<_CharT, _Traits>::operator>>(double& __n)"},
{"lineNum":"  437","line":"{"},
{"lineNum":"  438","line":"    return _VSTD::__input_arithmetic<double>(*this, __n);"},
{"lineNum":"  439","line":"}"},
{"lineNum":"  440","line":""},
{"lineNum":"  441","line":"template <class _CharT, class _Traits>"},
{"lineNum":"  442","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":"  443","line":"basic_istream<_CharT, _Traits>::operator>>(long double& __n)"},
{"lineNum":"  444","line":"{"},
{"lineNum":"  445","line":"    return _VSTD::__input_arithmetic<long double>(*this, __n);"},
{"lineNum":"  446","line":"}"},
{"lineNum":"  447","line":""},
{"lineNum":"  448","line":"template <class _CharT, class _Traits>"},
{"lineNum":"  449","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":"  450","line":"basic_istream<_CharT, _Traits>::operator>>(bool& __n)"},
{"lineNum":"  451","line":"{"},
{"lineNum":"  452","line":"    return _VSTD::__input_arithmetic<bool>(*this, __n);"},
{"lineNum":"  453","line":"}"},
{"lineNum":"  454","line":""},
{"lineNum":"  455","line":"template <class _CharT, class _Traits>"},
{"lineNum":"  456","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":"  457","line":"basic_istream<_CharT, _Traits>::operator>>(void*& __n)"},
{"lineNum":"  458","line":"{"},
{"lineNum":"  459","line":"    return _VSTD::__input_arithmetic<void*>(*this, __n);"},
{"lineNum":"  460","line":"}"},
{"lineNum":"  461","line":""},
{"lineNum":"  462","line":"template <class _Tp, class _CharT, class _Traits>"},
{"lineNum":"  463","line":"_LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  464","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":"  465","line":"__input_arithmetic_with_numeric_limits(basic_istream<_CharT, _Traits>& __is, _Tp& __n) {"},
{"lineNum":"  466","line":"    ios_base::iostate __state = ios_base::goodbit;"},
{"lineNum":"  467","line":"    typename basic_istream<_CharT, _Traits>::sentry __s(__is);"},
{"lineNum":"  468","line":"    if (__s)"},
{"lineNum":"  469","line":"    {"},
{"lineNum":"  470","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  471","line":"        try"},
{"lineNum":"  472","line":"        {"},
{"lineNum":"  473","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  474","line":"            typedef istreambuf_iterator<_CharT, _Traits> _Ip;"},
{"lineNum":"  475","line":"            typedef num_get<_CharT, _Ip> _Fp;"},
{"lineNum":"  476","line":"            long __temp;"},
{"lineNum":"  477","line":"            use_facet<_Fp>(__is.getloc()).get(_Ip(__is), _Ip(), __is, __state, __temp);"},
{"lineNum":"  478","line":"            if (__temp < numeric_limits<_Tp>::min())"},
{"lineNum":"  479","line":"            {"},
{"lineNum":"  480","line":"                __state |= ios_base::failbit;"},
{"lineNum":"  481","line":"                __n = numeric_limits<_Tp>::min();"},
{"lineNum":"  482","line":"            }"},
{"lineNum":"  483","line":"            else if (__temp > numeric_limits<_Tp>::max())"},
{"lineNum":"  484","line":"            {"},
{"lineNum":"  485","line":"                __state |= ios_base::failbit;"},
{"lineNum":"  486","line":"                __n = numeric_limits<_Tp>::max();"},
{"lineNum":"  487","line":"            }"},
{"lineNum":"  488","line":"            else"},
{"lineNum":"  489","line":"            {"},
{"lineNum":"  490","line":"                __n = static_cast<_Tp>(__temp);"},
{"lineNum":"  491","line":"            }"},
{"lineNum":"  492","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  493","line":"        }"},
{"lineNum":"  494","line":"        catch (...)"},
{"lineNum":"  495","line":"        {"},
{"lineNum":"  496","line":"            __state |= ios_base::badbit;"},
{"lineNum":"  497","line":"            __is.__setstate_nothrow(__state);"},
{"lineNum":"  498","line":"            if (__is.exceptions() & ios_base::badbit)"},
{"lineNum":"  499","line":"            {"},
{"lineNum":"  500","line":"                throw;"},
{"lineNum":"  501","line":"            }"},
{"lineNum":"  502","line":"        }"},
{"lineNum":"  503","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  504","line":"        __is.setstate(__state);"},
{"lineNum":"  505","line":"    }"},
{"lineNum":"  506","line":"    return __is;"},
{"lineNum":"  507","line":"}"},
{"lineNum":"  508","line":""},
{"lineNum":"  509","line":"template <class _CharT, class _Traits>"},
{"lineNum":"  510","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":"  511","line":"basic_istream<_CharT, _Traits>::operator>>(short& __n)"},
{"lineNum":"  512","line":"{"},
{"lineNum":"  513","line":"    return _VSTD::__input_arithmetic_with_numeric_limits<short>(*this, __n);"},
{"lineNum":"  514","line":"}"},
{"lineNum":"  515","line":""},
{"lineNum":"  516","line":"template <class _CharT, class _Traits>"},
{"lineNum":"  517","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":"  518","line":"basic_istream<_CharT, _Traits>::operator>>(int& __n)"},
{"lineNum":"  519","line":"{"},
{"lineNum":"  520","line":"    return _VSTD::__input_arithmetic_with_numeric_limits<int>(*this, __n);"},
{"lineNum":"  521","line":"}"},
{"lineNum":"  522","line":""},
{"lineNum":"  523","line":"template<class _CharT, class _Traits>"},
{"lineNum":"  524","line":"_LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  525","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":"  526","line":"__input_c_string(basic_istream<_CharT, _Traits>& __is, _CharT* __p, size_t __n)"},
{"lineNum":"  527","line":"{"},
{"lineNum":"  528","line":"    ios_base::iostate __state = ios_base::goodbit;"},
{"lineNum":"  529","line":"    typename basic_istream<_CharT, _Traits>::sentry __sen(__is);"},
{"lineNum":"  530","line":"    if (__sen)"},
{"lineNum":"  531","line":"    {"},
{"lineNum":"  532","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  533","line":"        try"},
{"lineNum":"  534","line":"        {"},
{"lineNum":"  535","line":"#endif"},
{"lineNum":"  536","line":"            _CharT* __s = __p;"},
{"lineNum":"  537","line":"            const ctype<_CharT>& __ct = use_facet<ctype<_CharT> >(__is.getloc());"},
{"lineNum":"  538","line":"            while (__s != __p + (__n-1))"},
{"lineNum":"  539","line":"            {"},
{"lineNum":"  540","line":"                typename _Traits::int_type __i = __is.rdbuf()->sgetc();"},
{"lineNum":"  541","line":"                if (_Traits::eq_int_type(__i, _Traits::eof()))"},
{"lineNum":"  542","line":"                {"},
{"lineNum":"  543","line":"                   __state |= ios_base::eofbit;"},
{"lineNum":"  544","line":"                   break;"},
{"lineNum":"  545","line":"                }"},
{"lineNum":"  546","line":"                _CharT __ch = _Traits::to_char_type(__i);"},
{"lineNum":"  547","line":"                if (__ct.is(__ct.space, __ch))"},
{"lineNum":"  548","line":"                    break;"},
{"lineNum":"  549","line":"                *__s++ = __ch;"},
{"lineNum":"  550","line":"                 __is.rdbuf()->sbumpc();"},
{"lineNum":"  551","line":"            }"},
{"lineNum":"  552","line":"            *__s = _CharT();"},
{"lineNum":"  553","line":"            __is.width(0);"},
{"lineNum":"  554","line":"            if (__s == __p)"},
{"lineNum":"  555","line":"               __state |= ios_base::failbit;"},
{"lineNum":"  556","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  557","line":"        }"},
{"lineNum":"  558","line":"        catch (...)"},
{"lineNum":"  559","line":"        {"},
{"lineNum":"  560","line":"            __state |= ios_base::badbit;"},
{"lineNum":"  561","line":"            __is.__setstate_nothrow(__state);"},
{"lineNum":"  562","line":"            if (__is.exceptions() & ios_base::badbit)"},
{"lineNum":"  563","line":"            {"},
{"lineNum":"  564","line":"                throw;"},
{"lineNum":"  565","line":"            }"},
{"lineNum":"  566","line":"        }"},
{"lineNum":"  567","line":"#endif"},
{"lineNum":"  568","line":"        __is.setstate(__state);"},
{"lineNum":"  569","line":"    }"},
{"lineNum":"  570","line":"    return __is;"},
{"lineNum":"  571","line":"}"},
{"lineNum":"  572","line":""},
{"lineNum":"  573","line":"#if _LIBCPP_STD_VER > 17"},
{"lineNum":"  574","line":""},
{"lineNum":"  575","line":"template<class _CharT, class _Traits, size_t _Np>"},
{"lineNum":"  576","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  577","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":"  578","line":"operator>>(basic_istream<_CharT, _Traits>& __is, _CharT (&__buf)[_Np])"},
{"lineNum":"  579","line":"{"},
{"lineNum":"  580","line":"    size_t __n = _Np;"},
{"lineNum":"  581","line":"    if (__is.width() > 0)"},
{"lineNum":"  582","line":"        __n = _VSTD::min(size_t(__is.width()), _Np);"},
{"lineNum":"  583","line":"    return _VSTD::__input_c_string(__is, __buf, __n);"},
{"lineNum":"  584","line":"}"},
{"lineNum":"  585","line":""},
{"lineNum":"  586","line":"template<class _Traits, size_t _Np>"},
{"lineNum":"  587","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  588","line":"basic_istream<char, _Traits>&"},
{"lineNum":"  589","line":"operator>>(basic_istream<char, _Traits>& __is, unsigned char (&__buf)[_Np])"},
{"lineNum":"  590","line":"{"},
{"lineNum":"  591","line":"    return __is >> (char(&)[_Np])__buf;"},
{"lineNum":"  592","line":"}"},
{"lineNum":"  593","line":""},
{"lineNum":"  594","line":"template<class _Traits, size_t _Np>"},
{"lineNum":"  595","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  596","line":"basic_istream<char, _Traits>&"},
{"lineNum":"  597","line":"operator>>(basic_istream<char, _Traits>& __is, signed char (&__buf)[_Np])"},
{"lineNum":"  598","line":"{"},
{"lineNum":"  599","line":"    return __is >> (char(&)[_Np])__buf;"},
{"lineNum":"  600","line":"}"},
{"lineNum":"  601","line":""},
{"lineNum":"  602","line":"#else"},
{"lineNum":"  603","line":""},
{"lineNum":"  604","line":"template<class _CharT, class _Traits>"},
{"lineNum":"  605","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  606","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":"  607","line":"operator>>(basic_istream<_CharT, _Traits>& __is, _CharT* __s)"},
{"lineNum":"  608","line":"{"},
{"lineNum":"  609","line":"    streamsize __n = __is.width();"},
{"lineNum":"  610","line":"    if (__n <= 0)"},
{"lineNum":"  611","line":"        __n = numeric_limits<streamsize>::max() / sizeof(_CharT) - 1;"},
{"lineNum":"  612","line":"    return _VSTD::__input_c_string(__is, __s, size_t(__n));"},
{"lineNum":"  613","line":"}"},
{"lineNum":"  614","line":""},
{"lineNum":"  615","line":"template<class _Traits>"},
{"lineNum":"  616","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  617","line":"basic_istream<char, _Traits>&"},
{"lineNum":"  618","line":"operator>>(basic_istream<char, _Traits>& __is, unsigned char* __s)"},
{"lineNum":"  619","line":"{"},
{"lineNum":"  620","line":"    return __is >> (char*)__s;"},
{"lineNum":"  621","line":"}"},
{"lineNum":"  622","line":""},
{"lineNum":"  623","line":"template<class _Traits>"},
{"lineNum":"  624","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  625","line":"basic_istream<char, _Traits>&"},
{"lineNum":"  626","line":"operator>>(basic_istream<char, _Traits>& __is, signed char* __s)"},
{"lineNum":"  627","line":"{"},
{"lineNum":"  628","line":"    return __is >> (char*)__s;"},
{"lineNum":"  629","line":"}"},
{"lineNum":"  630","line":""},
{"lineNum":"  631","line":"#endif // _LIBCPP_STD_VER > 17"},
{"lineNum":"  632","line":""},
{"lineNum":"  633","line":"template<class _CharT, class _Traits>"},
{"lineNum":"  634","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":"  635","line":"operator>>(basic_istream<_CharT, _Traits>& __is, _CharT& __c)"},
{"lineNum":"  636","line":"{"},
{"lineNum":"  637","line":"    ios_base::iostate __state = ios_base::goodbit;"},
{"lineNum":"  638","line":"    typename basic_istream<_CharT, _Traits>::sentry __sen(__is);"},
{"lineNum":"  639","line":"    if (__sen)"},
{"lineNum":"  640","line":"    {"},
{"lineNum":"  641","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  642","line":"        try"},
{"lineNum":"  643","line":"        {"},
{"lineNum":"  644","line":"#endif"},
{"lineNum":"  645","line":"            typename _Traits::int_type __i = __is.rdbuf()->sbumpc();"},
{"lineNum":"  646","line":"            if (_Traits::eq_int_type(__i, _Traits::eof()))"},
{"lineNum":"  647","line":"                __state |= ios_base::eofbit | ios_base::failbit;"},
{"lineNum":"  648","line":"            else"},
{"lineNum":"  649","line":"                __c = _Traits::to_char_type(__i);"},
{"lineNum":"  650","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  651","line":"        }"},
{"lineNum":"  652","line":"        catch (...)"},
{"lineNum":"  653","line":"        {"},
{"lineNum":"  654","line":"            __state |= ios_base::badbit;"},
{"lineNum":"  655","line":"            __is.__setstate_nothrow(__state);"},
{"lineNum":"  656","line":"            if (__is.exceptions() & ios_base::badbit)"},
{"lineNum":"  657","line":"            {"},
{"lineNum":"  658","line":"                throw;"},
{"lineNum":"  659","line":"            }"},
{"lineNum":"  660","line":"        }"},
{"lineNum":"  661","line":"#endif"},
{"lineNum":"  662","line":"        __is.setstate(__state);"},
{"lineNum":"  663","line":"    }"},
{"lineNum":"  664","line":"    return __is;"},
{"lineNum":"  665","line":"}"},
{"lineNum":"  666","line":""},
{"lineNum":"  667","line":"template<class _Traits>"},
{"lineNum":"  668","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  669","line":"basic_istream<char, _Traits>&"},
{"lineNum":"  670","line":"operator>>(basic_istream<char, _Traits>& __is, unsigned char& __c)"},
{"lineNum":"  671","line":"{"},
{"lineNum":"  672","line":"    return __is >> (char&)__c;"},
{"lineNum":"  673","line":"}"},
{"lineNum":"  674","line":""},
{"lineNum":"  675","line":"template<class _Traits>"},
{"lineNum":"  676","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":"  677","line":"basic_istream<char, _Traits>&"},
{"lineNum":"  678","line":"operator>>(basic_istream<char, _Traits>& __is, signed char& __c)"},
{"lineNum":"  679","line":"{"},
{"lineNum":"  680","line":"    return __is >> (char&)__c;"},
{"lineNum":"  681","line":"}"},
{"lineNum":"  682","line":""},
{"lineNum":"  683","line":"template<class _CharT, class _Traits>"},
{"lineNum":"  684","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":"  685","line":"basic_istream<_CharT, _Traits>::operator>>(basic_streambuf<char_type, traits_type>* __sb)"},
{"lineNum":"  686","line":"{"},
{"lineNum":"  687","line":"    ios_base::iostate __state = ios_base::goodbit;"},
{"lineNum":"  688","line":"    __gc_ = 0;"},
{"lineNum":"  689","line":"    sentry __s(*this, true);"},
{"lineNum":"  690","line":"    if (__s)"},
{"lineNum":"  691","line":"    {"},
{"lineNum":"  692","line":"        if (__sb)"},
{"lineNum":"  693","line":"        {"},
{"lineNum":"  694","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  695","line":"            try"},
{"lineNum":"  696","line":"            {"},
{"lineNum":"  697","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  698","line":"                while (true)"},
{"lineNum":"  699","line":"                {"},
{"lineNum":"  700","line":"                    typename traits_type::int_type __i = this->rdbuf()->sgetc();"},
{"lineNum":"  701","line":"                    if (traits_type::eq_int_type(__i, _Traits::eof()))"},
{"lineNum":"  702","line":"                    {"},
{"lineNum":"  703","line":"                       __state |= ios_base::eofbit;"},
{"lineNum":"  704","line":"                       break;"},
{"lineNum":"  705","line":"                    }"},
{"lineNum":"  706","line":"                    if (traits_type::eq_int_type("},
{"lineNum":"  707","line":"                            __sb->sputc(traits_type::to_char_type(__i)),"},
{"lineNum":"  708","line":"                            traits_type::eof()))"},
{"lineNum":"  709","line":"                        break;"},
{"lineNum":"  710","line":"                    ++__gc_;"},
{"lineNum":"  711","line":"                    this->rdbuf()->sbumpc();"},
{"lineNum":"  712","line":"                }"},
{"lineNum":"  713","line":"                if (__gc_ == 0)"},
{"lineNum":"  714","line":"                   __state |= ios_base::failbit;"},
{"lineNum":"  715","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  716","line":"            }"},
{"lineNum":"  717","line":"            catch (...)"},
{"lineNum":"  718","line":"            {"},
{"lineNum":"  719","line":"                __state |= ios_base::badbit;"},
{"lineNum":"  720","line":"                if (__gc_ == 0)"},
{"lineNum":"  721","line":"                    __state |= ios_base::failbit;"},
{"lineNum":"  722","line":""},
{"lineNum":"  723","line":"                this->__setstate_nothrow(__state);"},
{"lineNum":"  724","line":"                if (this->exceptions() & ios_base::failbit || this->exceptions() & ios_base::badbit)"},
{"lineNum":"  725","line":"                {"},
{"lineNum":"  726","line":"                    throw;"},
{"lineNum":"  727","line":"                }"},
{"lineNum":"  728","line":"            }"},
{"lineNum":"  729","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  730","line":"        }"},
{"lineNum":"  731","line":"        else"},
{"lineNum":"  732","line":"        {"},
{"lineNum":"  733","line":"            __state |= ios_base::failbit;"},
{"lineNum":"  734","line":"        }"},
{"lineNum":"  735","line":"        this->setstate(__state);"},
{"lineNum":"  736","line":"    }"},
{"lineNum":"  737","line":"    return *this;"},
{"lineNum":"  738","line":"}"},
{"lineNum":"  739","line":""},
{"lineNum":"  740","line":"template<class _CharT, class _Traits>"},
{"lineNum":"  741","line":"typename basic_istream<_CharT, _Traits>::int_type"},
{"lineNum":"  742","line":"basic_istream<_CharT, _Traits>::get()"},
{"lineNum":"  743","line":"{"},
{"lineNum":"  744","line":"    ios_base::iostate __state = ios_base::goodbit;"},
{"lineNum":"  745","line":"    __gc_ = 0;"},
{"lineNum":"  746","line":"    int_type __r = traits_type::eof();"},
{"lineNum":"  747","line":"    sentry __s(*this, true);"},
{"lineNum":"  748","line":"    if (__s)"},
{"lineNum":"  749","line":"    {"},
{"lineNum":"  750","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  751","line":"        try"},
{"lineNum":"  752","line":"        {"},
{"lineNum":"  753","line":"#endif"},
{"lineNum":"  754","line":"            __r = this->rdbuf()->sbumpc();"},
{"lineNum":"  755","line":"            if (traits_type::eq_int_type(__r, traits_type::eof()))"},
{"lineNum":"  756","line":"               __state |= ios_base::failbit | ios_base::eofbit;"},
{"lineNum":"  757","line":"            else"},
{"lineNum":"  758","line":"                __gc_ = 1;"},
{"lineNum":"  759","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  760","line":"        }"},
{"lineNum":"  761","line":"        catch (...)"},
{"lineNum":"  762","line":"        {"},
{"lineNum":"  763","line":"            this->__setstate_nothrow(this->rdstate() | ios_base::badbit);"},
{"lineNum":"  764","line":"            if (this->exceptions() & ios_base::badbit)"},
{"lineNum":"  765","line":"            {"},
{"lineNum":"  766","line":"                throw;"},
{"lineNum":"  767","line":"            }"},
{"lineNum":"  768","line":"        }"},
{"lineNum":"  769","line":"#endif"},
{"lineNum":"  770","line":"        this->setstate(__state);"},
{"lineNum":"  771","line":"    }"},
{"lineNum":"  772","line":"    return __r;"},
{"lineNum":"  773","line":"}"},
{"lineNum":"  774","line":""},
{"lineNum":"  775","line":"template<class _CharT, class _Traits>"},
{"lineNum":"  776","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":"  777","line":"basic_istream<_CharT, _Traits>::get(char_type* __s, streamsize __n, char_type __dlm)"},
{"lineNum":"  778","line":"{"},
{"lineNum":"  779","line":"    ios_base::iostate __state = ios_base::goodbit;"},
{"lineNum":"  780","line":"    __gc_ = 0;"},
{"lineNum":"  781","line":"    sentry __sen(*this, true);"},
{"lineNum":"  782","line":"    if (__sen)"},
{"lineNum":"  783","line":"    {"},
{"lineNum":"  784","line":"        if (__n > 0)"},
{"lineNum":"  785","line":"        {"},
{"lineNum":"  786","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  787","line":"            try"},
{"lineNum":"  788","line":"            {"},
{"lineNum":"  789","line":"#endif"},
{"lineNum":"  790","line":"                while (__gc_ < __n-1)"},
{"lineNum":"  791","line":"                {"},
{"lineNum":"  792","line":"                    int_type __i = this->rdbuf()->sgetc();"},
{"lineNum":"  793","line":"                    if (traits_type::eq_int_type(__i, traits_type::eof()))"},
{"lineNum":"  794","line":"                    {"},
{"lineNum":"  795","line":"                       __state |= ios_base::eofbit;"},
{"lineNum":"  796","line":"                       break;"},
{"lineNum":"  797","line":"                    }"},
{"lineNum":"  798","line":"                    char_type __ch = traits_type::to_char_type(__i);"},
{"lineNum":"  799","line":"                    if (traits_type::eq(__ch, __dlm))"},
{"lineNum":"  800","line":"                        break;"},
{"lineNum":"  801","line":"                    *__s++ = __ch;"},
{"lineNum":"  802","line":"                    ++__gc_;"},
{"lineNum":"  803","line":"                     this->rdbuf()->sbumpc();"},
{"lineNum":"  804","line":"                }"},
{"lineNum":"  805","line":"                if (__gc_ == 0)"},
{"lineNum":"  806","line":"                   __state |= ios_base::failbit;"},
{"lineNum":"  807","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  808","line":"            }"},
{"lineNum":"  809","line":"            catch (...)"},
{"lineNum":"  810","line":"            {"},
{"lineNum":"  811","line":"                __state |= ios_base::badbit;"},
{"lineNum":"  812","line":"                this->__setstate_nothrow(__state);"},
{"lineNum":"  813","line":"                if (this->exceptions() & ios_base::badbit)"},
{"lineNum":"  814","line":"                {"},
{"lineNum":"  815","line":"                    if (__n > 0)"},
{"lineNum":"  816","line":"                        *__s = char_type();"},
{"lineNum":"  817","line":"                    throw;"},
{"lineNum":"  818","line":"                }"},
{"lineNum":"  819","line":"            }"},
{"lineNum":"  820","line":"#endif"},
{"lineNum":"  821","line":"        }"},
{"lineNum":"  822","line":"        else"},
{"lineNum":"  823","line":"        {"},
{"lineNum":"  824","line":"            __state |= ios_base::failbit;"},
{"lineNum":"  825","line":"        }"},
{"lineNum":"  826","line":""},
{"lineNum":"  827","line":"        if (__n > 0)"},
{"lineNum":"  828","line":"            *__s = char_type();"},
{"lineNum":"  829","line":"        this->setstate(__state);"},
{"lineNum":"  830","line":"    }"},
{"lineNum":"  831","line":"    if (__n > 0)"},
{"lineNum":"  832","line":"        *__s = char_type();"},
{"lineNum":"  833","line":"    return *this;"},
{"lineNum":"  834","line":"}"},
{"lineNum":"  835","line":""},
{"lineNum":"  836","line":"template<class _CharT, class _Traits>"},
{"lineNum":"  837","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":"  838","line":"basic_istream<_CharT, _Traits>::get(basic_streambuf<char_type, traits_type>& __sb,"},
{"lineNum":"  839","line":"                                    char_type __dlm)"},
{"lineNum":"  840","line":"{"},
{"lineNum":"  841","line":"    ios_base::iostate __state = ios_base::goodbit;"},
{"lineNum":"  842","line":"    __gc_ = 0;"},
{"lineNum":"  843","line":"    sentry __sen(*this, true);"},
{"lineNum":"  844","line":"    if (__sen)"},
{"lineNum":"  845","line":"    {"},
{"lineNum":"  846","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  847","line":"        try"},
{"lineNum":"  848","line":"        {"},
{"lineNum":"  849","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  850","line":"            while (true)"},
{"lineNum":"  851","line":"            {"},
{"lineNum":"  852","line":"                typename traits_type::int_type __i = this->rdbuf()->sgetc();"},
{"lineNum":"  853","line":"                if (traits_type::eq_int_type(__i, traits_type::eof()))"},
{"lineNum":"  854","line":"                {"},
{"lineNum":"  855","line":"                   __state |= ios_base::eofbit;"},
{"lineNum":"  856","line":"                   break;"},
{"lineNum":"  857","line":"                }"},
{"lineNum":"  858","line":"                char_type __ch = traits_type::to_char_type(__i);"},
{"lineNum":"  859","line":"                if (traits_type::eq(__ch, __dlm))"},
{"lineNum":"  860","line":"                    break;"},
{"lineNum":"  861","line":"                if (traits_type::eq_int_type(__sb.sputc(__ch), traits_type::eof()))"},
{"lineNum":"  862","line":"                    break;"},
{"lineNum":"  863","line":"                ++__gc_;"},
{"lineNum":"  864","line":"                this->rdbuf()->sbumpc();"},
{"lineNum":"  865","line":"            }"},
{"lineNum":"  866","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  867","line":"        }"},
{"lineNum":"  868","line":"        catch (...)"},
{"lineNum":"  869","line":"        {"},
{"lineNum":"  870","line":"            __state |= ios_base::badbit;"},
{"lineNum":"  871","line":"            // according to the spec, exceptions here are caught but not rethrown"},
{"lineNum":"  872","line":"        }"},
{"lineNum":"  873","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  874","line":"        if (__gc_ == 0)"},
{"lineNum":"  875","line":"           __state |= ios_base::failbit;"},
{"lineNum":"  876","line":"        this->setstate(__state);"},
{"lineNum":"  877","line":"    }"},
{"lineNum":"  878","line":"    return *this;"},
{"lineNum":"  879","line":"}"},
{"lineNum":"  880","line":""},
{"lineNum":"  881","line":"template<class _CharT, class _Traits>"},
{"lineNum":"  882","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":"  883","line":"basic_istream<_CharT, _Traits>::getline(char_type* __s, streamsize __n, char_type __dlm)"},
{"lineNum":"  884","line":"{"},
{"lineNum":"  885","line":"    ios_base::iostate __state = ios_base::goodbit;"},
{"lineNum":"  886","line":"    __gc_ = 0;"},
{"lineNum":"  887","line":"    sentry __sen(*this, true);"},
{"lineNum":"  888","line":"    if (__sen)"},
{"lineNum":"  889","line":"    {"},
{"lineNum":"  890","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  891","line":"        try"},
{"lineNum":"  892","line":"        {"},
{"lineNum":"  893","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  894","line":"            while (true)"},
{"lineNum":"  895","line":"            {"},
{"lineNum":"  896","line":"                typename traits_type::int_type __i = this->rdbuf()->sgetc();"},
{"lineNum":"  897","line":"                if (traits_type::eq_int_type(__i, traits_type::eof()))"},
{"lineNum":"  898","line":"                {"},
{"lineNum":"  899","line":"                   __state |= ios_base::eofbit;"},
{"lineNum":"  900","line":"                   break;"},
{"lineNum":"  901","line":"                }"},
{"lineNum":"  902","line":"                char_type __ch = traits_type::to_char_type(__i);"},
{"lineNum":"  903","line":"                if (traits_type::eq(__ch, __dlm))"},
{"lineNum":"  904","line":"                {"},
{"lineNum":"  905","line":"                    this->rdbuf()->sbumpc();"},
{"lineNum":"  906","line":"                    ++__gc_;"},
{"lineNum":"  907","line":"                    break;"},
{"lineNum":"  908","line":"                }"},
{"lineNum":"  909","line":"                if (__gc_ >= __n-1)"},
{"lineNum":"  910","line":"                {"},
{"lineNum":"  911","line":"                    __state |= ios_base::failbit;"},
{"lineNum":"  912","line":"                    break;"},
{"lineNum":"  913","line":"                }"},
{"lineNum":"  914","line":"                *__s++ = __ch;"},
{"lineNum":"  915","line":"                this->rdbuf()->sbumpc();"},
{"lineNum":"  916","line":"                ++__gc_;"},
{"lineNum":"  917","line":"            }"},
{"lineNum":"  918","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  919","line":"        }"},
{"lineNum":"  920","line":"        catch (...)"},
{"lineNum":"  921","line":"        {"},
{"lineNum":"  922","line":"            __state |= ios_base::badbit;"},
{"lineNum":"  923","line":"            this->__setstate_nothrow(__state);"},
{"lineNum":"  924","line":"            if (this->exceptions() & ios_base::badbit)"},
{"lineNum":"  925","line":"            {"},
{"lineNum":"  926","line":"                if (__n > 0)"},
{"lineNum":"  927","line":"                    *__s = char_type();"},
{"lineNum":"  928","line":"                if (__gc_ == 0)"},
{"lineNum":"  929","line":"                    __state |= ios_base::failbit;"},
{"lineNum":"  930","line":"                throw;"},
{"lineNum":"  931","line":"            }"},
{"lineNum":"  932","line":"        }"},
{"lineNum":"  933","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  934","line":"    }"},
{"lineNum":"  935","line":"    if (__n > 0)"},
{"lineNum":"  936","line":"        *__s = char_type();"},
{"lineNum":"  937","line":"    if (__gc_ == 0)"},
{"lineNum":"  938","line":"        __state |= ios_base::failbit;"},
{"lineNum":"  939","line":"    this->setstate(__state);"},
{"lineNum":"  940","line":"    return *this;"},
{"lineNum":"  941","line":"}"},
{"lineNum":"  942","line":""},
{"lineNum":"  943","line":"template<class _CharT, class _Traits>"},
{"lineNum":"  944","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":"  945","line":"basic_istream<_CharT, _Traits>::ignore(streamsize __n, int_type __dlm)"},
{"lineNum":"  946","line":"{"},
{"lineNum":"  947","line":"    ios_base::iostate __state = ios_base::goodbit;"},
{"lineNum":"  948","line":"    __gc_ = 0;"},
{"lineNum":"  949","line":"    sentry __sen(*this, true);"},
{"lineNum":"  950","line":"    if (__sen)"},
{"lineNum":"  951","line":"    {"},
{"lineNum":"  952","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  953","line":"        try"},
{"lineNum":"  954","line":"        {"},
{"lineNum":"  955","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  956","line":"            if (__n == numeric_limits<streamsize>::max())"},
{"lineNum":"  957","line":"            {"},
{"lineNum":"  958","line":"                while (true)"},
{"lineNum":"  959","line":"                {"},
{"lineNum":"  960","line":"                    typename traits_type::int_type __i = this->rdbuf()->sbumpc();"},
{"lineNum":"  961","line":"                    if (traits_type::eq_int_type(__i, traits_type::eof()))"},
{"lineNum":"  962","line":"                    {"},
{"lineNum":"  963","line":"                       __state |= ios_base::eofbit;"},
{"lineNum":"  964","line":"                       break;"},
{"lineNum":"  965","line":"                    }"},
{"lineNum":"  966","line":"                    ++__gc_;"},
{"lineNum":"  967","line":"                    if (traits_type::eq_int_type(__i, __dlm))"},
{"lineNum":"  968","line":"                        break;"},
{"lineNum":"  969","line":"                }"},
{"lineNum":"  970","line":"            }"},
{"lineNum":"  971","line":"            else"},
{"lineNum":"  972","line":"            {"},
{"lineNum":"  973","line":"                while (__gc_ < __n)"},
{"lineNum":"  974","line":"                {"},
{"lineNum":"  975","line":"                    typename traits_type::int_type __i = this->rdbuf()->sbumpc();"},
{"lineNum":"  976","line":"                    if (traits_type::eq_int_type(__i, traits_type::eof()))"},
{"lineNum":"  977","line":"                    {"},
{"lineNum":"  978","line":"                       __state |= ios_base::eofbit;"},
{"lineNum":"  979","line":"                       break;"},
{"lineNum":"  980","line":"                    }"},
{"lineNum":"  981","line":"                    ++__gc_;"},
{"lineNum":"  982","line":"                    if (traits_type::eq_int_type(__i, __dlm))"},
{"lineNum":"  983","line":"                        break;"},
{"lineNum":"  984","line":"                }"},
{"lineNum":"  985","line":"            }"},
{"lineNum":"  986","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  987","line":"        }"},
{"lineNum":"  988","line":"        catch (...)"},
{"lineNum":"  989","line":"        {"},
{"lineNum":"  990","line":"            __state |= ios_base::badbit;"},
{"lineNum":"  991","line":"            this->__setstate_nothrow(__state);"},
{"lineNum":"  992","line":"            if (this->exceptions() & ios_base::badbit)"},
{"lineNum":"  993","line":"            {"},
{"lineNum":"  994","line":"                throw;"},
{"lineNum":"  995","line":"            }"},
{"lineNum":"  996","line":"        }"},
{"lineNum":"  997","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":"  998","line":"        this->setstate(__state);"},
{"lineNum":"  999","line":"    }"},
{"lineNum":" 1000","line":"    return *this;"},
{"lineNum":" 1001","line":"}"},
{"lineNum":" 1002","line":""},
{"lineNum":" 1003","line":"template<class _CharT, class _Traits>"},
{"lineNum":" 1004","line":"typename basic_istream<_CharT, _Traits>::int_type"},
{"lineNum":" 1005","line":"basic_istream<_CharT, _Traits>::peek()"},
{"lineNum":" 1006","line":"{"},
{"lineNum":" 1007","line":"    ios_base::iostate __state = ios_base::goodbit;"},
{"lineNum":" 1008","line":"    __gc_ = 0;"},
{"lineNum":" 1009","line":"    int_type __r = traits_type::eof();"},
{"lineNum":" 1010","line":"    sentry __sen(*this, true);"},
{"lineNum":" 1011","line":"    if (__sen)"},
{"lineNum":" 1012","line":"    {"},
{"lineNum":" 1013","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1014","line":"        try"},
{"lineNum":" 1015","line":"        {"},
{"lineNum":" 1016","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1017","line":"            __r = this->rdbuf()->sgetc();"},
{"lineNum":" 1018","line":"            if (traits_type::eq_int_type(__r, traits_type::eof()))"},
{"lineNum":" 1019","line":"                __state |= ios_base::eofbit;"},
{"lineNum":" 1020","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1021","line":"        }"},
{"lineNum":" 1022","line":"        catch (...)"},
{"lineNum":" 1023","line":"        {"},
{"lineNum":" 1024","line":"            __state |= ios_base::badbit;"},
{"lineNum":" 1025","line":"            this->__setstate_nothrow(__state);"},
{"lineNum":" 1026","line":"            if (this->exceptions() & ios_base::badbit)"},
{"lineNum":" 1027","line":"            {"},
{"lineNum":" 1028","line":"                throw;"},
{"lineNum":" 1029","line":"            }"},
{"lineNum":" 1030","line":"        }"},
{"lineNum":" 1031","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1032","line":"        this->setstate(__state);"},
{"lineNum":" 1033","line":"    }"},
{"lineNum":" 1034","line":"    return __r;"},
{"lineNum":" 1035","line":"}"},
{"lineNum":" 1036","line":""},
{"lineNum":" 1037","line":"template<class _CharT, class _Traits>"},
{"lineNum":" 1038","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 1039","line":"basic_istream<_CharT, _Traits>::read(char_type* __s, streamsize __n)"},
{"lineNum":" 1040","line":"{"},
{"lineNum":" 1041","line":"    ios_base::iostate __state = ios_base::goodbit;"},
{"lineNum":" 1042","line":"    __gc_ = 0;"},
{"lineNum":" 1043","line":"    sentry __sen(*this, true);"},
{"lineNum":" 1044","line":"    if (__sen)"},
{"lineNum":" 1045","line":"    {"},
{"lineNum":" 1046","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1047","line":"        try"},
{"lineNum":" 1048","line":"        {"},
{"lineNum":" 1049","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1050","line":"            __gc_ = this->rdbuf()->sgetn(__s, __n);"},
{"lineNum":" 1051","line":"            if (__gc_ != __n)"},
{"lineNum":" 1052","line":"                __state |= ios_base::failbit | ios_base::eofbit;"},
{"lineNum":" 1053","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1054","line":"        }"},
{"lineNum":" 1055","line":"        catch (...)"},
{"lineNum":" 1056","line":"        {"},
{"lineNum":" 1057","line":"            __state |= ios_base::badbit;"},
{"lineNum":" 1058","line":"            this->__setstate_nothrow(__state);"},
{"lineNum":" 1059","line":"            if (this->exceptions() & ios_base::badbit)"},
{"lineNum":" 1060","line":"            {"},
{"lineNum":" 1061","line":"                throw;"},
{"lineNum":" 1062","line":"            }"},
{"lineNum":" 1063","line":"        }"},
{"lineNum":" 1064","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1065","line":"    }"},
{"lineNum":" 1066","line":"    else"},
{"lineNum":" 1067","line":"    {"},
{"lineNum":" 1068","line":"        __state |= ios_base::failbit;"},
{"lineNum":" 1069","line":"    }"},
{"lineNum":" 1070","line":"    this->setstate(__state);"},
{"lineNum":" 1071","line":"    return *this;"},
{"lineNum":" 1072","line":"}"},
{"lineNum":" 1073","line":""},
{"lineNum":" 1074","line":"template<class _CharT, class _Traits>"},
{"lineNum":" 1075","line":"streamsize"},
{"lineNum":" 1076","line":"basic_istream<_CharT, _Traits>::readsome(char_type* __s, streamsize __n)"},
{"lineNum":" 1077","line":"{"},
{"lineNum":" 1078","line":"    ios_base::iostate __state = ios_base::goodbit;"},
{"lineNum":" 1079","line":"    __gc_ = 0;"},
{"lineNum":" 1080","line":"    sentry __sen(*this, true);"},
{"lineNum":" 1081","line":"    if (__sen)"},
{"lineNum":" 1082","line":"    {"},
{"lineNum":" 1083","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1084","line":"        try"},
{"lineNum":" 1085","line":"        {"},
{"lineNum":" 1086","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1087","line":"            streamsize __c = this->rdbuf()->in_avail();"},
{"lineNum":" 1088","line":"            switch (__c)"},
{"lineNum":" 1089","line":"            {"},
{"lineNum":" 1090","line":"            case -1:"},
{"lineNum":" 1091","line":"                __state |= ios_base::eofbit;"},
{"lineNum":" 1092","line":"                break;"},
{"lineNum":" 1093","line":"            case 0:"},
{"lineNum":" 1094","line":"                break;"},
{"lineNum":" 1095","line":"            default:"},
{"lineNum":" 1096","line":"                __n = _VSTD::min(__c, __n);"},
{"lineNum":" 1097","line":"                __gc_ = this->rdbuf()->sgetn(__s, __n);"},
{"lineNum":" 1098","line":"                if (__gc_ != __n)"},
{"lineNum":" 1099","line":"                    __state |= ios_base::failbit | ios_base::eofbit;"},
{"lineNum":" 1100","line":"                break;"},
{"lineNum":" 1101","line":"            }"},
{"lineNum":" 1102","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1103","line":"        }"},
{"lineNum":" 1104","line":"        catch (...)"},
{"lineNum":" 1105","line":"        {"},
{"lineNum":" 1106","line":"            __state |= ios_base::badbit;"},
{"lineNum":" 1107","line":"            this->__setstate_nothrow(__state);"},
{"lineNum":" 1108","line":"            if (this->exceptions() & ios_base::badbit)"},
{"lineNum":" 1109","line":"            {"},
{"lineNum":" 1110","line":"                throw;"},
{"lineNum":" 1111","line":"            }"},
{"lineNum":" 1112","line":"        }"},
{"lineNum":" 1113","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1114","line":"    }"},
{"lineNum":" 1115","line":"    else"},
{"lineNum":" 1116","line":"    {"},
{"lineNum":" 1117","line":"        __state |= ios_base::failbit;"},
{"lineNum":" 1118","line":"    }"},
{"lineNum":" 1119","line":"    this->setstate(__state);"},
{"lineNum":" 1120","line":"    return __gc_;"},
{"lineNum":" 1121","line":"}"},
{"lineNum":" 1122","line":""},
{"lineNum":" 1123","line":"template<class _CharT, class _Traits>"},
{"lineNum":" 1124","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 1125","line":"basic_istream<_CharT, _Traits>::putback(char_type __c)"},
{"lineNum":" 1126","line":"{"},
{"lineNum":" 1127","line":"    ios_base::iostate __state = this->rdstate() & ~ios_base::eofbit;"},
{"lineNum":" 1128","line":"    __gc_ = 0;"},
{"lineNum":" 1129","line":"    this->clear(__state);"},
{"lineNum":" 1130","line":"    sentry __sen(*this, true);"},
{"lineNum":" 1131","line":"    if (__sen)"},
{"lineNum":" 1132","line":"    {"},
{"lineNum":" 1133","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1134","line":"        try"},
{"lineNum":" 1135","line":"        {"},
{"lineNum":" 1136","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1137","line":"            if (this->rdbuf() == nullptr || this->rdbuf()->sputbackc(__c) == traits_type::eof())"},
{"lineNum":" 1138","line":"                __state |= ios_base::badbit;"},
{"lineNum":" 1139","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1140","line":"        }"},
{"lineNum":" 1141","line":"        catch (...)"},
{"lineNum":" 1142","line":"        {"},
{"lineNum":" 1143","line":"            __state |= ios_base::badbit;"},
{"lineNum":" 1144","line":"            this->__setstate_nothrow(__state);"},
{"lineNum":" 1145","line":"            if (this->exceptions() & ios_base::badbit)"},
{"lineNum":" 1146","line":"            {"},
{"lineNum":" 1147","line":"                throw;"},
{"lineNum":" 1148","line":"            }"},
{"lineNum":" 1149","line":"        }"},
{"lineNum":" 1150","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1151","line":"    }"},
{"lineNum":" 1152","line":"    else"},
{"lineNum":" 1153","line":"    {"},
{"lineNum":" 1154","line":"        __state |= ios_base::failbit;"},
{"lineNum":" 1155","line":"    }"},
{"lineNum":" 1156","line":"    this->setstate(__state);"},
{"lineNum":" 1157","line":"    return *this;"},
{"lineNum":" 1158","line":"}"},
{"lineNum":" 1159","line":""},
{"lineNum":" 1160","line":"template<class _CharT, class _Traits>"},
{"lineNum":" 1161","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 1162","line":"basic_istream<_CharT, _Traits>::unget()"},
{"lineNum":" 1163","line":"{"},
{"lineNum":" 1164","line":"    ios_base::iostate __state = this->rdstate() & ~ios_base::eofbit;"},
{"lineNum":" 1165","line":"    __gc_ = 0;"},
{"lineNum":" 1166","line":"    this->clear(__state);"},
{"lineNum":" 1167","line":"    sentry __sen(*this, true);"},
{"lineNum":" 1168","line":"    if (__sen)"},
{"lineNum":" 1169","line":"    {"},
{"lineNum":" 1170","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1171","line":"        try"},
{"lineNum":" 1172","line":"        {"},
{"lineNum":" 1173","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1174","line":"            if (this->rdbuf() == nullptr || this->rdbuf()->sungetc() == traits_type::eof())"},
{"lineNum":" 1175","line":"                __state |= ios_base::badbit;"},
{"lineNum":" 1176","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1177","line":"        }"},
{"lineNum":" 1178","line":"        catch (...)"},
{"lineNum":" 1179","line":"        {"},
{"lineNum":" 1180","line":"            __state |= ios_base::badbit;"},
{"lineNum":" 1181","line":"            this->__setstate_nothrow(__state);"},
{"lineNum":" 1182","line":"            if (this->exceptions() & ios_base::badbit)"},
{"lineNum":" 1183","line":"            {"},
{"lineNum":" 1184","line":"                throw;"},
{"lineNum":" 1185","line":"            }"},
{"lineNum":" 1186","line":"        }"},
{"lineNum":" 1187","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1188","line":"    }"},
{"lineNum":" 1189","line":"    else"},
{"lineNum":" 1190","line":"    {"},
{"lineNum":" 1191","line":"        __state |= ios_base::failbit;"},
{"lineNum":" 1192","line":"    }"},
{"lineNum":" 1193","line":"    this->setstate(__state);"},
{"lineNum":" 1194","line":"    return *this;"},
{"lineNum":" 1195","line":"}"},
{"lineNum":" 1196","line":""},
{"lineNum":" 1197","line":"template<class _CharT, class _Traits>"},
{"lineNum":" 1198","line":"int"},
{"lineNum":" 1199","line":"basic_istream<_CharT, _Traits>::sync()"},
{"lineNum":" 1200","line":"{"},
{"lineNum":" 1201","line":"    ios_base::iostate __state = ios_base::goodbit;"},
{"lineNum":" 1202","line":"    int __r = 0;"},
{"lineNum":" 1203","line":"    sentry __sen(*this, true);"},
{"lineNum":" 1204","line":"    if (__sen)"},
{"lineNum":" 1205","line":"    {"},
{"lineNum":" 1206","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1207","line":"        try"},
{"lineNum":" 1208","line":"        {"},
{"lineNum":" 1209","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1210","line":"            if (this->rdbuf() == nullptr)"},
{"lineNum":" 1211","line":"                return -1;"},
{"lineNum":" 1212","line":"            if (this->rdbuf()->pubsync() == -1)"},
{"lineNum":" 1213","line":"            {"},
{"lineNum":" 1214","line":"                __state |= ios_base::badbit;"},
{"lineNum":" 1215","line":"                return -1;"},
{"lineNum":" 1216","line":"            }"},
{"lineNum":" 1217","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1218","line":"        }"},
{"lineNum":" 1219","line":"        catch (...)"},
{"lineNum":" 1220","line":"        {"},
{"lineNum":" 1221","line":"            __state |= ios_base::badbit;"},
{"lineNum":" 1222","line":"            this->__setstate_nothrow(__state);"},
{"lineNum":" 1223","line":"            if (this->exceptions() & ios_base::badbit)"},
{"lineNum":" 1224","line":"            {"},
{"lineNum":" 1225","line":"                throw;"},
{"lineNum":" 1226","line":"            }"},
{"lineNum":" 1227","line":"        }"},
{"lineNum":" 1228","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1229","line":"        this->setstate(__state);"},
{"lineNum":" 1230","line":"    }"},
{"lineNum":" 1231","line":"    return __r;"},
{"lineNum":" 1232","line":"}"},
{"lineNum":" 1233","line":""},
{"lineNum":" 1234","line":"template<class _CharT, class _Traits>"},
{"lineNum":" 1235","line":"typename basic_istream<_CharT, _Traits>::pos_type"},
{"lineNum":" 1236","line":"basic_istream<_CharT, _Traits>::tellg()"},
{"lineNum":" 1237","line":"{"},
{"lineNum":" 1238","line":"    ios_base::iostate __state = ios_base::goodbit;"},
{"lineNum":" 1239","line":"    pos_type __r(-1);"},
{"lineNum":" 1240","line":"    sentry __sen(*this, true);"},
{"lineNum":" 1241","line":"    if (__sen)"},
{"lineNum":" 1242","line":"    {"},
{"lineNum":" 1243","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1244","line":"        try"},
{"lineNum":" 1245","line":"        {"},
{"lineNum":" 1246","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1247","line":"        __r = this->rdbuf()->pubseekoff(0, ios_base::cur, ios_base::in);"},
{"lineNum":" 1248","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1249","line":"        }"},
{"lineNum":" 1250","line":"        catch (...)"},
{"lineNum":" 1251","line":"        {"},
{"lineNum":" 1252","line":"            __state |= ios_base::badbit;"},
{"lineNum":" 1253","line":"            this->__setstate_nothrow(__state);"},
{"lineNum":" 1254","line":"            if (this->exceptions() & ios_base::badbit)"},
{"lineNum":" 1255","line":"            {"},
{"lineNum":" 1256","line":"                throw;"},
{"lineNum":" 1257","line":"            }"},
{"lineNum":" 1258","line":"        }"},
{"lineNum":" 1259","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1260","line":"        this->setstate(__state);"},
{"lineNum":" 1261","line":"    }"},
{"lineNum":" 1262","line":"    return __r;"},
{"lineNum":" 1263","line":"}"},
{"lineNum":" 1264","line":""},
{"lineNum":" 1265","line":"template<class _CharT, class _Traits>"},
{"lineNum":" 1266","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 1267","line":"basic_istream<_CharT, _Traits>::seekg(pos_type __pos)"},
{"lineNum":" 1268","line":"{"},
{"lineNum":" 1269","line":"    ios_base::iostate __state = this->rdstate() & ~ios_base::eofbit;"},
{"lineNum":" 1270","line":"    this->clear(__state);"},
{"lineNum":" 1271","line":"    sentry __sen(*this, true);"},
{"lineNum":" 1272","line":"    if (__sen)"},
{"lineNum":" 1273","line":"    {"},
{"lineNum":" 1274","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1275","line":"        try"},
{"lineNum":" 1276","line":"        {"},
{"lineNum":" 1277","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1278","line":"            if (this->rdbuf()->pubseekpos(__pos, ios_base::in) == pos_type(-1))"},
{"lineNum":" 1279","line":"                __state |= ios_base::failbit;"},
{"lineNum":" 1280","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1281","line":"        }"},
{"lineNum":" 1282","line":"        catch (...)"},
{"lineNum":" 1283","line":"        {"},
{"lineNum":" 1284","line":"            __state |= ios_base::badbit;"},
{"lineNum":" 1285","line":"            this->__setstate_nothrow(__state);"},
{"lineNum":" 1286","line":"            if (this->exceptions() & ios_base::badbit)"},
{"lineNum":" 1287","line":"            {"},
{"lineNum":" 1288","line":"                throw;"},
{"lineNum":" 1289","line":"            }"},
{"lineNum":" 1290","line":"        }"},
{"lineNum":" 1291","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1292","line":"        this->setstate(__state);"},
{"lineNum":" 1293","line":"    }"},
{"lineNum":" 1294","line":"    return *this;"},
{"lineNum":" 1295","line":"}"},
{"lineNum":" 1296","line":""},
{"lineNum":" 1297","line":"template<class _CharT, class _Traits>"},
{"lineNum":" 1298","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 1299","line":"basic_istream<_CharT, _Traits>::seekg(off_type __off, ios_base::seekdir __dir)"},
{"lineNum":" 1300","line":"{"},
{"lineNum":" 1301","line":"    ios_base::iostate __state = this->rdstate() & ~ios_base::eofbit;"},
{"lineNum":" 1302","line":"    this->clear(__state);"},
{"lineNum":" 1303","line":"    sentry __sen(*this, true);"},
{"lineNum":" 1304","line":"    if (__sen)"},
{"lineNum":" 1305","line":"    {"},
{"lineNum":" 1306","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1307","line":"        try"},
{"lineNum":" 1308","line":"        {"},
{"lineNum":" 1309","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1310","line":"            if (this->rdbuf()->pubseekoff(__off, __dir, ios_base::in) == pos_type(-1))"},
{"lineNum":" 1311","line":"                __state |= ios_base::failbit;"},
{"lineNum":" 1312","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1313","line":"        }"},
{"lineNum":" 1314","line":"        catch (...)"},
{"lineNum":" 1315","line":"        {"},
{"lineNum":" 1316","line":"            __state |= ios_base::badbit;"},
{"lineNum":" 1317","line":"            this->__setstate_nothrow(__state);"},
{"lineNum":" 1318","line":"            if (this->exceptions() & ios_base::badbit)"},
{"lineNum":" 1319","line":"            {"},
{"lineNum":" 1320","line":"                throw;"},
{"lineNum":" 1321","line":"            }"},
{"lineNum":" 1322","line":"        }"},
{"lineNum":" 1323","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1324","line":"        this->setstate(__state);"},
{"lineNum":" 1325","line":"    }"},
{"lineNum":" 1326","line":"    return *this;"},
{"lineNum":" 1327","line":"}"},
{"lineNum":" 1328","line":""},
{"lineNum":" 1329","line":"template <class _CharT, class _Traits>"},
{"lineNum":" 1330","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 1331","line":"ws(basic_istream<_CharT, _Traits>& __is)"},
{"lineNum":" 1332","line":"{"},
{"lineNum":" 1333","line":"    ios_base::iostate __state = ios_base::goodbit;"},
{"lineNum":" 1334","line":"    typename basic_istream<_CharT, _Traits>::sentry __sen(__is, true);"},
{"lineNum":" 1335","line":"    if (__sen)"},
{"lineNum":" 1336","line":"    {"},
{"lineNum":" 1337","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1338","line":"        try"},
{"lineNum":" 1339","line":"        {"},
{"lineNum":" 1340","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1341","line":"            const ctype<_CharT>& __ct = use_facet<ctype<_CharT> >(__is.getloc());"},
{"lineNum":" 1342","line":"            while (true)"},
{"lineNum":" 1343","line":"            {"},
{"lineNum":" 1344","line":"                typename _Traits::int_type __i = __is.rdbuf()->sgetc();"},
{"lineNum":" 1345","line":"                if (_Traits::eq_int_type(__i, _Traits::eof()))"},
{"lineNum":" 1346","line":"                {"},
{"lineNum":" 1347","line":"                   __state |= ios_base::eofbit;"},
{"lineNum":" 1348","line":"                   break;"},
{"lineNum":" 1349","line":"                }"},
{"lineNum":" 1350","line":"                if (!__ct.is(__ct.space, _Traits::to_char_type(__i)))"},
{"lineNum":" 1351","line":"                    break;"},
{"lineNum":" 1352","line":"                __is.rdbuf()->sbumpc();"},
{"lineNum":" 1353","line":"            }"},
{"lineNum":" 1354","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1355","line":"        }"},
{"lineNum":" 1356","line":"        catch (...)"},
{"lineNum":" 1357","line":"        {"},
{"lineNum":" 1358","line":"            __state |= ios_base::badbit;"},
{"lineNum":" 1359","line":"            __is.__setstate_nothrow(__state);"},
{"lineNum":" 1360","line":"            if (__is.exceptions() & ios_base::badbit)"},
{"lineNum":" 1361","line":"            {"},
{"lineNum":" 1362","line":"                throw;"},
{"lineNum":" 1363","line":"            }"},
{"lineNum":" 1364","line":"        }"},
{"lineNum":" 1365","line":"#endif // _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1366","line":"        __is.setstate(__state);"},
{"lineNum":" 1367","line":"    }"},
{"lineNum":" 1368","line":"    return __is;"},
{"lineNum":" 1369","line":"}"},
{"lineNum":" 1370","line":""},
{"lineNum":" 1371","line":"template <class _Stream, class _Tp, class = void>"},
{"lineNum":" 1372","line":"struct __is_istreamable : false_type { };"},
{"lineNum":" 1373","line":""},
{"lineNum":" 1374","line":"template <class _Stream, class _Tp>"},
{"lineNum":" 1375","line":"struct __is_istreamable<_Stream, _Tp, decltype("},
{"lineNum":" 1376","line":"    declval<_Stream>() >> declval<_Tp>(), void()"},
{"lineNum":" 1377","line":")> : true_type { };"},
{"lineNum":" 1378","line":""},
{"lineNum":" 1379","line":"template <class _Stream, class _Tp, class = typename enable_if<"},
{"lineNum":" 1380","line":"    _And<is_base_of<ios_base, _Stream>,"},
{"lineNum":" 1381","line":"         __is_istreamable<_Stream&, _Tp&&> >::value"},
{"lineNum":" 1382","line":">::type>"},
{"lineNum":" 1383","line":"_LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1384","line":"_Stream&& operator>>(_Stream&& __is, _Tp&& __x)"},
{"lineNum":" 1385","line":"{"},
{"lineNum":" 1386","line":"    __is >> _VSTD::forward<_Tp>(__x);"},
{"lineNum":" 1387","line":"    return _VSTD::move(__is);"},
{"lineNum":" 1388","line":"}"},
{"lineNum":" 1389","line":""},
{"lineNum":" 1390","line":"template <class _CharT, class _Traits>"},
{"lineNum":" 1391","line":"class _LIBCPP_TEMPLATE_VIS basic_iostream"},
{"lineNum":" 1392","line":"    : public basic_istream<_CharT, _Traits>,"},
{"lineNum":" 1393","line":"      public basic_ostream<_CharT, _Traits>"},
{"lineNum":" 1394","line":"{"},
{"lineNum":" 1395","line":"public:"},
{"lineNum":" 1396","line":"    // types:"},
{"lineNum":" 1397","line":"    typedef _CharT                         char_type;"},
{"lineNum":" 1398","line":"    typedef _Traits                        traits_type;"},
{"lineNum":" 1399","line":"    typedef typename traits_type::int_type int_type;"},
{"lineNum":" 1400","line":"    typedef typename traits_type::pos_type pos_type;"},
{"lineNum":" 1401","line":"    typedef typename traits_type::off_type off_type;"},
{"lineNum":" 1402","line":""},
{"lineNum":" 1403","line":"    // constructor/destructor"},
{"lineNum":" 1404","line":"    inline _LIBCPP_HIDE_FROM_ABI_AFTER_V1"},
{"lineNum":" 1405","line":"    explicit basic_iostream(basic_streambuf<char_type, traits_type>* __sb)"},
{"lineNum":" 1406","line":"      : basic_istream<_CharT, _Traits>(__sb)"},
{"lineNum":" 1407","line":"    {}"},
{"lineNum":" 1408","line":""},
{"lineNum":" 1409","line":"    virtual ~basic_iostream();"},
{"lineNum":" 1410","line":"protected:"},
{"lineNum":" 1411","line":"    inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1412","line":"    basic_iostream(basic_iostream&& __rhs);"},
{"lineNum":" 1413","line":""},
{"lineNum":" 1414","line":"    // assign/swap"},
{"lineNum":" 1415","line":"    inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1416","line":"    basic_iostream& operator=(basic_iostream&& __rhs);"},
{"lineNum":" 1417","line":""},
{"lineNum":" 1418","line":"    inline _LIBCPP_HIDE_FROM_ABI_AFTER_V1"},
{"lineNum":" 1419","line":"    void swap(basic_iostream& __rhs)"},
{"lineNum":" 1420","line":"    { basic_istream<char_type, traits_type>::swap(__rhs); }"},
{"lineNum":" 1421","line":"};"},
{"lineNum":" 1422","line":""},
{"lineNum":" 1423","line":"template <class _CharT, class _Traits>"},
{"lineNum":" 1424","line":"basic_iostream<_CharT, _Traits>::basic_iostream(basic_iostream&& __rhs)"},
{"lineNum":" 1425","line":"    : basic_istream<_CharT, _Traits>(_VSTD::move(__rhs))"},
{"lineNum":" 1426","line":"{"},
{"lineNum":" 1427","line":"}"},
{"lineNum":" 1428","line":""},
{"lineNum":" 1429","line":"template <class _CharT, class _Traits>"},
{"lineNum":" 1430","line":"basic_iostream<_CharT, _Traits>&"},
{"lineNum":" 1431","line":"basic_iostream<_CharT, _Traits>::operator=(basic_iostream&& __rhs)"},
{"lineNum":" 1432","line":"{"},
{"lineNum":" 1433","line":"    swap(__rhs);"},
{"lineNum":" 1434","line":"    return *this;"},
{"lineNum":" 1435","line":"}"},
{"lineNum":" 1436","line":""},
{"lineNum":" 1437","line":"template <class _CharT, class _Traits>"},
{"lineNum":" 1438","line":"basic_iostream<_CharT, _Traits>::~basic_iostream()"},
{"lineNum":" 1439","line":"{"},
{"lineNum":" 1440","line":"}"},
{"lineNum":" 1441","line":""},
{"lineNum":" 1442","line":"template<class _CharT, class _Traits, class _Allocator>"},
{"lineNum":" 1443","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 1444","line":"operator>>(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 1445","line":"           basic_string<_CharT, _Traits, _Allocator>& __str)"},
{"lineNum":" 1446","line":"{"},
{"lineNum":" 1447","line":"    ios_base::iostate __state = ios_base::goodbit;"},
{"lineNum":" 1448","line":"    typename basic_istream<_CharT, _Traits>::sentry __sen(__is);"},
{"lineNum":" 1449","line":"    if (__sen)"},
{"lineNum":" 1450","line":"    {"},
{"lineNum":" 1451","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1452","line":"        try"},
{"lineNum":" 1453","line":"        {"},
{"lineNum":" 1454","line":"#endif"},
{"lineNum":" 1455","line":"            __str.clear();"},
{"lineNum":" 1456","line":"            streamsize __n = __is.width();"},
{"lineNum":" 1457","line":"            if (__n <= 0)"},
{"lineNum":" 1458","line":"                __n = __str.max_size();"},
{"lineNum":" 1459","line":"            if (__n <= 0)"},
{"lineNum":" 1460","line":"                __n = numeric_limits<streamsize>::max();"},
{"lineNum":" 1461","line":"            streamsize __c = 0;"},
{"lineNum":" 1462","line":"            const ctype<_CharT>& __ct = use_facet<ctype<_CharT> >(__is.getloc());"},
{"lineNum":" 1463","line":"            while (__c < __n)"},
{"lineNum":" 1464","line":"            {"},
{"lineNum":" 1465","line":"                typename _Traits::int_type __i = __is.rdbuf()->sgetc();"},
{"lineNum":" 1466","line":"                if (_Traits::eq_int_type(__i, _Traits::eof()))"},
{"lineNum":" 1467","line":"                {"},
{"lineNum":" 1468","line":"                   __state |= ios_base::eofbit;"},
{"lineNum":" 1469","line":"                   break;"},
{"lineNum":" 1470","line":"                }"},
{"lineNum":" 1471","line":"                _CharT __ch = _Traits::to_char_type(__i);"},
{"lineNum":" 1472","line":"                if (__ct.is(__ct.space, __ch))"},
{"lineNum":" 1473","line":"                    break;"},
{"lineNum":" 1474","line":"                __str.push_back(__ch);"},
{"lineNum":" 1475","line":"                ++__c;"},
{"lineNum":" 1476","line":"                 __is.rdbuf()->sbumpc();"},
{"lineNum":" 1477","line":"            }"},
{"lineNum":" 1478","line":"            __is.width(0);"},
{"lineNum":" 1479","line":"            if (__c == 0)"},
{"lineNum":" 1480","line":"               __state |= ios_base::failbit;"},
{"lineNum":" 1481","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1482","line":"        }"},
{"lineNum":" 1483","line":"        catch (...)"},
{"lineNum":" 1484","line":"        {"},
{"lineNum":" 1485","line":"            __state |= ios_base::badbit;"},
{"lineNum":" 1486","line":"            __is.__setstate_nothrow(__state);"},
{"lineNum":" 1487","line":"            if (__is.exceptions() & ios_base::badbit)"},
{"lineNum":" 1488","line":"            {"},
{"lineNum":" 1489","line":"                throw;"},
{"lineNum":" 1490","line":"            }"},
{"lineNum":" 1491","line":"        }"},
{"lineNum":" 1492","line":"#endif"},
{"lineNum":" 1493","line":"        __is.setstate(__state);"},
{"lineNum":" 1494","line":"    }"},
{"lineNum":" 1495","line":"    return __is;"},
{"lineNum":" 1496","line":"}"},
{"lineNum":" 1497","line":""},
{"lineNum":" 1498","line":"template<class _CharT, class _Traits, class _Allocator>"},
{"lineNum":" 1499","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 1500","line":"getline(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 1501","line":"        basic_string<_CharT, _Traits, _Allocator>& __str, _CharT __dlm)"},
{"lineNum":" 1502","line":"{","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 1503","line":"    ios_base::iostate __state = ios_base::goodbit;"},
{"lineNum":" 1504","line":"    typename basic_istream<_CharT, _Traits>::sentry __sen(__is, true);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 1505","line":"    if (__sen)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 1506","line":"    {"},
{"lineNum":" 1507","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1508","line":"        try"},
{"lineNum":" 1509","line":"        {"},
{"lineNum":" 1510","line":"#endif"},
{"lineNum":" 1511","line":"            __str.clear();"},
{"lineNum":" 1512","line":"            streamsize __extr = 0;"},
{"lineNum":" 1513","line":"            while (true)"},
{"lineNum":" 1514","line":"            {"},
{"lineNum":" 1515","line":"                typename _Traits::int_type __i = __is.rdbuf()->sbumpc();","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 1516","line":"                if (_Traits::eq_int_type(__i, _Traits::eof()))","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 1517","line":"                {"},
{"lineNum":" 1518","line":"                   __state |= ios_base::eofbit;"},
{"lineNum":" 1519","line":"                   break;"},
{"lineNum":" 1520","line":"                }"},
{"lineNum":" 1521","line":"                ++__extr;"},
{"lineNum":" 1522","line":"                _CharT __ch = _Traits::to_char_type(__i);"},
{"lineNum":" 1523","line":"                if (_Traits::eq(__ch, __dlm))","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 1524","line":"                    break;"},
{"lineNum":" 1525","line":"                __str.push_back(__ch);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 1526","line":"                if (__str.size() == __str.max_size())","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 1527","line":"                {"},
{"lineNum":" 1528","line":"                    __state |= ios_base::failbit;"},
{"lineNum":" 1529","line":"                    break;"},
{"lineNum":" 1530","line":"                }"},
{"lineNum":" 1531","line":"            }"},
{"lineNum":" 1532","line":"            if (__extr == 0)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 1533","line":"               __state |= ios_base::failbit;"},
{"lineNum":" 1534","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1535","line":"        }","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 1536","line":"        catch (...)"},
{"lineNum":" 1537","line":"        {"},
{"lineNum":" 1538","line":"            __state |= ios_base::badbit;"},
{"lineNum":" 1539","line":"            __is.__setstate_nothrow(__state);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 1540","line":"            if (__is.exceptions() & ios_base::badbit)","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 1541","line":"            {"},
{"lineNum":" 1542","line":"                throw;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 1543","line":"            }"},
{"lineNum":" 1544","line":"        }","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":" 1545","line":"#endif"},
{"lineNum":" 1546","line":"        __is.setstate(__state);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 1547","line":"    }"},
{"lineNum":" 1548","line":"    return __is;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 1549","line":"}"},
{"lineNum":" 1550","line":""},
{"lineNum":" 1551","line":"template<class _CharT, class _Traits, class _Allocator>"},
{"lineNum":" 1552","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1553","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 1554","line":"getline(basic_istream<_CharT, _Traits>& __is,"},
{"lineNum":" 1555","line":"        basic_string<_CharT, _Traits, _Allocator>& __str)"},
{"lineNum":" 1556","line":"{"},
{"lineNum":" 1557","line":"    return getline(__is, __str, __is.widen(\'\\n\'));","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":" 1558","line":"}"},
{"lineNum":" 1559","line":""},
{"lineNum":" 1560","line":"template<class _CharT, class _Traits, class _Allocator>"},
{"lineNum":" 1561","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1562","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 1563","line":"getline(basic_istream<_CharT, _Traits>&& __is,"},
{"lineNum":" 1564","line":"        basic_string<_CharT, _Traits, _Allocator>& __str, _CharT __dlm)"},
{"lineNum":" 1565","line":"{"},
{"lineNum":" 1566","line":"    return getline(__is, __str, __dlm);"},
{"lineNum":" 1567","line":"}"},
{"lineNum":" 1568","line":""},
{"lineNum":" 1569","line":"template<class _CharT, class _Traits, class _Allocator>"},
{"lineNum":" 1570","line":"inline _LIBCPP_INLINE_VISIBILITY"},
{"lineNum":" 1571","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 1572","line":"getline(basic_istream<_CharT, _Traits>&& __is,"},
{"lineNum":" 1573","line":"        basic_string<_CharT, _Traits, _Allocator>& __str)"},
{"lineNum":" 1574","line":"{"},
{"lineNum":" 1575","line":"    return getline(__is, __str, __is.widen(\'\\n\'));"},
{"lineNum":" 1576","line":"}"},
{"lineNum":" 1577","line":""},
{"lineNum":" 1578","line":"template <class _CharT, class _Traits, size_t _Size>"},
{"lineNum":" 1579","line":"basic_istream<_CharT, _Traits>&"},
{"lineNum":" 1580","line":"operator>>(basic_istream<_CharT, _Traits>& __is, bitset<_Size>& __x)"},
{"lineNum":" 1581","line":"{"},
{"lineNum":" 1582","line":"    ios_base::iostate __state = ios_base::goodbit;"},
{"lineNum":" 1583","line":"    typename basic_istream<_CharT, _Traits>::sentry __sen(__is);"},
{"lineNum":" 1584","line":"    if (__sen)"},
{"lineNum":" 1585","line":"    {"},
{"lineNum":" 1586","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1587","line":"        try"},
{"lineNum":" 1588","line":"        {"},
{"lineNum":" 1589","line":"#endif"},
{"lineNum":" 1590","line":"            basic_string<_CharT, _Traits> __str;"},
{"lineNum":" 1591","line":"            const ctype<_CharT>& __ct = use_facet<ctype<_CharT> >(__is.getloc());"},
{"lineNum":" 1592","line":"            size_t __c = 0;"},
{"lineNum":" 1593","line":"            _CharT __zero = __ct.widen(\'0\');"},
{"lineNum":" 1594","line":"            _CharT __one = __ct.widen(\'1\');"},
{"lineNum":" 1595","line":"            while (__c < _Size)"},
{"lineNum":" 1596","line":"            {"},
{"lineNum":" 1597","line":"                typename _Traits::int_type __i = __is.rdbuf()->sgetc();"},
{"lineNum":" 1598","line":"                if (_Traits::eq_int_type(__i, _Traits::eof()))"},
{"lineNum":" 1599","line":"                {"},
{"lineNum":" 1600","line":"                   __state |= ios_base::eofbit;"},
{"lineNum":" 1601","line":"                   break;"},
{"lineNum":" 1602","line":"                }"},
{"lineNum":" 1603","line":"                _CharT __ch = _Traits::to_char_type(__i);"},
{"lineNum":" 1604","line":"                if (!_Traits::eq(__ch, __zero) && !_Traits::eq(__ch, __one))"},
{"lineNum":" 1605","line":"                    break;"},
{"lineNum":" 1606","line":"                __str.push_back(__ch);"},
{"lineNum":" 1607","line":"                ++__c;"},
{"lineNum":" 1608","line":"                 __is.rdbuf()->sbumpc();"},
{"lineNum":" 1609","line":"            }"},
{"lineNum":" 1610","line":"            __x = bitset<_Size>(__str);"},
{"lineNum":" 1611","line":"            if (_Size > 0 && __c == 0)"},
{"lineNum":" 1612","line":"               __state |= ios_base::failbit;"},
{"lineNum":" 1613","line":"#ifndef _LIBCPP_NO_EXCEPTIONS"},
{"lineNum":" 1614","line":"        }"},
{"lineNum":" 1615","line":"        catch (...)"},
{"lineNum":" 1616","line":"        {"},
{"lineNum":" 1617","line":"            __state |= ios_base::badbit;"},
{"lineNum":" 1618","line":"            __is.__setstate_nothrow(__state);"},
{"lineNum":" 1619","line":"            if (__is.exceptions() & ios_base::badbit)"},
{"lineNum":" 1620","line":"            {"},
{"lineNum":" 1621","line":"                throw;"},
{"lineNum":" 1622","line":"            }"},
{"lineNum":" 1623","line":"        }"},
{"lineNum":" 1624","line":"#endif"},
{"lineNum":" 1625","line":"        __is.setstate(__state);"},
{"lineNum":" 1626","line":"    }"},
{"lineNum":" 1627","line":"    return __is;"},
{"lineNum":" 1628","line":"}"},
{"lineNum":" 1629","line":""},
{"lineNum":" 1630","line":"_LIBCPP_EXTERN_TEMPLATE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS basic_istream<char>)"},
{"lineNum":" 1631","line":"_LIBCPP_EXTERN_TEMPLATE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS basic_istream<wchar_t>)"},
{"lineNum":" 1632","line":"_LIBCPP_EXTERN_TEMPLATE(class _LIBCPP_EXTERN_TEMPLATE_TYPE_VIS basic_iostream<char>)"},
{"lineNum":" 1633","line":""},
{"lineNum":" 1634","line":"_LIBCPP_END_NAMESPACE_STD"},
{"lineNum":" 1635","line":""},
{"lineNum":" 1636","line":"_LIBCPP_POP_MACROS"},
{"lineNum":" 1637","line":""},
{"lineNum":" 1638","line":"#endif // _LIBCPP_ISTREAM"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:42", "instrumented" : 21, "covered" : 0,};
var merged_data = [];
