var data = {lines:[
{"lineNum":"    1","line":""},
{"lineNum":"    2","line":"#include \"Eigen/Core\""},
{"lineNum":"    3","line":"#include \"Eigen/LU\""},
{"lineNum":"    4","line":""},
{"lineNum":"    5","line":"using namespace Eigen;"},
{"lineNum":"    6","line":""},
{"lineNum":"    7","line":"namespace"},
{"lineNum":"    8","line":"{"},
{"lineNum":"    9","line":"    const double tiny = 1.0e-15;"},
{"lineNum":"   10","line":""},
{"lineNum":"   11","line":"    double eliminate_small_negative(double x)"},
{"lineNum":"   12","line":"    {"},
{"lineNum":"   13","line":"        if ((x < 0) && (x > -tiny)) return 0;"},
{"lineNum":"   14","line":"        else return x;"},
{"lineNum":"   15","line":"    }"},
{"lineNum":"   16","line":"}"},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"void calculate_emittances("},
{"lineNum":"   19","line":"        double* mom2,"},
{"lineNum":"   20","line":"        double& emitx,"},
{"lineNum":"   21","line":"        double& emity,"},
{"lineNum":"   22","line":"        double& emitz,"},
{"lineNum":"   23","line":"        double& emitxy,"},
{"lineNum":"   24","line":"        double& emitxyz )"},
{"lineNum":"   25","line":"{","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   26","line":"    Matrix<double, 6, 6> mom2_matrix(mom2);"},
{"lineNum":"   27","line":""},
{"lineNum":"   28","line":"    emitx = std::sqrt(eliminate_small_negative(","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   29","line":"            mom2_matrix.block<2, 2>(0/*Bunch::x*/, 0/*Bunch::x*/).determinant()));"},
{"lineNum":"   30","line":"    emity = std::sqrt(eliminate_small_negative(","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   31","line":"            mom2_matrix.block<2, 2>(2/*Bunch::y*/, 2/*Bunch::y*/).determinant()));"},
{"lineNum":"   32","line":"    emitz = std::sqrt(eliminate_small_negative(","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   33","line":"            mom2_matrix.block<2, 2>(4/*Bunch::z*/, 4/*Bunch::z*/).determinant()));"},
{"lineNum":"   34","line":"    emitxy = std::sqrt(eliminate_small_negative(","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   35","line":"            mom2_matrix.block<4, 4>(0/*Bunch::x*/, 0/*Bunch::x*/).determinant()));"},
{"lineNum":"   36","line":""},
{"lineNum":"   37","line":"    emitxyz = std::sqrt(eliminate_small_negative(mom2_matrix.determinant()));","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   38","line":"}","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   39","line":""},
{"lineNum":"   40","line":""},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:41", "instrumented" : 7, "covered" : 0,};
var merged_data = [];
