var data = {lines:[
{"lineNum":"    1","line":"/*============================================================================="},
{"lineNum":"    2","line":"    Copyright (c) 2001-2011 Hartmut Kaiser"},
{"lineNum":"    3","line":"    Copyright (c) 2001-2011 Joel de Guzman"},
{"lineNum":"    4","line":""},
{"lineNum":"    5","line":"    Distributed under the Boost Software License, Version 1.0. (See accompanying"},
{"lineNum":"    6","line":"    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)"},
{"lineNum":"    7","line":"=============================================================================*/"},
{"lineNum":"    8","line":"#if !defined(BOOST_SPIRIT_ASCII_APRIL_26_2006_1106PM)"},
{"lineNum":"    9","line":"#define BOOST_SPIRIT_ASCII_APRIL_26_2006_1106PM"},
{"lineNum":"   10","line":""},
{"lineNum":"   11","line":"#if defined(_MSC_VER)"},
{"lineNum":"   12","line":"#pragma once"},
{"lineNum":"   13","line":"#endif"},
{"lineNum":"   14","line":""},
{"lineNum":"   15","line":"#include <climits>"},
{"lineNum":"   16","line":"#include <boost/assert.hpp>"},
{"lineNum":"   17","line":"#include <boost/cstdint.hpp>"},
{"lineNum":"   18","line":""},
{"lineNum":"   19","line":"///////////////////////////////////////////////////////////////////////////////"},
{"lineNum":"   20","line":"// constants used to classify the single characters"},
{"lineNum":"   21","line":"///////////////////////////////////////////////////////////////////////////////"},
{"lineNum":"   22","line":"#define BOOST_CC_DIGIT    0x0001"},
{"lineNum":"   23","line":"#define BOOST_CC_XDIGIT   0x0002"},
{"lineNum":"   24","line":"#define BOOST_CC_ALPHA    0x0004"},
{"lineNum":"   25","line":"#define BOOST_CC_CTRL     0x0008"},
{"lineNum":"   26","line":"#define BOOST_CC_LOWER    0x0010"},
{"lineNum":"   27","line":"#define BOOST_CC_UPPER    0x0020"},
{"lineNum":"   28","line":"#define BOOST_CC_SPACE    0x0040"},
{"lineNum":"   29","line":"#define BOOST_CC_PUNCT    0x0080"},
{"lineNum":"   30","line":""},
{"lineNum":"   31","line":"namespace boost { namespace spirit { namespace char_encoding"},
{"lineNum":"   32","line":"{"},
{"lineNum":"   33","line":"    // The detection of isgraph(), isprint() and isblank() is done programmatically"},
{"lineNum":"   34","line":"    // to keep the character type table small. Additionally, these functions are"},
{"lineNum":"   35","line":"    // rather seldom used and the programmatic detection is very simple."},
{"lineNum":"   36","line":""},
{"lineNum":"   37","line":"    ///////////////////////////////////////////////////////////////////////////"},
{"lineNum":"   38","line":"    // ASCII character classification table"},
{"lineNum":"   39","line":"    ///////////////////////////////////////////////////////////////////////////"},
{"lineNum":"   40","line":"    const unsigned char ascii_char_types[] ="},
{"lineNum":"   41","line":"    {"},
{"lineNum":"   42","line":"        /* NUL   0   0 */   BOOST_CC_CTRL,"},
{"lineNum":"   43","line":"        /* SOH   1   1 */   BOOST_CC_CTRL,"},
{"lineNum":"   44","line":"        /* STX   2   2 */   BOOST_CC_CTRL,"},
{"lineNum":"   45","line":"        /* ETX   3   3 */   BOOST_CC_CTRL,"},
{"lineNum":"   46","line":"        /* EOT   4   4 */   BOOST_CC_CTRL,"},
{"lineNum":"   47","line":"        /* ENQ   5   5 */   BOOST_CC_CTRL,"},
{"lineNum":"   48","line":"        /* ACK   6   6 */   BOOST_CC_CTRL,"},
{"lineNum":"   49","line":"        /* BEL   7   7 */   BOOST_CC_CTRL,"},
{"lineNum":"   50","line":"        /* BS    8   8 */   BOOST_CC_CTRL,"},
{"lineNum":"   51","line":"        /* HT    9   9 */   BOOST_CC_CTRL|BOOST_CC_SPACE,"},
{"lineNum":"   52","line":"        /* NL   10   a */   BOOST_CC_CTRL|BOOST_CC_SPACE,"},
{"lineNum":"   53","line":"        /* VT   11   b */   BOOST_CC_CTRL|BOOST_CC_SPACE,"},
{"lineNum":"   54","line":"        /* NP   12   c */   BOOST_CC_CTRL|BOOST_CC_SPACE,"},
{"lineNum":"   55","line":"        /* CR   13   d */   BOOST_CC_CTRL|BOOST_CC_SPACE,"},
{"lineNum":"   56","line":"        /* SO   14   e */   BOOST_CC_CTRL,"},
{"lineNum":"   57","line":"        /* SI   15   f */   BOOST_CC_CTRL,"},
{"lineNum":"   58","line":"        /* DLE  16  10 */   BOOST_CC_CTRL,"},
{"lineNum":"   59","line":"        /* DC1  17  11 */   BOOST_CC_CTRL,"},
{"lineNum":"   60","line":"        /* DC2  18  12 */   BOOST_CC_CTRL,"},
{"lineNum":"   61","line":"        /* DC3  19  13 */   BOOST_CC_CTRL,"},
{"lineNum":"   62","line":"        /* DC4  20  14 */   BOOST_CC_CTRL,"},
{"lineNum":"   63","line":"        /* NAK  21  15 */   BOOST_CC_CTRL,"},
{"lineNum":"   64","line":"        /* SYN  22  16 */   BOOST_CC_CTRL,"},
{"lineNum":"   65","line":"        /* ETB  23  17 */   BOOST_CC_CTRL,"},
{"lineNum":"   66","line":"        /* CAN  24  18 */   BOOST_CC_CTRL,"},
{"lineNum":"   67","line":"        /* EM   25  19 */   BOOST_CC_CTRL,"},
{"lineNum":"   68","line":"        /* SUB  26  1a */   BOOST_CC_CTRL,"},
{"lineNum":"   69","line":"        /* ESC  27  1b */   BOOST_CC_CTRL,"},
{"lineNum":"   70","line":"        /* FS   28  1c */   BOOST_CC_CTRL,"},
{"lineNum":"   71","line":"        /* GS   29  1d */   BOOST_CC_CTRL,"},
{"lineNum":"   72","line":"        /* RS   30  1e */   BOOST_CC_CTRL,"},
{"lineNum":"   73","line":"        /* US   31  1f */   BOOST_CC_CTRL,"},
{"lineNum":"   74","line":"        /* SP   32  20 */   BOOST_CC_SPACE,"},
{"lineNum":"   75","line":"        /*  !   33  21 */   BOOST_CC_PUNCT,"},
{"lineNum":"   76","line":"        /*  \"   34  22 */   BOOST_CC_PUNCT,"},
{"lineNum":"   77","line":"        /*  #   35  23 */   BOOST_CC_PUNCT,"},
{"lineNum":"   78","line":"        /*  $   36  24 */   BOOST_CC_PUNCT,"},
{"lineNum":"   79","line":"        /*  %   37  25 */   BOOST_CC_PUNCT,"},
{"lineNum":"   80","line":"        /*  &   38  26 */   BOOST_CC_PUNCT,"},
{"lineNum":"   81","line":"        /*  \'   39  27 */   BOOST_CC_PUNCT,"},
{"lineNum":"   82","line":"        /*  (   40  28 */   BOOST_CC_PUNCT,"},
{"lineNum":"   83","line":"        /*  )   41  29 */   BOOST_CC_PUNCT,"},
{"lineNum":"   84","line":"        /*  *   42  2a */   BOOST_CC_PUNCT,"},
{"lineNum":"   85","line":"        /*  +   43  2b */   BOOST_CC_PUNCT,"},
{"lineNum":"   86","line":"        /*  ,   44  2c */   BOOST_CC_PUNCT,"},
{"lineNum":"   87","line":"        /*  -   45  2d */   BOOST_CC_PUNCT,"},
{"lineNum":"   88","line":"        /*  .   46  2e */   BOOST_CC_PUNCT,"},
{"lineNum":"   89","line":"        /*  /   47  2f */   BOOST_CC_PUNCT,"},
{"lineNum":"   90","line":"        /*  0   48  30 */   BOOST_CC_DIGIT|BOOST_CC_XDIGIT,"},
{"lineNum":"   91","line":"        /*  1   49  31 */   BOOST_CC_DIGIT|BOOST_CC_XDIGIT,"},
{"lineNum":"   92","line":"        /*  2   50  32 */   BOOST_CC_DIGIT|BOOST_CC_XDIGIT,"},
{"lineNum":"   93","line":"        /*  3   51  33 */   BOOST_CC_DIGIT|BOOST_CC_XDIGIT,"},
{"lineNum":"   94","line":"        /*  4   52  34 */   BOOST_CC_DIGIT|BOOST_CC_XDIGIT,"},
{"lineNum":"   95","line":"        /*  5   53  35 */   BOOST_CC_DIGIT|BOOST_CC_XDIGIT,"},
{"lineNum":"   96","line":"        /*  6   54  36 */   BOOST_CC_DIGIT|BOOST_CC_XDIGIT,"},
{"lineNum":"   97","line":"        /*  7   55  37 */   BOOST_CC_DIGIT|BOOST_CC_XDIGIT,"},
{"lineNum":"   98","line":"        /*  8   56  38 */   BOOST_CC_DIGIT|BOOST_CC_XDIGIT,"},
{"lineNum":"   99","line":"        /*  9   57  39 */   BOOST_CC_DIGIT|BOOST_CC_XDIGIT,"},
{"lineNum":"  100","line":"        /*  :   58  3a */   BOOST_CC_PUNCT,"},
{"lineNum":"  101","line":"        /*  ;   59  3b */   BOOST_CC_PUNCT,"},
{"lineNum":"  102","line":"        /*  <   60  3c */   BOOST_CC_PUNCT,"},
{"lineNum":"  103","line":"        /*  =   61  3d */   BOOST_CC_PUNCT,"},
{"lineNum":"  104","line":"        /*  >   62  3e */   BOOST_CC_PUNCT,"},
{"lineNum":"  105","line":"        /*  ?   63  3f */   BOOST_CC_PUNCT,"},
{"lineNum":"  106","line":"        /*  @   64  40 */   BOOST_CC_PUNCT,"},
{"lineNum":"  107","line":"        /*  A   65  41 */   BOOST_CC_ALPHA|BOOST_CC_XDIGIT|BOOST_CC_UPPER,"},
{"lineNum":"  108","line":"        /*  B   66  42 */   BOOST_CC_ALPHA|BOOST_CC_XDIGIT|BOOST_CC_UPPER,"},
{"lineNum":"  109","line":"        /*  C   67  43 */   BOOST_CC_ALPHA|BOOST_CC_XDIGIT|BOOST_CC_UPPER,"},
{"lineNum":"  110","line":"        /*  D   68  44 */   BOOST_CC_ALPHA|BOOST_CC_XDIGIT|BOOST_CC_UPPER,"},
{"lineNum":"  111","line":"        /*  E   69  45 */   BOOST_CC_ALPHA|BOOST_CC_XDIGIT|BOOST_CC_UPPER,"},
{"lineNum":"  112","line":"        /*  F   70  46 */   BOOST_CC_ALPHA|BOOST_CC_XDIGIT|BOOST_CC_UPPER,"},
{"lineNum":"  113","line":"        /*  G   71  47 */   BOOST_CC_ALPHA|BOOST_CC_UPPER,"},
{"lineNum":"  114","line":"        /*  H   72  48 */   BOOST_CC_ALPHA|BOOST_CC_UPPER,"},
{"lineNum":"  115","line":"        /*  I   73  49 */   BOOST_CC_ALPHA|BOOST_CC_UPPER,"},
{"lineNum":"  116","line":"        /*  J   74  4a */   BOOST_CC_ALPHA|BOOST_CC_UPPER,"},
{"lineNum":"  117","line":"        /*  K   75  4b */   BOOST_CC_ALPHA|BOOST_CC_UPPER,"},
{"lineNum":"  118","line":"        /*  L   76  4c */   BOOST_CC_ALPHA|BOOST_CC_UPPER,"},
{"lineNum":"  119","line":"        /*  M   77  4d */   BOOST_CC_ALPHA|BOOST_CC_UPPER,"},
{"lineNum":"  120","line":"        /*  N   78  4e */   BOOST_CC_ALPHA|BOOST_CC_UPPER,"},
{"lineNum":"  121","line":"        /*  O   79  4f */   BOOST_CC_ALPHA|BOOST_CC_UPPER,"},
{"lineNum":"  122","line":"        /*  P   80  50 */   BOOST_CC_ALPHA|BOOST_CC_UPPER,"},
{"lineNum":"  123","line":"        /*  Q   81  51 */   BOOST_CC_ALPHA|BOOST_CC_UPPER,"},
{"lineNum":"  124","line":"        /*  R   82  52 */   BOOST_CC_ALPHA|BOOST_CC_UPPER,"},
{"lineNum":"  125","line":"        /*  S   83  53 */   BOOST_CC_ALPHA|BOOST_CC_UPPER,"},
{"lineNum":"  126","line":"        /*  T   84  54 */   BOOST_CC_ALPHA|BOOST_CC_UPPER,"},
{"lineNum":"  127","line":"        /*  U   85  55 */   BOOST_CC_ALPHA|BOOST_CC_UPPER,"},
{"lineNum":"  128","line":"        /*  V   86  56 */   BOOST_CC_ALPHA|BOOST_CC_UPPER,"},
{"lineNum":"  129","line":"        /*  W   87  57 */   BOOST_CC_ALPHA|BOOST_CC_UPPER,"},
{"lineNum":"  130","line":"        /*  X   88  58 */   BOOST_CC_ALPHA|BOOST_CC_UPPER,"},
{"lineNum":"  131","line":"        /*  Y   89  59 */   BOOST_CC_ALPHA|BOOST_CC_UPPER,"},
{"lineNum":"  132","line":"        /*  Z   90  5a */   BOOST_CC_ALPHA|BOOST_CC_UPPER,"},
{"lineNum":"  133","line":"        /*  [   91  5b */   BOOST_CC_PUNCT,"},
{"lineNum":"  134","line":"        /*  \\   92  5c */   BOOST_CC_PUNCT,"},
{"lineNum":"  135","line":"        /*  ]   93  5d */   BOOST_CC_PUNCT,"},
{"lineNum":"  136","line":"        /*  ^   94  5e */   BOOST_CC_PUNCT,"},
{"lineNum":"  137","line":"        /*  _   95  5f */   BOOST_CC_PUNCT,"},
{"lineNum":"  138","line":"        /*  `   96  60 */   BOOST_CC_PUNCT,"},
{"lineNum":"  139","line":"        /*  a   97  61 */   BOOST_CC_ALPHA|BOOST_CC_XDIGIT|BOOST_CC_LOWER,"},
{"lineNum":"  140","line":"        /*  b   98  62 */   BOOST_CC_ALPHA|BOOST_CC_XDIGIT|BOOST_CC_LOWER,"},
{"lineNum":"  141","line":"        /*  c   99  63 */   BOOST_CC_ALPHA|BOOST_CC_XDIGIT|BOOST_CC_LOWER,"},
{"lineNum":"  142","line":"        /*  d  100  64 */   BOOST_CC_ALPHA|BOOST_CC_XDIGIT|BOOST_CC_LOWER,"},
{"lineNum":"  143","line":"        /*  e  101  65 */   BOOST_CC_ALPHA|BOOST_CC_XDIGIT|BOOST_CC_LOWER,"},
{"lineNum":"  144","line":"        /*  f  102  66 */   BOOST_CC_ALPHA|BOOST_CC_XDIGIT|BOOST_CC_LOWER,"},
{"lineNum":"  145","line":"        /*  g  103  67 */   BOOST_CC_ALPHA|BOOST_CC_LOWER,"},
{"lineNum":"  146","line":"        /*  h  104  68 */   BOOST_CC_ALPHA|BOOST_CC_LOWER,"},
{"lineNum":"  147","line":"        /*  i  105  69 */   BOOST_CC_ALPHA|BOOST_CC_LOWER,"},
{"lineNum":"  148","line":"        /*  j  106  6a */   BOOST_CC_ALPHA|BOOST_CC_LOWER,"},
{"lineNum":"  149","line":"        /*  k  107  6b */   BOOST_CC_ALPHA|BOOST_CC_LOWER,"},
{"lineNum":"  150","line":"        /*  l  108  6c */   BOOST_CC_ALPHA|BOOST_CC_LOWER,"},
{"lineNum":"  151","line":"        /*  m  109  6d */   BOOST_CC_ALPHA|BOOST_CC_LOWER,"},
{"lineNum":"  152","line":"        /*  n  110  6e */   BOOST_CC_ALPHA|BOOST_CC_LOWER,"},
{"lineNum":"  153","line":"        /*  o  111  6f */   BOOST_CC_ALPHA|BOOST_CC_LOWER,"},
{"lineNum":"  154","line":"        /*  p  112  70 */   BOOST_CC_ALPHA|BOOST_CC_LOWER,"},
{"lineNum":"  155","line":"        /*  q  113  71 */   BOOST_CC_ALPHA|BOOST_CC_LOWER,"},
{"lineNum":"  156","line":"        /*  r  114  72 */   BOOST_CC_ALPHA|BOOST_CC_LOWER,"},
{"lineNum":"  157","line":"        /*  s  115  73 */   BOOST_CC_ALPHA|BOOST_CC_LOWER,"},
{"lineNum":"  158","line":"        /*  t  116  74 */   BOOST_CC_ALPHA|BOOST_CC_LOWER,"},
{"lineNum":"  159","line":"        /*  u  117  75 */   BOOST_CC_ALPHA|BOOST_CC_LOWER,"},
{"lineNum":"  160","line":"        /*  v  118  76 */   BOOST_CC_ALPHA|BOOST_CC_LOWER,"},
{"lineNum":"  161","line":"        /*  w  119  77 */   BOOST_CC_ALPHA|BOOST_CC_LOWER,"},
{"lineNum":"  162","line":"        /*  x  120  78 */   BOOST_CC_ALPHA|BOOST_CC_LOWER,"},
{"lineNum":"  163","line":"        /*  y  121  79 */   BOOST_CC_ALPHA|BOOST_CC_LOWER,"},
{"lineNum":"  164","line":"        /*  z  122  7a */   BOOST_CC_ALPHA|BOOST_CC_LOWER,"},
{"lineNum":"  165","line":"        /*  {  123  7b */   BOOST_CC_PUNCT,"},
{"lineNum":"  166","line":"        /*  |  124  7c */   BOOST_CC_PUNCT,"},
{"lineNum":"  167","line":"        /*  }  125  7d */   BOOST_CC_PUNCT,"},
{"lineNum":"  168","line":"        /*  ~  126  7e */   BOOST_CC_PUNCT,"},
{"lineNum":"  169","line":"        /* DEL 127  7f */   BOOST_CC_CTRL,"},
{"lineNum":"  170","line":"        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,"},
{"lineNum":"  171","line":"        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,"},
{"lineNum":"  172","line":"        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,"},
{"lineNum":"  173","line":"        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,"},
{"lineNum":"  174","line":"        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,"},
{"lineNum":"  175","line":"        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,"},
{"lineNum":"  176","line":"        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,"},
{"lineNum":"  177","line":"        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,"},
{"lineNum":"  178","line":"    };"},
{"lineNum":"  179","line":""},
{"lineNum":"  180","line":"    ///////////////////////////////////////////////////////////////////////////"},
{"lineNum":"  181","line":"    //  Test characters for specified conditions (using ASCII)"},
{"lineNum":"  182","line":"    ///////////////////////////////////////////////////////////////////////////"},
{"lineNum":"  183","line":"    struct ascii"},
{"lineNum":"  184","line":"    {"},
{"lineNum":"  185","line":"        typedef char char_type;"},
{"lineNum":"  186","line":""},
{"lineNum":"  187","line":"        static bool"},
{"lineNum":"  188","line":"        isascii_(int ch)"},
{"lineNum":"  189","line":"        {"},
{"lineNum":"  190","line":"            return 0 == (ch & ~0x7f);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  191","line":"        }"},
{"lineNum":"  192","line":""},
{"lineNum":"  193","line":"        static bool"},
{"lineNum":"  194","line":"        ischar(int ch)"},
{"lineNum":"  195","line":"        {"},
{"lineNum":"  196","line":"            return isascii_(ch);"},
{"lineNum":"  197","line":"        }"},
{"lineNum":"  198","line":""},
{"lineNum":"  199","line":"        static bool"},
{"lineNum":"  200","line":"        isalnum(int ch)"},
{"lineNum":"  201","line":"        {"},
{"lineNum":"  202","line":"            BOOST_ASSERT(0 == (ch & ~UCHAR_MAX));"},
{"lineNum":"  203","line":"            return (ascii_char_types[ch] & BOOST_CC_ALPHA)"},
{"lineNum":"  204","line":"                || (ascii_char_types[ch] & BOOST_CC_DIGIT);"},
{"lineNum":"  205","line":"        }"},
{"lineNum":"  206","line":""},
{"lineNum":"  207","line":"        static bool"},
{"lineNum":"  208","line":"        isalpha(int ch)"},
{"lineNum":"  209","line":"        {"},
{"lineNum":"  210","line":"            BOOST_ASSERT(0 == (ch & ~UCHAR_MAX));"},
{"lineNum":"  211","line":"            return (ascii_char_types[ch] & BOOST_CC_ALPHA) ? true : false;"},
{"lineNum":"  212","line":"        }"},
{"lineNum":"  213","line":""},
{"lineNum":"  214","line":"        static bool"},
{"lineNum":"  215","line":"        isdigit(int ch)"},
{"lineNum":"  216","line":"        {"},
{"lineNum":"  217","line":"            BOOST_ASSERT(0 == (ch & ~UCHAR_MAX));"},
{"lineNum":"  218","line":"            return (ascii_char_types[ch] & BOOST_CC_DIGIT) ? true : false;"},
{"lineNum":"  219","line":"        }"},
{"lineNum":"  220","line":""},
{"lineNum":"  221","line":"        static bool"},
{"lineNum":"  222","line":"        isxdigit(int ch)"},
{"lineNum":"  223","line":"        {"},
{"lineNum":"  224","line":"            BOOST_ASSERT(0 == (ch & ~UCHAR_MAX));"},
{"lineNum":"  225","line":"            return (ascii_char_types[ch] & BOOST_CC_XDIGIT) ? true : false;"},
{"lineNum":"  226","line":"        }"},
{"lineNum":"  227","line":""},
{"lineNum":"  228","line":"        static bool"},
{"lineNum":"  229","line":"        iscntrl(int ch)"},
{"lineNum":"  230","line":"        {"},
{"lineNum":"  231","line":"            BOOST_ASSERT(0 == (ch & ~UCHAR_MAX));"},
{"lineNum":"  232","line":"            return (ascii_char_types[ch] & BOOST_CC_CTRL) ? true : false;"},
{"lineNum":"  233","line":"        }"},
{"lineNum":"  234","line":""},
{"lineNum":"  235","line":"        static bool"},
{"lineNum":"  236","line":"        isgraph(int ch)"},
{"lineNum":"  237","line":"        {"},
{"lineNum":"  238","line":"            return (\'\\x21\' <= ch && ch <= \'\\x7e\');"},
{"lineNum":"  239","line":"        }"},
{"lineNum":"  240","line":""},
{"lineNum":"  241","line":"        static bool"},
{"lineNum":"  242","line":"        islower(int ch)"},
{"lineNum":"  243","line":"        {"},
{"lineNum":"  244","line":"            BOOST_ASSERT(0 == (ch & ~UCHAR_MAX));"},
{"lineNum":"  245","line":"            return (ascii_char_types[ch] & BOOST_CC_LOWER) ? true : false;","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  246","line":"        }"},
{"lineNum":"  247","line":""},
{"lineNum":"  248","line":"        static bool"},
{"lineNum":"  249","line":"        isprint(int ch)"},
{"lineNum":"  250","line":"        {"},
{"lineNum":"  251","line":"            return (\'\\x20\' <= ch && ch <= \'\\x7e\');"},
{"lineNum":"  252","line":"        }"},
{"lineNum":"  253","line":""},
{"lineNum":"  254","line":"        static bool"},
{"lineNum":"  255","line":"        ispunct(int ch)"},
{"lineNum":"  256","line":"        {"},
{"lineNum":"  257","line":"            BOOST_ASSERT(0 == (ch & ~UCHAR_MAX));"},
{"lineNum":"  258","line":"            return (ascii_char_types[ch] & BOOST_CC_PUNCT) ? true : false;"},
{"lineNum":"  259","line":"        }"},
{"lineNum":"  260","line":""},
{"lineNum":"  261","line":"        static bool"},
{"lineNum":"  262","line":"        isspace(int ch)"},
{"lineNum":"  263","line":"        {"},
{"lineNum":"  264","line":"            BOOST_ASSERT(0 == (ch & ~UCHAR_MAX));"},
{"lineNum":"  265","line":"            return (ascii_char_types[ch] & BOOST_CC_SPACE) ? true : false;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"  266","line":"        }"},
{"lineNum":"  267","line":""},
{"lineNum":"  268","line":"        static bool"},
{"lineNum":"  269","line":"        isblank BOOST_PREVENT_MACRO_SUBSTITUTION (int ch)"},
{"lineNum":"  270","line":"        {"},
{"lineNum":"  271","line":"            return (\'\\x09\' == ch || \'\\x20\' == ch);"},
{"lineNum":"  272","line":"        }"},
{"lineNum":"  273","line":""},
{"lineNum":"  274","line":"        static bool"},
{"lineNum":"  275","line":"        isupper(int ch)"},
{"lineNum":"  276","line":"        {"},
{"lineNum":"  277","line":"            BOOST_ASSERT(0 == (ch & ~UCHAR_MAX));"},
{"lineNum":"  278","line":"            return (ascii_char_types[ch] & BOOST_CC_UPPER) ? true : false;","class":"lineNoCov","hits":"0","possible_hits":"9",},
{"lineNum":"  279","line":"        }"},
{"lineNum":"  280","line":""},
{"lineNum":"  281","line":"        ///////////////////////////////////////////////////////////////////////"},
{"lineNum":"  282","line":"        //  Simple character conversions"},
{"lineNum":"  283","line":"        ///////////////////////////////////////////////////////////////////////"},
{"lineNum":"  284","line":""},
{"lineNum":"  285","line":"        static int"},
{"lineNum":"  286","line":"        tolower(int ch)"},
{"lineNum":"  287","line":"        {"},
{"lineNum":"  288","line":"            return isupper(ch) ? (ch - \'A\' + \'a\') : ch;","class":"lineNoCov","hits":"0","possible_hits":"14",},
{"lineNum":"  289","line":"        }"},
{"lineNum":"  290","line":""},
{"lineNum":"  291","line":"        static int"},
{"lineNum":"  292","line":"        toupper(int ch)"},
{"lineNum":"  293","line":"        {"},
{"lineNum":"  294","line":"            return islower(ch) ? (ch - \'a\' + \'A\') : ch;","class":"lineNoCov","hits":"0","possible_hits":"4",},
{"lineNum":"  295","line":"        }"},
{"lineNum":"  296","line":""},
{"lineNum":"  297","line":"        static ::boost::uint32_t"},
{"lineNum":"  298","line":"        toucs4(int ch)"},
{"lineNum":"  299","line":"        {"},
{"lineNum":"  300","line":"            return ch;"},
{"lineNum":"  301","line":"        }"},
{"lineNum":"  302","line":"    };"},
{"lineNum":"  303","line":""},
{"lineNum":"  304","line":"}}}"},
{"lineNum":"  305","line":""},
{"lineNum":"  306","line":"///////////////////////////////////////////////////////////////////////////////"},
{"lineNum":"  307","line":"// undefine macros"},
{"lineNum":"  308","line":"///////////////////////////////////////////////////////////////////////////////"},
{"lineNum":"  309","line":"#undef BOOST_CC_DIGIT"},
{"lineNum":"  310","line":"#undef BOOST_CC_XDIGIT"},
{"lineNum":"  311","line":"#undef BOOST_CC_ALPHA"},
{"lineNum":"  312","line":"#undef BOOST_CC_CTRL"},
{"lineNum":"  313","line":"#undef BOOST_CC_LOWER"},
{"lineNum":"  314","line":"#undef BOOST_CC_UPPER"},
{"lineNum":"  315","line":"#undef BOOST_CC_PUNCT"},
{"lineNum":"  316","line":"#undef BOOST_CC_SPACE"},
{"lineNum":"  317","line":""},
{"lineNum":"  318","line":"#endif"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "fodo_cxx", "date" : "2021-12-15 09:03:41", "instrumented" : 6, "covered" : 0,};
var merged_data = [];
